 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 470
    4                      ; Text size: 6180
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _put_item_cb
   81  000010d4          	.global _put_item_cb
   82  000010d4          	_put_item_cb:
   83                      ;  Function 'put_item_cb'; 0 bytes of locals, 3 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   88  000010e4  afa20000	sw	0(r29),r2
   89  000010e8  afa30004	sw	4(r29),r3
   90  000010ec  afa40008	sw	8(r29),r4
   91  000010f0  8fc30004	lw	r3,4(r30)
   92  000010f4  8c610000	lw	r1,(r3)
   93  000010f8  00610820	add	r1,r3,r1
   94  000010fc  83df0003	lb	r31,3(r30)
   95  00001100  a03f0008	sb	8(r1),r31
   96  00001104  8c610000	lw	r1,(r3)
   97  00001108  20240001	addi	r4,r1,#1
   98  0000110c  2001000a	addi	r1,r0,#10
   99  00001110  00800035	movi2fp	f0,r4
  100  00001114  00200835	movi2fp	f1,r1
  101  00001118  0401000f	div	f0,f0,f1
  102  0000111c  00001034	movfp2i	r2,f0
  103  00001120  50410002	slli	r1,r2,#0x2
  104  00001124  00220820	add	r1,r1,r2
  105  00001128  50210001	slli	r1,r1,#0x1
  106  0000112c  00810822	sub	r1,r4,r1
  107  00001130  ac610000	sw	(r3),r1
  108  00001134  20010001	addi	r1,r0,#1
  109  00001138  8fa20000	lw	r2,0(r29)
  110  0000113c  8fa30004	lw	r3,4(r29)
  111  00001140  8fa40008	lw	r4,8(r29)
  112  00001144  8fdffff8	lw	r31,-8(r30)
  113  00001148  001ee820	add	r29,r0,r30
  114  0000114c  8fdefffc	lw	r30,-4(r30)
  115  00001150  4be00000	jr	r31
  116  00001154  54000000	nop
  117  00001158          	.endproc _put_item_cb
  118  00001158          	.align 2
  119  00001158          	.proc _check_item_cb
  120  00001158          	.global _check_item_cb
  121  00001158          	_check_item_cb:
  122                      ;  Function 'check_item_cb'; 0 bytes of locals, 2 regs to save.
  123  00001158  afbefffc	sw	-4(r29),r30; push fp
  124  0000115c  001df020	add	r30,r0,r29; fp = sp
  125  00001160  afbffff8	sw	-8(r29),r31; push ret addr
  126  00001164  2fbd0010	subui	r29,r29,#16; alloc local storage
  127  00001168  afa20000	sw	0(r29),r2
  128  0000116c  afa30004	sw	4(r29),r3
  129  00001170  8fc30000	lw	r3,(r30)
  130  00001174  8fc20004	lw	r2,4(r30)
  131  00001178  8c410004	lw	r1,4(r2)
  132  0000117c  00410820	add	r1,r2,r1
  133  00001180  80210008	lb	r1,8(r1)
  134  00001184  a0610000	sb	(r3),r1
  135  00001188  20010001	addi	r1,r0,#1
  136  0000118c  8fa20000	lw	r2,0(r29)
  137  00001190  8fa30004	lw	r3,4(r29)
  138  00001194  8fdffff8	lw	r31,-8(r30)
  139  00001198  001ee820	add	r29,r0,r30
  140  0000119c  8fdefffc	lw	r30,-4(r30)
  141  000011a0  4be00000	jr	r31
  142  000011a4  54000000	nop
  143  000011a8          	.endproc _check_item_cb
  144  000011a8          	.align 2
  145  000011a8          	.proc _get_item_cb
  146  000011a8          	.global _get_item_cb
  147  000011a8          	_get_item_cb:
  148                      ;  Function 'get_item_cb'; 0 bytes of locals, 3 regs to save.
  149  000011a8  afbefffc	sw	-4(r29),r30; push fp
  150  000011ac  001df020	add	r30,r0,r29; fp = sp
  151  000011b0  afbffff8	sw	-8(r29),r31; push ret addr
  152  000011b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  153  000011b8  afa20000	sw	0(r29),r2
  154  000011bc  afa30004	sw	4(r29),r3
  155  000011c0  afa40008	sw	8(r29),r4
  156  000011c4  8fc20000	lw	r2,(r30)
  157  000011c8  8fc30004	lw	r3,4(r30)
  158  000011cc  8c610004	lw	r1,4(r3)
  159  000011d0  00610820	add	r1,r3,r1
  160  000011d4  80210008	lb	r1,8(r1)
  161  000011d8  a0410000	sb	(r2),r1
  162  000011dc  8c610004	lw	r1,4(r3)
  163  000011e0  20240001	addi	r4,r1,#1
  164  000011e4  2001000a	addi	r1,r0,#10
  165  000011e8  00800035	movi2fp	f0,r4
  166  000011ec  00200835	movi2fp	f1,r1
  167  000011f0  0401000f	div	f0,f0,f1
  168  000011f4  00001034	movfp2i	r2,f0
  169  000011f8  50410002	slli	r1,r2,#0x2
  170  000011fc  00220820	add	r1,r1,r2
  171  00001200  50210001	slli	r1,r1,#0x1
  172  00001204  00810822	sub	r1,r4,r1
  173  00001208  ac610004	sw	4(r3),r1
  174  0000120c  20010001	addi	r1,r0,#1
  175  00001210  8fa20000	lw	r2,0(r29)
  176  00001214  8fa30004	lw	r3,4(r29)
  177  00001218  8fa40008	lw	r4,8(r29)
  178  0000121c  8fdffff8	lw	r31,-8(r30)
  179  00001220  001ee820	add	r29,r0,r30
  180  00001224  8fdefffc	lw	r30,-4(r30)
  181  00001228  4be00000	jr	r31
  182  0000122c  54000000	nop
  183  00001230          	.endproc _get_item_cb
  184  00001230          	.align 2
  185  00001230          	.proc _is_full
  186  00001230          	.global _is_full
  187  00001230          	_is_full:
  188                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  189  00001230  afbefffc	sw	-4(r29),r30; push fp
  190  00001234  001df020	add	r30,r0,r29; fp = sp
  191  00001238  afbffff8	sw	-8(r29),r31; push ret addr
  192  0000123c  2fbd0018	subui	r29,r29,#24; alloc local storage
  193  00001240  afa20000	sw	0(r29),r2
  194  00001244  afa30004	sw	4(r29),r3
  195  00001248  afa40008	sw	8(r29),r4
  196  0000124c  8fc40000	lw	r4,(r30)
  197  00001250  8c810000	lw	r1,(r4)
  198  00001254  20230001	addi	r3,r1,#1
  199  00001258  2001000a	addi	r1,r0,#10
  200  0000125c  00600035	movi2fp	f0,r3
  201  00001260  00200835	movi2fp	f1,r1
  202  00001264  0401000f	div	f0,f0,f1
  203  00001268  00001034	movfp2i	r2,f0
  204  0000126c  50410002	slli	r1,r2,#0x2
  205  00001270  00220820	add	r1,r1,r2
  206  00001274  50210001	slli	r1,r1,#0x1
  207  00001278  00611022	sub	r2,r3,r1
  208  0000127c  8c810004	lw	r1,4(r4)
  209  00001280  00411028	seq	r2,r2,r1
  210  00001284  20010001	addi	r1,r0,#1
  211  00001288  14400008	bnez	r2,L23_LF0
  212  0000128c  54000000	nop; not filled.
  213  00001290  20010000	addi	r1,r0,#0
  214  00001294          	L23_LF0:
  215  00001294  8fa20000	lw	r2,0(r29)
  216  00001298  8fa30004	lw	r3,4(r29)
  217  0000129c  8fa40008	lw	r4,8(r29)
  218  000012a0  8fdffff8	lw	r31,-8(r30)
  219  000012a4  001ee820	add	r29,r0,r30
  220  000012a8  8fdefffc	lw	r30,-4(r30)
  221  000012ac  4be00000	jr	r31
  222  000012b0  54000000	nop
  223  000012b4          	.endproc _is_full
  224  000012b4          	.align 2
  225  000012b4          	.proc _is_empty
  226  000012b4          	.global _is_empty
  227  000012b4          	_is_empty:
  228                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  229  000012b4  afbefffc	sw	-4(r29),r30; push fp
  230  000012b8  001df020	add	r30,r0,r29; fp = sp
  231  000012bc  afbffff8	sw	-8(r29),r31; push ret addr
  232  000012c0  2fbd0010	subui	r29,r29,#16; alloc local storage
  233  000012c4  afa20000	sw	0(r29),r2
  234  000012c8  8fc10000	lw	r1,(r30)
  235  000012cc  8c220000	lw	r2,(r1)
  236  000012d0  8c210004	lw	r1,4(r1)
  237  000012d4  00411028	seq	r2,r2,r1
  238  000012d8  20010001	addi	r1,r0,#1
  239  000012dc  14400008	bnez	r2,L30_LF0
  240  000012e0  54000000	nop; not filled.
  241  000012e4  20010000	addi	r1,r0,#0
  242  000012e8          	L30_LF0:
  243  000012e8  8fa20000	lw	r2,0(r29)
  244  000012ec  8fdffff8	lw	r31,-8(r30)
  245  000012f0  001ee820	add	r29,r0,r30
  246  000012f4  8fdefffc	lw	r30,-4(r30)
  247  000012f8  4be00000	jr	r31
  248  000012fc  54000000	nop
  249  00001300          	.endproc _is_empty
  250  00001300          	.data
  251  00003000          	.align 2
  252  00003000          	LC0_LF0:
  253  00003000  43697263	.ascii "Circular Buffer Initiated\n\000"
  253  00003004  756c6172	
  253  00003008  20427566	
  253  0000300c  66657220	
  253  00003010  496e6974	
  253  00003014  69617465	
  253  00003018  640a00  	
  254  0000301b          	.text
  255  00001300          	.align 2
  256  00001300          	.proc _init_cb
  257  00001300          	.global _init_cb
  258  00001300          	_init_cb:
  259                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  260  00001300  afbefffc	sw	-4(r29),r30; push fp
  261  00001304  001df020	add	r30,r0,r29; fp = sp
  262  00001308  afbffff8	sw	-8(r29),r31; push ret addr
  263  0000130c  2fbd0010	subui	r29,r29,#16; alloc local storage
  264  00001310  afa20000	sw	0(r29),r2
  265  00001314  8fc10000	lw	r1,(r30)
  266  00001318  20020000	addi	r2,r0,#0
  267  0000131c  ac220000	sw	(r1),r2
  268  00001320  ac220004	sw	4(r1),r2
  269  00001324  23bdfff8	addi	r29,r29,#-8
  270  00001328  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
  271  0000132c  24423000	addui	r2,r2,(LC0_LF0)&0xffff
  272  00001330  afa20000	sw	(r29),r2
  273  00001334  0c0006e8	jal	_Printf
  274  00001338  54000000	nop; not filled.
  275  0000133c  23bd0008	addi	r29,r29,#8
  276  00001340  8fa20000	lw	r2,0(r29)
  277  00001344  8fdffff8	lw	r31,-8(r30)
  278  00001348  001ee820	add	r29,r0,r30
  279  0000134c  8fdefffc	lw	r30,-4(r30)
  280  00001350  4be00000	jr	r31
  281  00001354  54000000	nop
  282  00001358          	.endproc _init_cb
  283  00001358          	.data
  284  0000301b          	.align 2
  285  0000301c          	LC1_LF0:
  286  0000301c  20436972	.ascii " Circular Buffer =>  \000"
  286  00003020  63756c61	
  286  00003024  72204275	
  286  00003028  66666572	
  286  0000302c  203d3e20	
  286  00003030  2000    	
  287  00003032          	.align 2
  288  00003034          	LC2_LF0:
  289  00003034  256300  	.ascii "%c\000"
  290  00003037          	.align 2
  291  00003038          	LC3_LF0:
  292  00003038  0a00    	.ascii "\n\000"
  293  0000303a          	.text
  294  00001358          	.align 2
  295  00001358          	.proc _Print_cb
  296  00001358          	.global _Print_cb
  297  00001358          	_Print_cb:
  298                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  299  00001358  afbefffc	sw	-4(r29),r30; push fp
  300  0000135c  001df020	add	r30,r0,r29; fp = sp
  301  00001360  afbffff8	sw	-8(r29),r31; push ret addr
  302  00001364  2fbd0020	subui	r29,r29,#32; alloc local storage
  303  00001368  afa20000	sw	0(r29),r2
  304  0000136c  afa30004	sw	4(r29),r3
  305  00001370  afa40008	sw	8(r29),r4
  306  00001374  afa5000c	sw	12(r29),r5
  307  00001378  afa60010	sw	16(r29),r6
  308  0000137c  afa70014	sw	20(r29),r7
  309  00001380  8fc50000	lw	r5,(r30)
  310  00001384  23bdfff8	addi	r29,r29,#-8
  311  00001388  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  312  0000138c  24e7301c	addui	r7,r7,(LC1_LF0)&0xffff
  313  00001390  afa70000	sw	(r29),r7
  314  00001394  0c000688	jal	_Printf
  315  00001398  54000000	nop; not filled.
  316  0000139c  20040000	addi	r4,r0,#0
  317  000013a0  23bd0008	addi	r29,r29,#8
  318  000013a4  2006000a	addi	r6,r0,#10
  319  000013a8          	L45_LF0:
  320  000013a8  23bdfff8	addi	r29,r29,#-8
  321  000013ac  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  322  000013b0  24e73034	addui	r7,r7,(LC2_LF0)&0xffff
  323  000013b4  afa70000	sw	(r29),r7
  324  000013b8  8ca10004	lw	r1,4(r5)
  325  000013bc  00811820	add	r3,r4,r1
  326  000013c0  00600035	movi2fp	f0,r3
  327  000013c4  00c00835	movi2fp	f1,r6
  328  000013c8  0401000f	div	f0,f0,f1
  329  000013cc  00001034	movfp2i	r2,f0
  330  000013d0  50410002	slli	r1,r2,#0x2
  331  000013d4  00220820	add	r1,r1,r2
  332  000013d8  50210001	slli	r1,r1,#0x1
  333  000013dc  00610822	sub	r1,r3,r1
  334  000013e0  00a10820	add	r1,r5,r1
  335  000013e4  90210008	lbu	r1,8(r1)
  336  000013e8  afa10004	sw	4(r29),r1
  337  000013ec  0c000630	jal	_Printf
  338  000013f0  54000000	nop; not filled.
  339  000013f4  23bd0008	addi	r29,r29,#8
  340  000013f8  20840001	addi	r4,r4,#1
  341  000013fc  70810009	slei	r1,r4,#9
  342  00001400  1420ffa4	bnez	r1,L45_LF0
  343  00001404  54000000	nop; not filled.
  344  00001408  23bdfff8	addi	r29,r29,#-8
  345  0000140c  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  346  00001410  24e73038	addui	r7,r7,(LC3_LF0)&0xffff
  347  00001414  afa70000	sw	(r29),r7
  348  00001418  0c000604	jal	_Printf
  349  0000141c  54000000	nop; not filled.
  350  00001420  23bd0008	addi	r29,r29,#8
  351  00001424  8fa20000	lw	r2,0(r29)
  352  00001428  8fa30004	lw	r3,4(r29)
  353  0000142c  8fa40008	lw	r4,8(r29)
  354  00001430  8fa5000c	lw	r5,12(r29)
  355  00001434  8fa60010	lw	r6,16(r29)
  356  00001438  8fa70014	lw	r7,20(r29)
  357  0000143c  8fdffff8	lw	r31,-8(r30)
  358  00001440  001ee820	add	r29,r0,r30
  359  00001444  8fdefffc	lw	r30,-4(r30)
  360  00001448  4be00000	jr	r31
  361  0000144c  54000000	nop
  362  00001450          	.endproc _Print_cb
  363  00001450          	.data
  364  0000303a          	.align 2
  365  0000303c          	LC4_LF0:
  366  0000303c  55736167	.ascii "Usage: \000"
  366  00003040  653a2000	
  367  00003044          	.align 2
  368  00003044          	LC5_LF0:
  369  00003044  203c6e75	.ascii " <number of processes to create>\n\000"
  369  00003048  6d626572	
  369  0000304c  206f6620	
  369  00003050  70726f63	
  369  00003054  65737365	
  369  00003058  7320746f	
  369  0000305c  20637265	
  369  00003060  6174653e	
  369  00003064  0a00    	
  370  00003066          	.align 2
  371  00003068          	LC6_LF0:
  372  00003068  43726561	.ascii "Creating %d processes\n\000"
  372  0000306c  74696e67	
  372  00003070  20256420	
  372  00003074  70726f63	
  372  00003078  65737365	
  372  0000307c  730a00  	
  373  0000307f          	.align 2
  374  00003080          	LC7_LF0:
  375  00003080  4552524f	.ascii "ERROR: could not allocate shared memory page in \000"
  375  00003084  523a2063	
  375  00003088  6f756c64	
  375  0000308c  206e6f74	
  375  00003090  20616c6c	
  375  00003094  6f636174	
  375  00003098  65207368	
  375  0000309c  61726564	
  375  000030a0  206d656d	
  375  000030a4  6f727920	
  375  000030a8  70616765	
  375  000030ac  20696e20	
  375  000030b0  00      	
  376  000030b1          	.align 2
  377  000030b4          	LC8_LF0:
  378  000030b4  2c206578	.ascii ", exiting...\n\000"
  378  000030b8  6974696e	
  378  000030bc  672e2e2e	
  378  000030c0  0a00    	
  379  000030c2          	.align 2
  380  000030c4          	LC9_LF0:
  381  000030c4  436f756c	.ascii "Could not map the shared page to virtual address in \000"
  381  000030c8  64206e6f	
  381  000030cc  74206d61	
  381  000030d0  70207468	
  381  000030d4  65207368	
  381  000030d8  61726564	
  381  000030dc  20706167	
  381  000030e0  6520746f	
  381  000030e4  20766972	
  381  000030e8  7475616c	
  381  000030ec  20616464	
  381  000030f0  72657373	
  381  000030f4  20696e20	
  381  000030f8  00      	
  382  000030f9          	.align 2
  383  000030fc          	LC10_LF0:
  384  000030fc  2c206578	.ascii ", exiting..\n\000"
  384  00003100  6974696e	
  384  00003104  672e2e0a	
  384  00003108  00      	
  385  00003109          	.align 2
  386  0000310c          	LC11_LF0:
  387  0000310c  42616420	.ascii "Bad sem_create in \000"
  387  00003110  73656d5f	
  387  00003114  63726561	
  387  00003118  74652069	
  387  0000311c  6e2000  	
  388  0000311f          	.align 2
  389  00003120          	LC12_LF0:
  390  00003120  4c6f636b	.ascii "Lock Not Implemented \000"
  390  00003124  204e6f74	
  390  00003128  20496d70	
  390  0000312c  6c656d65	
  390  00003130  6e746564	
  390  00003134  2000    	
  391  00003136          	.align 2
  392  00003138          	LC13_LF0:
  393  00003138  42616420	.ascii "Bad cond_create in \000"
  393  0000313c  636f6e64	
  393  00003140  5f637265	
  393  00003144  61746520	
  393  00003148  696e2000	
  394  0000314c          	.align 2
  395  0000314c          	LC14_LF0:
  396  0000314c  70726f64	.ascii "producer.dlx.obj\000"
  396  00003150  75636572	
  396  00003154  2e646c78	
  396  00003158  2e6f626a	
  396  0000315c  00      	
  397  0000315d          	.align 2
  398  00003160          	LC15_LF0:
  399  00003160  636f6e73	.ascii "consumer.dlx.obj\000"
  399  00003164  756d6572	
  399  00003168  2e646c78	
  399  0000316c  2e6f626a	
  399  00003170  00      	
  400  00003171          	.align 2
  401  00003174          	LC16_LF0:
  402  00003174  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  402  00003178  73656d61	
  402  0000317c  70686f72	
  402  00003180  6520735f	
  402  00003184  70726f63	
  402  00003188  735f636f	
  402  0000318c  6d706c65	
  402  00003190  74656420	
  402  00003194  28256429	
  402  00003198  20696e20	
  402  0000319c  00      	
  403  0000319d          	.align 2
  404  000031a0          	LC17_LF0:
  405  000031a0  416c6c20	.ascii "All other processes completed, exiting main process.\n\000"
  405  000031a4  6f746865	
  405  000031a8  72207072	
  405  000031ac  6f636573	
  405  000031b0  73657320	
  405  000031b4  636f6d70	
  405  000031b8  6c657465	
  405  000031bc  642c2065	
  405  000031c0  78697469	
  405  000031c4  6e67206d	
  405  000031c8  61696e20	
  405  000031cc  70726f63	
  405  000031d0  6573732e	
  405  000031d4  0a00    	
  406  000031d6          	.text
  407  00001450          	.align 2
  408  00001450          	.proc _main
  409  00001450          	.global _main
  410  00001450          	_main:
  411                      ;  Function 'main'; 80 bytes of locals, 0 regs to save.
  412  00001450  afbefffc	sw	-4(r29),r30; push fp
  413  00001454  001df020	add	r30,r0,r29; fp = sp
  414  00001458  afbffff8	sw	-8(r29),r31; push ret addr
  415  0000145c  2fbd0058	subui	r29,r29,#88; alloc local storage
  416  00001460  8fc20000	lw	r2,(r30)
  417  00001464  8fc90004	lw	r9,4(r30)
  418  00001468  0c0013b0	jal	___main
  419  0000146c  54000000	nop; not filled.
  420  00001470  64410002	snei	r1,r2,#2
  421  00001474  1020004c	beqz	r1,L48_LF0
  422  00001478  54000000	nop; not filled.
  423  0000147c  23bdfff8	addi	r29,r29,#-8
  424  00001480  3c0c0000	lhi	r12,((LC4_LF0)>>16)&0xffff
  425  00001484  258c303c	addui	r12,r12,(LC4_LF0)&0xffff
  426  00001488  afac0000	sw	(r29),r12
  427  0000148c  0c000590	jal	_Printf
  428  00001490  54000000	nop; not filled.
  429  00001494  8d2c0000	lw	r12,(r9)
  430  00001498  afac0000	sw	(r29),r12
  431  0000149c  0c000580	jal	_Printf
  432  000014a0  54000000	nop; not filled.
  433  000014a4  3c0c0000	lhi	r12,((LC5_LF0)>>16)&0xffff
  434  000014a8  258c3044	addui	r12,r12,(LC5_LF0)&0xffff
  435  000014ac  afac0000	sw	(r29),r12
  436  000014b0  0c00056c	jal	_Printf
  437  000014b4  54000000	nop; not filled.
  438  000014b8  0c00060c	jal	_Exit
  439  000014bc  54000000	nop; not filled.
  440  000014c0  23bd0008	addi	r29,r29,#8
  441  000014c4          	L48_LF0:
  442  000014c4  23bdfff0	addi	r29,r29,#-16
  443  000014c8  8d2c0004	lw	r12,4(r9)
  444  000014cc  afac0000	sw	(r29),r12
  445  000014d0  200c0000	addi	r12,r0,#0
  446  000014d4  afac0004	sw	4(r29),r12
  447  000014d8  200c000a	addi	r12,r0,#10
  448  000014dc  afac0008	sw	8(r29),r12
  449  000014e0  0c000e90	jal	_dstrtol
  450  000014e4  54000000	nop; not filled.
  451  000014e8  00014020	add	r8,r0,r1
  452  000014ec  3c0c0000	lhi	r12,((LC6_LF0)>>16)&0xffff
  453  000014f0  258c3068	addui	r12,r12,(LC6_LF0)&0xffff
  454  000014f4  afac0000	sw	(r29),r12
  455  000014f8  afa80004	sw	4(r29),r8
  456  000014fc  0c000520	jal	_Printf
  457  00001500  54000000	nop; not filled.
  458  00001504  0c00053c	jal	_shmget
  459  00001508  54000000	nop; not filled.
  460  0000150c  00011820	add	r3,r0,r1
  461  00001510  23bd0010	addi	r29,r29,#16
  462  00001514  64610000	snei	r1,r3,#0
  463  00001518  1420004c	bnez	r1,L49_LF0
  464  0000151c  54000000	nop; not filled.
  465  00001520  23bdfff8	addi	r29,r29,#-8
  466  00001524  3c0c0000	lhi	r12,((LC7_LF0)>>16)&0xffff
  467  00001528  258c3080	addui	r12,r12,(LC7_LF0)&0xffff
  468  0000152c  afac0000	sw	(r29),r12
  469  00001530  0c0004ec	jal	_Printf
  470  00001534  54000000	nop; not filled.
  471  00001538  8d2c0000	lw	r12,(r9)
  472  0000153c  afac0000	sw	(r29),r12
  473  00001540  0c0004dc	jal	_Printf
  474  00001544  54000000	nop; not filled.
  475  00001548  3c0c0000	lhi	r12,((LC8_LF0)>>16)&0xffff
  476  0000154c  258c30b4	addui	r12,r12,(LC8_LF0)&0xffff
  477  00001550  afac0000	sw	(r29),r12
  478  00001554  0c0004c8	jal	_Printf
  479  00001558  54000000	nop; not filled.
  480  0000155c  0c000568	jal	_Exit
  481  00001560  54000000	nop; not filled.
  482  00001564  23bd0008	addi	r29,r29,#8
  483  00001568          	L49_LF0:
  484  00001568  23bdfff8	addi	r29,r29,#-8
  485  0000156c  afa30000	sw	(r29),r3
  486  00001570  0c0004dc	jal	_shmat
  487  00001574  54000000	nop; not filled.
  488  00001578  00011020	add	r2,r0,r1
  489  0000157c  23bd0008	addi	r29,r29,#8
  490  00001580  64410000	snei	r1,r2,#0
  491  00001584  1420004c	bnez	r1,L50_LF0
  492  00001588  54000000	nop; not filled.
  493  0000158c  23bdfff8	addi	r29,r29,#-8
  494  00001590  3c0c0000	lhi	r12,((LC9_LF0)>>16)&0xffff
  495  00001594  258c30c4	addui	r12,r12,(LC9_LF0)&0xffff
  496  00001598  afac0000	sw	(r29),r12
  497  0000159c  0c000480	jal	_Printf
  498  000015a0  54000000	nop; not filled.
  499  000015a4  8d2c0000	lw	r12,(r9)
  500  000015a8  afac0000	sw	(r29),r12
  501  000015ac  0c000470	jal	_Printf
  502  000015b0  54000000	nop; not filled.
  503  000015b4  3c0c0000	lhi	r12,((LC10_LF0)>>16)&0xffff
  504  000015b8  258c30fc	addui	r12,r12,(LC10_LF0)&0xffff
  505  000015bc  afac0000	sw	(r29),r12
  506  000015c0  0c00045c	jal	_Printf
  507  000015c4  54000000	nop; not filled.
  508  000015c8  0c0004fc	jal	_Exit
  509  000015cc  54000000	nop; not filled.
  510  000015d0  23bd0008	addi	r29,r29,#8
  511  000015d4          	L50_LF0:
  512  000015d4  ac480000	sw	(r2),r8
  513  000015d8  200c0041	addi	r12,r0,(#0x41)&0xff
  514  000015dc  a04c0004	sb	4(r2),r12
  515  000015e0  200c0000	addi	r12,r0,#0
  516  000015e4  ac4c0008	sw	8(r2),r12
  517  000015e8  ac4c000c	sw	12(r2),r12
  518  000015ec  23bdfff8	addi	r29,r29,#-8
  519  000015f0  3c0c0000	lhi	r12,((LC0_LF0)>>16)&0xffff
  520  000015f4  258c3000	addui	r12,r12,(LC0_LF0)&0xffff
  521  000015f8  afac0000	sw	(r29),r12
  522  000015fc  0c000420	jal	_Printf
  523  00001600  54000000	nop; not filled.
  524  00001604  23bd0008	addi	r29,r29,#8
  525  00001608  23bdfff8	addi	r29,r29,#-8
  526  0000160c  51020001	slli	r2,r8,#0x1
  527  00001610  20010001	addi	r1,r0,#1
  528  00001614  00220822	sub	r1,r1,r2
  529  00001618  afa10000	sw	(r29),r1
  530  0000161c  0c00043c	jal	_sem_create
  531  00001620  54000000	nop; not filled.
  532  00001624  00015820	add	r11,r0,r1
  533  00001628  23bd0008	addi	r29,r29,#8
  534  0000162c  6161ffff	seqi	r1,r11,#-1
  535  00001630  1020004c	beqz	r1,L52_LF0
  536  00001634  54000000	nop; not filled.
  537  00001638  23bdfff8	addi	r29,r29,#-8
  538  0000163c  3c0c0000	lhi	r12,((LC11_LF0)>>16)&0xffff
  539  00001640  258c310c	addui	r12,r12,(LC11_LF0)&0xffff
  540  00001644  afac0000	sw	(r29),r12
  541  00001648  0c0003d4	jal	_Printf
  542  0000164c  54000000	nop; not filled.
  543  00001650  8d2c0000	lw	r12,(r9)
  544  00001654  afac0000	sw	(r29),r12
  545  00001658  0c0003c4	jal	_Printf
  546  0000165c  54000000	nop; not filled.
  547  00001660  3c0c0000	lhi	r12,((LC3_LF0)>>16)&0xffff
  548  00001664  258c3038	addui	r12,r12,(LC3_LF0)&0xffff
  549  00001668  afac0000	sw	(r29),r12
  550  0000166c  0c0003b0	jal	_Printf
  551  00001670  54000000	nop; not filled.
  552  00001674  0c000450	jal	_Exit
  553  00001678  54000000	nop; not filled.
  554  0000167c  23bd0008	addi	r29,r29,#8
  555  00001680          	L52_LF0:
  556  00001680  0c0003fc	jal	_lock_create
  557  00001684  54000000	nop; not filled.
  558  00001688  00011020	add	r2,r0,r1
  559  0000168c  6041ffff	seqi	r1,r2,#-1
  560  00001690  1020004c	beqz	r1,L53_LF0
  561  00001694  54000000	nop; not filled.
  562  00001698  23bdfff8	addi	r29,r29,#-8
  563  0000169c  3c0c0000	lhi	r12,((LC12_LF0)>>16)&0xffff
  564  000016a0  258c3120	addui	r12,r12,(LC12_LF0)&0xffff
  565  000016a4  afac0000	sw	(r29),r12
  566  000016a8  0c000374	jal	_Printf
  567  000016ac  54000000	nop; not filled.
  568  000016b0  8d2c0000	lw	r12,(r9)
  569  000016b4  afac0000	sw	(r29),r12
  570  000016b8  0c000364	jal	_Printf
  571  000016bc  54000000	nop; not filled.
  572  000016c0  3c0c0000	lhi	r12,((LC3_LF0)>>16)&0xffff
  573  000016c4  258c3038	addui	r12,r12,(LC3_LF0)&0xffff
  574  000016c8  afac0000	sw	(r29),r12
  575  000016cc  0c000350	jal	_Printf
  576  000016d0  54000000	nop; not filled.
  577  000016d4  0c0003f0	jal	_Exit
  578  000016d8  54000000	nop; not filled.
  579  000016dc  23bd0008	addi	r29,r29,#8
  580  000016e0          	L53_LF0:
  581  000016e0  23bdfff8	addi	r29,r29,#-8
  582  000016e4  afa20000	sw	(r29),r2
  583  000016e8  0c0003b8	jal	_cond_create
  584  000016ec  54000000	nop; not filled.
  585  000016f0  00015020	add	r10,r0,r1
  586  000016f4  23bd0008	addi	r29,r29,#8
  587  000016f8  6141ffff	seqi	r1,r10,#-1
  588  000016fc  1020004c	beqz	r1,L54_LF0
  589  00001700  54000000	nop; not filled.
  590  00001704  23bdfff8	addi	r29,r29,#-8
  591  00001708  3c0c0000	lhi	r12,((LC13_LF0)>>16)&0xffff
  592  0000170c  258c3138	addui	r12,r12,(LC13_LF0)&0xffff
  593  00001710  afac0000	sw	(r29),r12
  594  00001714  0c000308	jal	_Printf
  595  00001718  54000000	nop; not filled.
  596  0000171c  8d2c0000	lw	r12,(r9)
  597  00001720  afac0000	sw	(r29),r12
  598  00001724  0c0002f8	jal	_Printf
  599  00001728  54000000	nop; not filled.
  600  0000172c  3c0c0000	lhi	r12,((LC3_LF0)>>16)&0xffff
  601  00001730  258c3038	addui	r12,r12,(LC3_LF0)&0xffff
  602  00001734  afac0000	sw	(r29),r12
  603  00001738  0c0002e4	jal	_Printf
  604  0000173c  54000000	nop; not filled.
  605  00001740  0c000384	jal	_Exit
  606  00001744  54000000	nop; not filled.
  607  00001748  23bd0008	addi	r29,r29,#8
  608  0000174c          	L54_LF0:
  609  0000174c  23bdfff8	addi	r29,r29,#-8
  610  00001750  afa20000	sw	(r29),r2
  611  00001754  0c00034c	jal	_cond_create
  612  00001758  54000000	nop; not filled.
  613  0000175c  00013820	add	r7,r0,r1
  614  00001760  23bd0008	addi	r29,r29,#8
  615  00001764  60e1ffff	seqi	r1,r7,#-1
  616  00001768  1020004c	beqz	r1,L55_LF0
  617  0000176c  54000000	nop; not filled.
  618  00001770  23bdfff8	addi	r29,r29,#-8
  619  00001774  3c0c0000	lhi	r12,((LC13_LF0)>>16)&0xffff
  620  00001778  258c3138	addui	r12,r12,(LC13_LF0)&0xffff
  621  0000177c  afac0000	sw	(r29),r12
  622  00001780  0c00029c	jal	_Printf
  623  00001784  54000000	nop; not filled.
  624  00001788  8d2c0000	lw	r12,(r9)
  625  0000178c  afac0000	sw	(r29),r12
  626  00001790  0c00028c	jal	_Printf
  627  00001794  54000000	nop; not filled.
  628  00001798  3c0c0000	lhi	r12,((LC3_LF0)>>16)&0xffff
  629  0000179c  258c3038	addui	r12,r12,(LC3_LF0)&0xffff
  630  000017a0  afac0000	sw	(r29),r12
  631  000017a4  0c000278	jal	_Printf
  632  000017a8  54000000	nop; not filled.
  633  000017ac  0c000318	jal	_Exit
  634  000017b0  54000000	nop; not filled.
  635  000017b4  23bd0008	addi	r29,r29,#8
  636  000017b8          	L55_LF0:
  637  000017b8  23bdfff8	addi	r29,r29,#-8
  638  000017bc  afa30000	sw	(r29),r3
  639  000017c0  23c6ffe8	addi	r6,r30,#-24
  640  000017c4  afa60004	sw	4(r29),r6
  641  000017c8  0c000a1c	jal	_ditoa
  642  000017cc  54000000	nop; not filled.
  643  000017d0  afab0000	sw	(r29),r11
  644  000017d4  23c5ffd8	addi	r5,r30,#-40
  645  000017d8  afa50004	sw	4(r29),r5
  646  000017dc  0c000a08	jal	_ditoa
  647  000017e0  54000000	nop; not filled.
  648  000017e4  afa20000	sw	(r29),r2
  649  000017e8  23c4ffc8	addi	r4,r30,#-56
  650  000017ec  afa40004	sw	4(r29),r4
  651  000017f0  0c0009f4	jal	_ditoa
  652  000017f4  54000000	nop; not filled.
  653  000017f8  afaa0000	sw	(r29),r10
  654  000017fc  23c3ffb8	addi	r3,r30,#-72
  655  00001800  afa30004	sw	4(r29),r3
  656  00001804  0c0009e0	jal	_ditoa
  657  00001808  54000000	nop; not filled.
  658  0000180c  afa70000	sw	(r29),r7
  659  00001810  23c2ffa8	addi	r2,r30,#-88
  660  00001814  afa20004	sw	4(r29),r2
  661  00001818  0c0009cc	jal	_ditoa
  662  0000181c  54000000	nop; not filled.
  663  00001820  20070000	addi	r7,r0,#0
  664  00001824  23bd0008	addi	r29,r29,#8
  665  00001828          	L59_LF0:
  666  00001828  23bdffe0	addi	r29,r29,#-32
  667  0000182c  3c0c0000	lhi	r12,((LC14_LF0)>>16)&0xffff
  668  00001830  258c314c	addui	r12,r12,(LC14_LF0)&0xffff
  669  00001834  afac0000	sw	(r29),r12
  670  00001838  afa60004	sw	4(r29),r6
  671  0000183c  afa50008	sw	8(r29),r5
  672  00001840  afa4000c	sw	12(r29),r4
  673  00001844  afa30010	sw	16(r29),r3
  674  00001848  afa20014	sw	20(r29),r2
  675  0000184c  200c0000	addi	r12,r0,#0
  676  00001850  afac0018	sw	24(r29),r12
  677  00001854  0c0001e0	jal	_process_create
  678  00001858  54000000	nop; not filled.
  679  0000185c  23bd0020	addi	r29,r29,#32
  680  00001860  20e70001	addi	r7,r7,#1
  681  00001864  70e10000	slei	r1,r7,#0
  682  00001868  1420ffbc	bnez	r1,L59_LF0
  683  0000186c  54000000	nop; not filled.
  684  00001870  20070000	addi	r7,r0,#0
  685  00001874  00e8082a	slt	r1,r7,r8
  686  00001878  10200060	beqz	r1,L62_LF0
  687  0000187c  54000000	nop; not filled.
  688  00001880  23c6ffe8	addi	r6,r30,#-24
  689  00001884  23c5ffd8	addi	r5,r30,#-40
  690  00001888  23c4ffc8	addi	r4,r30,#-56
  691  0000188c  23c3ffb8	addi	r3,r30,#-72
  692  00001890  23c2ffa8	addi	r2,r30,#-88
  693  00001894          	L64_LF0:
  694  00001894  23bdffe0	addi	r29,r29,#-32
  695  00001898  3c0c0000	lhi	r12,((LC15_LF0)>>16)&0xffff
  696  0000189c  258c3160	addui	r12,r12,(LC15_LF0)&0xffff
  697  000018a0  afac0000	sw	(r29),r12
  698  000018a4  afa60004	sw	4(r29),r6
  699  000018a8  afa50008	sw	8(r29),r5
  700  000018ac  afa4000c	sw	12(r29),r4
  701  000018b0  afa30010	sw	16(r29),r3
  702  000018b4  afa20014	sw	20(r29),r2
  703  000018b8  200c0000	addi	r12,r0,#0
  704  000018bc  afac0018	sw	24(r29),r12
  705  000018c0  0c000174	jal	_process_create
  706  000018c4  54000000	nop; not filled.
  707  000018c8  23bd0020	addi	r29,r29,#32
  708  000018cc  20e70001	addi	r7,r7,#1
  709  000018d0  00e8082a	slt	r1,r7,r8
  710  000018d4  1420ffbc	bnez	r1,L64_LF0
  711  000018d8  54000000	nop; not filled.
  712  000018dc          	L62_LF0:
  713  000018dc  20070001	addi	r7,r0,#1
  714  000018e0  00e8082a	slt	r1,r7,r8
  715  000018e4  10200060	beqz	r1,L67_LF0
  716  000018e8  54000000	nop; not filled.
  717  000018ec  23c6ffe8	addi	r6,r30,#-24
  718  000018f0  23c5ffd8	addi	r5,r30,#-40
  719  000018f4  23c4ffc8	addi	r4,r30,#-56
  720  000018f8  23c3ffb8	addi	r3,r30,#-72
  721  000018fc  23c2ffa8	addi	r2,r30,#-88
  722  00001900          	L69_LF0:
  723  00001900  23bdffe0	addi	r29,r29,#-32
  724  00001904  3c0c0000	lhi	r12,((LC14_LF0)>>16)&0xffff
  725  00001908  258c314c	addui	r12,r12,(LC14_LF0)&0xffff
  726  0000190c  afac0000	sw	(r29),r12
  727  00001910  afa60004	sw	4(r29),r6
  728  00001914  afa50008	sw	8(r29),r5
  729  00001918  afa4000c	sw	12(r29),r4
  730  0000191c  afa30010	sw	16(r29),r3
  731  00001920  afa20014	sw	20(r29),r2
  732  00001924  200c0000	addi	r12,r0,#0
  733  00001928  afac0018	sw	24(r29),r12
  734  0000192c  0c000108	jal	_process_create
  735  00001930  54000000	nop; not filled.
  736  00001934  23bd0020	addi	r29,r29,#32
  737  00001938  20e70001	addi	r7,r7,#1
  738  0000193c  00e8082a	slt	r1,r7,r8
  739  00001940  1420ffbc	bnez	r1,L69_LF0
  740  00001944  54000000	nop; not filled.
  741  00001948          	L67_LF0:
  742  00001948  23bdfff8	addi	r29,r29,#-8
  743  0000194c  afab0000	sw	(r29),r11
  744  00001950  0c000114	jal	_sem_wait
  745  00001954  54000000	nop; not filled.
  746  00001958  23bd0008	addi	r29,r29,#8
  747  0000195c  64210001	snei	r1,r1,#1
  748  00001960  10200050	beqz	r1,L71_LF0
  749  00001964  54000000	nop; not filled.
  750  00001968  23bdfff8	addi	r29,r29,#-8
  751  0000196c  3c0c0000	lhi	r12,((LC16_LF0)>>16)&0xffff
  752  00001970  258c3174	addui	r12,r12,(LC16_LF0)&0xffff
  753  00001974  afac0000	sw	(r29),r12
  754  00001978  afab0004	sw	4(r29),r11
  755  0000197c  0c0000a0	jal	_Printf
  756  00001980  54000000	nop; not filled.
  757  00001984  8d290000	lw	r9,(r9)
  758  00001988  afa90000	sw	(r29),r9
  759  0000198c  0c000090	jal	_Printf
  760  00001990  54000000	nop; not filled.
  761  00001994  3c0c0000	lhi	r12,((LC3_LF0)>>16)&0xffff
  762  00001998  258c3038	addui	r12,r12,(LC3_LF0)&0xffff
  763  0000199c  afac0000	sw	(r29),r12
  764  000019a0  0c00007c	jal	_Printf
  765  000019a4  54000000	nop; not filled.
  766  000019a8  0c00011c	jal	_Exit
  767  000019ac  54000000	nop; not filled.
  768  000019b0  23bd0008	addi	r29,r29,#8
  769  000019b4          	L71_LF0:
  770  000019b4  23bdfff8	addi	r29,r29,#-8
  771  000019b8  3c0c0000	lhi	r12,((LC17_LF0)>>16)&0xffff
  772  000019bc  258c31a0	addui	r12,r12,(LC17_LF0)&0xffff
  773  000019c0  afac0000	sw	(r29),r12
  774  000019c4  0c000058	jal	_Printf
  775  000019c8  54000000	nop; not filled.
  776  000019cc  23bd0008	addi	r29,r29,#8
  777  000019d0  0c000e3c	jal	_exit
  778  000019d4  54000000	nop
  779  000019d8          	.endproc _main
  780                      ;;;
  781                      ;;; Stub functions for DLX traps.
  782                      ;;;
  783                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  784                      ;;;
  785                      ;;; The traps such as Open and Close
  786                      ;;; (note the capital letters) are for use by user programs.  The traps
  787                      ;;; with names such as open and close (lower case) are for use by the OS.
  788                      ;;;
  791  000019d8          	.align 2
  793                      ;;; The following are the traps to be used by user-level programs
  794                      ;;;
  796  000019d8          	.align 2
  797  000019d8          	.proc _Open
  798  000019d8          	.global _Open
  799  000019d8          	_Open:
  800                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  801                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  802                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  803  000019d8  44000213	trap	#0x213
  804  000019dc  4be00000	jr	r31
  805  000019e0  54000000	nop
  806  000019e4          	.endproc _Open
  808  000019e4          	.proc _Close
  809  000019e4          	.global _Close
  810  000019e4          	_Close:
  811  000019e4  44000214	trap	#0x214
  812  000019e8  4be00000	jr	r31
  813  000019ec  54000000	nop
  814  000019f0          	.endproc _Close
  816  000019f0          	.proc _Read
  817  000019f0          	.global _Read
  818  000019f0          	_Read:
  819  000019f0  44000210	trap	#0x210
  820  000019f4  4be00000	jr	r31
  821  000019f8  54000000	nop
  822  000019fc          	.endproc _Read
  824  000019fc          	.proc _Write
  825  000019fc          	.global _Write
  826  000019fc          	_Write:
  827  000019fc  44000211	trap	#0x211
  828  00001a00  4be00000	jr	r31
  829  00001a04  54000000	nop
  830  00001a08          	.endproc _Write
  832  00001a08          	.proc _Lseek
  833  00001a08          	.global _Lseek
  834  00001a08          	_Lseek:
  835  00001a08  44000212	trap	#0x212
  836  00001a0c  4be00000	jr	r31
  837  00001a10  54000000	nop
  838  00001a14          	.endproc _Lseek
  840  00001a14          	.proc _Putchar
  841  00001a14          	.global _Putchar
  842  00001a14          	_Putchar:
  843  00001a14  44000280	trap	#0x280
  844  00001a18  4be00000	jr	r31
  845  00001a1c  54000000	nop
  846  00001a20          	.endproc _Putchar
  848  00001a20          	.proc _Printf
  849  00001a20          	.global _Printf
  850  00001a20          	_Printf:
  851  00001a20  44000201	trap	#0x201
  852  00001a24  4be00000	jr	r31
  853  00001a28  54000000	nop
  854  00001a2c          	.endproc _Printf
  856  00001a2c          	.proc _Getpid
  857  00001a2c          	.global _Getpid
  858  00001a2c          	_Getpid:
  859  00001a2c  44000431	trap	#0x431
  860  00001a30  4be00000	jr	r31
  861  00001a34  54000000	nop
  862  00001a38          	.endproc _Getpid
  864  00001a38          	.proc _process_create
  865  00001a38          	.global _process_create
  866  00001a38          	_process_create:
  867  00001a38  44000432	trap	#0x432
  868  00001a3c  4be00000	jr	r31
  869  00001a40  54000000	nop
  870  00001a44          	.endproc _process_create
  872  00001a44          	.proc _shmget
  873  00001a44          	.global _shmget
  874  00001a44          	_shmget:
  875  00001a44  44000440	trap	#0x440
  876  00001a48  4be00000	jr	r31
  877  00001a4c  54000000	nop
  878  00001a50          	.endproc _shmget
  880  00001a50          	.proc _shmat
  881  00001a50          	.global _shmat
  882  00001a50          	_shmat:
  883  00001a50  44000441	trap	#0x441
  884  00001a54  4be00000	jr	r31
  885  00001a58  54000000	nop
  886  00001a5c          	.endproc _shmat
  888  00001a5c          	.proc _sem_create
  889  00001a5c          	.global _sem_create
  890  00001a5c          	_sem_create:
  891  00001a5c  44000450	trap	#0x450
  892  00001a60  4be00000	jr	r31
  893  00001a64  54000000	nop
  894  00001a68          	.endproc _sem_create
  896  00001a68          	.proc _sem_wait
  897  00001a68          	.global _sem_wait
  898  00001a68          	_sem_wait:
  899  00001a68  44000451	trap	#0x451
  900  00001a6c  4be00000	jr	r31
  901  00001a70  54000000	nop
  902  00001a74          	.endproc _sem_wait
  904  00001a74          	.proc _sem_signal
  905  00001a74          	.global _sem_signal
  906  00001a74          	_sem_signal:
  907  00001a74  44000452	trap	#0x452
  908  00001a78  4be00000	jr	r31
  909  00001a7c  54000000	nop
  910  00001a80          	.endproc _sem_signal
  912  00001a80          	.proc _lock_create
  913  00001a80          	.global _lock_create
  914  00001a80          	_lock_create:
  915  00001a80  44000453	trap	#0x453
  916  00001a84  4be00000	jr	r31
  917  00001a88  54000000	nop
  918  00001a8c          	.endproc _lock_create
  920  00001a8c          	.proc _lock_acquire
  921  00001a8c          	.global _lock_acquire
  922  00001a8c          	_lock_acquire:
  923  00001a8c  44000454	trap	#0x454
  924  00001a90  4be00000	jr	r31
  925  00001a94  54000000	nop
  926  00001a98          	.endproc _lock_acquire
  928  00001a98          	.proc _lock_release
  929  00001a98          	.global _lock_release
  930  00001a98          	_lock_release:
  931  00001a98  44000455	trap	#0x455
  932  00001a9c  4be00000	jr	r31
  933  00001aa0  54000000	nop
  934  00001aa4          	.endproc _lock_release
  936  00001aa4          	.proc _cond_create
  937  00001aa4          	.global _cond_create
  938  00001aa4          	_cond_create:
  939  00001aa4  44000456	trap	#0x456
  940  00001aa8  4be00000	jr	r31
  941  00001aac  54000000	nop
  942  00001ab0          	.endproc _cond_create
  944  00001ab0          	.proc _cond_wait
  945  00001ab0          	.global _cond_wait
  946  00001ab0          	_cond_wait:
  947  00001ab0  44000457	trap	#0x457
  948  00001ab4  4be00000	jr	r31
  949  00001ab8  54000000	nop
  950  00001abc          	.endproc _cond_wait
  952  00001abc          	.proc _cond_signal
  953  00001abc          	.global _cond_signal
  954  00001abc          	_cond_signal:
  955  00001abc  44000458	trap	#0x458
  956  00001ac0  4be00000	jr	r31
  957  00001ac4  54000000	nop
  958  00001ac8          	.endproc _cond_signal
  960  00001ac8          	.proc _Exit
  961  00001ac8          	.global _Exit
  962  00001ac8          	_Exit:
  963  00001ac8  44000500	trap	#0x500
  964  00001acc  4be00000	jr	r31
  965  00001ad0  54000000	nop
  966  00001ad4          	.endproc _Exit
  967                      ; Compiled by GCC
  969  00001ad4          	.align 2
  970  00001ad4          	.proc _isspace
  971  00001ad4          	.global _isspace
  972  00001ad4          	_isspace:
  973                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  974  00001ad4  afbefffc	sw	-4(r29),r30; push fp
  975  00001ad8  001df020	add	r30,r0,r29; fp = sp
  976  00001adc  afbffff8	sw	-8(r29),r31; push ret addr
  977  00001ae0  2fbd0018	subui	r29,r29,#24; alloc local storage
  978  00001ae4  afa20000	sw	0(r29),r2
  979  00001ae8  afa30004	sw	4(r29),r3
  980  00001aec  afa40008	sw	8(r29),r4
  981  00001af0  83c20003	lb	r2,3(r30)
  982  00001af4  20010000	addi	r1,r0,#0
  983  00001af8  304300ff	andi	r3,r2,#0x00ff
  984  00001afc  60640020	seqi	r4,r3,#32
  985  00001b00  1480002c	bnez	r4,L3_LF2
  986  00001b04  54000000	nop; delay slot nop
  987  00001b08  304300ff	andi	r3,r2,#0x00ff
  988  00001b0c  60640009	seqi	r4,r3,#9
  989  00001b10  1480001c	bnez	r4,L3_LF2
  990  00001b14  54000000	nop; delay slot nop
  991  00001b18  304300ff	andi	r3,r2,#0x00ff
  992  00001b1c  6064000a	seqi	r4,r3,#10
  993  00001b20  1480000c	bnez	r4,L3_LF2
  994  00001b24  54000000	nop; delay slot nop
  995  00001b28  08000008	j	L2_LF2
  996  00001b2c  54000000	nop; delay slot nop
  997  00001b30          	L3_LF2:
  998  00001b30  20010001	addi	r1,r0,#1
  999  00001b34          	L2_LF2:
 1000  00001b34  08000004	j	L1_LF2
 1001  00001b38  54000000	nop; delay slot nop
 1002  00001b3c          	L1_LF2:
 1003  00001b3c  8fa20000	lw	r2,0(r29)
 1004  00001b40  8fa30004	lw	r3,4(r29)
 1005  00001b44  8fa40008	lw	r4,8(r29)
 1006  00001b48  8fdffff8	lw	r31,-8(r30)
 1007  00001b4c  001ee820	add	r29,r0,r30
 1008  00001b50  8fdefffc	lw	r30,-4(r30)
 1009  00001b54  4be00000	jr	r31
 1010  00001b58  54000000	nop
 1011  00001b5c          	.endproc _isspace
 1012  00001b5c          	.align 2
 1013  00001b5c          	.proc _isxdigit
 1014  00001b5c          	.global _isxdigit
 1015  00001b5c          	_isxdigit:
 1016                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
 1017  00001b5c  afbefffc	sw	-4(r29),r30; push fp
 1018  00001b60  001df020	add	r30,r0,r29; fp = sp
 1019  00001b64  afbffff8	sw	-8(r29),r31; push ret addr
 1020  00001b68  2fbd0018	subui	r29,r29,#24; alloc local storage
 1021  00001b6c  afa20000	sw	0(r29),r2
 1022  00001b70  afa30004	sw	4(r29),r3
 1023  00001b74  afa40008	sw	8(r29),r4
 1024  00001b78  83c20003	lb	r2,3(r30)
 1025  00001b7c  20010000	addi	r1,r0,#0
 1026  00001b80  304300ff	andi	r3,r2,#0x00ff
 1027  00001b84  6c64002f	sgtui	r4,r3,#47
 1028  00001b88  1080001c	beqz	r4,L7_LF2
 1029  00001b8c  54000000	nop; delay slot nop
 1030  00001b90  304300ff	andi	r3,r2,#0x00ff
 1031  00001b94  70640039	sleui	r4,r3,#57
 1032  00001b98  1480005c	bnez	r4,L6_LF2
 1033  00001b9c  54000000	nop; delay slot nop
 1034  00001ba0  08000004	j	L7_LF2
 1035  00001ba4  54000000	nop; delay slot nop
 1036  00001ba8          	L7_LF2:
 1037  00001ba8  304300ff	andi	r3,r2,#0x00ff
 1038  00001bac  6c640060	sgtui	r4,r3,#96
 1039  00001bb0  1080001c	beqz	r4,L8_LF2
 1040  00001bb4  54000000	nop; delay slot nop
 1041  00001bb8  304300ff	andi	r3,r2,#0x00ff
 1042  00001bbc  70640066	sleui	r4,r3,#102
 1043  00001bc0  14800034	bnez	r4,L6_LF2
 1044  00001bc4  54000000	nop; delay slot nop
 1045  00001bc8  08000004	j	L8_LF2
 1046  00001bcc  54000000	nop; delay slot nop
 1047  00001bd0          	L8_LF2:
 1048  00001bd0  304300ff	andi	r3,r2,#0x00ff
 1049  00001bd4  6c640040	sgtui	r4,r3,#64
 1050  00001bd8  10800020	beqz	r4,L5_LF2
 1051  00001bdc  54000000	nop; delay slot nop
 1052  00001be0  304300ff	andi	r3,r2,#0x00ff
 1053  00001be4  70640041	sleui	r4,r3,#65
 1054  00001be8  1480000c	bnez	r4,L6_LF2
 1055  00001bec  54000000	nop; delay slot nop
 1056  00001bf0  08000008	j	L5_LF2
 1057  00001bf4  54000000	nop; delay slot nop
 1058  00001bf8          	L6_LF2:
 1059  00001bf8  20010001	addi	r1,r0,#1
 1060  00001bfc          	L5_LF2:
 1061  00001bfc  08000004	j	L4_LF2
 1062  00001c00  54000000	nop; delay slot nop
 1063  00001c04          	L4_LF2:
 1064  00001c04  8fa20000	lw	r2,0(r29)
 1065  00001c08  8fa30004	lw	r3,4(r29)
 1066  00001c0c  8fa40008	lw	r4,8(r29)
 1067  00001c10  8fdffff8	lw	r31,-8(r30)
 1068  00001c14  001ee820	add	r29,r0,r30
 1069  00001c18  8fdefffc	lw	r30,-4(r30)
 1070  00001c1c  4be00000	jr	r31
 1071  00001c20  54000000	nop
 1072  00001c24          	.endproc _isxdigit
 1073  00001c24          	.align 2
 1074  00001c24          	.proc _dstrcpy
 1075  00001c24          	.global _dstrcpy
 1076  00001c24          	_dstrcpy:
 1077                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
 1078  00001c24  afbefffc	sw	-4(r29),r30; push fp
 1079  00001c28  001df020	add	r30,r0,r29; fp = sp
 1080  00001c2c  afbffff8	sw	-8(r29),r31; push ret addr
 1081  00001c30  2fbd0018	subui	r29,r29,#24; alloc local storage
 1082  00001c34  afa20000	sw	0(r29),r2
 1083  00001c38  afa30004	sw	4(r29),r3
 1084  00001c3c  8fc10000	lw	r1,(r30)
 1085  00001c40  afc1fff4	sw	-12(r30),r1
 1086  00001c44          	L10_LF2:
 1087  00001c44  8fc10000	lw	r1,(r30)
 1088  00001c48  20220001	addi	r2,r1,#1
 1089  00001c4c  afc20000	sw	(r30),r2
 1090  00001c50  8fc20004	lw	r2,4(r30)
 1091  00001c54  20430001	addi	r3,r2,#1
 1092  00001c58  afc30004	sw	4(r30),r3
 1093  00001c5c  80420000	lb	r2,(r2)
 1094  00001c60  a0220000	sb	(r1),r2
 1095  00001c64  a3c2fff3	sb	-13(r30),r2
 1096  00001c68          	L12_LF2:
 1097  00001c68  93c1fff3	lbu	r1,-13(r30)
 1098  00001c6c  64220000	snei	r2,r1,#0
 1099  00001c70  1440000c	bnez	r2,L13_LF2
 1100  00001c74  54000000	nop; delay slot nop
 1101  00001c78  0800000c	j	L11_LF2
 1102  00001c7c  54000000	nop; delay slot nop
 1103  00001c80          	L13_LF2:
 1104  00001c80  0bffffc0	j	L10_LF2
 1105  00001c84  54000000	nop; delay slot nop
 1106  00001c88          	L11_LF2:
 1107  00001c88  8fc1fff4	lw	r1,-12(r30)
 1108  00001c8c  08000004	j	L9_LF2
 1109  00001c90  54000000	nop; delay slot nop
 1110  00001c94          	L9_LF2:
 1111  00001c94  8fa20000	lw	r2,0(r29)
 1112  00001c98  8fa30004	lw	r3,4(r29)
 1113  00001c9c  8fdffff8	lw	r31,-8(r30)
 1114  00001ca0  001ee820	add	r29,r0,r30
 1115  00001ca4  8fdefffc	lw	r30,-4(r30)
 1116  00001ca8  4be00000	jr	r31
 1117  00001cac  54000000	nop
 1118  00001cb0          	.endproc _dstrcpy
 1119  00001cb0          	.align 2
 1120  00001cb0          	.proc _dstrncpy
 1121  00001cb0          	.global _dstrncpy
 1122  00001cb0          	_dstrncpy:
 1123                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
 1124  00001cb0  afbefffc	sw	-4(r29),r30; push fp
 1125  00001cb4  001df020	add	r30,r0,r29; fp = sp
 1126  00001cb8  afbffff8	sw	-8(r29),r31; push ret addr
 1127  00001cbc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1128  00001cc0  afa20000	sw	0(r29),r2
 1129  00001cc4  afa30004	sw	4(r29),r3
 1130  00001cc8  8fc10000	lw	r1,(r30)
 1131  00001ccc  afc1fff4	sw	-12(r30),r1
 1132  00001cd0          	L15_LF2:
 1133  00001cd0  8fc10008	lw	r1,8(r30)
 1134  00001cd4  2022ffff	addi	r2,r1,#-1
 1135  00001cd8  afc20008	sw	8(r30),r2
 1136  00001cdc  70210000	slei	r1,r1,#0
 1137  00001ce0  1020000c	beqz	r1,L18_LF2
 1138  00001ce4  54000000	nop; delay slot nop
 1139  00001ce8  08000048	j	L16_LF2
 1140  00001cec  54000000	nop; delay slot nop
 1141  00001cf0          	L18_LF2:
 1142  00001cf0  8fc10000	lw	r1,(r30)
 1143  00001cf4  20220001	addi	r2,r1,#1
 1144  00001cf8  afc20000	sw	(r30),r2
 1145  00001cfc  8fc20004	lw	r2,4(r30)
 1146  00001d00  20430001	addi	r3,r2,#1
 1147  00001d04  afc30004	sw	4(r30),r3
 1148  00001d08  80420000	lb	r2,(r2)
 1149  00001d0c  a0220000	sb	(r1),r2
 1150  00001d10  a3c2fff3	sb	-13(r30),r2
 1151  00001d14          	L17_LF2:
 1152  00001d14  93c1fff3	lbu	r1,-13(r30)
 1153  00001d18  64220000	snei	r2,r1,#0
 1154  00001d1c  1440000c	bnez	r2,L19_LF2
 1155  00001d20  54000000	nop; delay slot nop
 1156  00001d24  0800000c	j	L16_LF2
 1157  00001d28  54000000	nop; delay slot nop
 1158  00001d2c          	L19_LF2:
 1159  00001d2c  0bffffa0	j	L15_LF2
 1160  00001d30  54000000	nop; delay slot nop
 1161  00001d34          	L16_LF2:
 1162  00001d34  8fc1fff4	lw	r1,-12(r30)
 1163  00001d38  08000004	j	L14_LF2
 1164  00001d3c  54000000	nop; delay slot nop
 1165  00001d40          	L14_LF2:
 1166  00001d40  8fa20000	lw	r2,0(r29)
 1167  00001d44  8fa30004	lw	r3,4(r29)
 1168  00001d48  8fdffff8	lw	r31,-8(r30)
 1169  00001d4c  001ee820	add	r29,r0,r30
 1170  00001d50  8fdefffc	lw	r30,-4(r30)
 1171  00001d54  4be00000	jr	r31
 1172  00001d58  54000000	nop
 1173  00001d5c          	.endproc _dstrncpy
 1174  00001d5c          	.align 2
 1175  00001d5c          	.proc _dstrcat
 1176  00001d5c          	.global _dstrcat
 1177  00001d5c          	_dstrcat:
 1178                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1179  00001d5c  afbefffc	sw	-4(r29),r30; push fp
 1180  00001d60  001df020	add	r30,r0,r29; fp = sp
 1181  00001d64  afbffff8	sw	-8(r29),r31; push ret addr
 1182  00001d68  2fbd0018	subui	r29,r29,#24; alloc local storage
 1183  00001d6c  afa20000	sw	0(r29),r2
 1184  00001d70  8fc10000	lw	r1,(r30)
 1185  00001d74  afc1fff4	sw	-12(r30),r1
 1186  00001d78          	L21_LF2:
 1187  00001d78  8fc10000	lw	r1,(r30)
 1188  00001d7c  90220000	lbu	r2,(r1)
 1189  00001d80  64410000	snei	r1,r2,#0
 1190  00001d84  1420000c	bnez	r1,L23_LF2
 1191  00001d88  54000000	nop; delay slot nop
 1192  00001d8c  0800001c	j	L22_LF2
 1193  00001d90  54000000	nop; delay slot nop
 1194  00001d94          	L23_LF2:
 1195  00001d94  8fc20000	lw	r2,(r30)
 1196  00001d98  20410001	addi	r1,r2,#1
 1197  00001d9c  00011020	add	r2,r0,r1
 1198  00001da0  afc20000	sw	(r30),r2
 1199  00001da4  0bffffd0	j	L21_LF2
 1200  00001da8  54000000	nop; delay slot nop
 1201  00001dac          	L22_LF2:
 1202  00001dac  23bdfff8	addi	r29,r29,#-8
 1203  00001db0  001d0820	add	r1,r0,r29
 1204  00001db4  8fc20000	lw	r2,(r30)
 1205  00001db8  ac220000	sw	(r1),r2
 1206  00001dbc  8fc20004	lw	r2,4(r30)
 1207  00001dc0  ac220004	sw	4(r1),r2
 1208  00001dc4  0ffffe5c	jal	_dstrcpy
 1209  00001dc8  54000000	nop; delay slot nop
 1210  00001dcc  23bd0008	addi	r29,r29,#8
 1211  00001dd0  8fc1fff4	lw	r1,-12(r30)
 1212  00001dd4  08000004	j	L20_LF2
 1213  00001dd8  54000000	nop; delay slot nop
 1214  00001ddc          	L20_LF2:
 1215  00001ddc  8fa20000	lw	r2,0(r29)
 1216  00001de0  8fdffff8	lw	r31,-8(r30)
 1217  00001de4  001ee820	add	r29,r0,r30
 1218  00001de8  8fdefffc	lw	r30,-4(r30)
 1219  00001dec  4be00000	jr	r31
 1220  00001df0  54000000	nop
 1221  00001df4          	.endproc _dstrcat
 1222  00001df4          	.align 2
 1223  00001df4          	.proc _dstrncmp
 1224  00001df4          	.global _dstrncmp
 1225  00001df4          	_dstrncmp:
 1226                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1227  00001df4  afbefffc	sw	-4(r29),r30; push fp
 1228  00001df8  001df020	add	r30,r0,r29; fp = sp
 1229  00001dfc  afbffff8	sw	-8(r29),r31; push ret addr
 1230  00001e00  2fbd0018	subui	r29,r29,#24; alloc local storage
 1231  00001e04  afa20000	sw	0(r29),r2
 1232  00001e08  afa30004	sw	4(r29),r3
 1233  00001e0c  54000000	nop
 1234  00001e10  20010000	addi	r1,r0,#0
 1235  00001e14  afc1fff4	sw	-12(r30),r1
 1236  00001e18          	L25_LF2:
 1237  00001e18  8fc1fff4	lw	r1,-12(r30)
 1238  00001e1c  8fc20008	lw	r2,8(r30)
 1239  00001e20  0022082a	slt	r1,r1,r2
 1240  00001e24  1420000c	bnez	r1,L28_LF2
 1241  00001e28  54000000	nop; delay slot nop
 1242  00001e2c  08000088	j	L26_LF2
 1243  00001e30  54000000	nop; delay slot nop
 1244  00001e34          	L28_LF2:
 1245  00001e34  8fc10004	lw	r1,4(r30)
 1246  00001e38  90220000	lbu	r2,(r1)
 1247  00001e3c  64410000	snei	r1,r2,#0
 1248  00001e40  14200018	bnez	r1,L29_LF2
 1249  00001e44  54000000	nop; delay slot nop
 1250  00001e48  20010000	addi	r1,r0,#0
 1251  00001e4c  080000d8	j	L24_LF2
 1252  00001e50  54000000	nop; delay slot nop
 1253  00001e54  08000028	j	L30_LF2
 1254  00001e58  54000000	nop; delay slot nop
 1255  00001e5c          	L29_LF2:
 1256  00001e5c  8fc10000	lw	r1,(r30)
 1257  00001e60  8fc20004	lw	r2,4(r30)
 1258  00001e64  90210000	lbu	r1,(r1)
 1259  00001e68  90420000	lbu	r2,(r2)
 1260  00001e6c  00220829	sne	r1,r1,r2
 1261  00001e70  1020000c	beqz	r1,L30_LF2
 1262  00001e74  54000000	nop; delay slot nop
 1263  00001e78  0800003c	j	L26_LF2
 1264  00001e7c  54000000	nop; delay slot nop
 1265  00001e80          	L31_LF2:
 1266  00001e80          	L30_LF2:
 1267  00001e80  8fc20000	lw	r2,(r30)
 1268  00001e84  20410001	addi	r1,r2,#1
 1269  00001e88  00011020	add	r2,r0,r1
 1270  00001e8c  afc20000	sw	(r30),r2
 1271  00001e90  8fc20004	lw	r2,4(r30)
 1272  00001e94  20410001	addi	r1,r2,#1
 1273  00001e98  00011020	add	r2,r0,r1
 1274  00001e9c  afc20004	sw	4(r30),r2
 1275  00001ea0          	L27_LF2:
 1276  00001ea0  8fc2fff4	lw	r2,-12(r30)
 1277  00001ea4  20410001	addi	r1,r2,#1
 1278  00001ea8  00011020	add	r2,r0,r1
 1279  00001eac  afc2fff4	sw	-12(r30),r2
 1280  00001eb0  0bffff64	j	L25_LF2
 1281  00001eb4  54000000	nop; delay slot nop
 1282  00001eb8          	L26_LF2:
 1283  00001eb8  8fc1fff4	lw	r1,-12(r30)
 1284  00001ebc  8fc20008	lw	r2,8(r30)
 1285  00001ec0  00220828	seq	r1,r1,r2
 1286  00001ec4  10200018	beqz	r1,L32_LF2
 1287  00001ec8  54000000	nop; delay slot nop
 1288  00001ecc  20010000	addi	r1,r0,#0
 1289  00001ed0  08000054	j	L24_LF2
 1290  00001ed4  54000000	nop; delay slot nop
 1291  00001ed8  0800004c	j	L33_LF2
 1292  00001edc  54000000	nop; delay slot nop
 1293  00001ee0          	L32_LF2:
 1294  00001ee0  8fc20000	lw	r2,(r30)
 1295  00001ee4  90410000	lbu	r1,(r2)
 1296  00001ee8  8fc20004	lw	r2,4(r30)
 1297  00001eec  90430000	lbu	r3,(r2)
 1298  00001ef0  00230822	sub	r1,r1,r3
 1299  00001ef4  74220000	sgei	r2,r1,#0
 1300  00001ef8  10400020	beqz	r2,L34_LF2
 1301  00001efc  54000000	nop; delay slot nop
 1302  00001f00  8fc10000	lw	r1,(r30)
 1303  00001f04  8fc20004	lw	r2,4(r30)
 1304  00001f08  90210000	lbu	r1,(r1)
 1305  00001f0c  90420000	lbu	r2,(r2)
 1306  00001f10  00220829	sne	r1,r1,r2
 1307  00001f14  08000008	j	L35_LF2
 1308  00001f18  54000000	nop; delay slot nop
 1309  00001f1c          	L34_LF2:
 1310  00001f1c  2001ffff	addi	r1,r0,#-1
 1311  00001f20          	L35_LF2:
 1312  00001f20  08000004	j	L24_LF2
 1313  00001f24  54000000	nop; delay slot nop
 1314  00001f28          	L33_LF2:
 1315  00001f28          	L24_LF2:
 1316  00001f28  8fa20000	lw	r2,0(r29)
 1317  00001f2c  8fa30004	lw	r3,4(r29)
 1318  00001f30  8fdffff8	lw	r31,-8(r30)
 1319  00001f34  001ee820	add	r29,r0,r30
 1320  00001f38  8fdefffc	lw	r30,-4(r30)
 1321  00001f3c  4be00000	jr	r31
 1322  00001f40  54000000	nop
 1323  00001f44          	.endproc _dstrncmp
 1324  00001f44          	.align 2
 1325  00001f44          	.proc _dstrlen
 1326  00001f44          	.global _dstrlen
 1327  00001f44          	_dstrlen:
 1328                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1329  00001f44  afbefffc	sw	-4(r29),r30; push fp
 1330  00001f48  001df020	add	r30,r0,r29; fp = sp
 1331  00001f4c  afbffff8	sw	-8(r29),r31; push ret addr
 1332  00001f50  2fbd0018	subui	r29,r29,#24; alloc local storage
 1333  00001f54  afa20000	sw	0(r29),r2
 1334  00001f58  20010000	addi	r1,r0,#0
 1335  00001f5c  afc1fff4	sw	-12(r30),r1
 1336  00001f60          	L37_LF2:
 1337  00001f60  8fc10000	lw	r1,(r30)
 1338  00001f64  20220001	addi	r2,r1,#1
 1339  00001f68  afc20000	sw	(r30),r2
 1340  00001f6c  90210000	lbu	r1,(r1)
 1341  00001f70  64220000	snei	r2,r1,#0
 1342  00001f74  1440000c	bnez	r2,L39_LF2
 1343  00001f78  54000000	nop; delay slot nop
 1344  00001f7c  0800001c	j	L38_LF2
 1345  00001f80  54000000	nop; delay slot nop
 1346  00001f84          	L39_LF2:
 1347  00001f84  8fc2fff4	lw	r2,-12(r30)
 1348  00001f88  20410001	addi	r1,r2,#1
 1349  00001f8c  00011020	add	r2,r0,r1
 1350  00001f90  afc2fff4	sw	-12(r30),r2
 1351  00001f94  0bffffc8	j	L37_LF2
 1352  00001f98  54000000	nop; delay slot nop
 1353  00001f9c          	L38_LF2:
 1354  00001f9c  8fc1fff4	lw	r1,-12(r30)
 1355  00001fa0  08000004	j	L36_LF2
 1356  00001fa4  54000000	nop; delay slot nop
 1357  00001fa8          	L36_LF2:
 1358  00001fa8  8fa20000	lw	r2,0(r29)
 1359  00001fac  8fdffff8	lw	r31,-8(r30)
 1360  00001fb0  001ee820	add	r29,r0,r30
 1361  00001fb4  8fdefffc	lw	r30,-4(r30)
 1362  00001fb8  4be00000	jr	r31
 1363  00001fbc  54000000	nop
 1364  00001fc0          	.endproc _dstrlen
 1365  00001fc0          	.align 2
 1366  00001fc0          	.proc _dstrstr
 1367  00001fc0          	.global _dstrstr
 1368  00001fc0          	_dstrstr:
 1369                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1370  00001fc0  afbefffc	sw	-4(r29),r30; push fp
 1371  00001fc4  001df020	add	r30,r0,r29; fp = sp
 1372  00001fc8  afbffff8	sw	-8(r29),r31; push ret addr
 1373  00001fcc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1374  00001fd0  afa20000	sw	0(r29),r2
 1375  00001fd4  23bdfff8	addi	r29,r29,#-8
 1376  00001fd8  001d0820	add	r1,r0,r29
 1377  00001fdc  8fc20004	lw	r2,4(r30)
 1378  00001fe0  ac220000	sw	(r1),r2
 1379  00001fe4  0fffff5c	jal	_dstrlen
 1380  00001fe8  54000000	nop; delay slot nop
 1381  00001fec  23bd0008	addi	r29,r29,#8
 1382  00001ff0  afc1fff4	sw	-12(r30),r1
 1383  00001ff4          	L41_LF2:
 1384  00001ff4  8fc10000	lw	r1,(r30)
 1385  00001ff8  90220000	lbu	r2,(r1)
 1386  00001ffc  64410000	snei	r1,r2,#0
 1387  00002000  1420000c	bnez	r1,L43_LF2
 1388  00002004  54000000	nop; delay slot nop
 1389  00002008  08000060	j	L42_LF2
 1390  0000200c  54000000	nop; delay slot nop
 1391  00002010          	L43_LF2:
 1392  00002010  23bdfff0	addi	r29,r29,#-16
 1393  00002014  001d0820	add	r1,r0,r29
 1394  00002018  8fc20000	lw	r2,(r30)
 1395  0000201c  ac220000	sw	(r1),r2
 1396  00002020  8fc20004	lw	r2,4(r30)
 1397  00002024  ac220004	sw	4(r1),r2
 1398  00002028  8fc2fff4	lw	r2,-12(r30)
 1399  0000202c  ac220008	sw	8(r1),r2
 1400  00002030  0ffffdc0	jal	_dstrncmp
 1401  00002034  54000000	nop; delay slot nop
 1402  00002038  23bd0010	addi	r29,r29,#16
 1403  0000203c  64220000	snei	r2,r1,#0
 1404  00002040  14400010	bnez	r2,L44_LF2
 1405  00002044  54000000	nop; delay slot nop
 1406  00002048  8fc10000	lw	r1,(r30)
 1407  0000204c  08000028	j	L40_LF2
 1408  00002050  54000000	nop; delay slot nop
 1409  00002054          	L44_LF2:
 1410  00002054  8fc20000	lw	r2,(r30)
 1411  00002058  20410001	addi	r1,r2,#1
 1412  0000205c  00011020	add	r2,r0,r1
 1413  00002060  afc20000	sw	(r30),r2
 1414  00002064  0bffff8c	j	L41_LF2
 1415  00002068  54000000	nop; delay slot nop
 1416  0000206c          	L42_LF2:
 1417  0000206c  20010000	addi	r1,r0,#0
 1418  00002070  08000004	j	L40_LF2
 1419  00002074  54000000	nop; delay slot nop
 1420  00002078          	L40_LF2:
 1421  00002078  8fa20000	lw	r2,0(r29)
 1422  0000207c  8fdffff8	lw	r31,-8(r30)
 1423  00002080  001ee820	add	r29,r0,r30
 1424  00002084  8fdefffc	lw	r30,-4(r30)
 1425  00002088  4be00000	jr	r31
 1426  0000208c  54000000	nop
 1427  00002090          	.endproc _dstrstr
 1428  00002090          	.align 2
 1429  00002090          	.proc _dmindex
 1430  00002090          	.global _dmindex
 1431  00002090          	_dmindex:
 1432                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1433  00002090  afbefffc	sw	-4(r29),r30; push fp
 1434  00002094  001df020	add	r30,r0,r29; fp = sp
 1435  00002098  afbffff8	sw	-8(r29),r31; push ret addr
 1436  0000209c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1437  000020a0  afa20000	sw	0(r29),r2
 1438  000020a4  54000000	nop
 1439  000020a8          	L46_LF2:
 1440  000020a8  8fc10000	lw	r1,(r30)
 1441  000020ac  90220000	lbu	r2,(r1)
 1442  000020b0  64410000	snei	r1,r2,#0
 1443  000020b4  1420000c	bnez	r1,L48_LF2
 1444  000020b8  54000000	nop; delay slot nop
 1445  000020bc  08000070	j	L47_LF2
 1446  000020c0  54000000	nop; delay slot nop
 1447  000020c4          	L48_LF2:
 1448  000020c4  8fc10004	lw	r1,4(r30)
 1449  000020c8  afc1fff4	sw	-12(r30),r1
 1450  000020cc          	L49_LF2:
 1451  000020cc  8fc1fff4	lw	r1,-12(r30)
 1452  000020d0  90220000	lbu	r2,(r1)
 1453  000020d4  64410000	snei	r1,r2,#0
 1454  000020d8  1420000c	bnez	r1,L52_LF2
 1455  000020dc  54000000	nop; delay slot nop
 1456  000020e0  08000044	j	L50_LF2
 1457  000020e4  54000000	nop; delay slot nop
 1458  000020e8          	L52_LF2:
 1459  000020e8  8fc10000	lw	r1,(r30)
 1460  000020ec  8fc2fff4	lw	r2,-12(r30)
 1461  000020f0  90210000	lbu	r1,(r1)
 1462  000020f4  90420000	lbu	r2,(r2)
 1463  000020f8  00220828	seq	r1,r1,r2
 1464  000020fc  10200010	beqz	r1,L51_LF2
 1465  00002100  54000000	nop; delay slot nop
 1466  00002104  8fc10000	lw	r1,(r30)
 1467  00002108  08000030	j	L45_LF2
 1468  0000210c  54000000	nop; delay slot nop
 1469  00002110          	L53_LF2:
 1470  00002110          	L51_LF2:
 1471  00002110  8fc2fff4	lw	r2,-12(r30)
 1472  00002114  20410001	addi	r1,r2,#1
 1473  00002118  00011020	add	r2,r0,r1
 1474  0000211c  afc2fff4	sw	-12(r30),r2
 1475  00002120  0bffffa8	j	L49_LF2
 1476  00002124  54000000	nop; delay slot nop
 1477  00002128          	L50_LF2:
 1478  00002128  0bffff7c	j	L46_LF2
 1479  0000212c  54000000	nop; delay slot nop
 1480  00002130          	L47_LF2:
 1481  00002130  20010000	addi	r1,r0,#0
 1482  00002134  08000004	j	L45_LF2
 1483  00002138  54000000	nop; delay slot nop
 1484  0000213c          	L45_LF2:
 1485  0000213c  8fa20000	lw	r2,0(r29)
 1486  00002140  8fdffff8	lw	r31,-8(r30)
 1487  00002144  001ee820	add	r29,r0,r30
 1488  00002148  8fdefffc	lw	r30,-4(r30)
 1489  0000214c  4be00000	jr	r31
 1490  00002150  54000000	nop
 1491  00002154          	.endproc _dmindex
 1492  00002154          	.align 2
 1493  00002154          	.proc _dindex
 1494  00002154          	.global _dindex
 1495  00002154          	_dindex:
 1496                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1497  00002154  afbefffc	sw	-4(r29),r30; push fp
 1498  00002158  001df020	add	r30,r0,r29; fp = sp
 1499  0000215c  afbffff8	sw	-8(r29),r31; push ret addr
 1500  00002160  2fbd0010	subui	r29,r29,#16; alloc local storage
 1501  00002164  afa20000	sw	0(r29),r2
 1502  00002168  54000000	nop
 1503  0000216c          	L55_LF2:
 1504  0000216c  8fc10000	lw	r1,(r30)
 1505  00002170  90220000	lbu	r2,(r1)
 1506  00002174  64410000	snei	r1,r2,#0
 1507  00002178  1420000c	bnez	r1,L57_LF2
 1508  0000217c  54000000	nop; delay slot nop
 1509  00002180  08000040	j	L56_LF2
 1510  00002184  54000000	nop; delay slot nop
 1511  00002188          	L57_LF2:
 1512  00002188  8fc10000	lw	r1,(r30)
 1513  0000218c  90220000	lbu	r2,(r1)
 1514  00002190  8fc10004	lw	r1,4(r30)
 1515  00002194  00411028	seq	r2,r2,r1
 1516  00002198  10400010	beqz	r2,L58_LF2
 1517  0000219c  54000000	nop; delay slot nop
 1518  000021a0  8fc10000	lw	r1,(r30)
 1519  000021a4  08000028	j	L54_LF2
 1520  000021a8  54000000	nop; delay slot nop
 1521  000021ac          	L58_LF2:
 1522  000021ac  8fc20000	lw	r2,(r30)
 1523  000021b0  20410001	addi	r1,r2,#1
 1524  000021b4  00011020	add	r2,r0,r1
 1525  000021b8  afc20000	sw	(r30),r2
 1526  000021bc  0bffffac	j	L55_LF2
 1527  000021c0  54000000	nop; delay slot nop
 1528  000021c4          	L56_LF2:
 1529  000021c4  20010000	addi	r1,r0,#0
 1530  000021c8  08000004	j	L54_LF2
 1531  000021cc  54000000	nop; delay slot nop
 1532  000021d0          	L54_LF2:
 1533  000021d0  8fa20000	lw	r2,0(r29)
 1534  000021d4  8fdffff8	lw	r31,-8(r30)
 1535  000021d8  001ee820	add	r29,r0,r30
 1536  000021dc  8fdefffc	lw	r30,-4(r30)
 1537  000021e0  4be00000	jr	r31
 1538  000021e4  54000000	nop
 1539  000021e8          	.endproc _dindex
 1540  000021e8          	.align 2
 1541  000021e8          	.proc _ditoa
 1542  000021e8          	.global _ditoa
 1543  000021e8          	_ditoa:
 1544                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1545  000021e8  afbefffc	sw	-4(r29),r30; push fp
 1546  000021ec  001df020	add	r30,r0,r29; fp = sp
 1547  000021f0  afbffff8	sw	-8(r29),r31; push ret addr
 1548  000021f4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1549  000021f8  afa20000	sw	0(r29),r2
 1550  000021fc  afa30004	sw	4(r29),r3
 1551  00002200  8fc10000	lw	r1,(r30)
 1552  00002204  68220000	slti	r2,r1,#0
 1553  00002208  1040002c	beqz	r2,L60_LF2
 1554  0000220c  54000000	nop; delay slot nop
 1555  00002210  8fc10004	lw	r1,4(r30)
 1556  00002214  20220001	addi	r2,r1,#1
 1557  00002218  afc20004	sw	4(r30),r2
 1558  0000221c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1559  00002220  a0220000	sb	(r1),r2
 1560  00002224  8fc10000	lw	r1,(r30)
 1561  00002228  00011022	sub	r2,r0,r1
 1562  0000222c  afc20000	sw	(r30),r2
 1563  00002230  08000118	j	L61_LF2
 1564  00002234  54000000	nop; delay slot nop
 1565  00002238          	L60_LF2:
 1566  00002238  8fc10000	lw	r1,(r30)
 1567  0000223c  64220000	snei	r2,r1,#0
 1568  00002240  14400020	bnez	r2,L62_LF2
 1569  00002244  54000000	nop; delay slot nop
 1570  00002248  8fc10004	lw	r1,4(r30)
 1571  0000224c  20220001	addi	r2,r1,#1
 1572  00002250  afc20004	sw	4(r30),r2
 1573  00002254  20020030	addi	r2,r0,(#0x30)&0xff
 1574  00002258  a0220000	sb	(r1),r2
 1575  0000225c  080000ec	j	L61_LF2
 1576  00002260  54000000	nop; delay slot nop
 1577  00002264          	L62_LF2:
 1578  00002264  20010001	addi	r1,r0,#1
 1579  00002268  afc1fff4	sw	-12(r30),r1
 1580  0000226c          	L64_LF2:
 1581  0000226c  8fc1fff4	lw	r1,-12(r30)
 1582  00002270  8fc20000	lw	r2,(r30)
 1583  00002274  0022082c	sle	r1,r1,r2
 1584  00002278  1420000c	bnez	r1,L66_LF2
 1585  0000227c  54000000	nop; delay slot nop
 1586  00002280  08000024	j	L65_LF2
 1587  00002284  54000000	nop; delay slot nop
 1588  00002288          	L67_LF2:
 1589  00002288          	L66_LF2:
 1590  00002288  8fc1fff4	lw	r1,-12(r30)
 1591  0000228c  00011820	add	r3,r0,r1
 1592  00002290  50620002	slli	r2,r3,#0x2
 1593  00002294  00411020	add	r2,r2,r1
 1594  00002298  50410001	slli	r1,r2,#0x1
 1595  0000229c  afc1fff4	sw	-12(r30),r1
 1596  000022a0  0bffffc8	j	L64_LF2
 1597  000022a4  54000000	nop; delay slot nop
 1598  000022a8          	L65_LF2:
 1599  000022a8  54000000	nop
 1600  000022ac          	L68_LF2:
 1601  000022ac  8fc1fff4	lw	r1,-12(r30)
 1602  000022b0  2002000a	addi	r2,r0,#10
 1603  000022b4  00200035	movi2fp	f0,r1
 1604  000022b8  00400835	movi2fp	f1,r2
 1605  000022bc  0401000f	div	f0,f0,f1
 1606  000022c0  00000834	movfp2i	r1,f0
 1607  000022c4  afc1fff4	sw	-12(r30),r1
 1608  000022c8  8fc10004	lw	r1,4(r30)
 1609  000022cc  20220001	addi	r2,r1,#1
 1610  000022d0  afc20004	sw	4(r30),r2
 1611  000022d4  8fc20000	lw	r2,(r30)
 1612  000022d8  8fc3fff4	lw	r3,-12(r30)
 1613  000022dc  00400035	movi2fp	f0,r2
 1614  000022e0  00600835	movi2fp	f1,r3
 1615  000022e4  0401000f	div	f0,f0,f1
 1616  000022e8  00001034	movfp2i	r2,f0
 1617  000022ec  00021820	add	r3,r0,r2
 1618  000022f0  20620030	addi	r2,r3,#48
 1619  000022f4  a0220000	sb	(r1),r2
 1620  000022f8  8fc10000	lw	r1,(r30)
 1621  000022fc  8fc3fff4	lw	r3,-12(r30)
 1622  00002300  00200035	movi2fp	f0,r1
 1623  00002304  00600835	movi2fp	f1,r3
 1624  00002308  0401000f	div	f0,f0,f1
 1625  0000230c  00001034	movfp2i	r2,f0
 1626  00002310  8fc3fff4	lw	r3,-12(r30)
 1627  00002314  00400035	movi2fp	f0,r2
 1628  00002318  00600835	movi2fp	f1,r3
 1629  0000231c  0401000e	mult	f0,f0,f1
 1630  00002320  00001034	movfp2i	r2,f0
 1631  00002324  00220822	sub	r1,r1,r2
 1632  00002328  afc10000	sw	(r30),r1
 1633  0000232c          	L70_LF2:
 1634  0000232c  8fc1fff4	lw	r1,-12(r30)
 1635  00002330  6c220001	sgti	r2,r1,#1
 1636  00002334  1440000c	bnez	r2,L71_LF2
 1637  00002338  54000000	nop; delay slot nop
 1638  0000233c  0800000c	j	L61_LF2
 1639  00002340  54000000	nop; delay slot nop
 1640  00002344          	L71_LF2:
 1641  00002344  0bffff64	j	L68_LF2
 1642  00002348  54000000	nop; delay slot nop
 1643  0000234c          	L69_LF2:
 1644  0000234c          	L63_LF2:
 1645  0000234c          	L61_LF2:
 1646  0000234c  8fc10004	lw	r1,4(r30)
 1647  00002350  20020000	addi	r2,r0,(#0x0)&0xff
 1648  00002354  a0220000	sb	(r1),r2
 1649  00002358          	L59_LF2:
 1650  00002358  8fa20000	lw	r2,0(r29)
 1651  0000235c  8fa30004	lw	r3,4(r29)
 1652  00002360  8fdffff8	lw	r31,-8(r30)
 1653  00002364  001ee820	add	r29,r0,r30
 1654  00002368  8fdefffc	lw	r30,-4(r30)
 1655  0000236c  4be00000	jr	r31
 1656  00002370  54000000	nop
 1657  00002374          	.endproc _ditoa
 1658  00002374          	.align 2
 1659  00002374          	.proc _dstrtol
 1660  00002374          	.global _dstrtol
 1661  00002374          	_dstrtol:
 1662                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1663  00002374  afbefffc	sw	-4(r29),r30; push fp
 1664  00002378  001df020	add	r30,r0,r29; fp = sp
 1665  0000237c  afbffff8	sw	-8(r29),r31; push ret addr
 1666  00002380  2fbd0020	subui	r29,r29,#32; alloc local storage
 1667  00002384  afa20000	sw	0(r29),r2
 1668  00002388  20010000	addi	r1,r0,#0
 1669  0000238c  afc1fff4	sw	-12(r30),r1
 1670  00002390          	L73_LF2:
 1671  00002390  8fc10000	lw	r1,(r30)
 1672  00002394  90220000	lbu	r2,(r1)
 1673  00002398  60410020	seqi	r1,r2,#32
 1674  0000239c  14200034	bnez	r1,L75_LF2
 1675  000023a0  54000000	nop; delay slot nop
 1676  000023a4  8fc10000	lw	r1,(r30)
 1677  000023a8  90220000	lbu	r2,(r1)
 1678  000023ac  60410009	seqi	r1,r2,#9
 1679  000023b0  14200020	bnez	r1,L75_LF2
 1680  000023b4  54000000	nop; delay slot nop
 1681  000023b8  8fc10000	lw	r1,(r30)
 1682  000023bc  90220000	lbu	r2,(r1)
 1683  000023c0  6041000a	seqi	r1,r2,#10
 1684  000023c4  1420000c	bnez	r1,L75_LF2
 1685  000023c8  54000000	nop; delay slot nop
 1686  000023cc  0800001c	j	L74_LF2
 1687  000023d0  54000000	nop; delay slot nop
 1688  000023d4          	L75_LF2:
 1689  000023d4  8fc20000	lw	r2,(r30)
 1690  000023d8  20410001	addi	r1,r2,#1
 1691  000023dc  00011020	add	r2,r0,r1
 1692  000023e0  afc20000	sw	(r30),r2
 1693  000023e4  0bffffa8	j	L73_LF2
 1694  000023e8  54000000	nop; delay slot nop
 1695  000023ec          	L74_LF2:
 1696  000023ec  8fc10004	lw	r1,4(r30)
 1697  000023f0  64220000	snei	r2,r1,#0
 1698  000023f4  10400010	beqz	r2,L76_LF2
 1699  000023f8  54000000	nop; delay slot nop
 1700  000023fc  8fc10004	lw	r1,4(r30)
 1701  00002400  8fc20000	lw	r2,(r30)
 1702  00002404  ac220000	sw	(r1),r2
 1703  00002408          	L76_LF2:
 1704  00002408  8fc10000	lw	r1,(r30)
 1705  0000240c  90220000	lbu	r2,(r1)
 1706  00002410  64410000	snei	r1,r2,#0
 1707  00002414  14200010	bnez	r1,L77_LF2
 1708  00002418  54000000	nop; delay slot nop
 1709  0000241c  8fc1fff4	lw	r1,-12(r30)
 1710  00002420  08000294	j	L72_LF2
 1711  00002424  54000000	nop; delay slot nop
 1712  00002428          	L77_LF2:
 1713  00002428  8fc10000	lw	r1,(r30)
 1714  0000242c  90220000	lbu	r2,(r1)
 1715  00002430  6041002d	seqi	r1,r2,#45
 1716  00002434  10200024	beqz	r1,L78_LF2
 1717  00002438  54000000	nop; delay slot nop
 1718  0000243c  2001ffff	addi	r1,r0,#-1
 1719  00002440  afc1ffec	sw	-20(r30),r1
 1720  00002444  8fc20000	lw	r2,(r30)
 1721  00002448  20410001	addi	r1,r2,#1
 1722  0000244c  00011020	add	r2,r0,r1
 1723  00002450  afc20000	sw	(r30),r2
 1724  00002454  0800000c	j	L79_LF2
 1725  00002458  54000000	nop; delay slot nop
 1726  0000245c          	L78_LF2:
 1727  0000245c  20010001	addi	r1,r0,#1
 1728  00002460  afc1ffec	sw	-20(r30),r1
 1729  00002464          	L79_LF2:
 1730  00002464  8fc10008	lw	r1,8(r30)
 1731  00002468  64220000	snei	r2,r1,#0
 1732  0000246c  14400090	bnez	r2,L80_LF2
 1733  00002470  54000000	nop; delay slot nop
 1734  00002474  8fc10000	lw	r1,(r30)
 1735  00002478  90220000	lbu	r2,(r1)
 1736  0000247c  60410030	seqi	r1,r2,#48
 1737  00002480  10200074	beqz	r1,L81_LF2
 1738  00002484  54000000	nop; delay slot nop
 1739  00002488  8fc20000	lw	r2,(r30)
 1740  0000248c  20410001	addi	r1,r2,#1
 1741  00002490  00011020	add	r2,r0,r1
 1742  00002494  afc20000	sw	(r30),r2
 1743  00002498  8fc10000	lw	r1,(r30)
 1744  0000249c  90220000	lbu	r2,(r1)
 1745  000024a0  60410078	seqi	r1,r2,#120
 1746  000024a4  14200020	bnez	r1,L83_LF2
 1747  000024a8  54000000	nop; delay slot nop
 1748  000024ac  8fc10000	lw	r1,(r30)
 1749  000024b0  90220000	lbu	r2,(r1)
 1750  000024b4  60410058	seqi	r1,r2,#88
 1751  000024b8  1420000c	bnez	r1,L83_LF2
 1752  000024bc  54000000	nop; delay slot nop
 1753  000024c0  08000024	j	L82_LF2
 1754  000024c4  54000000	nop; delay slot nop
 1755  000024c8          	L83_LF2:
 1756  000024c8  20010010	addi	r1,r0,#16
 1757  000024cc  afc10008	sw	8(r30),r1
 1758  000024d0  8fc20000	lw	r2,(r30)
 1759  000024d4  20410001	addi	r1,r2,#1
 1760  000024d8  00011020	add	r2,r0,r1
 1761  000024dc  afc20000	sw	(r30),r2
 1762  000024e0  0800000c	j	L84_LF2
 1763  000024e4  54000000	nop; delay slot nop
 1764  000024e8          	L82_LF2:
 1765  000024e8  20010008	addi	r1,r0,#8
 1766  000024ec  afc10008	sw	8(r30),r1
 1767  000024f0          	L84_LF2:
 1768  000024f0  0800000c	j	L80_LF2
 1769  000024f4  54000000	nop; delay slot nop
 1770  000024f8          	L81_LF2:
 1771  000024f8  2001000a	addi	r1,r0,#10
 1772  000024fc  afc10008	sw	8(r30),r1
 1773  00002500          	L85_LF2:
 1774  00002500          	L80_LF2:
 1775  00002500  8fc10008	lw	r1,8(r30)
 1776  00002504  70220000	slei	r2,r1,#0
 1777  00002508  1440001c	bnez	r2,L87_LF2
 1778  0000250c  54000000	nop; delay slot nop
 1779  00002510  8fc10008	lw	r1,8(r30)
 1780  00002514  6c220010	sgti	r2,r1,#16
 1781  00002518  1440000c	bnez	r2,L87_LF2
 1782  0000251c  54000000	nop; delay slot nop
 1783  00002520  08000010	j	L86_LF2
 1784  00002524  54000000	nop; delay slot nop
 1785  00002528          	L87_LF2:
 1786  00002528  8fc1fff4	lw	r1,-12(r30)
 1787  0000252c  08000188	j	L72_LF2
 1788  00002530  54000000	nop; delay slot nop
 1789  00002534          	L86_LF2:
 1790  00002534  54000000	nop
 1791  00002538          	L88_LF2:
 1792  00002538  8fc10000	lw	r1,(r30)
 1793  0000253c  90220000	lbu	r2,(r1)
 1794  00002540  6c41002f	sgtui	r1,r2,#47
 1795  00002544  10200030	beqz	r1,L91_LF2
 1796  00002548  54000000	nop; delay slot nop
 1797  0000254c  8fc10000	lw	r1,(r30)
 1798  00002550  90220000	lbu	r2,(r1)
 1799  00002554  70410039	sleui	r1,r2,#57
 1800  00002558  1020001c	beqz	r1,L91_LF2
 1801  0000255c  54000000	nop; delay slot nop
 1802  00002560  8fc10000	lw	r1,(r30)
 1803  00002564  90220000	lbu	r2,(r1)
 1804  00002568  2041ffd0	addi	r1,r2,#-48
 1805  0000256c  afc1fff0	sw	-16(r30),r1
 1806  00002570  0800008c	j	L92_LF2
 1807  00002574  54000000	nop; delay slot nop
 1808  00002578          	L91_LF2:
 1809  00002578  8fc10000	lw	r1,(r30)
 1810  0000257c  90220000	lbu	r2,(r1)
 1811  00002580  6c410060	sgtui	r1,r2,#96
 1812  00002584  10200030	beqz	r1,L93_LF2
 1813  00002588  54000000	nop; delay slot nop
 1814  0000258c  8fc10000	lw	r1,(r30)
 1815  00002590  90220000	lbu	r2,(r1)
 1816  00002594  7041007a	sleui	r1,r2,#122
 1817  00002598  1020001c	beqz	r1,L93_LF2
 1818  0000259c  54000000	nop; delay slot nop
 1819  000025a0  8fc10000	lw	r1,(r30)
 1820  000025a4  90220000	lbu	r2,(r1)
 1821  000025a8  2041ffa9	addi	r1,r2,#-87
 1822  000025ac  afc1fff0	sw	-16(r30),r1
 1823  000025b0  0800004c	j	L92_LF2
 1824  000025b4  54000000	nop; delay slot nop
 1825  000025b8          	L93_LF2:
 1826  000025b8  8fc10000	lw	r1,(r30)
 1827  000025bc  90220000	lbu	r2,(r1)
 1828  000025c0  6c410040	sgtui	r1,r2,#64
 1829  000025c4  10200030	beqz	r1,L95_LF2
 1830  000025c8  54000000	nop; delay slot nop
 1831  000025cc  8fc10000	lw	r1,(r30)
 1832  000025d0  90220000	lbu	r2,(r1)
 1833  000025d4  7041005a	sleui	r1,r2,#90
 1834  000025d8  1020001c	beqz	r1,L95_LF2
 1835  000025dc  54000000	nop; delay slot nop
 1836  000025e0  8fc10000	lw	r1,(r30)
 1837  000025e4  90220000	lbu	r2,(r1)
 1838  000025e8  2041ffc9	addi	r1,r2,#-55
 1839  000025ec  afc1fff0	sw	-16(r30),r1
 1840  000025f0  0800000c	j	L92_LF2
 1841  000025f4  54000000	nop; delay slot nop
 1842  000025f8          	L95_LF2:
 1843  000025f8  200103e8	addi	r1,r0,#1000
 1844  000025fc  afc1fff0	sw	-16(r30),r1
 1845  00002600          	L96_LF2:
 1846  00002600          	L94_LF2:
 1847  00002600          	L92_LF2:
 1848  00002600  8fc1fff0	lw	r1,-16(r30)
 1849  00002604  8fc20008	lw	r2,8(r30)
 1850  00002608  0022082a	slt	r1,r1,r2
 1851  0000260c  10200040	beqz	r1,L90_LF2
 1852  00002610  54000000	nop; delay slot nop
 1853  00002614  8fc1fff4	lw	r1,-12(r30)
 1854  00002618  8fc20008	lw	r2,8(r30)
 1855  0000261c  00200035	movi2fp	f0,r1
 1856  00002620  00400835	movi2fp	f1,r2
 1857  00002624  0401000e	mult	f0,f0,f1
 1858  00002628  00000834	movfp2i	r1,f0
 1859  0000262c  afc1fff4	sw	-12(r30),r1
 1860  00002630  8fc1fff4	lw	r1,-12(r30)
 1861  00002634  8fc2fff0	lw	r2,-16(r30)
 1862  00002638  00220820	add	r1,r1,r2
 1863  0000263c  afc1fff4	sw	-12(r30),r1
 1864  00002640  8fc20000	lw	r2,(r30)
 1865  00002644  20410001	addi	r1,r2,#1
 1866  00002648  00011020	add	r2,r0,r1
 1867  0000264c  afc20000	sw	(r30),r2
 1868  00002650          	L97_LF2:
 1869  00002650          	L90_LF2:
 1870  00002650  8fc1fff0	lw	r1,-16(r30)
 1871  00002654  8fc20008	lw	r2,8(r30)
 1872  00002658  0022082a	slt	r1,r1,r2
 1873  0000265c  1420000c	bnez	r1,L98_LF2
 1874  00002660  54000000	nop; delay slot nop
 1875  00002664  0800000c	j	L89_LF2
 1876  00002668  54000000	nop; delay slot nop
 1877  0000266c          	L98_LF2:
 1878  0000266c  0bfffec8	j	L88_LF2
 1879  00002670  54000000	nop; delay slot nop
 1880  00002674          	L89_LF2:
 1881  00002674  8fc10004	lw	r1,4(r30)
 1882  00002678  64220000	snei	r2,r1,#0
 1883  0000267c  10400010	beqz	r2,L99_LF2
 1884  00002680  54000000	nop; delay slot nop
 1885  00002684  8fc10004	lw	r1,4(r30)
 1886  00002688  8fc20000	lw	r2,(r30)
 1887  0000268c  ac220000	sw	(r1),r2
 1888  00002690          	L99_LF2:
 1889  00002690  8fc1fff4	lw	r1,-12(r30)
 1890  00002694  8fc2ffec	lw	r2,-20(r30)
 1891  00002698  00200035	movi2fp	f0,r1
 1892  0000269c  00400835	movi2fp	f1,r2
 1893  000026a0  0401000e	mult	f0,f0,f1
 1894  000026a4  00000834	movfp2i	r1,f0
 1895  000026a8  afc1fff4	sw	-12(r30),r1
 1896  000026ac  8fc1fff4	lw	r1,-12(r30)
 1897  000026b0  08000004	j	L72_LF2
 1898  000026b4  54000000	nop; delay slot nop
 1899  000026b8          	L72_LF2:
 1900  000026b8  8fa20000	lw	r2,0(r29)
 1901  000026bc  8fdffff8	lw	r31,-8(r30)
 1902  000026c0  001ee820	add	r29,r0,r30
 1903  000026c4  8fdefffc	lw	r30,-4(r30)
 1904  000026c8  4be00000	jr	r31
 1905  000026cc  54000000	nop
 1906  000026d0          	.endproc _dstrtol
 1907  000026d0          	.align 2
 1908  000026d0          	.proc _bcopy
 1909  000026d0          	.global _bcopy
 1910  000026d0          	_bcopy:
 1911                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1912  000026d0  afbefffc	sw	-4(r29),r30; push fp
 1913  000026d4  001df020	add	r30,r0,r29; fp = sp
 1914  000026d8  afbffff8	sw	-8(r29),r31; push ret addr
 1915  000026dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1916  000026e0  afa20000	sw	0(r29),r2
 1917  000026e4  afa30004	sw	4(r29),r3
 1918  000026e8  54000000	nop
 1919  000026ec          	L101_LF2:
 1920  000026ec  8fc10008	lw	r1,8(r30)
 1921  000026f0  2022ffff	addi	r2,r1,#-1
 1922  000026f4  afc20008	sw	8(r30),r2
 1923  000026f8  6c210000	sgti	r1,r1,#0
 1924  000026fc  1420000c	bnez	r1,L103_LF2
 1925  00002700  54000000	nop; delay slot nop
 1926  00002704  0800002c	j	L102_LF2
 1927  00002708  54000000	nop; delay slot nop
 1928  0000270c          	L103_LF2:
 1929  0000270c  8fc10004	lw	r1,4(r30)
 1930  00002710  20220001	addi	r2,r1,#1
 1931  00002714  afc20004	sw	4(r30),r2
 1932  00002718  8fc20000	lw	r2,(r30)
 1933  0000271c  20430001	addi	r3,r2,#1
 1934  00002720  afc30000	sw	(r30),r3
 1935  00002724  80420000	lb	r2,(r2)
 1936  00002728  a0220000	sb	(r1),r2
 1937  0000272c  0bffffbc	j	L101_LF2
 1938  00002730  54000000	nop; delay slot nop
 1939  00002734          	L102_LF2:
 1940  00002734          	L100_LF2:
 1941  00002734  8fa20000	lw	r2,0(r29)
 1942  00002738  8fa30004	lw	r3,4(r29)
 1943  0000273c  8fdffff8	lw	r31,-8(r30)
 1944  00002740  001ee820	add	r29,r0,r30
 1945  00002744  8fdefffc	lw	r30,-4(r30)
 1946  00002748  4be00000	jr	r31
 1947  0000274c  54000000	nop
 1948  00002750          	.endproc _bcopy
 1949  00002750          	.align 2
 1950  00002750          	.proc _bzero
 1951  00002750          	.global _bzero
 1952  00002750          	_bzero:
 1953                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1954  00002750  afbefffc	sw	-4(r29),r30; push fp
 1955  00002754  001df020	add	r30,r0,r29; fp = sp
 1956  00002758  afbffff8	sw	-8(r29),r31; push ret addr
 1957  0000275c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1958  00002760  afa20000	sw	0(r29),r2
 1959  00002764  54000000	nop
 1960  00002768          	L105_LF2:
 1961  00002768  8fc10004	lw	r1,4(r30)
 1962  0000276c  2022ffff	addi	r2,r1,#-1
 1963  00002770  afc20004	sw	4(r30),r2
 1964  00002774  6c210000	sgti	r1,r1,#0
 1965  00002778  1420000c	bnez	r1,L107_LF2
 1966  0000277c  54000000	nop; delay slot nop
 1967  00002780  08000020	j	L106_LF2
 1968  00002784  54000000	nop; delay slot nop
 1969  00002788          	L107_LF2:
 1970  00002788  8fc10000	lw	r1,(r30)
 1971  0000278c  20220001	addi	r2,r1,#1
 1972  00002790  afc20000	sw	(r30),r2
 1973  00002794  20020000	addi	r2,r0,(#0x0)&0xff
 1974  00002798  a0220000	sb	(r1),r2
 1975  0000279c  0bffffc8	j	L105_LF2
 1976  000027a0  54000000	nop; delay slot nop
 1977  000027a4          	L106_LF2:
 1978  000027a4          	L104_LF2:
 1979  000027a4  8fa20000	lw	r2,0(r29)
 1980  000027a8  8fdffff8	lw	r31,-8(r30)
 1981  000027ac  001ee820	add	r29,r0,r30
 1982  000027b0  8fdefffc	lw	r30,-4(r30)
 1983  000027b4  4be00000	jr	r31
 1984  000027b8  54000000	nop
 1985  000027bc          	.endproc _bzero
 1986  000027bc          	.align 2
 1987  000027bc          	.proc _min
 1988  000027bc          	.global _min
 1989  000027bc          	_min:
 1990                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1991  000027bc  afbefffc	sw	-4(r29),r30; push fp
 1992  000027c0  001df020	add	r30,r0,r29; fp = sp
 1993  000027c4  afbffff8	sw	-8(r29),r31; push ret addr
 1994  000027c8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1995  000027cc  afa20000	sw	0(r29),r2
 1996  000027d0  afa30004	sw	4(r29),r3
 1997  000027d4  8fc10000	lw	r1,(r30)
 1998  000027d8  8fc20004	lw	r2,4(r30)
 1999  000027dc  0022182c	sle	r3,r1,r2
 2000  000027e0  14600008	bnez	r3,L109_LF2
 2001  000027e4  54000000	nop; delay slot nop
 2002  000027e8  8fc10004	lw	r1,4(r30)
 2003  000027ec          	L109_LF2:
 2004  000027ec  08000004	j	L108_LF2
 2005  000027f0  54000000	nop; delay slot nop
 2006  000027f4          	L108_LF2:
 2007  000027f4  8fa20000	lw	r2,0(r29)
 2008  000027f8  8fa30004	lw	r3,4(r29)
 2009  000027fc  8fdffff8	lw	r31,-8(r30)
 2010  00002800  001ee820	add	r29,r0,r30
 2011  00002804  8fdefffc	lw	r30,-4(r30)
 2012  00002808  4be00000	jr	r31
 2013  0000280c  54000000	nop
 2014  00002810          	.endproc _min
 2015                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 2016                      ;;;
 2017                      ;;; Most of the traps are called in files from libtraps.
 2020  00002810          	.align 2
 2021  00002810          	.proc _exit
 2022  00002810          	.global _exit
 2023  00002810          	_exit:
 2024  00002810  44000300	trap	#0x300
 2025  00002814  4be00000	jr	r31
 2026  00002818  54000000	nop
 2027  0000281c          	.endproc _exit
 2029                      ; for the benefit of gcc.
 2030  0000281c          	.proc ___main
 2031  0000281c          	.global ___main
 2032  0000281c          	___main:
 2033  0000281c  4be00000	jr	r31
 2034  00002820  54000000	nop
 2035  00002824          	.endproc ___main
 2036  00002824          	.text
 2037  00002824          	.global _etext
 2038  00002824          	_etext:
 2039  00002824          	.align 3
 2040  00002828          	.data
 2041  000031d6          	.global _edata
 2042  000031d6          	_edata:

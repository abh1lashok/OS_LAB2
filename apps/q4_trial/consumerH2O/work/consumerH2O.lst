 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 322
    4                      ; Text size: 5424
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  4342202d	.ascii "CB ---- Put %c in %d\n\000"
   82  00003004  2d2d2d20	
   82  00003008  50757420	
   82  0000300c  25632069	
   82  00003010  6e202564	
   82  00003014  0a00    	
   83  00003016          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _put_item_cb
   86  000010d4          	.global _put_item_cb
   87  000010d4          	_put_item_cb:
   88                      ;  Function 'put_item_cb'; 0 bytes of locals, 4 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  afa40008	sw	8(r29),r4
   96  000010f0  afa5000c	sw	12(r29),r5
   97  000010f4  83c20003	lb	r2,3(r30)
   98  000010f8  8fc30004	lw	r3,4(r30)
   99  000010fc  8c610000	lw	r1,(r3)
  100  00001100  00610820	add	r1,r3,r1
  101  00001104  a0220008	sb	8(r1),r2
  102  00001108  23bdfff0	addi	r29,r29,#-16
  103  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  104  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  105  00001114  afa50000	sw	(r29),r5
  106  00001118  304100ff	andi	r1,r2,#0x00ff
  107  0000111c  afa10004	sw	4(r29),r1
  108  00001120  8c650000	lw	r5,(r3)
  109  00001124  afa50008	sw	8(r29),r5
  110  00001128  0c000600	jal	_Printf
  111  0000112c  54000000	nop; not filled.
  112  00001130  8c610000	lw	r1,(r3)
  113  00001134  20240001	addi	r4,r1,#1
  114  00001138  2001000a	addi	r1,r0,#10
  115  0000113c  00800035	movi2fp	f0,r4
  116  00001140  00200835	movi2fp	f1,r1
  117  00001144  0401000f	div	f0,f0,f1
  118  00001148  00001034	movfp2i	r2,f0
  119  0000114c  50410002	slli	r1,r2,#0x2
  120  00001150  00220820	add	r1,r1,r2
  121  00001154  50210001	slli	r1,r1,#0x1
  122  00001158  00810822	sub	r1,r4,r1
  123  0000115c  ac610000	sw	(r3),r1
  124  00001160  20010001	addi	r1,r0,#1
  125  00001164  23bd0010	addi	r29,r29,#16
  126  00001168  8fa20000	lw	r2,0(r29)
  127  0000116c  8fa30004	lw	r3,4(r29)
  128  00001170  8fa40008	lw	r4,8(r29)
  129  00001174  8fa5000c	lw	r5,12(r29)
  130  00001178  8fdffff8	lw	r31,-8(r30)
  131  0000117c  001ee820	add	r29,r0,r30
  132  00001180  8fdefffc	lw	r30,-4(r30)
  133  00001184  4be00000	jr	r31
  134  00001188  54000000	nop
  135  0000118c          	.endproc _put_item_cb
  136  0000118c          	.data
  137  00003016          	.align 2
  138  00003018          	LC1_LF0:
  139  00003018  4342202d	.ascii "CB ----  checking %c from %d\n\000"
  139  0000301c  2d2d2d20	
  139  00003020  20636865	
  139  00003024  636b696e	
  139  00003028  67202563	
  139  0000302c  2066726f	
  139  00003030  6d202564	
  139  00003034  0a00    	
  140  00003036          	.text
  141  0000118c          	.align 2
  142  0000118c          	.proc _check_item_cb
  143  0000118c          	.global _check_item_cb
  144  0000118c          	_check_item_cb:
  145                      ;  Function 'check_item_cb'; 0 bytes of locals, 3 regs to save.
  146  0000118c  afbefffc	sw	-4(r29),r30; push fp
  147  00001190  001df020	add	r30,r0,r29; fp = sp
  148  00001194  afbffff8	sw	-8(r29),r31; push ret addr
  149  00001198  2fbd0018	subui	r29,r29,#24; alloc local storage
  150  0000119c  afa20000	sw	0(r29),r2
  151  000011a0  afa30004	sw	4(r29),r3
  152  000011a4  afa40008	sw	8(r29),r4
  153  000011a8  8fc30000	lw	r3,(r30)
  154  000011ac  8fc20004	lw	r2,4(r30)
  155  000011b0  8c410004	lw	r1,4(r2)
  156  000011b4  00410820	add	r1,r2,r1
  157  000011b8  80210008	lb	r1,8(r1)
  158  000011bc  a0610000	sb	(r3),r1
  159  000011c0  23bdfff0	addi	r29,r29,#-16
  160  000011c4  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  161  000011c8  24843018	addui	r4,r4,(LC1_LF0)&0xffff
  162  000011cc  afa40000	sw	(r29),r4
  163  000011d0  90610000	lbu	r1,(r3)
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  8c420004	lw	r2,4(r2)
  166  000011dc  afa20008	sw	8(r29),r2
  167  000011e0  0c000548	jal	_Printf
  168  000011e4  54000000	nop; not filled.
  169  000011e8  20010001	addi	r1,r0,#1
  170  000011ec  23bd0010	addi	r29,r29,#16
  171  000011f0  8fa20000	lw	r2,0(r29)
  172  000011f4  8fa30004	lw	r3,4(r29)
  173  000011f8  8fa40008	lw	r4,8(r29)
  174  000011fc  8fdffff8	lw	r31,-8(r30)
  175  00001200  001ee820	add	r29,r0,r30
  176  00001204  8fdefffc	lw	r30,-4(r30)
  177  00001208  4be00000	jr	r31
  178  0000120c  54000000	nop
  179  00001210          	.endproc _check_item_cb
  180  00001210          	.data
  181  00003036          	.align 2
  182  00003038          	LC2_LF0:
  183  00003038  4342202d	.ascii "CB ----  Got %c from %d\n\000"
  183  0000303c  2d2d2d20	
  183  00003040  20476f74	
  183  00003044  20256320	
  183  00003048  66726f6d	
  183  0000304c  2025640a	
  183  00003050  00      	
  184  00003051          	.text
  185  00001210          	.align 2
  186  00001210          	.proc _get_item_cb
  187  00001210          	.global _get_item_cb
  188  00001210          	_get_item_cb:
  189                      ;  Function 'get_item_cb'; 0 bytes of locals, 4 regs to save.
  190  00001210  afbefffc	sw	-4(r29),r30; push fp
  191  00001214  001df020	add	r30,r0,r29; fp = sp
  192  00001218  afbffff8	sw	-8(r29),r31; push ret addr
  193  0000121c  2fbd0018	subui	r29,r29,#24; alloc local storage
  194  00001220  afa20000	sw	0(r29),r2
  195  00001224  afa30004	sw	4(r29),r3
  196  00001228  afa40008	sw	8(r29),r4
  197  0000122c  afa5000c	sw	12(r29),r5
  198  00001230  8fc20000	lw	r2,(r30)
  199  00001234  8fc30004	lw	r3,4(r30)
  200  00001238  8c610004	lw	r1,4(r3)
  201  0000123c  00610820	add	r1,r3,r1
  202  00001240  80210008	lb	r1,8(r1)
  203  00001244  a0410000	sb	(r2),r1
  204  00001248  23bdfff0	addi	r29,r29,#-16
  205  0000124c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  206  00001250  24a53038	addui	r5,r5,(LC2_LF0)&0xffff
  207  00001254  afa50000	sw	(r29),r5
  208  00001258  90410000	lbu	r1,(r2)
  209  0000125c  afa10004	sw	4(r29),r1
  210  00001260  8c650004	lw	r5,4(r3)
  211  00001264  afa50008	sw	8(r29),r5
  212  00001268  0c0004c0	jal	_Printf
  213  0000126c  54000000	nop; not filled.
  214  00001270  8c610004	lw	r1,4(r3)
  215  00001274  20240001	addi	r4,r1,#1
  216  00001278  2001000a	addi	r1,r0,#10
  217  0000127c  00800035	movi2fp	f0,r4
  218  00001280  00200835	movi2fp	f1,r1
  219  00001284  0401000f	div	f0,f0,f1
  220  00001288  00001034	movfp2i	r2,f0
  221  0000128c  50410002	slli	r1,r2,#0x2
  222  00001290  00220820	add	r1,r1,r2
  223  00001294  50210001	slli	r1,r1,#0x1
  224  00001298  00810822	sub	r1,r4,r1
  225  0000129c  ac610004	sw	4(r3),r1
  226  000012a0  20010001	addi	r1,r0,#1
  227  000012a4  23bd0010	addi	r29,r29,#16
  228  000012a8  8fa20000	lw	r2,0(r29)
  229  000012ac  8fa30004	lw	r3,4(r29)
  230  000012b0  8fa40008	lw	r4,8(r29)
  231  000012b4  8fa5000c	lw	r5,12(r29)
  232  000012b8  8fdffff8	lw	r31,-8(r30)
  233  000012bc  001ee820	add	r29,r0,r30
  234  000012c0  8fdefffc	lw	r30,-4(r30)
  235  000012c4  4be00000	jr	r31
  236  000012c8  54000000	nop
  237  000012cc          	.endproc _get_item_cb
  238  000012cc          	.align 2
  239  000012cc          	.proc _is_full
  240  000012cc          	.global _is_full
  241  000012cc          	_is_full:
  242                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  243  000012cc  afbefffc	sw	-4(r29),r30; push fp
  244  000012d0  001df020	add	r30,r0,r29; fp = sp
  245  000012d4  afbffff8	sw	-8(r29),r31; push ret addr
  246  000012d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  247  000012dc  afa20000	sw	0(r29),r2
  248  000012e0  afa30004	sw	4(r29),r3
  249  000012e4  afa40008	sw	8(r29),r4
  250  000012e8  8fc40000	lw	r4,(r30)
  251  000012ec  8c810000	lw	r1,(r4)
  252  000012f0  20230001	addi	r3,r1,#1
  253  000012f4  2001000a	addi	r1,r0,#10
  254  000012f8  00600035	movi2fp	f0,r3
  255  000012fc  00200835	movi2fp	f1,r1
  256  00001300  0401000f	div	f0,f0,f1
  257  00001304  00001034	movfp2i	r2,f0
  258  00001308  50410002	slli	r1,r2,#0x2
  259  0000130c  00220820	add	r1,r1,r2
  260  00001310  50210001	slli	r1,r1,#0x1
  261  00001314  00611022	sub	r2,r3,r1
  262  00001318  8c810004	lw	r1,4(r4)
  263  0000131c  00411028	seq	r2,r2,r1
  264  00001320  20010001	addi	r1,r0,#1
  265  00001324  14400008	bnez	r2,L23_LF0
  266  00001328  54000000	nop; not filled.
  267  0000132c  20010000	addi	r1,r0,#0
  268  00001330          	L23_LF0:
  269  00001330  8fa20000	lw	r2,0(r29)
  270  00001334  8fa30004	lw	r3,4(r29)
  271  00001338  8fa40008	lw	r4,8(r29)
  272  0000133c  8fdffff8	lw	r31,-8(r30)
  273  00001340  001ee820	add	r29,r0,r30
  274  00001344  8fdefffc	lw	r30,-4(r30)
  275  00001348  4be00000	jr	r31
  276  0000134c  54000000	nop
  277  00001350          	.endproc _is_full
  278  00001350          	.align 2
  279  00001350          	.proc _is_empty
  280  00001350          	.global _is_empty
  281  00001350          	_is_empty:
  282                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  283  00001350  afbefffc	sw	-4(r29),r30; push fp
  284  00001354  001df020	add	r30,r0,r29; fp = sp
  285  00001358  afbffff8	sw	-8(r29),r31; push ret addr
  286  0000135c  2fbd0010	subui	r29,r29,#16; alloc local storage
  287  00001360  afa20000	sw	0(r29),r2
  288  00001364  8fc10000	lw	r1,(r30)
  289  00001368  8c220000	lw	r2,(r1)
  290  0000136c  8c210004	lw	r1,4(r1)
  291  00001370  00411028	seq	r2,r2,r1
  292  00001374  20010001	addi	r1,r0,#1
  293  00001378  14400008	bnez	r2,L30_LF0
  294  0000137c  54000000	nop; not filled.
  295  00001380  20010000	addi	r1,r0,#0
  296  00001384          	L30_LF0:
  297  00001384  8fa20000	lw	r2,0(r29)
  298  00001388  8fdffff8	lw	r31,-8(r30)
  299  0000138c  001ee820	add	r29,r0,r30
  300  00001390  8fdefffc	lw	r30,-4(r30)
  301  00001394  4be00000	jr	r31
  302  00001398  54000000	nop
  303  0000139c          	.endproc _is_empty
  304  0000139c          	.data
  305  00003051          	.align 2
  306  00003054          	LC3_LF0:
  307  00003054  43697263	.ascii "Circular Buffer Initiated\n\000"
  307  00003058  756c6172	
  307  0000305c  20427566	
  307  00003060  66657220	
  307  00003064  496e6974	
  307  00003068  69617465	
  307  0000306c  640a00  	
  308  0000306f          	.text
  309  0000139c          	.align 2
  310  0000139c          	.proc _init_cb
  311  0000139c          	.global _init_cb
  312  0000139c          	_init_cb:
  313                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  314  0000139c  afbefffc	sw	-4(r29),r30; push fp
  315  000013a0  001df020	add	r30,r0,r29; fp = sp
  316  000013a4  afbffff8	sw	-8(r29),r31; push ret addr
  317  000013a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  318  000013ac  afa20000	sw	0(r29),r2
  319  000013b0  8fc10000	lw	r1,(r30)
  320  000013b4  20020000	addi	r2,r0,#0
  321  000013b8  ac220000	sw	(r1),r2
  322  000013bc  ac220004	sw	4(r1),r2
  323  000013c0  23bdfff8	addi	r29,r29,#-8
  324  000013c4  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
  325  000013c8  24423054	addui	r2,r2,(LC3_LF0)&0xffff
  326  000013cc  afa20000	sw	(r29),r2
  327  000013d0  0c000358	jal	_Printf
  328  000013d4  54000000	nop; not filled.
  329  000013d8  23bd0008	addi	r29,r29,#8
  330  000013dc  8fa20000	lw	r2,0(r29)
  331  000013e0  8fdffff8	lw	r31,-8(r30)
  332  000013e4  001ee820	add	r29,r0,r30
  333  000013e8  8fdefffc	lw	r30,-4(r30)
  334  000013ec  4be00000	jr	r31
  335  000013f0  54000000	nop
  336  000013f4          	.endproc _init_cb
  337  000013f4          	.data
  338  0000306f          	.align 2
  339  00003070          	LC4_LF0:
  340  00003070  20436972	.ascii " Circular Buffer =>  \000"
  340  00003074  63756c61	
  340  00003078  72204275	
  340  0000307c  66666572	
  340  00003080  203d3e20	
  340  00003084  2000    	
  341  00003086          	.align 2
  342  00003088          	LC5_LF0:
  343  00003088  256300  	.ascii "%c\000"
  344  0000308b          	.align 2
  345  0000308c          	LC6_LF0:
  346  0000308c  0a00    	.ascii "\n\000"
  347  0000308e          	.text
  348  000013f4          	.align 2
  349  000013f4          	.proc _Print_cb
  350  000013f4          	.global _Print_cb
  351  000013f4          	_Print_cb:
  352                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  353  000013f4  afbefffc	sw	-4(r29),r30; push fp
  354  000013f8  001df020	add	r30,r0,r29; fp = sp
  355  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  356  00001400  2fbd0020	subui	r29,r29,#32; alloc local storage
  357  00001404  afa20000	sw	0(r29),r2
  358  00001408  afa30004	sw	4(r29),r3
  359  0000140c  afa40008	sw	8(r29),r4
  360  00001410  afa5000c	sw	12(r29),r5
  361  00001414  afa60010	sw	16(r29),r6
  362  00001418  afa70014	sw	20(r29),r7
  363  0000141c  8fc50000	lw	r5,(r30)
  364  00001420  23bdfff8	addi	r29,r29,#-8
  365  00001424  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  366  00001428  24e73070	addui	r7,r7,(LC4_LF0)&0xffff
  367  0000142c  afa70000	sw	(r29),r7
  368  00001430  0c0002f8	jal	_Printf
  369  00001434  54000000	nop; not filled.
  370  00001438  20040000	addi	r4,r0,#0
  371  0000143c  23bd0008	addi	r29,r29,#8
  372  00001440  2006000a	addi	r6,r0,#10
  373  00001444          	L45_LF0:
  374  00001444  23bdfff8	addi	r29,r29,#-8
  375  00001448  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  376  0000144c  24e73088	addui	r7,r7,(LC5_LF0)&0xffff
  377  00001450  afa70000	sw	(r29),r7
  378  00001454  8ca10004	lw	r1,4(r5)
  379  00001458  00811820	add	r3,r4,r1
  380  0000145c  00600035	movi2fp	f0,r3
  381  00001460  00c00835	movi2fp	f1,r6
  382  00001464  0401000f	div	f0,f0,f1
  383  00001468  00001034	movfp2i	r2,f0
  384  0000146c  50410002	slli	r1,r2,#0x2
  385  00001470  00220820	add	r1,r1,r2
  386  00001474  50210001	slli	r1,r1,#0x1
  387  00001478  00610822	sub	r1,r3,r1
  388  0000147c  00a10820	add	r1,r5,r1
  389  00001480  90210008	lbu	r1,8(r1)
  390  00001484  afa10004	sw	4(r29),r1
  391  00001488  0c0002a0	jal	_Printf
  392  0000148c  54000000	nop; not filled.
  393  00001490  23bd0008	addi	r29,r29,#8
  394  00001494  20840001	addi	r4,r4,#1
  395  00001498  70810009	slei	r1,r4,#9
  396  0000149c  1420ffa4	bnez	r1,L45_LF0
  397  000014a0  54000000	nop; not filled.
  398  000014a4  23bdfff8	addi	r29,r29,#-8
  399  000014a8  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  400  000014ac  24e7308c	addui	r7,r7,(LC6_LF0)&0xffff
  401  000014b0  afa70000	sw	(r29),r7
  402  000014b4  0c000274	jal	_Printf
  403  000014b8  54000000	nop; not filled.
  404  000014bc  23bd0008	addi	r29,r29,#8
  405  000014c0  8fa20000	lw	r2,0(r29)
  406  000014c4  8fa30004	lw	r3,4(r29)
  407  000014c8  8fa40008	lw	r4,8(r29)
  408  000014cc  8fa5000c	lw	r5,12(r29)
  409  000014d0  8fa60010	lw	r6,16(r29)
  410  000014d4  8fa70014	lw	r7,20(r29)
  411  000014d8  8fdffff8	lw	r31,-8(r30)
  412  000014dc  001ee820	add	r29,r0,r30
  413  000014e0  8fdefffc	lw	r30,-4(r30)
  414  000014e4  4be00000	jr	r31
  415  000014e8  54000000	nop
  416  000014ec          	.endproc _Print_cb
  417  000014ec          	.data
  418  0000308e          	.align 2
  419  00003090          	LC7_LF0:
  420  00003090  55736167	.ascii "Usage: \000"
  420  00003094  653a2000	
  421  00003098          	.align 2
  422  00003098          	LC8_LF0:
  423  00003098  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
  423  0000309c  6e646c65	
  423  000030a0  5f746f5f	
  423  000030a4  73686172	
  423  000030a8  65645f6d	
  423  000030ac  656d6f72	
  423  000030b0  795f7061	
  423  000030b4  67653e20	
  423  000030b8  3c68616e	
  423  000030bc  646c655f	
  423  000030c0  746f5f70	
  423  000030c4  6167655f	
  423  000030c8  6d617070	
  423  000030cc  65645f73	
  423  000030d0  656d6170	
  423  000030d4  686f7265	
  423  000030d8  3e203c68	
  423  000030dc  616e    	
  424  000030de  646c6520	.ascii "dle to lock>\n\000"
  424  000030e2  746f206c	
  424  000030e6  6f636b3e	
  424  000030ea  0a00    	
  425  000030ec          	.align 2
  426  000030ec          	LC9_LF0:
  427  000030ec  416e204f	.ascii "An O2 molecule is created\n\000"
  427  000030f0  32206d6f	
  427  000030f4  6c656375	
  427  000030f8  6c652069	
  427  000030fc  73206372	
  427  00003100  65617465	
  427  00003104  640a00  	
  428  00003107          	.align 2
  429  00003108          	LC10_LF0:
  430  00003108  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  430  0000310c  73656d61	
  430  00003110  70686f72	
  430  00003114  6520735f	
  430  00003118  70726f63	
  430  0000311c  735f636f	
  430  00003120  6d706c65	
  430  00003124  74656420	
  430  00003128  28256429	
  430  0000312c  20696e20	
  430  00003130  00      	
  431  00003131          	.align 2
  432  00003134          	LC11_LF0:
  433  00003134  2c206578	.ascii ", exiting...\n\000"
  433  00003138  6974696e	
  433  0000313c  672e2e2e	
  433  00003140  0a00    	
  434  00003142          	.text
  435  000014ec          	.align 2
  436  000014ec          	.proc _main
  437  000014ec          	.global _main
  438  000014ec          	_main:
  439                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  440  000014ec  afbefffc	sw	-4(r29),r30; push fp
  441  000014f0  001df020	add	r30,r0,r29; fp = sp
  442  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  443  000014f8  2fbd0008	subui	r29,r29,#8; alloc local storage
  444  000014fc  8fc20000	lw	r2,(r30)
  445  00001500  8fc70004	lw	r7,4(r30)
  446  00001504  0c001020	jal	___main
  447  00001508  54000000	nop; not filled.
  448  0000150c  64410005	snei	r1,r2,#5
  449  00001510  1020004c	beqz	r1,L48_LF0
  450  00001514  54000000	nop; not filled.
  451  00001518  23bdfff8	addi	r29,r29,#-8
  452  0000151c  3c090000	lhi	r9,((LC7_LF0)>>16)&0xffff
  453  00001520  25293090	addui	r9,r9,(LC7_LF0)&0xffff
  454  00001524  afa90000	sw	(r29),r9
  455  00001528  0c000200	jal	_Printf
  456  0000152c  54000000	nop; not filled.
  457  00001530  8ce90000	lw	r9,(r7)
  458  00001534  afa90000	sw	(r29),r9
  459  00001538  0c0001f0	jal	_Printf
  460  0000153c  54000000	nop; not filled.
  461  00001540  3c090000	lhi	r9,((LC8_LF0)>>16)&0xffff
  462  00001544  25293098	addui	r9,r9,(LC8_LF0)&0xffff
  463  00001548  afa90000	sw	(r29),r9
  464  0000154c  0c0001dc	jal	_Printf
  465  00001550  54000000	nop; not filled.
  466  00001554  0c00027c	jal	_Exit
  467  00001558  54000000	nop; not filled.
  468  0000155c  23bd0008	addi	r29,r29,#8
  469  00001560          	L48_LF0:
  470  00001560  23bdfff0	addi	r29,r29,#-16
  471  00001564  8ce90004	lw	r9,4(r7)
  472  00001568  afa90000	sw	(r29),r9
  473  0000156c  20090000	addi	r9,r0,#0
  474  00001570  afa90004	sw	4(r29),r9
  475  00001574  2009000a	addi	r9,r0,#10
  476  00001578  afa90008	sw	8(r29),r9
  477  0000157c  0c000b00	jal	_dstrtol
  478  00001580  54000000	nop; not filled.
  479  00001584  00011020	add	r2,r0,r1
  480  00001588  8ce90010	lw	r9,16(r7)
  481  0000158c  afa90000	sw	(r29),r9
  482  00001590  20090000	addi	r9,r0,#0
  483  00001594  afa90004	sw	4(r29),r9
  484  00001598  2009000a	addi	r9,r0,#10
  485  0000159c  afa90008	sw	8(r29),r9
  486  000015a0  0c000adc	jal	_dstrtol
  487  000015a4  54000000	nop; not filled.
  488  000015a8  00014020	add	r8,r0,r1
  489  000015ac  8ce90008	lw	r9,8(r7)
  490  000015b0  afa90000	sw	(r29),r9
  491  000015b4  20090000	addi	r9,r0,#0
  492  000015b8  afa90004	sw	4(r29),r9
  493  000015bc  2009000a	addi	r9,r0,#10
  494  000015c0  afa90008	sw	8(r29),r9
  495  000015c4  0c000ab8	jal	_dstrtol
  496  000015c8  54000000	nop; not filled.
  497  000015cc  00012020	add	r4,r0,r1
  498  000015d0  8ce9000c	lw	r9,12(r7)
  499  000015d4  afa90000	sw	(r29),r9
  500  000015d8  20090000	addi	r9,r0,#0
  501  000015dc  afa90004	sw	4(r29),r9
  502  000015e0  2009000a	addi	r9,r0,#10
  503  000015e4  afa90008	sw	8(r29),r9
  504  000015e8  0c000a94	jal	_dstrtol
  505  000015ec  54000000	nop; not filled.
  506  000015f0  00013020	add	r6,r0,r1
  507  000015f4  20030000	addi	r3,r0,#0
  508  000015f8  23bd0010	addi	r29,r29,#16
  509  000015fc  58420001	srli	r2,r2,#0x1
  510  00001600  0062082a	sltu	r1,r3,r2
  511  00001604  10200068	beqz	r1,L50_LF0
  512  00001608  54000000	nop; not filled.
  513  0000160c  00022820	add	r5,r0,r2
  514  00001610          	L51_LF0:
  515  00001610  20020000	addi	r2,r0,#0
  516  00001614          	L55_LF0:
  517  00001614  23bdfff8	addi	r29,r29,#-8
  518  00001618  afa40000	sw	(r29),r4
  519  0000161c  0c000154	jal	_sem_wait
  520  00001620  54000000	nop; not filled.
  521  00001624  23bd0008	addi	r29,r29,#8
  522  00001628  20420001	addi	r2,r2,#1
  523  0000162c  70410001	slei	r1,r2,#1
  524  00001630  1420ffe0	bnez	r1,L55_LF0
  525  00001634  54000000	nop; not filled.
  526  00001638  23bdfff8	addi	r29,r29,#-8
  527  0000163c  3c090000	lhi	r9,((LC9_LF0)>>16)&0xffff
  528  00001640  252930ec	addui	r9,r9,(LC9_LF0)&0xffff
  529  00001644  afa90000	sw	(r29),r9
  530  00001648  0c0000e0	jal	_Printf
  531  0000164c  54000000	nop; not filled.
  532  00001650  afa60000	sw	(r29),r6
  533  00001654  0c000128	jal	_sem_signal
  534  00001658  54000000	nop; not filled.
  535  0000165c  20630001	addi	r3,r3,#1
  536  00001660  23bd0008	addi	r29,r29,#8
  537  00001664  0065082a	sltu	r1,r3,r5
  538  00001668  1420ffa4	bnez	r1,L51_LF0
  539  0000166c  54000000	nop; not filled.
  540  00001670          	L50_LF0:
  541  00001670  23bdfff8	addi	r29,r29,#-8
  542  00001674  afa80000	sw	(r29),r8
  543  00001678  0c000104	jal	_sem_signal
  544  0000167c  54000000	nop; not filled.
  545  00001680  23bd0008	addi	r29,r29,#8
  546  00001684  64210001	snei	r1,r1,#1
  547  00001688  10200050	beqz	r1,L58_LF0
  548  0000168c  54000000	nop; not filled.
  549  00001690  23bdfff8	addi	r29,r29,#-8
  550  00001694  3c090000	lhi	r9,((LC10_LF0)>>16)&0xffff
  551  00001698  25293108	addui	r9,r9,(LC10_LF0)&0xffff
  552  0000169c  afa90000	sw	(r29),r9
  553  000016a0  afa80004	sw	4(r29),r8
  554  000016a4  0c000084	jal	_Printf
  555  000016a8  54000000	nop; not filled.
  556  000016ac  8ce70000	lw	r7,(r7)
  557  000016b0  afa70000	sw	(r29),r7
  558  000016b4  0c000074	jal	_Printf
  559  000016b8  54000000	nop; not filled.
  560  000016bc  3c090000	lhi	r9,((LC11_LF0)>>16)&0xffff
  561  000016c0  25293134	addui	r9,r9,(LC11_LF0)&0xffff
  562  000016c4  afa90000	sw	(r29),r9
  563  000016c8  0c000060	jal	_Printf
  564  000016cc  54000000	nop; not filled.
  565  000016d0  0c000100	jal	_Exit
  566  000016d4  54000000	nop; not filled.
  567  000016d8  23bd0008	addi	r29,r29,#8
  568  000016dc          	L58_LF0:
  569  000016dc  0c000e3c	jal	_exit
  570  000016e0  54000000	nop
  571  000016e4          	.endproc _main
  572                      ;;;
  573                      ;;; Stub functions for DLX traps.
  574                      ;;;
  575                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  576                      ;;;
  577                      ;;; The traps such as Open and Close
  578                      ;;; (note the capital letters) are for use by user programs.  The traps
  579                      ;;; with names such as open and close (lower case) are for use by the OS.
  580                      ;;;
  583  000016e4          	.align 2
  585                      ;;; The following are the traps to be used by user-level programs
  586                      ;;;
  588  000016e4          	.align 2
  589  000016e4          	.proc _Open
  590  000016e4          	.global _Open
  591  000016e4          	_Open:
  592                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  593                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  594                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  595  000016e4  44000213	trap	#0x213
  596  000016e8  4be00000	jr	r31
  597  000016ec  54000000	nop
  598  000016f0          	.endproc _Open
  600  000016f0          	.proc _Close
  601  000016f0          	.global _Close
  602  000016f0          	_Close:
  603  000016f0  44000214	trap	#0x214
  604  000016f4  4be00000	jr	r31
  605  000016f8  54000000	nop
  606  000016fc          	.endproc _Close
  608  000016fc          	.proc _Read
  609  000016fc          	.global _Read
  610  000016fc          	_Read:
  611  000016fc  44000210	trap	#0x210
  612  00001700  4be00000	jr	r31
  613  00001704  54000000	nop
  614  00001708          	.endproc _Read
  616  00001708          	.proc _Write
  617  00001708          	.global _Write
  618  00001708          	_Write:
  619  00001708  44000211	trap	#0x211
  620  0000170c  4be00000	jr	r31
  621  00001710  54000000	nop
  622  00001714          	.endproc _Write
  624  00001714          	.proc _Lseek
  625  00001714          	.global _Lseek
  626  00001714          	_Lseek:
  627  00001714  44000212	trap	#0x212
  628  00001718  4be00000	jr	r31
  629  0000171c  54000000	nop
  630  00001720          	.endproc _Lseek
  632  00001720          	.proc _Putchar
  633  00001720          	.global _Putchar
  634  00001720          	_Putchar:
  635  00001720  44000280	trap	#0x280
  636  00001724  4be00000	jr	r31
  637  00001728  54000000	nop
  638  0000172c          	.endproc _Putchar
  640  0000172c          	.proc _Printf
  641  0000172c          	.global _Printf
  642  0000172c          	_Printf:
  643  0000172c  44000201	trap	#0x201
  644  00001730  4be00000	jr	r31
  645  00001734  54000000	nop
  646  00001738          	.endproc _Printf
  648  00001738          	.proc _Getpid
  649  00001738          	.global _Getpid
  650  00001738          	_Getpid:
  651  00001738  44000431	trap	#0x431
  652  0000173c  4be00000	jr	r31
  653  00001740  54000000	nop
  654  00001744          	.endproc _Getpid
  656  00001744          	.proc _process_create
  657  00001744          	.global _process_create
  658  00001744          	_process_create:
  659  00001744  44000432	trap	#0x432
  660  00001748  4be00000	jr	r31
  661  0000174c  54000000	nop
  662  00001750          	.endproc _process_create
  664  00001750          	.proc _shmget
  665  00001750          	.global _shmget
  666  00001750          	_shmget:
  667  00001750  44000440	trap	#0x440
  668  00001754  4be00000	jr	r31
  669  00001758  54000000	nop
  670  0000175c          	.endproc _shmget
  672  0000175c          	.proc _shmat
  673  0000175c          	.global _shmat
  674  0000175c          	_shmat:
  675  0000175c  44000441	trap	#0x441
  676  00001760  4be00000	jr	r31
  677  00001764  54000000	nop
  678  00001768          	.endproc _shmat
  680  00001768          	.proc _sem_create
  681  00001768          	.global _sem_create
  682  00001768          	_sem_create:
  683  00001768  44000450	trap	#0x450
  684  0000176c  4be00000	jr	r31
  685  00001770  54000000	nop
  686  00001774          	.endproc _sem_create
  688  00001774          	.proc _sem_wait
  689  00001774          	.global _sem_wait
  690  00001774          	_sem_wait:
  691  00001774  44000451	trap	#0x451
  692  00001778  4be00000	jr	r31
  693  0000177c  54000000	nop
  694  00001780          	.endproc _sem_wait
  696  00001780          	.proc _sem_signal
  697  00001780          	.global _sem_signal
  698  00001780          	_sem_signal:
  699  00001780  44000452	trap	#0x452
  700  00001784  4be00000	jr	r31
  701  00001788  54000000	nop
  702  0000178c          	.endproc _sem_signal
  704  0000178c          	.proc _lock_create
  705  0000178c          	.global _lock_create
  706  0000178c          	_lock_create:
  707  0000178c  44000453	trap	#0x453
  708  00001790  4be00000	jr	r31
  709  00001794  54000000	nop
  710  00001798          	.endproc _lock_create
  712  00001798          	.proc _lock_acquire
  713  00001798          	.global _lock_acquire
  714  00001798          	_lock_acquire:
  715  00001798  44000454	trap	#0x454
  716  0000179c  4be00000	jr	r31
  717  000017a0  54000000	nop
  718  000017a4          	.endproc _lock_acquire
  720  000017a4          	.proc _lock_release
  721  000017a4          	.global _lock_release
  722  000017a4          	_lock_release:
  723  000017a4  44000455	trap	#0x455
  724  000017a8  4be00000	jr	r31
  725  000017ac  54000000	nop
  726  000017b0          	.endproc _lock_release
  728  000017b0          	.proc _cond_create
  729  000017b0          	.global _cond_create
  730  000017b0          	_cond_create:
  731  000017b0  44000456	trap	#0x456
  732  000017b4  4be00000	jr	r31
  733  000017b8  54000000	nop
  734  000017bc          	.endproc _cond_create
  736  000017bc          	.proc _cond_wait
  737  000017bc          	.global _cond_wait
  738  000017bc          	_cond_wait:
  739  000017bc  44000457	trap	#0x457
  740  000017c0  4be00000	jr	r31
  741  000017c4  54000000	nop
  742  000017c8          	.endproc _cond_wait
  744  000017c8          	.proc _cond_signal
  745  000017c8          	.global _cond_signal
  746  000017c8          	_cond_signal:
  747  000017c8  44000458	trap	#0x458
  748  000017cc  4be00000	jr	r31
  749  000017d0  54000000	nop
  750  000017d4          	.endproc _cond_signal
  752  000017d4          	.proc _Exit
  753  000017d4          	.global _Exit
  754  000017d4          	_Exit:
  755  000017d4  44000500	trap	#0x500
  756  000017d8  4be00000	jr	r31
  757  000017dc  54000000	nop
  758  000017e0          	.endproc _Exit
  759                      ; Compiled by GCC
  761  000017e0          	.align 2
  762  000017e0          	.proc _isspace
  763  000017e0          	.global _isspace
  764  000017e0          	_isspace:
  765                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  766  000017e0  afbefffc	sw	-4(r29),r30; push fp
  767  000017e4  001df020	add	r30,r0,r29; fp = sp
  768  000017e8  afbffff8	sw	-8(r29),r31; push ret addr
  769  000017ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  770  000017f0  afa20000	sw	0(r29),r2
  771  000017f4  afa30004	sw	4(r29),r3
  772  000017f8  afa40008	sw	8(r29),r4
  773  000017fc  83c20003	lb	r2,3(r30)
  774  00001800  20010000	addi	r1,r0,#0
  775  00001804  304300ff	andi	r3,r2,#0x00ff
  776  00001808  60640020	seqi	r4,r3,#32
  777  0000180c  1480002c	bnez	r4,L3_LF2
  778  00001810  54000000	nop; delay slot nop
  779  00001814  304300ff	andi	r3,r2,#0x00ff
  780  00001818  60640009	seqi	r4,r3,#9
  781  0000181c  1480001c	bnez	r4,L3_LF2
  782  00001820  54000000	nop; delay slot nop
  783  00001824  304300ff	andi	r3,r2,#0x00ff
  784  00001828  6064000a	seqi	r4,r3,#10
  785  0000182c  1480000c	bnez	r4,L3_LF2
  786  00001830  54000000	nop; delay slot nop
  787  00001834  08000008	j	L2_LF2
  788  00001838  54000000	nop; delay slot nop
  789  0000183c          	L3_LF2:
  790  0000183c  20010001	addi	r1,r0,#1
  791  00001840          	L2_LF2:
  792  00001840  08000004	j	L1_LF2
  793  00001844  54000000	nop; delay slot nop
  794  00001848          	L1_LF2:
  795  00001848  8fa20000	lw	r2,0(r29)
  796  0000184c  8fa30004	lw	r3,4(r29)
  797  00001850  8fa40008	lw	r4,8(r29)
  798  00001854  8fdffff8	lw	r31,-8(r30)
  799  00001858  001ee820	add	r29,r0,r30
  800  0000185c  8fdefffc	lw	r30,-4(r30)
  801  00001860  4be00000	jr	r31
  802  00001864  54000000	nop
  803  00001868          	.endproc _isspace
  804  00001868          	.align 2
  805  00001868          	.proc _isxdigit
  806  00001868          	.global _isxdigit
  807  00001868          	_isxdigit:
  808                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  809  00001868  afbefffc	sw	-4(r29),r30; push fp
  810  0000186c  001df020	add	r30,r0,r29; fp = sp
  811  00001870  afbffff8	sw	-8(r29),r31; push ret addr
  812  00001874  2fbd0018	subui	r29,r29,#24; alloc local storage
  813  00001878  afa20000	sw	0(r29),r2
  814  0000187c  afa30004	sw	4(r29),r3
  815  00001880  afa40008	sw	8(r29),r4
  816  00001884  83c20003	lb	r2,3(r30)
  817  00001888  20010000	addi	r1,r0,#0
  818  0000188c  304300ff	andi	r3,r2,#0x00ff
  819  00001890  6c64002f	sgtui	r4,r3,#47
  820  00001894  1080001c	beqz	r4,L7_LF2
  821  00001898  54000000	nop; delay slot nop
  822  0000189c  304300ff	andi	r3,r2,#0x00ff
  823  000018a0  70640039	sleui	r4,r3,#57
  824  000018a4  1480005c	bnez	r4,L6_LF2
  825  000018a8  54000000	nop; delay slot nop
  826  000018ac  08000004	j	L7_LF2
  827  000018b0  54000000	nop; delay slot nop
  828  000018b4          	L7_LF2:
  829  000018b4  304300ff	andi	r3,r2,#0x00ff
  830  000018b8  6c640060	sgtui	r4,r3,#96
  831  000018bc  1080001c	beqz	r4,L8_LF2
  832  000018c0  54000000	nop; delay slot nop
  833  000018c4  304300ff	andi	r3,r2,#0x00ff
  834  000018c8  70640066	sleui	r4,r3,#102
  835  000018cc  14800034	bnez	r4,L6_LF2
  836  000018d0  54000000	nop; delay slot nop
  837  000018d4  08000004	j	L8_LF2
  838  000018d8  54000000	nop; delay slot nop
  839  000018dc          	L8_LF2:
  840  000018dc  304300ff	andi	r3,r2,#0x00ff
  841  000018e0  6c640040	sgtui	r4,r3,#64
  842  000018e4  10800020	beqz	r4,L5_LF2
  843  000018e8  54000000	nop; delay slot nop
  844  000018ec  304300ff	andi	r3,r2,#0x00ff
  845  000018f0  70640041	sleui	r4,r3,#65
  846  000018f4  1480000c	bnez	r4,L6_LF2
  847  000018f8  54000000	nop; delay slot nop
  848  000018fc  08000008	j	L5_LF2
  849  00001900  54000000	nop; delay slot nop
  850  00001904          	L6_LF2:
  851  00001904  20010001	addi	r1,r0,#1
  852  00001908          	L5_LF2:
  853  00001908  08000004	j	L4_LF2
  854  0000190c  54000000	nop; delay slot nop
  855  00001910          	L4_LF2:
  856  00001910  8fa20000	lw	r2,0(r29)
  857  00001914  8fa30004	lw	r3,4(r29)
  858  00001918  8fa40008	lw	r4,8(r29)
  859  0000191c  8fdffff8	lw	r31,-8(r30)
  860  00001920  001ee820	add	r29,r0,r30
  861  00001924  8fdefffc	lw	r30,-4(r30)
  862  00001928  4be00000	jr	r31
  863  0000192c  54000000	nop
  864  00001930          	.endproc _isxdigit
  865  00001930          	.align 2
  866  00001930          	.proc _dstrcpy
  867  00001930          	.global _dstrcpy
  868  00001930          	_dstrcpy:
  869                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  870  00001930  afbefffc	sw	-4(r29),r30; push fp
  871  00001934  001df020	add	r30,r0,r29; fp = sp
  872  00001938  afbffff8	sw	-8(r29),r31; push ret addr
  873  0000193c  2fbd0018	subui	r29,r29,#24; alloc local storage
  874  00001940  afa20000	sw	0(r29),r2
  875  00001944  afa30004	sw	4(r29),r3
  876  00001948  8fc10000	lw	r1,(r30)
  877  0000194c  afc1fff4	sw	-12(r30),r1
  878  00001950          	L10_LF2:
  879  00001950  8fc10000	lw	r1,(r30)
  880  00001954  20220001	addi	r2,r1,#1
  881  00001958  afc20000	sw	(r30),r2
  882  0000195c  8fc20004	lw	r2,4(r30)
  883  00001960  20430001	addi	r3,r2,#1
  884  00001964  afc30004	sw	4(r30),r3
  885  00001968  80420000	lb	r2,(r2)
  886  0000196c  a0220000	sb	(r1),r2
  887  00001970  a3c2fff3	sb	-13(r30),r2
  888  00001974          	L12_LF2:
  889  00001974  93c1fff3	lbu	r1,-13(r30)
  890  00001978  64220000	snei	r2,r1,#0
  891  0000197c  1440000c	bnez	r2,L13_LF2
  892  00001980  54000000	nop; delay slot nop
  893  00001984  0800000c	j	L11_LF2
  894  00001988  54000000	nop; delay slot nop
  895  0000198c          	L13_LF2:
  896  0000198c  0bffffc0	j	L10_LF2
  897  00001990  54000000	nop; delay slot nop
  898  00001994          	L11_LF2:
  899  00001994  8fc1fff4	lw	r1,-12(r30)
  900  00001998  08000004	j	L9_LF2
  901  0000199c  54000000	nop; delay slot nop
  902  000019a0          	L9_LF2:
  903  000019a0  8fa20000	lw	r2,0(r29)
  904  000019a4  8fa30004	lw	r3,4(r29)
  905  000019a8  8fdffff8	lw	r31,-8(r30)
  906  000019ac  001ee820	add	r29,r0,r30
  907  000019b0  8fdefffc	lw	r30,-4(r30)
  908  000019b4  4be00000	jr	r31
  909  000019b8  54000000	nop
  910  000019bc          	.endproc _dstrcpy
  911  000019bc          	.align 2
  912  000019bc          	.proc _dstrncpy
  913  000019bc          	.global _dstrncpy
  914  000019bc          	_dstrncpy:
  915                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  916  000019bc  afbefffc	sw	-4(r29),r30; push fp
  917  000019c0  001df020	add	r30,r0,r29; fp = sp
  918  000019c4  afbffff8	sw	-8(r29),r31; push ret addr
  919  000019c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  920  000019cc  afa20000	sw	0(r29),r2
  921  000019d0  afa30004	sw	4(r29),r3
  922  000019d4  8fc10000	lw	r1,(r30)
  923  000019d8  afc1fff4	sw	-12(r30),r1
  924  000019dc          	L15_LF2:
  925  000019dc  8fc10008	lw	r1,8(r30)
  926  000019e0  2022ffff	addi	r2,r1,#-1
  927  000019e4  afc20008	sw	8(r30),r2
  928  000019e8  70210000	slei	r1,r1,#0
  929  000019ec  1020000c	beqz	r1,L18_LF2
  930  000019f0  54000000	nop; delay slot nop
  931  000019f4  08000048	j	L16_LF2
  932  000019f8  54000000	nop; delay slot nop
  933  000019fc          	L18_LF2:
  934  000019fc  8fc10000	lw	r1,(r30)
  935  00001a00  20220001	addi	r2,r1,#1
  936  00001a04  afc20000	sw	(r30),r2
  937  00001a08  8fc20004	lw	r2,4(r30)
  938  00001a0c  20430001	addi	r3,r2,#1
  939  00001a10  afc30004	sw	4(r30),r3
  940  00001a14  80420000	lb	r2,(r2)
  941  00001a18  a0220000	sb	(r1),r2
  942  00001a1c  a3c2fff3	sb	-13(r30),r2
  943  00001a20          	L17_LF2:
  944  00001a20  93c1fff3	lbu	r1,-13(r30)
  945  00001a24  64220000	snei	r2,r1,#0
  946  00001a28  1440000c	bnez	r2,L19_LF2
  947  00001a2c  54000000	nop; delay slot nop
  948  00001a30  0800000c	j	L16_LF2
  949  00001a34  54000000	nop; delay slot nop
  950  00001a38          	L19_LF2:
  951  00001a38  0bffffa0	j	L15_LF2
  952  00001a3c  54000000	nop; delay slot nop
  953  00001a40          	L16_LF2:
  954  00001a40  8fc1fff4	lw	r1,-12(r30)
  955  00001a44  08000004	j	L14_LF2
  956  00001a48  54000000	nop; delay slot nop
  957  00001a4c          	L14_LF2:
  958  00001a4c  8fa20000	lw	r2,0(r29)
  959  00001a50  8fa30004	lw	r3,4(r29)
  960  00001a54  8fdffff8	lw	r31,-8(r30)
  961  00001a58  001ee820	add	r29,r0,r30
  962  00001a5c  8fdefffc	lw	r30,-4(r30)
  963  00001a60  4be00000	jr	r31
  964  00001a64  54000000	nop
  965  00001a68          	.endproc _dstrncpy
  966  00001a68          	.align 2
  967  00001a68          	.proc _dstrcat
  968  00001a68          	.global _dstrcat
  969  00001a68          	_dstrcat:
  970                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  971  00001a68  afbefffc	sw	-4(r29),r30; push fp
  972  00001a6c  001df020	add	r30,r0,r29; fp = sp
  973  00001a70  afbffff8	sw	-8(r29),r31; push ret addr
  974  00001a74  2fbd0018	subui	r29,r29,#24; alloc local storage
  975  00001a78  afa20000	sw	0(r29),r2
  976  00001a7c  8fc10000	lw	r1,(r30)
  977  00001a80  afc1fff4	sw	-12(r30),r1
  978  00001a84          	L21_LF2:
  979  00001a84  8fc10000	lw	r1,(r30)
  980  00001a88  90220000	lbu	r2,(r1)
  981  00001a8c  64410000	snei	r1,r2,#0
  982  00001a90  1420000c	bnez	r1,L23_LF2
  983  00001a94  54000000	nop; delay slot nop
  984  00001a98  0800001c	j	L22_LF2
  985  00001a9c  54000000	nop; delay slot nop
  986  00001aa0          	L23_LF2:
  987  00001aa0  8fc20000	lw	r2,(r30)
  988  00001aa4  20410001	addi	r1,r2,#1
  989  00001aa8  00011020	add	r2,r0,r1
  990  00001aac  afc20000	sw	(r30),r2
  991  00001ab0  0bffffd0	j	L21_LF2
  992  00001ab4  54000000	nop; delay slot nop
  993  00001ab8          	L22_LF2:
  994  00001ab8  23bdfff8	addi	r29,r29,#-8
  995  00001abc  001d0820	add	r1,r0,r29
  996  00001ac0  8fc20000	lw	r2,(r30)
  997  00001ac4  ac220000	sw	(r1),r2
  998  00001ac8  8fc20004	lw	r2,4(r30)
  999  00001acc  ac220004	sw	4(r1),r2
 1000  00001ad0  0ffffe5c	jal	_dstrcpy
 1001  00001ad4  54000000	nop; delay slot nop
 1002  00001ad8  23bd0008	addi	r29,r29,#8
 1003  00001adc  8fc1fff4	lw	r1,-12(r30)
 1004  00001ae0  08000004	j	L20_LF2
 1005  00001ae4  54000000	nop; delay slot nop
 1006  00001ae8          	L20_LF2:
 1007  00001ae8  8fa20000	lw	r2,0(r29)
 1008  00001aec  8fdffff8	lw	r31,-8(r30)
 1009  00001af0  001ee820	add	r29,r0,r30
 1010  00001af4  8fdefffc	lw	r30,-4(r30)
 1011  00001af8  4be00000	jr	r31
 1012  00001afc  54000000	nop
 1013  00001b00          	.endproc _dstrcat
 1014  00001b00          	.align 2
 1015  00001b00          	.proc _dstrncmp
 1016  00001b00          	.global _dstrncmp
 1017  00001b00          	_dstrncmp:
 1018                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1019  00001b00  afbefffc	sw	-4(r29),r30; push fp
 1020  00001b04  001df020	add	r30,r0,r29; fp = sp
 1021  00001b08  afbffff8	sw	-8(r29),r31; push ret addr
 1022  00001b0c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1023  00001b10  afa20000	sw	0(r29),r2
 1024  00001b14  afa30004	sw	4(r29),r3
 1025  00001b18  54000000	nop
 1026  00001b1c  20010000	addi	r1,r0,#0
 1027  00001b20  afc1fff4	sw	-12(r30),r1
 1028  00001b24          	L25_LF2:
 1029  00001b24  8fc1fff4	lw	r1,-12(r30)
 1030  00001b28  8fc20008	lw	r2,8(r30)
 1031  00001b2c  0022082a	slt	r1,r1,r2
 1032  00001b30  1420000c	bnez	r1,L28_LF2
 1033  00001b34  54000000	nop; delay slot nop
 1034  00001b38  08000088	j	L26_LF2
 1035  00001b3c  54000000	nop; delay slot nop
 1036  00001b40          	L28_LF2:
 1037  00001b40  8fc10004	lw	r1,4(r30)
 1038  00001b44  90220000	lbu	r2,(r1)
 1039  00001b48  64410000	snei	r1,r2,#0
 1040  00001b4c  14200018	bnez	r1,L29_LF2
 1041  00001b50  54000000	nop; delay slot nop
 1042  00001b54  20010000	addi	r1,r0,#0
 1043  00001b58  080000d8	j	L24_LF2
 1044  00001b5c  54000000	nop; delay slot nop
 1045  00001b60  08000028	j	L30_LF2
 1046  00001b64  54000000	nop; delay slot nop
 1047  00001b68          	L29_LF2:
 1048  00001b68  8fc10000	lw	r1,(r30)
 1049  00001b6c  8fc20004	lw	r2,4(r30)
 1050  00001b70  90210000	lbu	r1,(r1)
 1051  00001b74  90420000	lbu	r2,(r2)
 1052  00001b78  00220829	sne	r1,r1,r2
 1053  00001b7c  1020000c	beqz	r1,L30_LF2
 1054  00001b80  54000000	nop; delay slot nop
 1055  00001b84  0800003c	j	L26_LF2
 1056  00001b88  54000000	nop; delay slot nop
 1057  00001b8c          	L31_LF2:
 1058  00001b8c          	L30_LF2:
 1059  00001b8c  8fc20000	lw	r2,(r30)
 1060  00001b90  20410001	addi	r1,r2,#1
 1061  00001b94  00011020	add	r2,r0,r1
 1062  00001b98  afc20000	sw	(r30),r2
 1063  00001b9c  8fc20004	lw	r2,4(r30)
 1064  00001ba0  20410001	addi	r1,r2,#1
 1065  00001ba4  00011020	add	r2,r0,r1
 1066  00001ba8  afc20004	sw	4(r30),r2
 1067  00001bac          	L27_LF2:
 1068  00001bac  8fc2fff4	lw	r2,-12(r30)
 1069  00001bb0  20410001	addi	r1,r2,#1
 1070  00001bb4  00011020	add	r2,r0,r1
 1071  00001bb8  afc2fff4	sw	-12(r30),r2
 1072  00001bbc  0bffff64	j	L25_LF2
 1073  00001bc0  54000000	nop; delay slot nop
 1074  00001bc4          	L26_LF2:
 1075  00001bc4  8fc1fff4	lw	r1,-12(r30)
 1076  00001bc8  8fc20008	lw	r2,8(r30)
 1077  00001bcc  00220828	seq	r1,r1,r2
 1078  00001bd0  10200018	beqz	r1,L32_LF2
 1079  00001bd4  54000000	nop; delay slot nop
 1080  00001bd8  20010000	addi	r1,r0,#0
 1081  00001bdc  08000054	j	L24_LF2
 1082  00001be0  54000000	nop; delay slot nop
 1083  00001be4  0800004c	j	L33_LF2
 1084  00001be8  54000000	nop; delay slot nop
 1085  00001bec          	L32_LF2:
 1086  00001bec  8fc20000	lw	r2,(r30)
 1087  00001bf0  90410000	lbu	r1,(r2)
 1088  00001bf4  8fc20004	lw	r2,4(r30)
 1089  00001bf8  90430000	lbu	r3,(r2)
 1090  00001bfc  00230822	sub	r1,r1,r3
 1091  00001c00  74220000	sgei	r2,r1,#0
 1092  00001c04  10400020	beqz	r2,L34_LF2
 1093  00001c08  54000000	nop; delay slot nop
 1094  00001c0c  8fc10000	lw	r1,(r30)
 1095  00001c10  8fc20004	lw	r2,4(r30)
 1096  00001c14  90210000	lbu	r1,(r1)
 1097  00001c18  90420000	lbu	r2,(r2)
 1098  00001c1c  00220829	sne	r1,r1,r2
 1099  00001c20  08000008	j	L35_LF2
 1100  00001c24  54000000	nop; delay slot nop
 1101  00001c28          	L34_LF2:
 1102  00001c28  2001ffff	addi	r1,r0,#-1
 1103  00001c2c          	L35_LF2:
 1104  00001c2c  08000004	j	L24_LF2
 1105  00001c30  54000000	nop; delay slot nop
 1106  00001c34          	L33_LF2:
 1107  00001c34          	L24_LF2:
 1108  00001c34  8fa20000	lw	r2,0(r29)
 1109  00001c38  8fa30004	lw	r3,4(r29)
 1110  00001c3c  8fdffff8	lw	r31,-8(r30)
 1111  00001c40  001ee820	add	r29,r0,r30
 1112  00001c44  8fdefffc	lw	r30,-4(r30)
 1113  00001c48  4be00000	jr	r31
 1114  00001c4c  54000000	nop
 1115  00001c50          	.endproc _dstrncmp
 1116  00001c50          	.align 2
 1117  00001c50          	.proc _dstrlen
 1118  00001c50          	.global _dstrlen
 1119  00001c50          	_dstrlen:
 1120                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1121  00001c50  afbefffc	sw	-4(r29),r30; push fp
 1122  00001c54  001df020	add	r30,r0,r29; fp = sp
 1123  00001c58  afbffff8	sw	-8(r29),r31; push ret addr
 1124  00001c5c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1125  00001c60  afa20000	sw	0(r29),r2
 1126  00001c64  20010000	addi	r1,r0,#0
 1127  00001c68  afc1fff4	sw	-12(r30),r1
 1128  00001c6c          	L37_LF2:
 1129  00001c6c  8fc10000	lw	r1,(r30)
 1130  00001c70  20220001	addi	r2,r1,#1
 1131  00001c74  afc20000	sw	(r30),r2
 1132  00001c78  90210000	lbu	r1,(r1)
 1133  00001c7c  64220000	snei	r2,r1,#0
 1134  00001c80  1440000c	bnez	r2,L39_LF2
 1135  00001c84  54000000	nop; delay slot nop
 1136  00001c88  0800001c	j	L38_LF2
 1137  00001c8c  54000000	nop; delay slot nop
 1138  00001c90          	L39_LF2:
 1139  00001c90  8fc2fff4	lw	r2,-12(r30)
 1140  00001c94  20410001	addi	r1,r2,#1
 1141  00001c98  00011020	add	r2,r0,r1
 1142  00001c9c  afc2fff4	sw	-12(r30),r2
 1143  00001ca0  0bffffc8	j	L37_LF2
 1144  00001ca4  54000000	nop; delay slot nop
 1145  00001ca8          	L38_LF2:
 1146  00001ca8  8fc1fff4	lw	r1,-12(r30)
 1147  00001cac  08000004	j	L36_LF2
 1148  00001cb0  54000000	nop; delay slot nop
 1149  00001cb4          	L36_LF2:
 1150  00001cb4  8fa20000	lw	r2,0(r29)
 1151  00001cb8  8fdffff8	lw	r31,-8(r30)
 1152  00001cbc  001ee820	add	r29,r0,r30
 1153  00001cc0  8fdefffc	lw	r30,-4(r30)
 1154  00001cc4  4be00000	jr	r31
 1155  00001cc8  54000000	nop
 1156  00001ccc          	.endproc _dstrlen
 1157  00001ccc          	.align 2
 1158  00001ccc          	.proc _dstrstr
 1159  00001ccc          	.global _dstrstr
 1160  00001ccc          	_dstrstr:
 1161                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1162  00001ccc  afbefffc	sw	-4(r29),r30; push fp
 1163  00001cd0  001df020	add	r30,r0,r29; fp = sp
 1164  00001cd4  afbffff8	sw	-8(r29),r31; push ret addr
 1165  00001cd8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1166  00001cdc  afa20000	sw	0(r29),r2
 1167  00001ce0  23bdfff8	addi	r29,r29,#-8
 1168  00001ce4  001d0820	add	r1,r0,r29
 1169  00001ce8  8fc20004	lw	r2,4(r30)
 1170  00001cec  ac220000	sw	(r1),r2
 1171  00001cf0  0fffff5c	jal	_dstrlen
 1172  00001cf4  54000000	nop; delay slot nop
 1173  00001cf8  23bd0008	addi	r29,r29,#8
 1174  00001cfc  afc1fff4	sw	-12(r30),r1
 1175  00001d00          	L41_LF2:
 1176  00001d00  8fc10000	lw	r1,(r30)
 1177  00001d04  90220000	lbu	r2,(r1)
 1178  00001d08  64410000	snei	r1,r2,#0
 1179  00001d0c  1420000c	bnez	r1,L43_LF2
 1180  00001d10  54000000	nop; delay slot nop
 1181  00001d14  08000060	j	L42_LF2
 1182  00001d18  54000000	nop; delay slot nop
 1183  00001d1c          	L43_LF2:
 1184  00001d1c  23bdfff0	addi	r29,r29,#-16
 1185  00001d20  001d0820	add	r1,r0,r29
 1186  00001d24  8fc20000	lw	r2,(r30)
 1187  00001d28  ac220000	sw	(r1),r2
 1188  00001d2c  8fc20004	lw	r2,4(r30)
 1189  00001d30  ac220004	sw	4(r1),r2
 1190  00001d34  8fc2fff4	lw	r2,-12(r30)
 1191  00001d38  ac220008	sw	8(r1),r2
 1192  00001d3c  0ffffdc0	jal	_dstrncmp
 1193  00001d40  54000000	nop; delay slot nop
 1194  00001d44  23bd0010	addi	r29,r29,#16
 1195  00001d48  64220000	snei	r2,r1,#0
 1196  00001d4c  14400010	bnez	r2,L44_LF2
 1197  00001d50  54000000	nop; delay slot nop
 1198  00001d54  8fc10000	lw	r1,(r30)
 1199  00001d58  08000028	j	L40_LF2
 1200  00001d5c  54000000	nop; delay slot nop
 1201  00001d60          	L44_LF2:
 1202  00001d60  8fc20000	lw	r2,(r30)
 1203  00001d64  20410001	addi	r1,r2,#1
 1204  00001d68  00011020	add	r2,r0,r1
 1205  00001d6c  afc20000	sw	(r30),r2
 1206  00001d70  0bffff8c	j	L41_LF2
 1207  00001d74  54000000	nop; delay slot nop
 1208  00001d78          	L42_LF2:
 1209  00001d78  20010000	addi	r1,r0,#0
 1210  00001d7c  08000004	j	L40_LF2
 1211  00001d80  54000000	nop; delay slot nop
 1212  00001d84          	L40_LF2:
 1213  00001d84  8fa20000	lw	r2,0(r29)
 1214  00001d88  8fdffff8	lw	r31,-8(r30)
 1215  00001d8c  001ee820	add	r29,r0,r30
 1216  00001d90  8fdefffc	lw	r30,-4(r30)
 1217  00001d94  4be00000	jr	r31
 1218  00001d98  54000000	nop
 1219  00001d9c          	.endproc _dstrstr
 1220  00001d9c          	.align 2
 1221  00001d9c          	.proc _dmindex
 1222  00001d9c          	.global _dmindex
 1223  00001d9c          	_dmindex:
 1224                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1225  00001d9c  afbefffc	sw	-4(r29),r30; push fp
 1226  00001da0  001df020	add	r30,r0,r29; fp = sp
 1227  00001da4  afbffff8	sw	-8(r29),r31; push ret addr
 1228  00001da8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1229  00001dac  afa20000	sw	0(r29),r2
 1230  00001db0  54000000	nop
 1231  00001db4          	L46_LF2:
 1232  00001db4  8fc10000	lw	r1,(r30)
 1233  00001db8  90220000	lbu	r2,(r1)
 1234  00001dbc  64410000	snei	r1,r2,#0
 1235  00001dc0  1420000c	bnez	r1,L48_LF2
 1236  00001dc4  54000000	nop; delay slot nop
 1237  00001dc8  08000070	j	L47_LF2
 1238  00001dcc  54000000	nop; delay slot nop
 1239  00001dd0          	L48_LF2:
 1240  00001dd0  8fc10004	lw	r1,4(r30)
 1241  00001dd4  afc1fff4	sw	-12(r30),r1
 1242  00001dd8          	L49_LF2:
 1243  00001dd8  8fc1fff4	lw	r1,-12(r30)
 1244  00001ddc  90220000	lbu	r2,(r1)
 1245  00001de0  64410000	snei	r1,r2,#0
 1246  00001de4  1420000c	bnez	r1,L52_LF2
 1247  00001de8  54000000	nop; delay slot nop
 1248  00001dec  08000044	j	L50_LF2
 1249  00001df0  54000000	nop; delay slot nop
 1250  00001df4          	L52_LF2:
 1251  00001df4  8fc10000	lw	r1,(r30)
 1252  00001df8  8fc2fff4	lw	r2,-12(r30)
 1253  00001dfc  90210000	lbu	r1,(r1)
 1254  00001e00  90420000	lbu	r2,(r2)
 1255  00001e04  00220828	seq	r1,r1,r2
 1256  00001e08  10200010	beqz	r1,L51_LF2
 1257  00001e0c  54000000	nop; delay slot nop
 1258  00001e10  8fc10000	lw	r1,(r30)
 1259  00001e14  08000030	j	L45_LF2
 1260  00001e18  54000000	nop; delay slot nop
 1261  00001e1c          	L53_LF2:
 1262  00001e1c          	L51_LF2:
 1263  00001e1c  8fc2fff4	lw	r2,-12(r30)
 1264  00001e20  20410001	addi	r1,r2,#1
 1265  00001e24  00011020	add	r2,r0,r1
 1266  00001e28  afc2fff4	sw	-12(r30),r2
 1267  00001e2c  0bffffa8	j	L49_LF2
 1268  00001e30  54000000	nop; delay slot nop
 1269  00001e34          	L50_LF2:
 1270  00001e34  0bffff7c	j	L46_LF2
 1271  00001e38  54000000	nop; delay slot nop
 1272  00001e3c          	L47_LF2:
 1273  00001e3c  20010000	addi	r1,r0,#0
 1274  00001e40  08000004	j	L45_LF2
 1275  00001e44  54000000	nop; delay slot nop
 1276  00001e48          	L45_LF2:
 1277  00001e48  8fa20000	lw	r2,0(r29)
 1278  00001e4c  8fdffff8	lw	r31,-8(r30)
 1279  00001e50  001ee820	add	r29,r0,r30
 1280  00001e54  8fdefffc	lw	r30,-4(r30)
 1281  00001e58  4be00000	jr	r31
 1282  00001e5c  54000000	nop
 1283  00001e60          	.endproc _dmindex
 1284  00001e60          	.align 2
 1285  00001e60          	.proc _dindex
 1286  00001e60          	.global _dindex
 1287  00001e60          	_dindex:
 1288                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1289  00001e60  afbefffc	sw	-4(r29),r30; push fp
 1290  00001e64  001df020	add	r30,r0,r29; fp = sp
 1291  00001e68  afbffff8	sw	-8(r29),r31; push ret addr
 1292  00001e6c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1293  00001e70  afa20000	sw	0(r29),r2
 1294  00001e74  54000000	nop
 1295  00001e78          	L55_LF2:
 1296  00001e78  8fc10000	lw	r1,(r30)
 1297  00001e7c  90220000	lbu	r2,(r1)
 1298  00001e80  64410000	snei	r1,r2,#0
 1299  00001e84  1420000c	bnez	r1,L57_LF2
 1300  00001e88  54000000	nop; delay slot nop
 1301  00001e8c  08000040	j	L56_LF2
 1302  00001e90  54000000	nop; delay slot nop
 1303  00001e94          	L57_LF2:
 1304  00001e94  8fc10000	lw	r1,(r30)
 1305  00001e98  90220000	lbu	r2,(r1)
 1306  00001e9c  8fc10004	lw	r1,4(r30)
 1307  00001ea0  00411028	seq	r2,r2,r1
 1308  00001ea4  10400010	beqz	r2,L58_LF2
 1309  00001ea8  54000000	nop; delay slot nop
 1310  00001eac  8fc10000	lw	r1,(r30)
 1311  00001eb0  08000028	j	L54_LF2
 1312  00001eb4  54000000	nop; delay slot nop
 1313  00001eb8          	L58_LF2:
 1314  00001eb8  8fc20000	lw	r2,(r30)
 1315  00001ebc  20410001	addi	r1,r2,#1
 1316  00001ec0  00011020	add	r2,r0,r1
 1317  00001ec4  afc20000	sw	(r30),r2
 1318  00001ec8  0bffffac	j	L55_LF2
 1319  00001ecc  54000000	nop; delay slot nop
 1320  00001ed0          	L56_LF2:
 1321  00001ed0  20010000	addi	r1,r0,#0
 1322  00001ed4  08000004	j	L54_LF2
 1323  00001ed8  54000000	nop; delay slot nop
 1324  00001edc          	L54_LF2:
 1325  00001edc  8fa20000	lw	r2,0(r29)
 1326  00001ee0  8fdffff8	lw	r31,-8(r30)
 1327  00001ee4  001ee820	add	r29,r0,r30
 1328  00001ee8  8fdefffc	lw	r30,-4(r30)
 1329  00001eec  4be00000	jr	r31
 1330  00001ef0  54000000	nop
 1331  00001ef4          	.endproc _dindex
 1332  00001ef4          	.align 2
 1333  00001ef4          	.proc _ditoa
 1334  00001ef4          	.global _ditoa
 1335  00001ef4          	_ditoa:
 1336                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1337  00001ef4  afbefffc	sw	-4(r29),r30; push fp
 1338  00001ef8  001df020	add	r30,r0,r29; fp = sp
 1339  00001efc  afbffff8	sw	-8(r29),r31; push ret addr
 1340  00001f00  2fbd0018	subui	r29,r29,#24; alloc local storage
 1341  00001f04  afa20000	sw	0(r29),r2
 1342  00001f08  afa30004	sw	4(r29),r3
 1343  00001f0c  8fc10000	lw	r1,(r30)
 1344  00001f10  68220000	slti	r2,r1,#0
 1345  00001f14  1040002c	beqz	r2,L60_LF2
 1346  00001f18  54000000	nop; delay slot nop
 1347  00001f1c  8fc10004	lw	r1,4(r30)
 1348  00001f20  20220001	addi	r2,r1,#1
 1349  00001f24  afc20004	sw	4(r30),r2
 1350  00001f28  2002002d	addi	r2,r0,(#0x2d)&0xff
 1351  00001f2c  a0220000	sb	(r1),r2
 1352  00001f30  8fc10000	lw	r1,(r30)
 1353  00001f34  00011022	sub	r2,r0,r1
 1354  00001f38  afc20000	sw	(r30),r2
 1355  00001f3c  08000118	j	L61_LF2
 1356  00001f40  54000000	nop; delay slot nop
 1357  00001f44          	L60_LF2:
 1358  00001f44  8fc10000	lw	r1,(r30)
 1359  00001f48  64220000	snei	r2,r1,#0
 1360  00001f4c  14400020	bnez	r2,L62_LF2
 1361  00001f50  54000000	nop; delay slot nop
 1362  00001f54  8fc10004	lw	r1,4(r30)
 1363  00001f58  20220001	addi	r2,r1,#1
 1364  00001f5c  afc20004	sw	4(r30),r2
 1365  00001f60  20020030	addi	r2,r0,(#0x30)&0xff
 1366  00001f64  a0220000	sb	(r1),r2
 1367  00001f68  080000ec	j	L61_LF2
 1368  00001f6c  54000000	nop; delay slot nop
 1369  00001f70          	L62_LF2:
 1370  00001f70  20010001	addi	r1,r0,#1
 1371  00001f74  afc1fff4	sw	-12(r30),r1
 1372  00001f78          	L64_LF2:
 1373  00001f78  8fc1fff4	lw	r1,-12(r30)
 1374  00001f7c  8fc20000	lw	r2,(r30)
 1375  00001f80  0022082c	sle	r1,r1,r2
 1376  00001f84  1420000c	bnez	r1,L66_LF2
 1377  00001f88  54000000	nop; delay slot nop
 1378  00001f8c  08000024	j	L65_LF2
 1379  00001f90  54000000	nop; delay slot nop
 1380  00001f94          	L67_LF2:
 1381  00001f94          	L66_LF2:
 1382  00001f94  8fc1fff4	lw	r1,-12(r30)
 1383  00001f98  00011820	add	r3,r0,r1
 1384  00001f9c  50620002	slli	r2,r3,#0x2
 1385  00001fa0  00411020	add	r2,r2,r1
 1386  00001fa4  50410001	slli	r1,r2,#0x1
 1387  00001fa8  afc1fff4	sw	-12(r30),r1
 1388  00001fac  0bffffc8	j	L64_LF2
 1389  00001fb0  54000000	nop; delay slot nop
 1390  00001fb4          	L65_LF2:
 1391  00001fb4  54000000	nop
 1392  00001fb8          	L68_LF2:
 1393  00001fb8  8fc1fff4	lw	r1,-12(r30)
 1394  00001fbc  2002000a	addi	r2,r0,#10
 1395  00001fc0  00200035	movi2fp	f0,r1
 1396  00001fc4  00400835	movi2fp	f1,r2
 1397  00001fc8  0401000f	div	f0,f0,f1
 1398  00001fcc  00000834	movfp2i	r1,f0
 1399  00001fd0  afc1fff4	sw	-12(r30),r1
 1400  00001fd4  8fc10004	lw	r1,4(r30)
 1401  00001fd8  20220001	addi	r2,r1,#1
 1402  00001fdc  afc20004	sw	4(r30),r2
 1403  00001fe0  8fc20000	lw	r2,(r30)
 1404  00001fe4  8fc3fff4	lw	r3,-12(r30)
 1405  00001fe8  00400035	movi2fp	f0,r2
 1406  00001fec  00600835	movi2fp	f1,r3
 1407  00001ff0  0401000f	div	f0,f0,f1
 1408  00001ff4  00001034	movfp2i	r2,f0
 1409  00001ff8  00021820	add	r3,r0,r2
 1410  00001ffc  20620030	addi	r2,r3,#48
 1411  00002000  a0220000	sb	(r1),r2
 1412  00002004  8fc10000	lw	r1,(r30)
 1413  00002008  8fc3fff4	lw	r3,-12(r30)
 1414  0000200c  00200035	movi2fp	f0,r1
 1415  00002010  00600835	movi2fp	f1,r3
 1416  00002014  0401000f	div	f0,f0,f1
 1417  00002018  00001034	movfp2i	r2,f0
 1418  0000201c  8fc3fff4	lw	r3,-12(r30)
 1419  00002020  00400035	movi2fp	f0,r2
 1420  00002024  00600835	movi2fp	f1,r3
 1421  00002028  0401000e	mult	f0,f0,f1
 1422  0000202c  00001034	movfp2i	r2,f0
 1423  00002030  00220822	sub	r1,r1,r2
 1424  00002034  afc10000	sw	(r30),r1
 1425  00002038          	L70_LF2:
 1426  00002038  8fc1fff4	lw	r1,-12(r30)
 1427  0000203c  6c220001	sgti	r2,r1,#1
 1428  00002040  1440000c	bnez	r2,L71_LF2
 1429  00002044  54000000	nop; delay slot nop
 1430  00002048  0800000c	j	L61_LF2
 1431  0000204c  54000000	nop; delay slot nop
 1432  00002050          	L71_LF2:
 1433  00002050  0bffff64	j	L68_LF2
 1434  00002054  54000000	nop; delay slot nop
 1435  00002058          	L69_LF2:
 1436  00002058          	L63_LF2:
 1437  00002058          	L61_LF2:
 1438  00002058  8fc10004	lw	r1,4(r30)
 1439  0000205c  20020000	addi	r2,r0,(#0x0)&0xff
 1440  00002060  a0220000	sb	(r1),r2
 1441  00002064          	L59_LF2:
 1442  00002064  8fa20000	lw	r2,0(r29)
 1443  00002068  8fa30004	lw	r3,4(r29)
 1444  0000206c  8fdffff8	lw	r31,-8(r30)
 1445  00002070  001ee820	add	r29,r0,r30
 1446  00002074  8fdefffc	lw	r30,-4(r30)
 1447  00002078  4be00000	jr	r31
 1448  0000207c  54000000	nop
 1449  00002080          	.endproc _ditoa
 1450  00002080          	.align 2
 1451  00002080          	.proc _dstrtol
 1452  00002080          	.global _dstrtol
 1453  00002080          	_dstrtol:
 1454                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1455  00002080  afbefffc	sw	-4(r29),r30; push fp
 1456  00002084  001df020	add	r30,r0,r29; fp = sp
 1457  00002088  afbffff8	sw	-8(r29),r31; push ret addr
 1458  0000208c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1459  00002090  afa20000	sw	0(r29),r2
 1460  00002094  20010000	addi	r1,r0,#0
 1461  00002098  afc1fff4	sw	-12(r30),r1
 1462  0000209c          	L73_LF2:
 1463  0000209c  8fc10000	lw	r1,(r30)
 1464  000020a0  90220000	lbu	r2,(r1)
 1465  000020a4  60410020	seqi	r1,r2,#32
 1466  000020a8  14200034	bnez	r1,L75_LF2
 1467  000020ac  54000000	nop; delay slot nop
 1468  000020b0  8fc10000	lw	r1,(r30)
 1469  000020b4  90220000	lbu	r2,(r1)
 1470  000020b8  60410009	seqi	r1,r2,#9
 1471  000020bc  14200020	bnez	r1,L75_LF2
 1472  000020c0  54000000	nop; delay slot nop
 1473  000020c4  8fc10000	lw	r1,(r30)
 1474  000020c8  90220000	lbu	r2,(r1)
 1475  000020cc  6041000a	seqi	r1,r2,#10
 1476  000020d0  1420000c	bnez	r1,L75_LF2
 1477  000020d4  54000000	nop; delay slot nop
 1478  000020d8  0800001c	j	L74_LF2
 1479  000020dc  54000000	nop; delay slot nop
 1480  000020e0          	L75_LF2:
 1481  000020e0  8fc20000	lw	r2,(r30)
 1482  000020e4  20410001	addi	r1,r2,#1
 1483  000020e8  00011020	add	r2,r0,r1
 1484  000020ec  afc20000	sw	(r30),r2
 1485  000020f0  0bffffa8	j	L73_LF2
 1486  000020f4  54000000	nop; delay slot nop
 1487  000020f8          	L74_LF2:
 1488  000020f8  8fc10004	lw	r1,4(r30)
 1489  000020fc  64220000	snei	r2,r1,#0
 1490  00002100  10400010	beqz	r2,L76_LF2
 1491  00002104  54000000	nop; delay slot nop
 1492  00002108  8fc10004	lw	r1,4(r30)
 1493  0000210c  8fc20000	lw	r2,(r30)
 1494  00002110  ac220000	sw	(r1),r2
 1495  00002114          	L76_LF2:
 1496  00002114  8fc10000	lw	r1,(r30)
 1497  00002118  90220000	lbu	r2,(r1)
 1498  0000211c  64410000	snei	r1,r2,#0
 1499  00002120  14200010	bnez	r1,L77_LF2
 1500  00002124  54000000	nop; delay slot nop
 1501  00002128  8fc1fff4	lw	r1,-12(r30)
 1502  0000212c  08000294	j	L72_LF2
 1503  00002130  54000000	nop; delay slot nop
 1504  00002134          	L77_LF2:
 1505  00002134  8fc10000	lw	r1,(r30)
 1506  00002138  90220000	lbu	r2,(r1)
 1507  0000213c  6041002d	seqi	r1,r2,#45
 1508  00002140  10200024	beqz	r1,L78_LF2
 1509  00002144  54000000	nop; delay slot nop
 1510  00002148  2001ffff	addi	r1,r0,#-1
 1511  0000214c  afc1ffec	sw	-20(r30),r1
 1512  00002150  8fc20000	lw	r2,(r30)
 1513  00002154  20410001	addi	r1,r2,#1
 1514  00002158  00011020	add	r2,r0,r1
 1515  0000215c  afc20000	sw	(r30),r2
 1516  00002160  0800000c	j	L79_LF2
 1517  00002164  54000000	nop; delay slot nop
 1518  00002168          	L78_LF2:
 1519  00002168  20010001	addi	r1,r0,#1
 1520  0000216c  afc1ffec	sw	-20(r30),r1
 1521  00002170          	L79_LF2:
 1522  00002170  8fc10008	lw	r1,8(r30)
 1523  00002174  64220000	snei	r2,r1,#0
 1524  00002178  14400090	bnez	r2,L80_LF2
 1525  0000217c  54000000	nop; delay slot nop
 1526  00002180  8fc10000	lw	r1,(r30)
 1527  00002184  90220000	lbu	r2,(r1)
 1528  00002188  60410030	seqi	r1,r2,#48
 1529  0000218c  10200074	beqz	r1,L81_LF2
 1530  00002190  54000000	nop; delay slot nop
 1531  00002194  8fc20000	lw	r2,(r30)
 1532  00002198  20410001	addi	r1,r2,#1
 1533  0000219c  00011020	add	r2,r0,r1
 1534  000021a0  afc20000	sw	(r30),r2
 1535  000021a4  8fc10000	lw	r1,(r30)
 1536  000021a8  90220000	lbu	r2,(r1)
 1537  000021ac  60410078	seqi	r1,r2,#120
 1538  000021b0  14200020	bnez	r1,L83_LF2
 1539  000021b4  54000000	nop; delay slot nop
 1540  000021b8  8fc10000	lw	r1,(r30)
 1541  000021bc  90220000	lbu	r2,(r1)
 1542  000021c0  60410058	seqi	r1,r2,#88
 1543  000021c4  1420000c	bnez	r1,L83_LF2
 1544  000021c8  54000000	nop; delay slot nop
 1545  000021cc  08000024	j	L82_LF2
 1546  000021d0  54000000	nop; delay slot nop
 1547  000021d4          	L83_LF2:
 1548  000021d4  20010010	addi	r1,r0,#16
 1549  000021d8  afc10008	sw	8(r30),r1
 1550  000021dc  8fc20000	lw	r2,(r30)
 1551  000021e0  20410001	addi	r1,r2,#1
 1552  000021e4  00011020	add	r2,r0,r1
 1553  000021e8  afc20000	sw	(r30),r2
 1554  000021ec  0800000c	j	L84_LF2
 1555  000021f0  54000000	nop; delay slot nop
 1556  000021f4          	L82_LF2:
 1557  000021f4  20010008	addi	r1,r0,#8
 1558  000021f8  afc10008	sw	8(r30),r1
 1559  000021fc          	L84_LF2:
 1560  000021fc  0800000c	j	L80_LF2
 1561  00002200  54000000	nop; delay slot nop
 1562  00002204          	L81_LF2:
 1563  00002204  2001000a	addi	r1,r0,#10
 1564  00002208  afc10008	sw	8(r30),r1
 1565  0000220c          	L85_LF2:
 1566  0000220c          	L80_LF2:
 1567  0000220c  8fc10008	lw	r1,8(r30)
 1568  00002210  70220000	slei	r2,r1,#0
 1569  00002214  1440001c	bnez	r2,L87_LF2
 1570  00002218  54000000	nop; delay slot nop
 1571  0000221c  8fc10008	lw	r1,8(r30)
 1572  00002220  6c220010	sgti	r2,r1,#16
 1573  00002224  1440000c	bnez	r2,L87_LF2
 1574  00002228  54000000	nop; delay slot nop
 1575  0000222c  08000010	j	L86_LF2
 1576  00002230  54000000	nop; delay slot nop
 1577  00002234          	L87_LF2:
 1578  00002234  8fc1fff4	lw	r1,-12(r30)
 1579  00002238  08000188	j	L72_LF2
 1580  0000223c  54000000	nop; delay slot nop
 1581  00002240          	L86_LF2:
 1582  00002240  54000000	nop
 1583  00002244          	L88_LF2:
 1584  00002244  8fc10000	lw	r1,(r30)
 1585  00002248  90220000	lbu	r2,(r1)
 1586  0000224c  6c41002f	sgtui	r1,r2,#47
 1587  00002250  10200030	beqz	r1,L91_LF2
 1588  00002254  54000000	nop; delay slot nop
 1589  00002258  8fc10000	lw	r1,(r30)
 1590  0000225c  90220000	lbu	r2,(r1)
 1591  00002260  70410039	sleui	r1,r2,#57
 1592  00002264  1020001c	beqz	r1,L91_LF2
 1593  00002268  54000000	nop; delay slot nop
 1594  0000226c  8fc10000	lw	r1,(r30)
 1595  00002270  90220000	lbu	r2,(r1)
 1596  00002274  2041ffd0	addi	r1,r2,#-48
 1597  00002278  afc1fff0	sw	-16(r30),r1
 1598  0000227c  0800008c	j	L92_LF2
 1599  00002280  54000000	nop; delay slot nop
 1600  00002284          	L91_LF2:
 1601  00002284  8fc10000	lw	r1,(r30)
 1602  00002288  90220000	lbu	r2,(r1)
 1603  0000228c  6c410060	sgtui	r1,r2,#96
 1604  00002290  10200030	beqz	r1,L93_LF2
 1605  00002294  54000000	nop; delay slot nop
 1606  00002298  8fc10000	lw	r1,(r30)
 1607  0000229c  90220000	lbu	r2,(r1)
 1608  000022a0  7041007a	sleui	r1,r2,#122
 1609  000022a4  1020001c	beqz	r1,L93_LF2
 1610  000022a8  54000000	nop; delay slot nop
 1611  000022ac  8fc10000	lw	r1,(r30)
 1612  000022b0  90220000	lbu	r2,(r1)
 1613  000022b4  2041ffa9	addi	r1,r2,#-87
 1614  000022b8  afc1fff0	sw	-16(r30),r1
 1615  000022bc  0800004c	j	L92_LF2
 1616  000022c0  54000000	nop; delay slot nop
 1617  000022c4          	L93_LF2:
 1618  000022c4  8fc10000	lw	r1,(r30)
 1619  000022c8  90220000	lbu	r2,(r1)
 1620  000022cc  6c410040	sgtui	r1,r2,#64
 1621  000022d0  10200030	beqz	r1,L95_LF2
 1622  000022d4  54000000	nop; delay slot nop
 1623  000022d8  8fc10000	lw	r1,(r30)
 1624  000022dc  90220000	lbu	r2,(r1)
 1625  000022e0  7041005a	sleui	r1,r2,#90
 1626  000022e4  1020001c	beqz	r1,L95_LF2
 1627  000022e8  54000000	nop; delay slot nop
 1628  000022ec  8fc10000	lw	r1,(r30)
 1629  000022f0  90220000	lbu	r2,(r1)
 1630  000022f4  2041ffc9	addi	r1,r2,#-55
 1631  000022f8  afc1fff0	sw	-16(r30),r1
 1632  000022fc  0800000c	j	L92_LF2
 1633  00002300  54000000	nop; delay slot nop
 1634  00002304          	L95_LF2:
 1635  00002304  200103e8	addi	r1,r0,#1000
 1636  00002308  afc1fff0	sw	-16(r30),r1
 1637  0000230c          	L96_LF2:
 1638  0000230c          	L94_LF2:
 1639  0000230c          	L92_LF2:
 1640  0000230c  8fc1fff0	lw	r1,-16(r30)
 1641  00002310  8fc20008	lw	r2,8(r30)
 1642  00002314  0022082a	slt	r1,r1,r2
 1643  00002318  10200040	beqz	r1,L90_LF2
 1644  0000231c  54000000	nop; delay slot nop
 1645  00002320  8fc1fff4	lw	r1,-12(r30)
 1646  00002324  8fc20008	lw	r2,8(r30)
 1647  00002328  00200035	movi2fp	f0,r1
 1648  0000232c  00400835	movi2fp	f1,r2
 1649  00002330  0401000e	mult	f0,f0,f1
 1650  00002334  00000834	movfp2i	r1,f0
 1651  00002338  afc1fff4	sw	-12(r30),r1
 1652  0000233c  8fc1fff4	lw	r1,-12(r30)
 1653  00002340  8fc2fff0	lw	r2,-16(r30)
 1654  00002344  00220820	add	r1,r1,r2
 1655  00002348  afc1fff4	sw	-12(r30),r1
 1656  0000234c  8fc20000	lw	r2,(r30)
 1657  00002350  20410001	addi	r1,r2,#1
 1658  00002354  00011020	add	r2,r0,r1
 1659  00002358  afc20000	sw	(r30),r2
 1660  0000235c          	L97_LF2:
 1661  0000235c          	L90_LF2:
 1662  0000235c  8fc1fff0	lw	r1,-16(r30)
 1663  00002360  8fc20008	lw	r2,8(r30)
 1664  00002364  0022082a	slt	r1,r1,r2
 1665  00002368  1420000c	bnez	r1,L98_LF2
 1666  0000236c  54000000	nop; delay slot nop
 1667  00002370  0800000c	j	L89_LF2
 1668  00002374  54000000	nop; delay slot nop
 1669  00002378          	L98_LF2:
 1670  00002378  0bfffec8	j	L88_LF2
 1671  0000237c  54000000	nop; delay slot nop
 1672  00002380          	L89_LF2:
 1673  00002380  8fc10004	lw	r1,4(r30)
 1674  00002384  64220000	snei	r2,r1,#0
 1675  00002388  10400010	beqz	r2,L99_LF2
 1676  0000238c  54000000	nop; delay slot nop
 1677  00002390  8fc10004	lw	r1,4(r30)
 1678  00002394  8fc20000	lw	r2,(r30)
 1679  00002398  ac220000	sw	(r1),r2
 1680  0000239c          	L99_LF2:
 1681  0000239c  8fc1fff4	lw	r1,-12(r30)
 1682  000023a0  8fc2ffec	lw	r2,-20(r30)
 1683  000023a4  00200035	movi2fp	f0,r1
 1684  000023a8  00400835	movi2fp	f1,r2
 1685  000023ac  0401000e	mult	f0,f0,f1
 1686  000023b0  00000834	movfp2i	r1,f0
 1687  000023b4  afc1fff4	sw	-12(r30),r1
 1688  000023b8  8fc1fff4	lw	r1,-12(r30)
 1689  000023bc  08000004	j	L72_LF2
 1690  000023c0  54000000	nop; delay slot nop
 1691  000023c4          	L72_LF2:
 1692  000023c4  8fa20000	lw	r2,0(r29)
 1693  000023c8  8fdffff8	lw	r31,-8(r30)
 1694  000023cc  001ee820	add	r29,r0,r30
 1695  000023d0  8fdefffc	lw	r30,-4(r30)
 1696  000023d4  4be00000	jr	r31
 1697  000023d8  54000000	nop
 1698  000023dc          	.endproc _dstrtol
 1699  000023dc          	.align 2
 1700  000023dc          	.proc _bcopy
 1701  000023dc          	.global _bcopy
 1702  000023dc          	_bcopy:
 1703                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1704  000023dc  afbefffc	sw	-4(r29),r30; push fp
 1705  000023e0  001df020	add	r30,r0,r29; fp = sp
 1706  000023e4  afbffff8	sw	-8(r29),r31; push ret addr
 1707  000023e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1708  000023ec  afa20000	sw	0(r29),r2
 1709  000023f0  afa30004	sw	4(r29),r3
 1710  000023f4  54000000	nop
 1711  000023f8          	L101_LF2:
 1712  000023f8  8fc10008	lw	r1,8(r30)
 1713  000023fc  2022ffff	addi	r2,r1,#-1
 1714  00002400  afc20008	sw	8(r30),r2
 1715  00002404  6c210000	sgti	r1,r1,#0
 1716  00002408  1420000c	bnez	r1,L103_LF2
 1717  0000240c  54000000	nop; delay slot nop
 1718  00002410  0800002c	j	L102_LF2
 1719  00002414  54000000	nop; delay slot nop
 1720  00002418          	L103_LF2:
 1721  00002418  8fc10004	lw	r1,4(r30)
 1722  0000241c  20220001	addi	r2,r1,#1
 1723  00002420  afc20004	sw	4(r30),r2
 1724  00002424  8fc20000	lw	r2,(r30)
 1725  00002428  20430001	addi	r3,r2,#1
 1726  0000242c  afc30000	sw	(r30),r3
 1727  00002430  80420000	lb	r2,(r2)
 1728  00002434  a0220000	sb	(r1),r2
 1729  00002438  0bffffbc	j	L101_LF2
 1730  0000243c  54000000	nop; delay slot nop
 1731  00002440          	L102_LF2:
 1732  00002440          	L100_LF2:
 1733  00002440  8fa20000	lw	r2,0(r29)
 1734  00002444  8fa30004	lw	r3,4(r29)
 1735  00002448  8fdffff8	lw	r31,-8(r30)
 1736  0000244c  001ee820	add	r29,r0,r30
 1737  00002450  8fdefffc	lw	r30,-4(r30)
 1738  00002454  4be00000	jr	r31
 1739  00002458  54000000	nop
 1740  0000245c          	.endproc _bcopy
 1741  0000245c          	.align 2
 1742  0000245c          	.proc _bzero
 1743  0000245c          	.global _bzero
 1744  0000245c          	_bzero:
 1745                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1746  0000245c  afbefffc	sw	-4(r29),r30; push fp
 1747  00002460  001df020	add	r30,r0,r29; fp = sp
 1748  00002464  afbffff8	sw	-8(r29),r31; push ret addr
 1749  00002468  2fbd0010	subui	r29,r29,#16; alloc local storage
 1750  0000246c  afa20000	sw	0(r29),r2
 1751  00002470  54000000	nop
 1752  00002474          	L105_LF2:
 1753  00002474  8fc10004	lw	r1,4(r30)
 1754  00002478  2022ffff	addi	r2,r1,#-1
 1755  0000247c  afc20004	sw	4(r30),r2
 1756  00002480  6c210000	sgti	r1,r1,#0
 1757  00002484  1420000c	bnez	r1,L107_LF2
 1758  00002488  54000000	nop; delay slot nop
 1759  0000248c  08000020	j	L106_LF2
 1760  00002490  54000000	nop; delay slot nop
 1761  00002494          	L107_LF2:
 1762  00002494  8fc10000	lw	r1,(r30)
 1763  00002498  20220001	addi	r2,r1,#1
 1764  0000249c  afc20000	sw	(r30),r2
 1765  000024a0  20020000	addi	r2,r0,(#0x0)&0xff
 1766  000024a4  a0220000	sb	(r1),r2
 1767  000024a8  0bffffc8	j	L105_LF2
 1768  000024ac  54000000	nop; delay slot nop
 1769  000024b0          	L106_LF2:
 1770  000024b0          	L104_LF2:
 1771  000024b0  8fa20000	lw	r2,0(r29)
 1772  000024b4  8fdffff8	lw	r31,-8(r30)
 1773  000024b8  001ee820	add	r29,r0,r30
 1774  000024bc  8fdefffc	lw	r30,-4(r30)
 1775  000024c0  4be00000	jr	r31
 1776  000024c4  54000000	nop
 1777  000024c8          	.endproc _bzero
 1778  000024c8          	.align 2
 1779  000024c8          	.proc _min
 1780  000024c8          	.global _min
 1781  000024c8          	_min:
 1782                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1783  000024c8  afbefffc	sw	-4(r29),r30; push fp
 1784  000024cc  001df020	add	r30,r0,r29; fp = sp
 1785  000024d0  afbffff8	sw	-8(r29),r31; push ret addr
 1786  000024d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1787  000024d8  afa20000	sw	0(r29),r2
 1788  000024dc  afa30004	sw	4(r29),r3
 1789  000024e0  8fc10000	lw	r1,(r30)
 1790  000024e4  8fc20004	lw	r2,4(r30)
 1791  000024e8  0022182c	sle	r3,r1,r2
 1792  000024ec  14600008	bnez	r3,L109_LF2
 1793  000024f0  54000000	nop; delay slot nop
 1794  000024f4  8fc10004	lw	r1,4(r30)
 1795  000024f8          	L109_LF2:
 1796  000024f8  08000004	j	L108_LF2
 1797  000024fc  54000000	nop; delay slot nop
 1798  00002500          	L108_LF2:
 1799  00002500  8fa20000	lw	r2,0(r29)
 1800  00002504  8fa30004	lw	r3,4(r29)
 1801  00002508  8fdffff8	lw	r31,-8(r30)
 1802  0000250c  001ee820	add	r29,r0,r30
 1803  00002510  8fdefffc	lw	r30,-4(r30)
 1804  00002514  4be00000	jr	r31
 1805  00002518  54000000	nop
 1806  0000251c          	.endproc _min
 1807                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1808                      ;;;
 1809                      ;;; Most of the traps are called in files from libtraps.
 1812  0000251c          	.align 2
 1813  0000251c          	.proc _exit
 1814  0000251c          	.global _exit
 1815  0000251c          	_exit:
 1816  0000251c  44000300	trap	#0x300
 1817  00002520  4be00000	jr	r31
 1818  00002524  54000000	nop
 1819  00002528          	.endproc _exit
 1821                      ; for the benefit of gcc.
 1822  00002528          	.proc ___main
 1823  00002528          	.global ___main
 1824  00002528          	___main:
 1825  00002528  4be00000	jr	r31
 1826  0000252c  54000000	nop
 1827  00002530          	.endproc ___main
 1828  00002530          	.text
 1829  00002530          	.global _etext
 1830  00002530          	_etext:
 1831  00002530          	.align 3
 1832  00002530          	.data
 1833  00003142          	.global _edata
 1834  00003142          	_edata:

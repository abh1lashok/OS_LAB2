 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 326
    4                      ; Text size: 5336
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  4342202d	.ascii "CB ---- Put %c in %d\n\000"
   82  00003004  2d2d2d20	
   82  00003008  50757420	
   82  0000300c  25632069	
   82  00003010  6e202564	
   82  00003014  0a00    	
   83  00003016          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _put_item_cb
   86  000010d4          	.global _put_item_cb
   87  000010d4          	_put_item_cb:
   88                      ;  Function 'put_item_cb'; 0 bytes of locals, 4 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  afa40008	sw	8(r29),r4
   96  000010f0  afa5000c	sw	12(r29),r5
   97  000010f4  83c20003	lb	r2,3(r30)
   98  000010f8  8fc30004	lw	r3,4(r30)
   99  000010fc  8c610000	lw	r1,(r3)
  100  00001100  00610820	add	r1,r3,r1
  101  00001104  a0220008	sb	8(r1),r2
  102  00001108  23bdfff0	addi	r29,r29,#-16
  103  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  104  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  105  00001114  afa50000	sw	(r29),r5
  106  00001118  304100ff	andi	r1,r2,#0x00ff
  107  0000111c  afa10004	sw	4(r29),r1
  108  00001120  8c650000	lw	r5,(r3)
  109  00001124  afa50008	sw	8(r29),r5
  110  00001128  0c0005a8	jal	_Printf
  111  0000112c  54000000	nop; not filled.
  112  00001130  8c610000	lw	r1,(r3)
  113  00001134  20240001	addi	r4,r1,#1
  114  00001138  2001000a	addi	r1,r0,#10
  115  0000113c  00800035	movi2fp	f0,r4
  116  00001140  00200835	movi2fp	f1,r1
  117  00001144  0401000f	div	f0,f0,f1
  118  00001148  00001034	movfp2i	r2,f0
  119  0000114c  50410002	slli	r1,r2,#0x2
  120  00001150  00220820	add	r1,r1,r2
  121  00001154  50210001	slli	r1,r1,#0x1
  122  00001158  00810822	sub	r1,r4,r1
  123  0000115c  ac610000	sw	(r3),r1
  124  00001160  20010001	addi	r1,r0,#1
  125  00001164  23bd0010	addi	r29,r29,#16
  126  00001168  8fa20000	lw	r2,0(r29)
  127  0000116c  8fa30004	lw	r3,4(r29)
  128  00001170  8fa40008	lw	r4,8(r29)
  129  00001174  8fa5000c	lw	r5,12(r29)
  130  00001178  8fdffff8	lw	r31,-8(r30)
  131  0000117c  001ee820	add	r29,r0,r30
  132  00001180  8fdefffc	lw	r30,-4(r30)
  133  00001184  4be00000	jr	r31
  134  00001188  54000000	nop
  135  0000118c          	.endproc _put_item_cb
  136  0000118c          	.data
  137  00003016          	.align 2
  138  00003018          	LC1_LF0:
  139  00003018  4342202d	.ascii "CB ----  checking %c from %d\n\000"
  139  0000301c  2d2d2d20	
  139  00003020  20636865	
  139  00003024  636b696e	
  139  00003028  67202563	
  139  0000302c  2066726f	
  139  00003030  6d202564	
  139  00003034  0a00    	
  140  00003036          	.text
  141  0000118c          	.align 2
  142  0000118c          	.proc _check_item_cb
  143  0000118c          	.global _check_item_cb
  144  0000118c          	_check_item_cb:
  145                      ;  Function 'check_item_cb'; 0 bytes of locals, 3 regs to save.
  146  0000118c  afbefffc	sw	-4(r29),r30; push fp
  147  00001190  001df020	add	r30,r0,r29; fp = sp
  148  00001194  afbffff8	sw	-8(r29),r31; push ret addr
  149  00001198  2fbd0018	subui	r29,r29,#24; alloc local storage
  150  0000119c  afa20000	sw	0(r29),r2
  151  000011a0  afa30004	sw	4(r29),r3
  152  000011a4  afa40008	sw	8(r29),r4
  153  000011a8  8fc30000	lw	r3,(r30)
  154  000011ac  8fc20004	lw	r2,4(r30)
  155  000011b0  8c410004	lw	r1,4(r2)
  156  000011b4  00410820	add	r1,r2,r1
  157  000011b8  80210008	lb	r1,8(r1)
  158  000011bc  a0610000	sb	(r3),r1
  159  000011c0  23bdfff0	addi	r29,r29,#-16
  160  000011c4  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  161  000011c8  24843018	addui	r4,r4,(LC1_LF0)&0xffff
  162  000011cc  afa40000	sw	(r29),r4
  163  000011d0  90610000	lbu	r1,(r3)
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  8c420004	lw	r2,4(r2)
  166  000011dc  afa20008	sw	8(r29),r2
  167  000011e0  0c0004f0	jal	_Printf
  168  000011e4  54000000	nop; not filled.
  169  000011e8  20010001	addi	r1,r0,#1
  170  000011ec  23bd0010	addi	r29,r29,#16
  171  000011f0  8fa20000	lw	r2,0(r29)
  172  000011f4  8fa30004	lw	r3,4(r29)
  173  000011f8  8fa40008	lw	r4,8(r29)
  174  000011fc  8fdffff8	lw	r31,-8(r30)
  175  00001200  001ee820	add	r29,r0,r30
  176  00001204  8fdefffc	lw	r30,-4(r30)
  177  00001208  4be00000	jr	r31
  178  0000120c  54000000	nop
  179  00001210          	.endproc _check_item_cb
  180  00001210          	.data
  181  00003036          	.align 2
  182  00003038          	LC2_LF0:
  183  00003038  4342202d	.ascii "CB ----  Got %c from %d\n\000"
  183  0000303c  2d2d2d20	
  183  00003040  20476f74	
  183  00003044  20256320	
  183  00003048  66726f6d	
  183  0000304c  2025640a	
  183  00003050  00      	
  184  00003051          	.text
  185  00001210          	.align 2
  186  00001210          	.proc _get_item_cb
  187  00001210          	.global _get_item_cb
  188  00001210          	_get_item_cb:
  189                      ;  Function 'get_item_cb'; 0 bytes of locals, 4 regs to save.
  190  00001210  afbefffc	sw	-4(r29),r30; push fp
  191  00001214  001df020	add	r30,r0,r29; fp = sp
  192  00001218  afbffff8	sw	-8(r29),r31; push ret addr
  193  0000121c  2fbd0018	subui	r29,r29,#24; alloc local storage
  194  00001220  afa20000	sw	0(r29),r2
  195  00001224  afa30004	sw	4(r29),r3
  196  00001228  afa40008	sw	8(r29),r4
  197  0000122c  afa5000c	sw	12(r29),r5
  198  00001230  8fc20000	lw	r2,(r30)
  199  00001234  8fc30004	lw	r3,4(r30)
  200  00001238  8c610004	lw	r1,4(r3)
  201  0000123c  00610820	add	r1,r3,r1
  202  00001240  80210008	lb	r1,8(r1)
  203  00001244  a0410000	sb	(r2),r1
  204  00001248  23bdfff0	addi	r29,r29,#-16
  205  0000124c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  206  00001250  24a53038	addui	r5,r5,(LC2_LF0)&0xffff
  207  00001254  afa50000	sw	(r29),r5
  208  00001258  90410000	lbu	r1,(r2)
  209  0000125c  afa10004	sw	4(r29),r1
  210  00001260  8c650004	lw	r5,4(r3)
  211  00001264  afa50008	sw	8(r29),r5
  212  00001268  0c000468	jal	_Printf
  213  0000126c  54000000	nop; not filled.
  214  00001270  8c610004	lw	r1,4(r3)
  215  00001274  20240001	addi	r4,r1,#1
  216  00001278  2001000a	addi	r1,r0,#10
  217  0000127c  00800035	movi2fp	f0,r4
  218  00001280  00200835	movi2fp	f1,r1
  219  00001284  0401000f	div	f0,f0,f1
  220  00001288  00001034	movfp2i	r2,f0
  221  0000128c  50410002	slli	r1,r2,#0x2
  222  00001290  00220820	add	r1,r1,r2
  223  00001294  50210001	slli	r1,r1,#0x1
  224  00001298  00810822	sub	r1,r4,r1
  225  0000129c  ac610004	sw	4(r3),r1
  226  000012a0  20010001	addi	r1,r0,#1
  227  000012a4  23bd0010	addi	r29,r29,#16
  228  000012a8  8fa20000	lw	r2,0(r29)
  229  000012ac  8fa30004	lw	r3,4(r29)
  230  000012b0  8fa40008	lw	r4,8(r29)
  231  000012b4  8fa5000c	lw	r5,12(r29)
  232  000012b8  8fdffff8	lw	r31,-8(r30)
  233  000012bc  001ee820	add	r29,r0,r30
  234  000012c0  8fdefffc	lw	r30,-4(r30)
  235  000012c4  4be00000	jr	r31
  236  000012c8  54000000	nop
  237  000012cc          	.endproc _get_item_cb
  238  000012cc          	.align 2
  239  000012cc          	.proc _is_full
  240  000012cc          	.global _is_full
  241  000012cc          	_is_full:
  242                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  243  000012cc  afbefffc	sw	-4(r29),r30; push fp
  244  000012d0  001df020	add	r30,r0,r29; fp = sp
  245  000012d4  afbffff8	sw	-8(r29),r31; push ret addr
  246  000012d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  247  000012dc  afa20000	sw	0(r29),r2
  248  000012e0  afa30004	sw	4(r29),r3
  249  000012e4  afa40008	sw	8(r29),r4
  250  000012e8  8fc40000	lw	r4,(r30)
  251  000012ec  8c810000	lw	r1,(r4)
  252  000012f0  20230001	addi	r3,r1,#1
  253  000012f4  2001000a	addi	r1,r0,#10
  254  000012f8  00600035	movi2fp	f0,r3
  255  000012fc  00200835	movi2fp	f1,r1
  256  00001300  0401000f	div	f0,f0,f1
  257  00001304  00001034	movfp2i	r2,f0
  258  00001308  50410002	slli	r1,r2,#0x2
  259  0000130c  00220820	add	r1,r1,r2
  260  00001310  50210001	slli	r1,r1,#0x1
  261  00001314  00611022	sub	r2,r3,r1
  262  00001318  8c810004	lw	r1,4(r4)
  263  0000131c  00411028	seq	r2,r2,r1
  264  00001320  20010001	addi	r1,r0,#1
  265  00001324  14400008	bnez	r2,L23_LF0
  266  00001328  54000000	nop; not filled.
  267  0000132c  20010000	addi	r1,r0,#0
  268  00001330          	L23_LF0:
  269  00001330  8fa20000	lw	r2,0(r29)
  270  00001334  8fa30004	lw	r3,4(r29)
  271  00001338  8fa40008	lw	r4,8(r29)
  272  0000133c  8fdffff8	lw	r31,-8(r30)
  273  00001340  001ee820	add	r29,r0,r30
  274  00001344  8fdefffc	lw	r30,-4(r30)
  275  00001348  4be00000	jr	r31
  276  0000134c  54000000	nop
  277  00001350          	.endproc _is_full
  278  00001350          	.align 2
  279  00001350          	.proc _is_empty
  280  00001350          	.global _is_empty
  281  00001350          	_is_empty:
  282                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  283  00001350  afbefffc	sw	-4(r29),r30; push fp
  284  00001354  001df020	add	r30,r0,r29; fp = sp
  285  00001358  afbffff8	sw	-8(r29),r31; push ret addr
  286  0000135c  2fbd0010	subui	r29,r29,#16; alloc local storage
  287  00001360  afa20000	sw	0(r29),r2
  288  00001364  8fc10000	lw	r1,(r30)
  289  00001368  8c220000	lw	r2,(r1)
  290  0000136c  8c210004	lw	r1,4(r1)
  291  00001370  00411028	seq	r2,r2,r1
  292  00001374  20010001	addi	r1,r0,#1
  293  00001378  14400008	bnez	r2,L30_LF0
  294  0000137c  54000000	nop; not filled.
  295  00001380  20010000	addi	r1,r0,#0
  296  00001384          	L30_LF0:
  297  00001384  8fa20000	lw	r2,0(r29)
  298  00001388  8fdffff8	lw	r31,-8(r30)
  299  0000138c  001ee820	add	r29,r0,r30
  300  00001390  8fdefffc	lw	r30,-4(r30)
  301  00001394  4be00000	jr	r31
  302  00001398  54000000	nop
  303  0000139c          	.endproc _is_empty
  304  0000139c          	.data
  305  00003051          	.align 2
  306  00003054          	LC3_LF0:
  307  00003054  43697263	.ascii "Circular Buffer Initiated\n\000"
  307  00003058  756c6172	
  307  0000305c  20427566	
  307  00003060  66657220	
  307  00003064  496e6974	
  307  00003068  69617465	
  307  0000306c  640a00  	
  308  0000306f          	.text
  309  0000139c          	.align 2
  310  0000139c          	.proc _init_cb
  311  0000139c          	.global _init_cb
  312  0000139c          	_init_cb:
  313                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  314  0000139c  afbefffc	sw	-4(r29),r30; push fp
  315  000013a0  001df020	add	r30,r0,r29; fp = sp
  316  000013a4  afbffff8	sw	-8(r29),r31; push ret addr
  317  000013a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  318  000013ac  afa20000	sw	0(r29),r2
  319  000013b0  8fc10000	lw	r1,(r30)
  320  000013b4  20020000	addi	r2,r0,#0
  321  000013b8  ac220000	sw	(r1),r2
  322  000013bc  ac220004	sw	4(r1),r2
  323  000013c0  23bdfff8	addi	r29,r29,#-8
  324  000013c4  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
  325  000013c8  24423054	addui	r2,r2,(LC3_LF0)&0xffff
  326  000013cc  afa20000	sw	(r29),r2
  327  000013d0  0c000300	jal	_Printf
  328  000013d4  54000000	nop; not filled.
  329  000013d8  23bd0008	addi	r29,r29,#8
  330  000013dc  8fa20000	lw	r2,0(r29)
  331  000013e0  8fdffff8	lw	r31,-8(r30)
  332  000013e4  001ee820	add	r29,r0,r30
  333  000013e8  8fdefffc	lw	r30,-4(r30)
  334  000013ec  4be00000	jr	r31
  335  000013f0  54000000	nop
  336  000013f4          	.endproc _init_cb
  337  000013f4          	.data
  338  0000306f          	.align 2
  339  00003070          	LC4_LF0:
  340  00003070  20436972	.ascii " Circular Buffer =>  \000"
  340  00003074  63756c61	
  340  00003078  72204275	
  340  0000307c  66666572	
  340  00003080  203d3e20	
  340  00003084  2000    	
  341  00003086          	.align 2
  342  00003088          	LC5_LF0:
  343  00003088  256300  	.ascii "%c\000"
  344  0000308b          	.align 2
  345  0000308c          	LC6_LF0:
  346  0000308c  0a00    	.ascii "\n\000"
  347  0000308e          	.text
  348  000013f4          	.align 2
  349  000013f4          	.proc _Print_cb
  350  000013f4          	.global _Print_cb
  351  000013f4          	_Print_cb:
  352                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  353  000013f4  afbefffc	sw	-4(r29),r30; push fp
  354  000013f8  001df020	add	r30,r0,r29; fp = sp
  355  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  356  00001400  2fbd0020	subui	r29,r29,#32; alloc local storage
  357  00001404  afa20000	sw	0(r29),r2
  358  00001408  afa30004	sw	4(r29),r3
  359  0000140c  afa40008	sw	8(r29),r4
  360  00001410  afa5000c	sw	12(r29),r5
  361  00001414  afa60010	sw	16(r29),r6
  362  00001418  afa70014	sw	20(r29),r7
  363  0000141c  8fc50000	lw	r5,(r30)
  364  00001420  23bdfff8	addi	r29,r29,#-8
  365  00001424  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  366  00001428  24e73070	addui	r7,r7,(LC4_LF0)&0xffff
  367  0000142c  afa70000	sw	(r29),r7
  368  00001430  0c0002a0	jal	_Printf
  369  00001434  54000000	nop; not filled.
  370  00001438  20040000	addi	r4,r0,#0
  371  0000143c  23bd0008	addi	r29,r29,#8
  372  00001440  2006000a	addi	r6,r0,#10
  373  00001444          	L45_LF0:
  374  00001444  23bdfff8	addi	r29,r29,#-8
  375  00001448  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  376  0000144c  24e73088	addui	r7,r7,(LC5_LF0)&0xffff
  377  00001450  afa70000	sw	(r29),r7
  378  00001454  8ca10004	lw	r1,4(r5)
  379  00001458  00811820	add	r3,r4,r1
  380  0000145c  00600035	movi2fp	f0,r3
  381  00001460  00c00835	movi2fp	f1,r6
  382  00001464  0401000f	div	f0,f0,f1
  383  00001468  00001034	movfp2i	r2,f0
  384  0000146c  50410002	slli	r1,r2,#0x2
  385  00001470  00220820	add	r1,r1,r2
  386  00001474  50210001	slli	r1,r1,#0x1
  387  00001478  00610822	sub	r1,r3,r1
  388  0000147c  00a10820	add	r1,r5,r1
  389  00001480  90210008	lbu	r1,8(r1)
  390  00001484  afa10004	sw	4(r29),r1
  391  00001488  0c000248	jal	_Printf
  392  0000148c  54000000	nop; not filled.
  393  00001490  23bd0008	addi	r29,r29,#8
  394  00001494  20840001	addi	r4,r4,#1
  395  00001498  70810009	slei	r1,r4,#9
  396  0000149c  1420ffa4	bnez	r1,L45_LF0
  397  000014a0  54000000	nop; not filled.
  398  000014a4  23bdfff8	addi	r29,r29,#-8
  399  000014a8  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  400  000014ac  24e7308c	addui	r7,r7,(LC6_LF0)&0xffff
  401  000014b0  afa70000	sw	(r29),r7
  402  000014b4  0c00021c	jal	_Printf
  403  000014b8  54000000	nop; not filled.
  404  000014bc  23bd0008	addi	r29,r29,#8
  405  000014c0  8fa20000	lw	r2,0(r29)
  406  000014c4  8fa30004	lw	r3,4(r29)
  407  000014c8  8fa40008	lw	r4,8(r29)
  408  000014cc  8fa5000c	lw	r5,12(r29)
  409  000014d0  8fa60010	lw	r6,16(r29)
  410  000014d4  8fa70014	lw	r7,20(r29)
  411  000014d8  8fdffff8	lw	r31,-8(r30)
  412  000014dc  001ee820	add	r29,r0,r30
  413  000014e0  8fdefffc	lw	r30,-4(r30)
  414  000014e4  4be00000	jr	r31
  415  000014e8  54000000	nop
  416  000014ec          	.endproc _Print_cb
  417  000014ec          	.data
  418  0000308e          	.align 2
  419  00003090          	LC7_LF0:
  420  00003090  55736167	.ascii "Usage: \000"
  420  00003094  653a2000	
  421  00003098          	.align 2
  422  00003098          	LC8_LF0:
  423  00003098  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
  423  0000309c  6e646c65	
  423  000030a0  5f746f5f	
  423  000030a4  73686172	
  423  000030a8  65645f6d	
  423  000030ac  656d6f72	
  423  000030b0  795f7061	
  423  000030b4  67653e20	
  423  000030b8  3c68616e	
  423  000030bc  646c655f	
  423  000030c0  746f5f70	
  423  000030c4  6167655f	
  423  000030c8  6d617070	
  423  000030cc  65645f73	
  423  000030d0  656d6170	
  423  000030d4  686f7265	
  423  000030d8  3e203c68	
  423  000030dc  616e    	
  424  000030de  646c6520	.ascii "dle to lock>\n\000"
  424  000030e2  746f206c	
  424  000030e6  6f636b3e	
  424  000030ea  0a00    	
  425  000030ec          	.align 2
  426  000030ec          	LC9_LF0:
  427  000030ec  416e2048	.ascii "An H2O molecule is created \n\000"
  427  000030f0  324f206d	
  427  000030f4  6f6c6563	
  427  000030f8  756c6520	
  427  000030fc  69732063	
  427  00003100  72656174	
  427  00003104  6564200a	
  427  00003108  00      	
  428  00003109          	.align 2
  429  0000310c          	LC10_LF0:
  430  0000310c  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  430  00003110  73656d61	
  430  00003114  70686f72	
  430  00003118  6520735f	
  430  0000311c  70726f63	
  430  00003120  735f636f	
  430  00003124  6d706c65	
  430  00003128  74656420	
  430  0000312c  28256429	
  430  00003130  20696e20	
  430  00003134  00      	
  431  00003135          	.align 2
  432  00003138          	LC11_LF0:
  433  00003138  2c206578	.ascii ", exiting...\n\000"
  433  0000313c  6974696e	
  433  00003140  672e2e2e	
  433  00003144  0a00    	
  434  00003146          	.text
  435  000014ec          	.align 2
  436  000014ec          	.proc _main
  437  000014ec          	.global _main
  438  000014ec          	_main:
  439                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  440  000014ec  afbefffc	sw	-4(r29),r30; push fp
  441  000014f0  001df020	add	r30,r0,r29; fp = sp
  442  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  443  000014f8  2fbd0008	subui	r29,r29,#8; alloc local storage
  444  000014fc  8fc20000	lw	r2,(r30)
  445  00001500  8fc50004	lw	r5,4(r30)
  446  00001504  0c000fc8	jal	___main
  447  00001508  54000000	nop; not filled.
  448  0000150c  64410004	snei	r1,r2,#4
  449  00001510  1020004c	beqz	r1,L48_LF0
  450  00001514  54000000	nop; not filled.
  451  00001518  23bdfff8	addi	r29,r29,#-8
  452  0000151c  3c070000	lhi	r7,((LC7_LF0)>>16)&0xffff
  453  00001520  24e73090	addui	r7,r7,(LC7_LF0)&0xffff
  454  00001524  afa70000	sw	(r29),r7
  455  00001528  0c0001a8	jal	_Printf
  456  0000152c  54000000	nop; not filled.
  457  00001530  8ca70000	lw	r7,(r5)
  458  00001534  afa70000	sw	(r29),r7
  459  00001538  0c000198	jal	_Printf
  460  0000153c  54000000	nop; not filled.
  461  00001540  3c070000	lhi	r7,((LC8_LF0)>>16)&0xffff
  462  00001544  24e73098	addui	r7,r7,(LC8_LF0)&0xffff
  463  00001548  afa70000	sw	(r29),r7
  464  0000154c  0c000184	jal	_Printf
  465  00001550  54000000	nop; not filled.
  466  00001554  0c000224	jal	_Exit
  467  00001558  54000000	nop; not filled.
  468  0000155c  23bd0008	addi	r29,r29,#8
  469  00001560          	L48_LF0:
  470  00001560  23bdfff0	addi	r29,r29,#-16
  471  00001564  8ca70004	lw	r7,4(r5)
  472  00001568  afa70000	sw	(r29),r7
  473  0000156c  20070000	addi	r7,r0,#0
  474  00001570  afa70004	sw	4(r29),r7
  475  00001574  2007000a	addi	r7,r0,#10
  476  00001578  afa70008	sw	8(r29),r7
  477  0000157c  0c000aa8	jal	_dstrtol
  478  00001580  54000000	nop; not filled.
  479  00001584  00011020	add	r2,r0,r1
  480  00001588  8ca7000c	lw	r7,12(r5)
  481  0000158c  afa70000	sw	(r29),r7
  482  00001590  20070000	addi	r7,r0,#0
  483  00001594  afa70004	sw	4(r29),r7
  484  00001598  2007000a	addi	r7,r0,#10
  485  0000159c  afa70008	sw	8(r29),r7
  486  000015a0  0c000a84	jal	_dstrtol
  487  000015a4  54000000	nop; not filled.
  488  000015a8  00013020	add	r6,r0,r1
  489  000015ac  8ca70008	lw	r7,8(r5)
  490  000015b0  afa70000	sw	(r29),r7
  491  000015b4  20070000	addi	r7,r0,#0
  492  000015b8  afa70004	sw	4(r29),r7
  493  000015bc  2007000a	addi	r7,r0,#10
  494  000015c0  afa70008	sw	8(r29),r7
  495  000015c4  0c000a60	jal	_dstrtol
  496  000015c8  54000000	nop; not filled.
  497  000015cc  00012020	add	r4,r0,r1
  498  000015d0  23bd0010	addi	r29,r29,#16
  499  000015d4  0062082a	sltu	r1,r3,r2
  500  000015d8  1020003c	beqz	r1,L50_LF0
  501  000015dc  54000000	nop; not filled.
  502  000015e0          	L51_LF0:
  503  000015e0  23bdfff8	addi	r29,r29,#-8
  504  000015e4  3c070000	lhi	r7,((LC9_LF0)>>16)&0xffff
  505  000015e8  24e730ec	addui	r7,r7,(LC9_LF0)&0xffff
  506  000015ec  afa70000	sw	(r29),r7
  507  000015f0  0c0000e0	jal	_Printf
  508  000015f4  54000000	nop; not filled.
  509  000015f8  afa40000	sw	(r29),r4
  510  000015fc  0c000128	jal	_sem_signal
  511  00001600  54000000	nop; not filled.
  512  00001604  20630001	addi	r3,r3,#1
  513  00001608  23bd0008	addi	r29,r29,#8
  514  0000160c  0062082a	sltu	r1,r3,r2
  515  00001610  1420ffcc	bnez	r1,L51_LF0
  516  00001614  54000000	nop; not filled.
  517  00001618          	L50_LF0:
  518  00001618  23bdfff8	addi	r29,r29,#-8
  519  0000161c  afa60000	sw	(r29),r6
  520  00001620  0c000104	jal	_sem_signal
  521  00001624  54000000	nop; not filled.
  522  00001628  23bd0008	addi	r29,r29,#8
  523  0000162c  64210001	snei	r1,r1,#1
  524  00001630  10200050	beqz	r1,L53_LF0
  525  00001634  54000000	nop; not filled.
  526  00001638  23bdfff8	addi	r29,r29,#-8
  527  0000163c  3c070000	lhi	r7,((LC10_LF0)>>16)&0xffff
  528  00001640  24e7310c	addui	r7,r7,(LC10_LF0)&0xffff
  529  00001644  afa70000	sw	(r29),r7
  530  00001648  afa60004	sw	4(r29),r6
  531  0000164c  0c000084	jal	_Printf
  532  00001650  54000000	nop; not filled.
  533  00001654  8ca50000	lw	r5,(r5)
  534  00001658  afa50000	sw	(r29),r5
  535  0000165c  0c000074	jal	_Printf
  536  00001660  54000000	nop; not filled.
  537  00001664  3c070000	lhi	r7,((LC11_LF0)>>16)&0xffff
  538  00001668  24e73138	addui	r7,r7,(LC11_LF0)&0xffff
  539  0000166c  afa70000	sw	(r29),r7
  540  00001670  0c000060	jal	_Printf
  541  00001674  54000000	nop; not filled.
  542  00001678  0c000100	jal	_Exit
  543  0000167c  54000000	nop; not filled.
  544  00001680  23bd0008	addi	r29,r29,#8
  545  00001684          	L53_LF0:
  546  00001684  0c000e3c	jal	_exit
  547  00001688  54000000	nop
  548  0000168c          	.endproc _main
  549                      ;;;
  550                      ;;; Stub functions for DLX traps.
  551                      ;;;
  552                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  553                      ;;;
  554                      ;;; The traps such as Open and Close
  555                      ;;; (note the capital letters) are for use by user programs.  The traps
  556                      ;;; with names such as open and close (lower case) are for use by the OS.
  557                      ;;;
  560  0000168c          	.align 2
  562                      ;;; The following are the traps to be used by user-level programs
  563                      ;;;
  565  0000168c          	.align 2
  566  0000168c          	.proc _Open
  567  0000168c          	.global _Open
  568  0000168c          	_Open:
  569                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  570                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  571                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  572  0000168c  44000213	trap	#0x213
  573  00001690  4be00000	jr	r31
  574  00001694  54000000	nop
  575  00001698          	.endproc _Open
  577  00001698          	.proc _Close
  578  00001698          	.global _Close
  579  00001698          	_Close:
  580  00001698  44000214	trap	#0x214
  581  0000169c  4be00000	jr	r31
  582  000016a0  54000000	nop
  583  000016a4          	.endproc _Close
  585  000016a4          	.proc _Read
  586  000016a4          	.global _Read
  587  000016a4          	_Read:
  588  000016a4  44000210	trap	#0x210
  589  000016a8  4be00000	jr	r31
  590  000016ac  54000000	nop
  591  000016b0          	.endproc _Read
  593  000016b0          	.proc _Write
  594  000016b0          	.global _Write
  595  000016b0          	_Write:
  596  000016b0  44000211	trap	#0x211
  597  000016b4  4be00000	jr	r31
  598  000016b8  54000000	nop
  599  000016bc          	.endproc _Write
  601  000016bc          	.proc _Lseek
  602  000016bc          	.global _Lseek
  603  000016bc          	_Lseek:
  604  000016bc  44000212	trap	#0x212
  605  000016c0  4be00000	jr	r31
  606  000016c4  54000000	nop
  607  000016c8          	.endproc _Lseek
  609  000016c8          	.proc _Putchar
  610  000016c8          	.global _Putchar
  611  000016c8          	_Putchar:
  612  000016c8  44000280	trap	#0x280
  613  000016cc  4be00000	jr	r31
  614  000016d0  54000000	nop
  615  000016d4          	.endproc _Putchar
  617  000016d4          	.proc _Printf
  618  000016d4          	.global _Printf
  619  000016d4          	_Printf:
  620  000016d4  44000201	trap	#0x201
  621  000016d8  4be00000	jr	r31
  622  000016dc  54000000	nop
  623  000016e0          	.endproc _Printf
  625  000016e0          	.proc _Getpid
  626  000016e0          	.global _Getpid
  627  000016e0          	_Getpid:
  628  000016e0  44000431	trap	#0x431
  629  000016e4  4be00000	jr	r31
  630  000016e8  54000000	nop
  631  000016ec          	.endproc _Getpid
  633  000016ec          	.proc _process_create
  634  000016ec          	.global _process_create
  635  000016ec          	_process_create:
  636  000016ec  44000432	trap	#0x432
  637  000016f0  4be00000	jr	r31
  638  000016f4  54000000	nop
  639  000016f8          	.endproc _process_create
  641  000016f8          	.proc _shmget
  642  000016f8          	.global _shmget
  643  000016f8          	_shmget:
  644  000016f8  44000440	trap	#0x440
  645  000016fc  4be00000	jr	r31
  646  00001700  54000000	nop
  647  00001704          	.endproc _shmget
  649  00001704          	.proc _shmat
  650  00001704          	.global _shmat
  651  00001704          	_shmat:
  652  00001704  44000441	trap	#0x441
  653  00001708  4be00000	jr	r31
  654  0000170c  54000000	nop
  655  00001710          	.endproc _shmat
  657  00001710          	.proc _sem_create
  658  00001710          	.global _sem_create
  659  00001710          	_sem_create:
  660  00001710  44000450	trap	#0x450
  661  00001714  4be00000	jr	r31
  662  00001718  54000000	nop
  663  0000171c          	.endproc _sem_create
  665  0000171c          	.proc _sem_wait
  666  0000171c          	.global _sem_wait
  667  0000171c          	_sem_wait:
  668  0000171c  44000451	trap	#0x451
  669  00001720  4be00000	jr	r31
  670  00001724  54000000	nop
  671  00001728          	.endproc _sem_wait
  673  00001728          	.proc _sem_signal
  674  00001728          	.global _sem_signal
  675  00001728          	_sem_signal:
  676  00001728  44000452	trap	#0x452
  677  0000172c  4be00000	jr	r31
  678  00001730  54000000	nop
  679  00001734          	.endproc _sem_signal
  681  00001734          	.proc _lock_create
  682  00001734          	.global _lock_create
  683  00001734          	_lock_create:
  684  00001734  44000453	trap	#0x453
  685  00001738  4be00000	jr	r31
  686  0000173c  54000000	nop
  687  00001740          	.endproc _lock_create
  689  00001740          	.proc _lock_acquire
  690  00001740          	.global _lock_acquire
  691  00001740          	_lock_acquire:
  692  00001740  44000454	trap	#0x454
  693  00001744  4be00000	jr	r31
  694  00001748  54000000	nop
  695  0000174c          	.endproc _lock_acquire
  697  0000174c          	.proc _lock_release
  698  0000174c          	.global _lock_release
  699  0000174c          	_lock_release:
  700  0000174c  44000455	trap	#0x455
  701  00001750  4be00000	jr	r31
  702  00001754  54000000	nop
  703  00001758          	.endproc _lock_release
  705  00001758          	.proc _cond_create
  706  00001758          	.global _cond_create
  707  00001758          	_cond_create:
  708  00001758  44000456	trap	#0x456
  709  0000175c  4be00000	jr	r31
  710  00001760  54000000	nop
  711  00001764          	.endproc _cond_create
  713  00001764          	.proc _cond_wait
  714  00001764          	.global _cond_wait
  715  00001764          	_cond_wait:
  716  00001764  44000457	trap	#0x457
  717  00001768  4be00000	jr	r31
  718  0000176c  54000000	nop
  719  00001770          	.endproc _cond_wait
  721  00001770          	.proc _cond_signal
  722  00001770          	.global _cond_signal
  723  00001770          	_cond_signal:
  724  00001770  44000458	trap	#0x458
  725  00001774  4be00000	jr	r31
  726  00001778  54000000	nop
  727  0000177c          	.endproc _cond_signal
  729  0000177c          	.proc _Exit
  730  0000177c          	.global _Exit
  731  0000177c          	_Exit:
  732  0000177c  44000500	trap	#0x500
  733  00001780  4be00000	jr	r31
  734  00001784  54000000	nop
  735  00001788          	.endproc _Exit
  736                      ; Compiled by GCC
  738  00001788          	.align 2
  739  00001788          	.proc _isspace
  740  00001788          	.global _isspace
  741  00001788          	_isspace:
  742                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  743  00001788  afbefffc	sw	-4(r29),r30; push fp
  744  0000178c  001df020	add	r30,r0,r29; fp = sp
  745  00001790  afbffff8	sw	-8(r29),r31; push ret addr
  746  00001794  2fbd0018	subui	r29,r29,#24; alloc local storage
  747  00001798  afa20000	sw	0(r29),r2
  748  0000179c  afa30004	sw	4(r29),r3
  749  000017a0  afa40008	sw	8(r29),r4
  750  000017a4  83c20003	lb	r2,3(r30)
  751  000017a8  20010000	addi	r1,r0,#0
  752  000017ac  304300ff	andi	r3,r2,#0x00ff
  753  000017b0  60640020	seqi	r4,r3,#32
  754  000017b4  1480002c	bnez	r4,L3_LF2
  755  000017b8  54000000	nop; delay slot nop
  756  000017bc  304300ff	andi	r3,r2,#0x00ff
  757  000017c0  60640009	seqi	r4,r3,#9
  758  000017c4  1480001c	bnez	r4,L3_LF2
  759  000017c8  54000000	nop; delay slot nop
  760  000017cc  304300ff	andi	r3,r2,#0x00ff
  761  000017d0  6064000a	seqi	r4,r3,#10
  762  000017d4  1480000c	bnez	r4,L3_LF2
  763  000017d8  54000000	nop; delay slot nop
  764  000017dc  08000008	j	L2_LF2
  765  000017e0  54000000	nop; delay slot nop
  766  000017e4          	L3_LF2:
  767  000017e4  20010001	addi	r1,r0,#1
  768  000017e8          	L2_LF2:
  769  000017e8  08000004	j	L1_LF2
  770  000017ec  54000000	nop; delay slot nop
  771  000017f0          	L1_LF2:
  772  000017f0  8fa20000	lw	r2,0(r29)
  773  000017f4  8fa30004	lw	r3,4(r29)
  774  000017f8  8fa40008	lw	r4,8(r29)
  775  000017fc  8fdffff8	lw	r31,-8(r30)
  776  00001800  001ee820	add	r29,r0,r30
  777  00001804  8fdefffc	lw	r30,-4(r30)
  778  00001808  4be00000	jr	r31
  779  0000180c  54000000	nop
  780  00001810          	.endproc _isspace
  781  00001810          	.align 2
  782  00001810          	.proc _isxdigit
  783  00001810          	.global _isxdigit
  784  00001810          	_isxdigit:
  785                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  786  00001810  afbefffc	sw	-4(r29),r30; push fp
  787  00001814  001df020	add	r30,r0,r29; fp = sp
  788  00001818  afbffff8	sw	-8(r29),r31; push ret addr
  789  0000181c  2fbd0018	subui	r29,r29,#24; alloc local storage
  790  00001820  afa20000	sw	0(r29),r2
  791  00001824  afa30004	sw	4(r29),r3
  792  00001828  afa40008	sw	8(r29),r4
  793  0000182c  83c20003	lb	r2,3(r30)
  794  00001830  20010000	addi	r1,r0,#0
  795  00001834  304300ff	andi	r3,r2,#0x00ff
  796  00001838  6c64002f	sgtui	r4,r3,#47
  797  0000183c  1080001c	beqz	r4,L7_LF2
  798  00001840  54000000	nop; delay slot nop
  799  00001844  304300ff	andi	r3,r2,#0x00ff
  800  00001848  70640039	sleui	r4,r3,#57
  801  0000184c  1480005c	bnez	r4,L6_LF2
  802  00001850  54000000	nop; delay slot nop
  803  00001854  08000004	j	L7_LF2
  804  00001858  54000000	nop; delay slot nop
  805  0000185c          	L7_LF2:
  806  0000185c  304300ff	andi	r3,r2,#0x00ff
  807  00001860  6c640060	sgtui	r4,r3,#96
  808  00001864  1080001c	beqz	r4,L8_LF2
  809  00001868  54000000	nop; delay slot nop
  810  0000186c  304300ff	andi	r3,r2,#0x00ff
  811  00001870  70640066	sleui	r4,r3,#102
  812  00001874  14800034	bnez	r4,L6_LF2
  813  00001878  54000000	nop; delay slot nop
  814  0000187c  08000004	j	L8_LF2
  815  00001880  54000000	nop; delay slot nop
  816  00001884          	L8_LF2:
  817  00001884  304300ff	andi	r3,r2,#0x00ff
  818  00001888  6c640040	sgtui	r4,r3,#64
  819  0000188c  10800020	beqz	r4,L5_LF2
  820  00001890  54000000	nop; delay slot nop
  821  00001894  304300ff	andi	r3,r2,#0x00ff
  822  00001898  70640041	sleui	r4,r3,#65
  823  0000189c  1480000c	bnez	r4,L6_LF2
  824  000018a0  54000000	nop; delay slot nop
  825  000018a4  08000008	j	L5_LF2
  826  000018a8  54000000	nop; delay slot nop
  827  000018ac          	L6_LF2:
  828  000018ac  20010001	addi	r1,r0,#1
  829  000018b0          	L5_LF2:
  830  000018b0  08000004	j	L4_LF2
  831  000018b4  54000000	nop; delay slot nop
  832  000018b8          	L4_LF2:
  833  000018b8  8fa20000	lw	r2,0(r29)
  834  000018bc  8fa30004	lw	r3,4(r29)
  835  000018c0  8fa40008	lw	r4,8(r29)
  836  000018c4  8fdffff8	lw	r31,-8(r30)
  837  000018c8  001ee820	add	r29,r0,r30
  838  000018cc  8fdefffc	lw	r30,-4(r30)
  839  000018d0  4be00000	jr	r31
  840  000018d4  54000000	nop
  841  000018d8          	.endproc _isxdigit
  842  000018d8          	.align 2
  843  000018d8          	.proc _dstrcpy
  844  000018d8          	.global _dstrcpy
  845  000018d8          	_dstrcpy:
  846                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  847  000018d8  afbefffc	sw	-4(r29),r30; push fp
  848  000018dc  001df020	add	r30,r0,r29; fp = sp
  849  000018e0  afbffff8	sw	-8(r29),r31; push ret addr
  850  000018e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  851  000018e8  afa20000	sw	0(r29),r2
  852  000018ec  afa30004	sw	4(r29),r3
  853  000018f0  8fc10000	lw	r1,(r30)
  854  000018f4  afc1fff4	sw	-12(r30),r1
  855  000018f8          	L10_LF2:
  856  000018f8  8fc10000	lw	r1,(r30)
  857  000018fc  20220001	addi	r2,r1,#1
  858  00001900  afc20000	sw	(r30),r2
  859  00001904  8fc20004	lw	r2,4(r30)
  860  00001908  20430001	addi	r3,r2,#1
  861  0000190c  afc30004	sw	4(r30),r3
  862  00001910  80420000	lb	r2,(r2)
  863  00001914  a0220000	sb	(r1),r2
  864  00001918  a3c2fff3	sb	-13(r30),r2
  865  0000191c          	L12_LF2:
  866  0000191c  93c1fff3	lbu	r1,-13(r30)
  867  00001920  64220000	snei	r2,r1,#0
  868  00001924  1440000c	bnez	r2,L13_LF2
  869  00001928  54000000	nop; delay slot nop
  870  0000192c  0800000c	j	L11_LF2
  871  00001930  54000000	nop; delay slot nop
  872  00001934          	L13_LF2:
  873  00001934  0bffffc0	j	L10_LF2
  874  00001938  54000000	nop; delay slot nop
  875  0000193c          	L11_LF2:
  876  0000193c  8fc1fff4	lw	r1,-12(r30)
  877  00001940  08000004	j	L9_LF2
  878  00001944  54000000	nop; delay slot nop
  879  00001948          	L9_LF2:
  880  00001948  8fa20000	lw	r2,0(r29)
  881  0000194c  8fa30004	lw	r3,4(r29)
  882  00001950  8fdffff8	lw	r31,-8(r30)
  883  00001954  001ee820	add	r29,r0,r30
  884  00001958  8fdefffc	lw	r30,-4(r30)
  885  0000195c  4be00000	jr	r31
  886  00001960  54000000	nop
  887  00001964          	.endproc _dstrcpy
  888  00001964          	.align 2
  889  00001964          	.proc _dstrncpy
  890  00001964          	.global _dstrncpy
  891  00001964          	_dstrncpy:
  892                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  893  00001964  afbefffc	sw	-4(r29),r30; push fp
  894  00001968  001df020	add	r30,r0,r29; fp = sp
  895  0000196c  afbffff8	sw	-8(r29),r31; push ret addr
  896  00001970  2fbd0018	subui	r29,r29,#24; alloc local storage
  897  00001974  afa20000	sw	0(r29),r2
  898  00001978  afa30004	sw	4(r29),r3
  899  0000197c  8fc10000	lw	r1,(r30)
  900  00001980  afc1fff4	sw	-12(r30),r1
  901  00001984          	L15_LF2:
  902  00001984  8fc10008	lw	r1,8(r30)
  903  00001988  2022ffff	addi	r2,r1,#-1
  904  0000198c  afc20008	sw	8(r30),r2
  905  00001990  70210000	slei	r1,r1,#0
  906  00001994  1020000c	beqz	r1,L18_LF2
  907  00001998  54000000	nop; delay slot nop
  908  0000199c  08000048	j	L16_LF2
  909  000019a0  54000000	nop; delay slot nop
  910  000019a4          	L18_LF2:
  911  000019a4  8fc10000	lw	r1,(r30)
  912  000019a8  20220001	addi	r2,r1,#1
  913  000019ac  afc20000	sw	(r30),r2
  914  000019b0  8fc20004	lw	r2,4(r30)
  915  000019b4  20430001	addi	r3,r2,#1
  916  000019b8  afc30004	sw	4(r30),r3
  917  000019bc  80420000	lb	r2,(r2)
  918  000019c0  a0220000	sb	(r1),r2
  919  000019c4  a3c2fff3	sb	-13(r30),r2
  920  000019c8          	L17_LF2:
  921  000019c8  93c1fff3	lbu	r1,-13(r30)
  922  000019cc  64220000	snei	r2,r1,#0
  923  000019d0  1440000c	bnez	r2,L19_LF2
  924  000019d4  54000000	nop; delay slot nop
  925  000019d8  0800000c	j	L16_LF2
  926  000019dc  54000000	nop; delay slot nop
  927  000019e0          	L19_LF2:
  928  000019e0  0bffffa0	j	L15_LF2
  929  000019e4  54000000	nop; delay slot nop
  930  000019e8          	L16_LF2:
  931  000019e8  8fc1fff4	lw	r1,-12(r30)
  932  000019ec  08000004	j	L14_LF2
  933  000019f0  54000000	nop; delay slot nop
  934  000019f4          	L14_LF2:
  935  000019f4  8fa20000	lw	r2,0(r29)
  936  000019f8  8fa30004	lw	r3,4(r29)
  937  000019fc  8fdffff8	lw	r31,-8(r30)
  938  00001a00  001ee820	add	r29,r0,r30
  939  00001a04  8fdefffc	lw	r30,-4(r30)
  940  00001a08  4be00000	jr	r31
  941  00001a0c  54000000	nop
  942  00001a10          	.endproc _dstrncpy
  943  00001a10          	.align 2
  944  00001a10          	.proc _dstrcat
  945  00001a10          	.global _dstrcat
  946  00001a10          	_dstrcat:
  947                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  948  00001a10  afbefffc	sw	-4(r29),r30; push fp
  949  00001a14  001df020	add	r30,r0,r29; fp = sp
  950  00001a18  afbffff8	sw	-8(r29),r31; push ret addr
  951  00001a1c  2fbd0018	subui	r29,r29,#24; alloc local storage
  952  00001a20  afa20000	sw	0(r29),r2
  953  00001a24  8fc10000	lw	r1,(r30)
  954  00001a28  afc1fff4	sw	-12(r30),r1
  955  00001a2c          	L21_LF2:
  956  00001a2c  8fc10000	lw	r1,(r30)
  957  00001a30  90220000	lbu	r2,(r1)
  958  00001a34  64410000	snei	r1,r2,#0
  959  00001a38  1420000c	bnez	r1,L23_LF2
  960  00001a3c  54000000	nop; delay slot nop
  961  00001a40  0800001c	j	L22_LF2
  962  00001a44  54000000	nop; delay slot nop
  963  00001a48          	L23_LF2:
  964  00001a48  8fc20000	lw	r2,(r30)
  965  00001a4c  20410001	addi	r1,r2,#1
  966  00001a50  00011020	add	r2,r0,r1
  967  00001a54  afc20000	sw	(r30),r2
  968  00001a58  0bffffd0	j	L21_LF2
  969  00001a5c  54000000	nop; delay slot nop
  970  00001a60          	L22_LF2:
  971  00001a60  23bdfff8	addi	r29,r29,#-8
  972  00001a64  001d0820	add	r1,r0,r29
  973  00001a68  8fc20000	lw	r2,(r30)
  974  00001a6c  ac220000	sw	(r1),r2
  975  00001a70  8fc20004	lw	r2,4(r30)
  976  00001a74  ac220004	sw	4(r1),r2
  977  00001a78  0ffffe5c	jal	_dstrcpy
  978  00001a7c  54000000	nop; delay slot nop
  979  00001a80  23bd0008	addi	r29,r29,#8
  980  00001a84  8fc1fff4	lw	r1,-12(r30)
  981  00001a88  08000004	j	L20_LF2
  982  00001a8c  54000000	nop; delay slot nop
  983  00001a90          	L20_LF2:
  984  00001a90  8fa20000	lw	r2,0(r29)
  985  00001a94  8fdffff8	lw	r31,-8(r30)
  986  00001a98  001ee820	add	r29,r0,r30
  987  00001a9c  8fdefffc	lw	r30,-4(r30)
  988  00001aa0  4be00000	jr	r31
  989  00001aa4  54000000	nop
  990  00001aa8          	.endproc _dstrcat
  991  00001aa8          	.align 2
  992  00001aa8          	.proc _dstrncmp
  993  00001aa8          	.global _dstrncmp
  994  00001aa8          	_dstrncmp:
  995                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  996  00001aa8  afbefffc	sw	-4(r29),r30; push fp
  997  00001aac  001df020	add	r30,r0,r29; fp = sp
  998  00001ab0  afbffff8	sw	-8(r29),r31; push ret addr
  999  00001ab4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1000  00001ab8  afa20000	sw	0(r29),r2
 1001  00001abc  afa30004	sw	4(r29),r3
 1002  00001ac0  54000000	nop
 1003  00001ac4  20010000	addi	r1,r0,#0
 1004  00001ac8  afc1fff4	sw	-12(r30),r1
 1005  00001acc          	L25_LF2:
 1006  00001acc  8fc1fff4	lw	r1,-12(r30)
 1007  00001ad0  8fc20008	lw	r2,8(r30)
 1008  00001ad4  0022082a	slt	r1,r1,r2
 1009  00001ad8  1420000c	bnez	r1,L28_LF2
 1010  00001adc  54000000	nop; delay slot nop
 1011  00001ae0  08000088	j	L26_LF2
 1012  00001ae4  54000000	nop; delay slot nop
 1013  00001ae8          	L28_LF2:
 1014  00001ae8  8fc10004	lw	r1,4(r30)
 1015  00001aec  90220000	lbu	r2,(r1)
 1016  00001af0  64410000	snei	r1,r2,#0
 1017  00001af4  14200018	bnez	r1,L29_LF2
 1018  00001af8  54000000	nop; delay slot nop
 1019  00001afc  20010000	addi	r1,r0,#0
 1020  00001b00  080000d8	j	L24_LF2
 1021  00001b04  54000000	nop; delay slot nop
 1022  00001b08  08000028	j	L30_LF2
 1023  00001b0c  54000000	nop; delay slot nop
 1024  00001b10          	L29_LF2:
 1025  00001b10  8fc10000	lw	r1,(r30)
 1026  00001b14  8fc20004	lw	r2,4(r30)
 1027  00001b18  90210000	lbu	r1,(r1)
 1028  00001b1c  90420000	lbu	r2,(r2)
 1029  00001b20  00220829	sne	r1,r1,r2
 1030  00001b24  1020000c	beqz	r1,L30_LF2
 1031  00001b28  54000000	nop; delay slot nop
 1032  00001b2c  0800003c	j	L26_LF2
 1033  00001b30  54000000	nop; delay slot nop
 1034  00001b34          	L31_LF2:
 1035  00001b34          	L30_LF2:
 1036  00001b34  8fc20000	lw	r2,(r30)
 1037  00001b38  20410001	addi	r1,r2,#1
 1038  00001b3c  00011020	add	r2,r0,r1
 1039  00001b40  afc20000	sw	(r30),r2
 1040  00001b44  8fc20004	lw	r2,4(r30)
 1041  00001b48  20410001	addi	r1,r2,#1
 1042  00001b4c  00011020	add	r2,r0,r1
 1043  00001b50  afc20004	sw	4(r30),r2
 1044  00001b54          	L27_LF2:
 1045  00001b54  8fc2fff4	lw	r2,-12(r30)
 1046  00001b58  20410001	addi	r1,r2,#1
 1047  00001b5c  00011020	add	r2,r0,r1
 1048  00001b60  afc2fff4	sw	-12(r30),r2
 1049  00001b64  0bffff64	j	L25_LF2
 1050  00001b68  54000000	nop; delay slot nop
 1051  00001b6c          	L26_LF2:
 1052  00001b6c  8fc1fff4	lw	r1,-12(r30)
 1053  00001b70  8fc20008	lw	r2,8(r30)
 1054  00001b74  00220828	seq	r1,r1,r2
 1055  00001b78  10200018	beqz	r1,L32_LF2
 1056  00001b7c  54000000	nop; delay slot nop
 1057  00001b80  20010000	addi	r1,r0,#0
 1058  00001b84  08000054	j	L24_LF2
 1059  00001b88  54000000	nop; delay slot nop
 1060  00001b8c  0800004c	j	L33_LF2
 1061  00001b90  54000000	nop; delay slot nop
 1062  00001b94          	L32_LF2:
 1063  00001b94  8fc20000	lw	r2,(r30)
 1064  00001b98  90410000	lbu	r1,(r2)
 1065  00001b9c  8fc20004	lw	r2,4(r30)
 1066  00001ba0  90430000	lbu	r3,(r2)
 1067  00001ba4  00230822	sub	r1,r1,r3
 1068  00001ba8  74220000	sgei	r2,r1,#0
 1069  00001bac  10400020	beqz	r2,L34_LF2
 1070  00001bb0  54000000	nop; delay slot nop
 1071  00001bb4  8fc10000	lw	r1,(r30)
 1072  00001bb8  8fc20004	lw	r2,4(r30)
 1073  00001bbc  90210000	lbu	r1,(r1)
 1074  00001bc0  90420000	lbu	r2,(r2)
 1075  00001bc4  00220829	sne	r1,r1,r2
 1076  00001bc8  08000008	j	L35_LF2
 1077  00001bcc  54000000	nop; delay slot nop
 1078  00001bd0          	L34_LF2:
 1079  00001bd0  2001ffff	addi	r1,r0,#-1
 1080  00001bd4          	L35_LF2:
 1081  00001bd4  08000004	j	L24_LF2
 1082  00001bd8  54000000	nop; delay slot nop
 1083  00001bdc          	L33_LF2:
 1084  00001bdc          	L24_LF2:
 1085  00001bdc  8fa20000	lw	r2,0(r29)
 1086  00001be0  8fa30004	lw	r3,4(r29)
 1087  00001be4  8fdffff8	lw	r31,-8(r30)
 1088  00001be8  001ee820	add	r29,r0,r30
 1089  00001bec  8fdefffc	lw	r30,-4(r30)
 1090  00001bf0  4be00000	jr	r31
 1091  00001bf4  54000000	nop
 1092  00001bf8          	.endproc _dstrncmp
 1093  00001bf8          	.align 2
 1094  00001bf8          	.proc _dstrlen
 1095  00001bf8          	.global _dstrlen
 1096  00001bf8          	_dstrlen:
 1097                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1098  00001bf8  afbefffc	sw	-4(r29),r30; push fp
 1099  00001bfc  001df020	add	r30,r0,r29; fp = sp
 1100  00001c00  afbffff8	sw	-8(r29),r31; push ret addr
 1101  00001c04  2fbd0018	subui	r29,r29,#24; alloc local storage
 1102  00001c08  afa20000	sw	0(r29),r2
 1103  00001c0c  20010000	addi	r1,r0,#0
 1104  00001c10  afc1fff4	sw	-12(r30),r1
 1105  00001c14          	L37_LF2:
 1106  00001c14  8fc10000	lw	r1,(r30)
 1107  00001c18  20220001	addi	r2,r1,#1
 1108  00001c1c  afc20000	sw	(r30),r2
 1109  00001c20  90210000	lbu	r1,(r1)
 1110  00001c24  64220000	snei	r2,r1,#0
 1111  00001c28  1440000c	bnez	r2,L39_LF2
 1112  00001c2c  54000000	nop; delay slot nop
 1113  00001c30  0800001c	j	L38_LF2
 1114  00001c34  54000000	nop; delay slot nop
 1115  00001c38          	L39_LF2:
 1116  00001c38  8fc2fff4	lw	r2,-12(r30)
 1117  00001c3c  20410001	addi	r1,r2,#1
 1118  00001c40  00011020	add	r2,r0,r1
 1119  00001c44  afc2fff4	sw	-12(r30),r2
 1120  00001c48  0bffffc8	j	L37_LF2
 1121  00001c4c  54000000	nop; delay slot nop
 1122  00001c50          	L38_LF2:
 1123  00001c50  8fc1fff4	lw	r1,-12(r30)
 1124  00001c54  08000004	j	L36_LF2
 1125  00001c58  54000000	nop; delay slot nop
 1126  00001c5c          	L36_LF2:
 1127  00001c5c  8fa20000	lw	r2,0(r29)
 1128  00001c60  8fdffff8	lw	r31,-8(r30)
 1129  00001c64  001ee820	add	r29,r0,r30
 1130  00001c68  8fdefffc	lw	r30,-4(r30)
 1131  00001c6c  4be00000	jr	r31
 1132  00001c70  54000000	nop
 1133  00001c74          	.endproc _dstrlen
 1134  00001c74          	.align 2
 1135  00001c74          	.proc _dstrstr
 1136  00001c74          	.global _dstrstr
 1137  00001c74          	_dstrstr:
 1138                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1139  00001c74  afbefffc	sw	-4(r29),r30; push fp
 1140  00001c78  001df020	add	r30,r0,r29; fp = sp
 1141  00001c7c  afbffff8	sw	-8(r29),r31; push ret addr
 1142  00001c80  2fbd0018	subui	r29,r29,#24; alloc local storage
 1143  00001c84  afa20000	sw	0(r29),r2
 1144  00001c88  23bdfff8	addi	r29,r29,#-8
 1145  00001c8c  001d0820	add	r1,r0,r29
 1146  00001c90  8fc20004	lw	r2,4(r30)
 1147  00001c94  ac220000	sw	(r1),r2
 1148  00001c98  0fffff5c	jal	_dstrlen
 1149  00001c9c  54000000	nop; delay slot nop
 1150  00001ca0  23bd0008	addi	r29,r29,#8
 1151  00001ca4  afc1fff4	sw	-12(r30),r1
 1152  00001ca8          	L41_LF2:
 1153  00001ca8  8fc10000	lw	r1,(r30)
 1154  00001cac  90220000	lbu	r2,(r1)
 1155  00001cb0  64410000	snei	r1,r2,#0
 1156  00001cb4  1420000c	bnez	r1,L43_LF2
 1157  00001cb8  54000000	nop; delay slot nop
 1158  00001cbc  08000060	j	L42_LF2
 1159  00001cc0  54000000	nop; delay slot nop
 1160  00001cc4          	L43_LF2:
 1161  00001cc4  23bdfff0	addi	r29,r29,#-16
 1162  00001cc8  001d0820	add	r1,r0,r29
 1163  00001ccc  8fc20000	lw	r2,(r30)
 1164  00001cd0  ac220000	sw	(r1),r2
 1165  00001cd4  8fc20004	lw	r2,4(r30)
 1166  00001cd8  ac220004	sw	4(r1),r2
 1167  00001cdc  8fc2fff4	lw	r2,-12(r30)
 1168  00001ce0  ac220008	sw	8(r1),r2
 1169  00001ce4  0ffffdc0	jal	_dstrncmp
 1170  00001ce8  54000000	nop; delay slot nop
 1171  00001cec  23bd0010	addi	r29,r29,#16
 1172  00001cf0  64220000	snei	r2,r1,#0
 1173  00001cf4  14400010	bnez	r2,L44_LF2
 1174  00001cf8  54000000	nop; delay slot nop
 1175  00001cfc  8fc10000	lw	r1,(r30)
 1176  00001d00  08000028	j	L40_LF2
 1177  00001d04  54000000	nop; delay slot nop
 1178  00001d08          	L44_LF2:
 1179  00001d08  8fc20000	lw	r2,(r30)
 1180  00001d0c  20410001	addi	r1,r2,#1
 1181  00001d10  00011020	add	r2,r0,r1
 1182  00001d14  afc20000	sw	(r30),r2
 1183  00001d18  0bffff8c	j	L41_LF2
 1184  00001d1c  54000000	nop; delay slot nop
 1185  00001d20          	L42_LF2:
 1186  00001d20  20010000	addi	r1,r0,#0
 1187  00001d24  08000004	j	L40_LF2
 1188  00001d28  54000000	nop; delay slot nop
 1189  00001d2c          	L40_LF2:
 1190  00001d2c  8fa20000	lw	r2,0(r29)
 1191  00001d30  8fdffff8	lw	r31,-8(r30)
 1192  00001d34  001ee820	add	r29,r0,r30
 1193  00001d38  8fdefffc	lw	r30,-4(r30)
 1194  00001d3c  4be00000	jr	r31
 1195  00001d40  54000000	nop
 1196  00001d44          	.endproc _dstrstr
 1197  00001d44          	.align 2
 1198  00001d44          	.proc _dmindex
 1199  00001d44          	.global _dmindex
 1200  00001d44          	_dmindex:
 1201                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1202  00001d44  afbefffc	sw	-4(r29),r30; push fp
 1203  00001d48  001df020	add	r30,r0,r29; fp = sp
 1204  00001d4c  afbffff8	sw	-8(r29),r31; push ret addr
 1205  00001d50  2fbd0018	subui	r29,r29,#24; alloc local storage
 1206  00001d54  afa20000	sw	0(r29),r2
 1207  00001d58  54000000	nop
 1208  00001d5c          	L46_LF2:
 1209  00001d5c  8fc10000	lw	r1,(r30)
 1210  00001d60  90220000	lbu	r2,(r1)
 1211  00001d64  64410000	snei	r1,r2,#0
 1212  00001d68  1420000c	bnez	r1,L48_LF2
 1213  00001d6c  54000000	nop; delay slot nop
 1214  00001d70  08000070	j	L47_LF2
 1215  00001d74  54000000	nop; delay slot nop
 1216  00001d78          	L48_LF2:
 1217  00001d78  8fc10004	lw	r1,4(r30)
 1218  00001d7c  afc1fff4	sw	-12(r30),r1
 1219  00001d80          	L49_LF2:
 1220  00001d80  8fc1fff4	lw	r1,-12(r30)
 1221  00001d84  90220000	lbu	r2,(r1)
 1222  00001d88  64410000	snei	r1,r2,#0
 1223  00001d8c  1420000c	bnez	r1,L52_LF2
 1224  00001d90  54000000	nop; delay slot nop
 1225  00001d94  08000044	j	L50_LF2
 1226  00001d98  54000000	nop; delay slot nop
 1227  00001d9c          	L52_LF2:
 1228  00001d9c  8fc10000	lw	r1,(r30)
 1229  00001da0  8fc2fff4	lw	r2,-12(r30)
 1230  00001da4  90210000	lbu	r1,(r1)
 1231  00001da8  90420000	lbu	r2,(r2)
 1232  00001dac  00220828	seq	r1,r1,r2
 1233  00001db0  10200010	beqz	r1,L51_LF2
 1234  00001db4  54000000	nop; delay slot nop
 1235  00001db8  8fc10000	lw	r1,(r30)
 1236  00001dbc  08000030	j	L45_LF2
 1237  00001dc0  54000000	nop; delay slot nop
 1238  00001dc4          	L53_LF2:
 1239  00001dc4          	L51_LF2:
 1240  00001dc4  8fc2fff4	lw	r2,-12(r30)
 1241  00001dc8  20410001	addi	r1,r2,#1
 1242  00001dcc  00011020	add	r2,r0,r1
 1243  00001dd0  afc2fff4	sw	-12(r30),r2
 1244  00001dd4  0bffffa8	j	L49_LF2
 1245  00001dd8  54000000	nop; delay slot nop
 1246  00001ddc          	L50_LF2:
 1247  00001ddc  0bffff7c	j	L46_LF2
 1248  00001de0  54000000	nop; delay slot nop
 1249  00001de4          	L47_LF2:
 1250  00001de4  20010000	addi	r1,r0,#0
 1251  00001de8  08000004	j	L45_LF2
 1252  00001dec  54000000	nop; delay slot nop
 1253  00001df0          	L45_LF2:
 1254  00001df0  8fa20000	lw	r2,0(r29)
 1255  00001df4  8fdffff8	lw	r31,-8(r30)
 1256  00001df8  001ee820	add	r29,r0,r30
 1257  00001dfc  8fdefffc	lw	r30,-4(r30)
 1258  00001e00  4be00000	jr	r31
 1259  00001e04  54000000	nop
 1260  00001e08          	.endproc _dmindex
 1261  00001e08          	.align 2
 1262  00001e08          	.proc _dindex
 1263  00001e08          	.global _dindex
 1264  00001e08          	_dindex:
 1265                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1266  00001e08  afbefffc	sw	-4(r29),r30; push fp
 1267  00001e0c  001df020	add	r30,r0,r29; fp = sp
 1268  00001e10  afbffff8	sw	-8(r29),r31; push ret addr
 1269  00001e14  2fbd0010	subui	r29,r29,#16; alloc local storage
 1270  00001e18  afa20000	sw	0(r29),r2
 1271  00001e1c  54000000	nop
 1272  00001e20          	L55_LF2:
 1273  00001e20  8fc10000	lw	r1,(r30)
 1274  00001e24  90220000	lbu	r2,(r1)
 1275  00001e28  64410000	snei	r1,r2,#0
 1276  00001e2c  1420000c	bnez	r1,L57_LF2
 1277  00001e30  54000000	nop; delay slot nop
 1278  00001e34  08000040	j	L56_LF2
 1279  00001e38  54000000	nop; delay slot nop
 1280  00001e3c          	L57_LF2:
 1281  00001e3c  8fc10000	lw	r1,(r30)
 1282  00001e40  90220000	lbu	r2,(r1)
 1283  00001e44  8fc10004	lw	r1,4(r30)
 1284  00001e48  00411028	seq	r2,r2,r1
 1285  00001e4c  10400010	beqz	r2,L58_LF2
 1286  00001e50  54000000	nop; delay slot nop
 1287  00001e54  8fc10000	lw	r1,(r30)
 1288  00001e58  08000028	j	L54_LF2
 1289  00001e5c  54000000	nop; delay slot nop
 1290  00001e60          	L58_LF2:
 1291  00001e60  8fc20000	lw	r2,(r30)
 1292  00001e64  20410001	addi	r1,r2,#1
 1293  00001e68  00011020	add	r2,r0,r1
 1294  00001e6c  afc20000	sw	(r30),r2
 1295  00001e70  0bffffac	j	L55_LF2
 1296  00001e74  54000000	nop; delay slot nop
 1297  00001e78          	L56_LF2:
 1298  00001e78  20010000	addi	r1,r0,#0
 1299  00001e7c  08000004	j	L54_LF2
 1300  00001e80  54000000	nop; delay slot nop
 1301  00001e84          	L54_LF2:
 1302  00001e84  8fa20000	lw	r2,0(r29)
 1303  00001e88  8fdffff8	lw	r31,-8(r30)
 1304  00001e8c  001ee820	add	r29,r0,r30
 1305  00001e90  8fdefffc	lw	r30,-4(r30)
 1306  00001e94  4be00000	jr	r31
 1307  00001e98  54000000	nop
 1308  00001e9c          	.endproc _dindex
 1309  00001e9c          	.align 2
 1310  00001e9c          	.proc _ditoa
 1311  00001e9c          	.global _ditoa
 1312  00001e9c          	_ditoa:
 1313                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1314  00001e9c  afbefffc	sw	-4(r29),r30; push fp
 1315  00001ea0  001df020	add	r30,r0,r29; fp = sp
 1316  00001ea4  afbffff8	sw	-8(r29),r31; push ret addr
 1317  00001ea8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1318  00001eac  afa20000	sw	0(r29),r2
 1319  00001eb0  afa30004	sw	4(r29),r3
 1320  00001eb4  8fc10000	lw	r1,(r30)
 1321  00001eb8  68220000	slti	r2,r1,#0
 1322  00001ebc  1040002c	beqz	r2,L60_LF2
 1323  00001ec0  54000000	nop; delay slot nop
 1324  00001ec4  8fc10004	lw	r1,4(r30)
 1325  00001ec8  20220001	addi	r2,r1,#1
 1326  00001ecc  afc20004	sw	4(r30),r2
 1327  00001ed0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1328  00001ed4  a0220000	sb	(r1),r2
 1329  00001ed8  8fc10000	lw	r1,(r30)
 1330  00001edc  00011022	sub	r2,r0,r1
 1331  00001ee0  afc20000	sw	(r30),r2
 1332  00001ee4  08000118	j	L61_LF2
 1333  00001ee8  54000000	nop; delay slot nop
 1334  00001eec          	L60_LF2:
 1335  00001eec  8fc10000	lw	r1,(r30)
 1336  00001ef0  64220000	snei	r2,r1,#0
 1337  00001ef4  14400020	bnez	r2,L62_LF2
 1338  00001ef8  54000000	nop; delay slot nop
 1339  00001efc  8fc10004	lw	r1,4(r30)
 1340  00001f00  20220001	addi	r2,r1,#1
 1341  00001f04  afc20004	sw	4(r30),r2
 1342  00001f08  20020030	addi	r2,r0,(#0x30)&0xff
 1343  00001f0c  a0220000	sb	(r1),r2
 1344  00001f10  080000ec	j	L61_LF2
 1345  00001f14  54000000	nop; delay slot nop
 1346  00001f18          	L62_LF2:
 1347  00001f18  20010001	addi	r1,r0,#1
 1348  00001f1c  afc1fff4	sw	-12(r30),r1
 1349  00001f20          	L64_LF2:
 1350  00001f20  8fc1fff4	lw	r1,-12(r30)
 1351  00001f24  8fc20000	lw	r2,(r30)
 1352  00001f28  0022082c	sle	r1,r1,r2
 1353  00001f2c  1420000c	bnez	r1,L66_LF2
 1354  00001f30  54000000	nop; delay slot nop
 1355  00001f34  08000024	j	L65_LF2
 1356  00001f38  54000000	nop; delay slot nop
 1357  00001f3c          	L67_LF2:
 1358  00001f3c          	L66_LF2:
 1359  00001f3c  8fc1fff4	lw	r1,-12(r30)
 1360  00001f40  00011820	add	r3,r0,r1
 1361  00001f44  50620002	slli	r2,r3,#0x2
 1362  00001f48  00411020	add	r2,r2,r1
 1363  00001f4c  50410001	slli	r1,r2,#0x1
 1364  00001f50  afc1fff4	sw	-12(r30),r1
 1365  00001f54  0bffffc8	j	L64_LF2
 1366  00001f58  54000000	nop; delay slot nop
 1367  00001f5c          	L65_LF2:
 1368  00001f5c  54000000	nop
 1369  00001f60          	L68_LF2:
 1370  00001f60  8fc1fff4	lw	r1,-12(r30)
 1371  00001f64  2002000a	addi	r2,r0,#10
 1372  00001f68  00200035	movi2fp	f0,r1
 1373  00001f6c  00400835	movi2fp	f1,r2
 1374  00001f70  0401000f	div	f0,f0,f1
 1375  00001f74  00000834	movfp2i	r1,f0
 1376  00001f78  afc1fff4	sw	-12(r30),r1
 1377  00001f7c  8fc10004	lw	r1,4(r30)
 1378  00001f80  20220001	addi	r2,r1,#1
 1379  00001f84  afc20004	sw	4(r30),r2
 1380  00001f88  8fc20000	lw	r2,(r30)
 1381  00001f8c  8fc3fff4	lw	r3,-12(r30)
 1382  00001f90  00400035	movi2fp	f0,r2
 1383  00001f94  00600835	movi2fp	f1,r3
 1384  00001f98  0401000f	div	f0,f0,f1
 1385  00001f9c  00001034	movfp2i	r2,f0
 1386  00001fa0  00021820	add	r3,r0,r2
 1387  00001fa4  20620030	addi	r2,r3,#48
 1388  00001fa8  a0220000	sb	(r1),r2
 1389  00001fac  8fc10000	lw	r1,(r30)
 1390  00001fb0  8fc3fff4	lw	r3,-12(r30)
 1391  00001fb4  00200035	movi2fp	f0,r1
 1392  00001fb8  00600835	movi2fp	f1,r3
 1393  00001fbc  0401000f	div	f0,f0,f1
 1394  00001fc0  00001034	movfp2i	r2,f0
 1395  00001fc4  8fc3fff4	lw	r3,-12(r30)
 1396  00001fc8  00400035	movi2fp	f0,r2
 1397  00001fcc  00600835	movi2fp	f1,r3
 1398  00001fd0  0401000e	mult	f0,f0,f1
 1399  00001fd4  00001034	movfp2i	r2,f0
 1400  00001fd8  00220822	sub	r1,r1,r2
 1401  00001fdc  afc10000	sw	(r30),r1
 1402  00001fe0          	L70_LF2:
 1403  00001fe0  8fc1fff4	lw	r1,-12(r30)
 1404  00001fe4  6c220001	sgti	r2,r1,#1
 1405  00001fe8  1440000c	bnez	r2,L71_LF2
 1406  00001fec  54000000	nop; delay slot nop
 1407  00001ff0  0800000c	j	L61_LF2
 1408  00001ff4  54000000	nop; delay slot nop
 1409  00001ff8          	L71_LF2:
 1410  00001ff8  0bffff64	j	L68_LF2
 1411  00001ffc  54000000	nop; delay slot nop
 1412  00002000          	L69_LF2:
 1413  00002000          	L63_LF2:
 1414  00002000          	L61_LF2:
 1415  00002000  8fc10004	lw	r1,4(r30)
 1416  00002004  20020000	addi	r2,r0,(#0x0)&0xff
 1417  00002008  a0220000	sb	(r1),r2
 1418  0000200c          	L59_LF2:
 1419  0000200c  8fa20000	lw	r2,0(r29)
 1420  00002010  8fa30004	lw	r3,4(r29)
 1421  00002014  8fdffff8	lw	r31,-8(r30)
 1422  00002018  001ee820	add	r29,r0,r30
 1423  0000201c  8fdefffc	lw	r30,-4(r30)
 1424  00002020  4be00000	jr	r31
 1425  00002024  54000000	nop
 1426  00002028          	.endproc _ditoa
 1427  00002028          	.align 2
 1428  00002028          	.proc _dstrtol
 1429  00002028          	.global _dstrtol
 1430  00002028          	_dstrtol:
 1431                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1432  00002028  afbefffc	sw	-4(r29),r30; push fp
 1433  0000202c  001df020	add	r30,r0,r29; fp = sp
 1434  00002030  afbffff8	sw	-8(r29),r31; push ret addr
 1435  00002034  2fbd0020	subui	r29,r29,#32; alloc local storage
 1436  00002038  afa20000	sw	0(r29),r2
 1437  0000203c  20010000	addi	r1,r0,#0
 1438  00002040  afc1fff4	sw	-12(r30),r1
 1439  00002044          	L73_LF2:
 1440  00002044  8fc10000	lw	r1,(r30)
 1441  00002048  90220000	lbu	r2,(r1)
 1442  0000204c  60410020	seqi	r1,r2,#32
 1443  00002050  14200034	bnez	r1,L75_LF2
 1444  00002054  54000000	nop; delay slot nop
 1445  00002058  8fc10000	lw	r1,(r30)
 1446  0000205c  90220000	lbu	r2,(r1)
 1447  00002060  60410009	seqi	r1,r2,#9
 1448  00002064  14200020	bnez	r1,L75_LF2
 1449  00002068  54000000	nop; delay slot nop
 1450  0000206c  8fc10000	lw	r1,(r30)
 1451  00002070  90220000	lbu	r2,(r1)
 1452  00002074  6041000a	seqi	r1,r2,#10
 1453  00002078  1420000c	bnez	r1,L75_LF2
 1454  0000207c  54000000	nop; delay slot nop
 1455  00002080  0800001c	j	L74_LF2
 1456  00002084  54000000	nop; delay slot nop
 1457  00002088          	L75_LF2:
 1458  00002088  8fc20000	lw	r2,(r30)
 1459  0000208c  20410001	addi	r1,r2,#1
 1460  00002090  00011020	add	r2,r0,r1
 1461  00002094  afc20000	sw	(r30),r2
 1462  00002098  0bffffa8	j	L73_LF2
 1463  0000209c  54000000	nop; delay slot nop
 1464  000020a0          	L74_LF2:
 1465  000020a0  8fc10004	lw	r1,4(r30)
 1466  000020a4  64220000	snei	r2,r1,#0
 1467  000020a8  10400010	beqz	r2,L76_LF2
 1468  000020ac  54000000	nop; delay slot nop
 1469  000020b0  8fc10004	lw	r1,4(r30)
 1470  000020b4  8fc20000	lw	r2,(r30)
 1471  000020b8  ac220000	sw	(r1),r2
 1472  000020bc          	L76_LF2:
 1473  000020bc  8fc10000	lw	r1,(r30)
 1474  000020c0  90220000	lbu	r2,(r1)
 1475  000020c4  64410000	snei	r1,r2,#0
 1476  000020c8  14200010	bnez	r1,L77_LF2
 1477  000020cc  54000000	nop; delay slot nop
 1478  000020d0  8fc1fff4	lw	r1,-12(r30)
 1479  000020d4  08000294	j	L72_LF2
 1480  000020d8  54000000	nop; delay slot nop
 1481  000020dc          	L77_LF2:
 1482  000020dc  8fc10000	lw	r1,(r30)
 1483  000020e0  90220000	lbu	r2,(r1)
 1484  000020e4  6041002d	seqi	r1,r2,#45
 1485  000020e8  10200024	beqz	r1,L78_LF2
 1486  000020ec  54000000	nop; delay slot nop
 1487  000020f0  2001ffff	addi	r1,r0,#-1
 1488  000020f4  afc1ffec	sw	-20(r30),r1
 1489  000020f8  8fc20000	lw	r2,(r30)
 1490  000020fc  20410001	addi	r1,r2,#1
 1491  00002100  00011020	add	r2,r0,r1
 1492  00002104  afc20000	sw	(r30),r2
 1493  00002108  0800000c	j	L79_LF2
 1494  0000210c  54000000	nop; delay slot nop
 1495  00002110          	L78_LF2:
 1496  00002110  20010001	addi	r1,r0,#1
 1497  00002114  afc1ffec	sw	-20(r30),r1
 1498  00002118          	L79_LF2:
 1499  00002118  8fc10008	lw	r1,8(r30)
 1500  0000211c  64220000	snei	r2,r1,#0
 1501  00002120  14400090	bnez	r2,L80_LF2
 1502  00002124  54000000	nop; delay slot nop
 1503  00002128  8fc10000	lw	r1,(r30)
 1504  0000212c  90220000	lbu	r2,(r1)
 1505  00002130  60410030	seqi	r1,r2,#48
 1506  00002134  10200074	beqz	r1,L81_LF2
 1507  00002138  54000000	nop; delay slot nop
 1508  0000213c  8fc20000	lw	r2,(r30)
 1509  00002140  20410001	addi	r1,r2,#1
 1510  00002144  00011020	add	r2,r0,r1
 1511  00002148  afc20000	sw	(r30),r2
 1512  0000214c  8fc10000	lw	r1,(r30)
 1513  00002150  90220000	lbu	r2,(r1)
 1514  00002154  60410078	seqi	r1,r2,#120
 1515  00002158  14200020	bnez	r1,L83_LF2
 1516  0000215c  54000000	nop; delay slot nop
 1517  00002160  8fc10000	lw	r1,(r30)
 1518  00002164  90220000	lbu	r2,(r1)
 1519  00002168  60410058	seqi	r1,r2,#88
 1520  0000216c  1420000c	bnez	r1,L83_LF2
 1521  00002170  54000000	nop; delay slot nop
 1522  00002174  08000024	j	L82_LF2
 1523  00002178  54000000	nop; delay slot nop
 1524  0000217c          	L83_LF2:
 1525  0000217c  20010010	addi	r1,r0,#16
 1526  00002180  afc10008	sw	8(r30),r1
 1527  00002184  8fc20000	lw	r2,(r30)
 1528  00002188  20410001	addi	r1,r2,#1
 1529  0000218c  00011020	add	r2,r0,r1
 1530  00002190  afc20000	sw	(r30),r2
 1531  00002194  0800000c	j	L84_LF2
 1532  00002198  54000000	nop; delay slot nop
 1533  0000219c          	L82_LF2:
 1534  0000219c  20010008	addi	r1,r0,#8
 1535  000021a0  afc10008	sw	8(r30),r1
 1536  000021a4          	L84_LF2:
 1537  000021a4  0800000c	j	L80_LF2
 1538  000021a8  54000000	nop; delay slot nop
 1539  000021ac          	L81_LF2:
 1540  000021ac  2001000a	addi	r1,r0,#10
 1541  000021b0  afc10008	sw	8(r30),r1
 1542  000021b4          	L85_LF2:
 1543  000021b4          	L80_LF2:
 1544  000021b4  8fc10008	lw	r1,8(r30)
 1545  000021b8  70220000	slei	r2,r1,#0
 1546  000021bc  1440001c	bnez	r2,L87_LF2
 1547  000021c0  54000000	nop; delay slot nop
 1548  000021c4  8fc10008	lw	r1,8(r30)
 1549  000021c8  6c220010	sgti	r2,r1,#16
 1550  000021cc  1440000c	bnez	r2,L87_LF2
 1551  000021d0  54000000	nop; delay slot nop
 1552  000021d4  08000010	j	L86_LF2
 1553  000021d8  54000000	nop; delay slot nop
 1554  000021dc          	L87_LF2:
 1555  000021dc  8fc1fff4	lw	r1,-12(r30)
 1556  000021e0  08000188	j	L72_LF2
 1557  000021e4  54000000	nop; delay slot nop
 1558  000021e8          	L86_LF2:
 1559  000021e8  54000000	nop
 1560  000021ec          	L88_LF2:
 1561  000021ec  8fc10000	lw	r1,(r30)
 1562  000021f0  90220000	lbu	r2,(r1)
 1563  000021f4  6c41002f	sgtui	r1,r2,#47
 1564  000021f8  10200030	beqz	r1,L91_LF2
 1565  000021fc  54000000	nop; delay slot nop
 1566  00002200  8fc10000	lw	r1,(r30)
 1567  00002204  90220000	lbu	r2,(r1)
 1568  00002208  70410039	sleui	r1,r2,#57
 1569  0000220c  1020001c	beqz	r1,L91_LF2
 1570  00002210  54000000	nop; delay slot nop
 1571  00002214  8fc10000	lw	r1,(r30)
 1572  00002218  90220000	lbu	r2,(r1)
 1573  0000221c  2041ffd0	addi	r1,r2,#-48
 1574  00002220  afc1fff0	sw	-16(r30),r1
 1575  00002224  0800008c	j	L92_LF2
 1576  00002228  54000000	nop; delay slot nop
 1577  0000222c          	L91_LF2:
 1578  0000222c  8fc10000	lw	r1,(r30)
 1579  00002230  90220000	lbu	r2,(r1)
 1580  00002234  6c410060	sgtui	r1,r2,#96
 1581  00002238  10200030	beqz	r1,L93_LF2
 1582  0000223c  54000000	nop; delay slot nop
 1583  00002240  8fc10000	lw	r1,(r30)
 1584  00002244  90220000	lbu	r2,(r1)
 1585  00002248  7041007a	sleui	r1,r2,#122
 1586  0000224c  1020001c	beqz	r1,L93_LF2
 1587  00002250  54000000	nop; delay slot nop
 1588  00002254  8fc10000	lw	r1,(r30)
 1589  00002258  90220000	lbu	r2,(r1)
 1590  0000225c  2041ffa9	addi	r1,r2,#-87
 1591  00002260  afc1fff0	sw	-16(r30),r1
 1592  00002264  0800004c	j	L92_LF2
 1593  00002268  54000000	nop; delay slot nop
 1594  0000226c          	L93_LF2:
 1595  0000226c  8fc10000	lw	r1,(r30)
 1596  00002270  90220000	lbu	r2,(r1)
 1597  00002274  6c410040	sgtui	r1,r2,#64
 1598  00002278  10200030	beqz	r1,L95_LF2
 1599  0000227c  54000000	nop; delay slot nop
 1600  00002280  8fc10000	lw	r1,(r30)
 1601  00002284  90220000	lbu	r2,(r1)
 1602  00002288  7041005a	sleui	r1,r2,#90
 1603  0000228c  1020001c	beqz	r1,L95_LF2
 1604  00002290  54000000	nop; delay slot nop
 1605  00002294  8fc10000	lw	r1,(r30)
 1606  00002298  90220000	lbu	r2,(r1)
 1607  0000229c  2041ffc9	addi	r1,r2,#-55
 1608  000022a0  afc1fff0	sw	-16(r30),r1
 1609  000022a4  0800000c	j	L92_LF2
 1610  000022a8  54000000	nop; delay slot nop
 1611  000022ac          	L95_LF2:
 1612  000022ac  200103e8	addi	r1,r0,#1000
 1613  000022b0  afc1fff0	sw	-16(r30),r1
 1614  000022b4          	L96_LF2:
 1615  000022b4          	L94_LF2:
 1616  000022b4          	L92_LF2:
 1617  000022b4  8fc1fff0	lw	r1,-16(r30)
 1618  000022b8  8fc20008	lw	r2,8(r30)
 1619  000022bc  0022082a	slt	r1,r1,r2
 1620  000022c0  10200040	beqz	r1,L90_LF2
 1621  000022c4  54000000	nop; delay slot nop
 1622  000022c8  8fc1fff4	lw	r1,-12(r30)
 1623  000022cc  8fc20008	lw	r2,8(r30)
 1624  000022d0  00200035	movi2fp	f0,r1
 1625  000022d4  00400835	movi2fp	f1,r2
 1626  000022d8  0401000e	mult	f0,f0,f1
 1627  000022dc  00000834	movfp2i	r1,f0
 1628  000022e0  afc1fff4	sw	-12(r30),r1
 1629  000022e4  8fc1fff4	lw	r1,-12(r30)
 1630  000022e8  8fc2fff0	lw	r2,-16(r30)
 1631  000022ec  00220820	add	r1,r1,r2
 1632  000022f0  afc1fff4	sw	-12(r30),r1
 1633  000022f4  8fc20000	lw	r2,(r30)
 1634  000022f8  20410001	addi	r1,r2,#1
 1635  000022fc  00011020	add	r2,r0,r1
 1636  00002300  afc20000	sw	(r30),r2
 1637  00002304          	L97_LF2:
 1638  00002304          	L90_LF2:
 1639  00002304  8fc1fff0	lw	r1,-16(r30)
 1640  00002308  8fc20008	lw	r2,8(r30)
 1641  0000230c  0022082a	slt	r1,r1,r2
 1642  00002310  1420000c	bnez	r1,L98_LF2
 1643  00002314  54000000	nop; delay slot nop
 1644  00002318  0800000c	j	L89_LF2
 1645  0000231c  54000000	nop; delay slot nop
 1646  00002320          	L98_LF2:
 1647  00002320  0bfffec8	j	L88_LF2
 1648  00002324  54000000	nop; delay slot nop
 1649  00002328          	L89_LF2:
 1650  00002328  8fc10004	lw	r1,4(r30)
 1651  0000232c  64220000	snei	r2,r1,#0
 1652  00002330  10400010	beqz	r2,L99_LF2
 1653  00002334  54000000	nop; delay slot nop
 1654  00002338  8fc10004	lw	r1,4(r30)
 1655  0000233c  8fc20000	lw	r2,(r30)
 1656  00002340  ac220000	sw	(r1),r2
 1657  00002344          	L99_LF2:
 1658  00002344  8fc1fff4	lw	r1,-12(r30)
 1659  00002348  8fc2ffec	lw	r2,-20(r30)
 1660  0000234c  00200035	movi2fp	f0,r1
 1661  00002350  00400835	movi2fp	f1,r2
 1662  00002354  0401000e	mult	f0,f0,f1
 1663  00002358  00000834	movfp2i	r1,f0
 1664  0000235c  afc1fff4	sw	-12(r30),r1
 1665  00002360  8fc1fff4	lw	r1,-12(r30)
 1666  00002364  08000004	j	L72_LF2
 1667  00002368  54000000	nop; delay slot nop
 1668  0000236c          	L72_LF2:
 1669  0000236c  8fa20000	lw	r2,0(r29)
 1670  00002370  8fdffff8	lw	r31,-8(r30)
 1671  00002374  001ee820	add	r29,r0,r30
 1672  00002378  8fdefffc	lw	r30,-4(r30)
 1673  0000237c  4be00000	jr	r31
 1674  00002380  54000000	nop
 1675  00002384          	.endproc _dstrtol
 1676  00002384          	.align 2
 1677  00002384          	.proc _bcopy
 1678  00002384          	.global _bcopy
 1679  00002384          	_bcopy:
 1680                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1681  00002384  afbefffc	sw	-4(r29),r30; push fp
 1682  00002388  001df020	add	r30,r0,r29; fp = sp
 1683  0000238c  afbffff8	sw	-8(r29),r31; push ret addr
 1684  00002390  2fbd0010	subui	r29,r29,#16; alloc local storage
 1685  00002394  afa20000	sw	0(r29),r2
 1686  00002398  afa30004	sw	4(r29),r3
 1687  0000239c  54000000	nop
 1688  000023a0          	L101_LF2:
 1689  000023a0  8fc10008	lw	r1,8(r30)
 1690  000023a4  2022ffff	addi	r2,r1,#-1
 1691  000023a8  afc20008	sw	8(r30),r2
 1692  000023ac  6c210000	sgti	r1,r1,#0
 1693  000023b0  1420000c	bnez	r1,L103_LF2
 1694  000023b4  54000000	nop; delay slot nop
 1695  000023b8  0800002c	j	L102_LF2
 1696  000023bc  54000000	nop; delay slot nop
 1697  000023c0          	L103_LF2:
 1698  000023c0  8fc10004	lw	r1,4(r30)
 1699  000023c4  20220001	addi	r2,r1,#1
 1700  000023c8  afc20004	sw	4(r30),r2
 1701  000023cc  8fc20000	lw	r2,(r30)
 1702  000023d0  20430001	addi	r3,r2,#1
 1703  000023d4  afc30000	sw	(r30),r3
 1704  000023d8  80420000	lb	r2,(r2)
 1705  000023dc  a0220000	sb	(r1),r2
 1706  000023e0  0bffffbc	j	L101_LF2
 1707  000023e4  54000000	nop; delay slot nop
 1708  000023e8          	L102_LF2:
 1709  000023e8          	L100_LF2:
 1710  000023e8  8fa20000	lw	r2,0(r29)
 1711  000023ec  8fa30004	lw	r3,4(r29)
 1712  000023f0  8fdffff8	lw	r31,-8(r30)
 1713  000023f4  001ee820	add	r29,r0,r30
 1714  000023f8  8fdefffc	lw	r30,-4(r30)
 1715  000023fc  4be00000	jr	r31
 1716  00002400  54000000	nop
 1717  00002404          	.endproc _bcopy
 1718  00002404          	.align 2
 1719  00002404          	.proc _bzero
 1720  00002404          	.global _bzero
 1721  00002404          	_bzero:
 1722                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1723  00002404  afbefffc	sw	-4(r29),r30; push fp
 1724  00002408  001df020	add	r30,r0,r29; fp = sp
 1725  0000240c  afbffff8	sw	-8(r29),r31; push ret addr
 1726  00002410  2fbd0010	subui	r29,r29,#16; alloc local storage
 1727  00002414  afa20000	sw	0(r29),r2
 1728  00002418  54000000	nop
 1729  0000241c          	L105_LF2:
 1730  0000241c  8fc10004	lw	r1,4(r30)
 1731  00002420  2022ffff	addi	r2,r1,#-1
 1732  00002424  afc20004	sw	4(r30),r2
 1733  00002428  6c210000	sgti	r1,r1,#0
 1734  0000242c  1420000c	bnez	r1,L107_LF2
 1735  00002430  54000000	nop; delay slot nop
 1736  00002434  08000020	j	L106_LF2
 1737  00002438  54000000	nop; delay slot nop
 1738  0000243c          	L107_LF2:
 1739  0000243c  8fc10000	lw	r1,(r30)
 1740  00002440  20220001	addi	r2,r1,#1
 1741  00002444  afc20000	sw	(r30),r2
 1742  00002448  20020000	addi	r2,r0,(#0x0)&0xff
 1743  0000244c  a0220000	sb	(r1),r2
 1744  00002450  0bffffc8	j	L105_LF2
 1745  00002454  54000000	nop; delay slot nop
 1746  00002458          	L106_LF2:
 1747  00002458          	L104_LF2:
 1748  00002458  8fa20000	lw	r2,0(r29)
 1749  0000245c  8fdffff8	lw	r31,-8(r30)
 1750  00002460  001ee820	add	r29,r0,r30
 1751  00002464  8fdefffc	lw	r30,-4(r30)
 1752  00002468  4be00000	jr	r31
 1753  0000246c  54000000	nop
 1754  00002470          	.endproc _bzero
 1755  00002470          	.align 2
 1756  00002470          	.proc _min
 1757  00002470          	.global _min
 1758  00002470          	_min:
 1759                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1760  00002470  afbefffc	sw	-4(r29),r30; push fp
 1761  00002474  001df020	add	r30,r0,r29; fp = sp
 1762  00002478  afbffff8	sw	-8(r29),r31; push ret addr
 1763  0000247c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1764  00002480  afa20000	sw	0(r29),r2
 1765  00002484  afa30004	sw	4(r29),r3
 1766  00002488  8fc10000	lw	r1,(r30)
 1767  0000248c  8fc20004	lw	r2,4(r30)
 1768  00002490  0022182c	sle	r3,r1,r2
 1769  00002494  14600008	bnez	r3,L109_LF2
 1770  00002498  54000000	nop; delay slot nop
 1771  0000249c  8fc10004	lw	r1,4(r30)
 1772  000024a0          	L109_LF2:
 1773  000024a0  08000004	j	L108_LF2
 1774  000024a4  54000000	nop; delay slot nop
 1775  000024a8          	L108_LF2:
 1776  000024a8  8fa20000	lw	r2,0(r29)
 1777  000024ac  8fa30004	lw	r3,4(r29)
 1778  000024b0  8fdffff8	lw	r31,-8(r30)
 1779  000024b4  001ee820	add	r29,r0,r30
 1780  000024b8  8fdefffc	lw	r30,-4(r30)
 1781  000024bc  4be00000	jr	r31
 1782  000024c0  54000000	nop
 1783  000024c4          	.endproc _min
 1784                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1785                      ;;;
 1786                      ;;; Most of the traps are called in files from libtraps.
 1789  000024c4          	.align 2
 1790  000024c4          	.proc _exit
 1791  000024c4          	.global _exit
 1792  000024c4          	_exit:
 1793  000024c4  44000300	trap	#0x300
 1794  000024c8  4be00000	jr	r31
 1795  000024cc  54000000	nop
 1796  000024d0          	.endproc _exit
 1798                      ; for the benefit of gcc.
 1799  000024d0          	.proc ___main
 1800  000024d0          	.global ___main
 1801  000024d0          	___main:
 1802  000024d0  4be00000	jr	r31
 1803  000024d4  54000000	nop
 1804  000024d8          	.endproc ___main
 1805  000024d8          	.text
 1806  000024d8          	.global _etext
 1807  000024d8          	_etext:
 1808  000024d8          	.align 3
 1809  000024d8          	.data
 1810  00003146          	.global _edata
 1811  00003146          	_edata:

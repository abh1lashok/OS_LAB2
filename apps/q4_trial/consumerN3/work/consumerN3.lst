 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 322
    4                      ; Text size: 5416
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  4342202d	.ascii "CB ---- Put %c in %d\n\000"
   82  00003004  2d2d2d20	
   82  00003008  50757420	
   82  0000300c  25632069	
   82  00003010  6e202564	
   82  00003014  0a00    	
   83  00003016          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _put_item_cb
   86  000010d4          	.global _put_item_cb
   87  000010d4          	_put_item_cb:
   88                      ;  Function 'put_item_cb'; 0 bytes of locals, 4 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  afa40008	sw	8(r29),r4
   96  000010f0  afa5000c	sw	12(r29),r5
   97  000010f4  83c20003	lb	r2,3(r30)
   98  000010f8  8fc30004	lw	r3,4(r30)
   99  000010fc  8c610000	lw	r1,(r3)
  100  00001100  00610820	add	r1,r3,r1
  101  00001104  a0220008	sb	8(r1),r2
  102  00001108  23bdfff0	addi	r29,r29,#-16
  103  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  104  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  105  00001114  afa50000	sw	(r29),r5
  106  00001118  304100ff	andi	r1,r2,#0x00ff
  107  0000111c  afa10004	sw	4(r29),r1
  108  00001120  8c650000	lw	r5,(r3)
  109  00001124  afa50008	sw	8(r29),r5
  110  00001128  0c0005f8	jal	_Printf
  111  0000112c  54000000	nop; not filled.
  112  00001130  8c610000	lw	r1,(r3)
  113  00001134  20240001	addi	r4,r1,#1
  114  00001138  2001000a	addi	r1,r0,#10
  115  0000113c  00800035	movi2fp	f0,r4
  116  00001140  00200835	movi2fp	f1,r1
  117  00001144  0401000f	div	f0,f0,f1
  118  00001148  00001034	movfp2i	r2,f0
  119  0000114c  50410002	slli	r1,r2,#0x2
  120  00001150  00220820	add	r1,r1,r2
  121  00001154  50210001	slli	r1,r1,#0x1
  122  00001158  00810822	sub	r1,r4,r1
  123  0000115c  ac610000	sw	(r3),r1
  124  00001160  20010001	addi	r1,r0,#1
  125  00001164  23bd0010	addi	r29,r29,#16
  126  00001168  8fa20000	lw	r2,0(r29)
  127  0000116c  8fa30004	lw	r3,4(r29)
  128  00001170  8fa40008	lw	r4,8(r29)
  129  00001174  8fa5000c	lw	r5,12(r29)
  130  00001178  8fdffff8	lw	r31,-8(r30)
  131  0000117c  001ee820	add	r29,r0,r30
  132  00001180  8fdefffc	lw	r30,-4(r30)
  133  00001184  4be00000	jr	r31
  134  00001188  54000000	nop
  135  0000118c          	.endproc _put_item_cb
  136  0000118c          	.data
  137  00003016          	.align 2
  138  00003018          	LC1_LF0:
  139  00003018  4342202d	.ascii "CB ----  checking %c from %d\n\000"
  139  0000301c  2d2d2d20	
  139  00003020  20636865	
  139  00003024  636b696e	
  139  00003028  67202563	
  139  0000302c  2066726f	
  139  00003030  6d202564	
  139  00003034  0a00    	
  140  00003036          	.text
  141  0000118c          	.align 2
  142  0000118c          	.proc _check_item_cb
  143  0000118c          	.global _check_item_cb
  144  0000118c          	_check_item_cb:
  145                      ;  Function 'check_item_cb'; 0 bytes of locals, 3 regs to save.
  146  0000118c  afbefffc	sw	-4(r29),r30; push fp
  147  00001190  001df020	add	r30,r0,r29; fp = sp
  148  00001194  afbffff8	sw	-8(r29),r31; push ret addr
  149  00001198  2fbd0018	subui	r29,r29,#24; alloc local storage
  150  0000119c  afa20000	sw	0(r29),r2
  151  000011a0  afa30004	sw	4(r29),r3
  152  000011a4  afa40008	sw	8(r29),r4
  153  000011a8  8fc30000	lw	r3,(r30)
  154  000011ac  8fc20004	lw	r2,4(r30)
  155  000011b0  8c410004	lw	r1,4(r2)
  156  000011b4  00410820	add	r1,r2,r1
  157  000011b8  80210008	lb	r1,8(r1)
  158  000011bc  a0610000	sb	(r3),r1
  159  000011c0  23bdfff0	addi	r29,r29,#-16
  160  000011c4  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  161  000011c8  24843018	addui	r4,r4,(LC1_LF0)&0xffff
  162  000011cc  afa40000	sw	(r29),r4
  163  000011d0  90610000	lbu	r1,(r3)
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  8c420004	lw	r2,4(r2)
  166  000011dc  afa20008	sw	8(r29),r2
  167  000011e0  0c000540	jal	_Printf
  168  000011e4  54000000	nop; not filled.
  169  000011e8  20010001	addi	r1,r0,#1
  170  000011ec  23bd0010	addi	r29,r29,#16
  171  000011f0  8fa20000	lw	r2,0(r29)
  172  000011f4  8fa30004	lw	r3,4(r29)
  173  000011f8  8fa40008	lw	r4,8(r29)
  174  000011fc  8fdffff8	lw	r31,-8(r30)
  175  00001200  001ee820	add	r29,r0,r30
  176  00001204  8fdefffc	lw	r30,-4(r30)
  177  00001208  4be00000	jr	r31
  178  0000120c  54000000	nop
  179  00001210          	.endproc _check_item_cb
  180  00001210          	.data
  181  00003036          	.align 2
  182  00003038          	LC2_LF0:
  183  00003038  4342202d	.ascii "CB ----  Got %c from %d\n\000"
  183  0000303c  2d2d2d20	
  183  00003040  20476f74	
  183  00003044  20256320	
  183  00003048  66726f6d	
  183  0000304c  2025640a	
  183  00003050  00      	
  184  00003051          	.text
  185  00001210          	.align 2
  186  00001210          	.proc _get_item_cb
  187  00001210          	.global _get_item_cb
  188  00001210          	_get_item_cb:
  189                      ;  Function 'get_item_cb'; 0 bytes of locals, 4 regs to save.
  190  00001210  afbefffc	sw	-4(r29),r30; push fp
  191  00001214  001df020	add	r30,r0,r29; fp = sp
  192  00001218  afbffff8	sw	-8(r29),r31; push ret addr
  193  0000121c  2fbd0018	subui	r29,r29,#24; alloc local storage
  194  00001220  afa20000	sw	0(r29),r2
  195  00001224  afa30004	sw	4(r29),r3
  196  00001228  afa40008	sw	8(r29),r4
  197  0000122c  afa5000c	sw	12(r29),r5
  198  00001230  8fc20000	lw	r2,(r30)
  199  00001234  8fc30004	lw	r3,4(r30)
  200  00001238  8c610004	lw	r1,4(r3)
  201  0000123c  00610820	add	r1,r3,r1
  202  00001240  80210008	lb	r1,8(r1)
  203  00001244  a0410000	sb	(r2),r1
  204  00001248  23bdfff0	addi	r29,r29,#-16
  205  0000124c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  206  00001250  24a53038	addui	r5,r5,(LC2_LF0)&0xffff
  207  00001254  afa50000	sw	(r29),r5
  208  00001258  90410000	lbu	r1,(r2)
  209  0000125c  afa10004	sw	4(r29),r1
  210  00001260  8c650004	lw	r5,4(r3)
  211  00001264  afa50008	sw	8(r29),r5
  212  00001268  0c0004b8	jal	_Printf
  213  0000126c  54000000	nop; not filled.
  214  00001270  8c610004	lw	r1,4(r3)
  215  00001274  20240001	addi	r4,r1,#1
  216  00001278  2001000a	addi	r1,r0,#10
  217  0000127c  00800035	movi2fp	f0,r4
  218  00001280  00200835	movi2fp	f1,r1
  219  00001284  0401000f	div	f0,f0,f1
  220  00001288  00001034	movfp2i	r2,f0
  221  0000128c  50410002	slli	r1,r2,#0x2
  222  00001290  00220820	add	r1,r1,r2
  223  00001294  50210001	slli	r1,r1,#0x1
  224  00001298  00810822	sub	r1,r4,r1
  225  0000129c  ac610004	sw	4(r3),r1
  226  000012a0  20010001	addi	r1,r0,#1
  227  000012a4  23bd0010	addi	r29,r29,#16
  228  000012a8  8fa20000	lw	r2,0(r29)
  229  000012ac  8fa30004	lw	r3,4(r29)
  230  000012b0  8fa40008	lw	r4,8(r29)
  231  000012b4  8fa5000c	lw	r5,12(r29)
  232  000012b8  8fdffff8	lw	r31,-8(r30)
  233  000012bc  001ee820	add	r29,r0,r30
  234  000012c0  8fdefffc	lw	r30,-4(r30)
  235  000012c4  4be00000	jr	r31
  236  000012c8  54000000	nop
  237  000012cc          	.endproc _get_item_cb
  238  000012cc          	.align 2
  239  000012cc          	.proc _is_full
  240  000012cc          	.global _is_full
  241  000012cc          	_is_full:
  242                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  243  000012cc  afbefffc	sw	-4(r29),r30; push fp
  244  000012d0  001df020	add	r30,r0,r29; fp = sp
  245  000012d4  afbffff8	sw	-8(r29),r31; push ret addr
  246  000012d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  247  000012dc  afa20000	sw	0(r29),r2
  248  000012e0  afa30004	sw	4(r29),r3
  249  000012e4  afa40008	sw	8(r29),r4
  250  000012e8  8fc40000	lw	r4,(r30)
  251  000012ec  8c810000	lw	r1,(r4)
  252  000012f0  20230001	addi	r3,r1,#1
  253  000012f4  2001000a	addi	r1,r0,#10
  254  000012f8  00600035	movi2fp	f0,r3
  255  000012fc  00200835	movi2fp	f1,r1
  256  00001300  0401000f	div	f0,f0,f1
  257  00001304  00001034	movfp2i	r2,f0
  258  00001308  50410002	slli	r1,r2,#0x2
  259  0000130c  00220820	add	r1,r1,r2
  260  00001310  50210001	slli	r1,r1,#0x1
  261  00001314  00611022	sub	r2,r3,r1
  262  00001318  8c810004	lw	r1,4(r4)
  263  0000131c  00411028	seq	r2,r2,r1
  264  00001320  20010001	addi	r1,r0,#1
  265  00001324  14400008	bnez	r2,L23_LF0
  266  00001328  54000000	nop; not filled.
  267  0000132c  20010000	addi	r1,r0,#0
  268  00001330          	L23_LF0:
  269  00001330  8fa20000	lw	r2,0(r29)
  270  00001334  8fa30004	lw	r3,4(r29)
  271  00001338  8fa40008	lw	r4,8(r29)
  272  0000133c  8fdffff8	lw	r31,-8(r30)
  273  00001340  001ee820	add	r29,r0,r30
  274  00001344  8fdefffc	lw	r30,-4(r30)
  275  00001348  4be00000	jr	r31
  276  0000134c  54000000	nop
  277  00001350          	.endproc _is_full
  278  00001350          	.align 2
  279  00001350          	.proc _is_empty
  280  00001350          	.global _is_empty
  281  00001350          	_is_empty:
  282                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  283  00001350  afbefffc	sw	-4(r29),r30; push fp
  284  00001354  001df020	add	r30,r0,r29; fp = sp
  285  00001358  afbffff8	sw	-8(r29),r31; push ret addr
  286  0000135c  2fbd0010	subui	r29,r29,#16; alloc local storage
  287  00001360  afa20000	sw	0(r29),r2
  288  00001364  8fc10000	lw	r1,(r30)
  289  00001368  8c220000	lw	r2,(r1)
  290  0000136c  8c210004	lw	r1,4(r1)
  291  00001370  00411028	seq	r2,r2,r1
  292  00001374  20010001	addi	r1,r0,#1
  293  00001378  14400008	bnez	r2,L30_LF0
  294  0000137c  54000000	nop; not filled.
  295  00001380  20010000	addi	r1,r0,#0
  296  00001384          	L30_LF0:
  297  00001384  8fa20000	lw	r2,0(r29)
  298  00001388  8fdffff8	lw	r31,-8(r30)
  299  0000138c  001ee820	add	r29,r0,r30
  300  00001390  8fdefffc	lw	r30,-4(r30)
  301  00001394  4be00000	jr	r31
  302  00001398  54000000	nop
  303  0000139c          	.endproc _is_empty
  304  0000139c          	.data
  305  00003051          	.align 2
  306  00003054          	LC3_LF0:
  307  00003054  43697263	.ascii "Circular Buffer Initiated\n\000"
  307  00003058  756c6172	
  307  0000305c  20427566	
  307  00003060  66657220	
  307  00003064  496e6974	
  307  00003068  69617465	
  307  0000306c  640a00  	
  308  0000306f          	.text
  309  0000139c          	.align 2
  310  0000139c          	.proc _init_cb
  311  0000139c          	.global _init_cb
  312  0000139c          	_init_cb:
  313                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  314  0000139c  afbefffc	sw	-4(r29),r30; push fp
  315  000013a0  001df020	add	r30,r0,r29; fp = sp
  316  000013a4  afbffff8	sw	-8(r29),r31; push ret addr
  317  000013a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  318  000013ac  afa20000	sw	0(r29),r2
  319  000013b0  8fc10000	lw	r1,(r30)
  320  000013b4  20020000	addi	r2,r0,#0
  321  000013b8  ac220000	sw	(r1),r2
  322  000013bc  ac220004	sw	4(r1),r2
  323  000013c0  23bdfff8	addi	r29,r29,#-8
  324  000013c4  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
  325  000013c8  24423054	addui	r2,r2,(LC3_LF0)&0xffff
  326  000013cc  afa20000	sw	(r29),r2
  327  000013d0  0c000350	jal	_Printf
  328  000013d4  54000000	nop; not filled.
  329  000013d8  23bd0008	addi	r29,r29,#8
  330  000013dc  8fa20000	lw	r2,0(r29)
  331  000013e0  8fdffff8	lw	r31,-8(r30)
  332  000013e4  001ee820	add	r29,r0,r30
  333  000013e8  8fdefffc	lw	r30,-4(r30)
  334  000013ec  4be00000	jr	r31
  335  000013f0  54000000	nop
  336  000013f4          	.endproc _init_cb
  337  000013f4          	.data
  338  0000306f          	.align 2
  339  00003070          	LC4_LF0:
  340  00003070  20436972	.ascii " Circular Buffer =>  \000"
  340  00003074  63756c61	
  340  00003078  72204275	
  340  0000307c  66666572	
  340  00003080  203d3e20	
  340  00003084  2000    	
  341  00003086          	.align 2
  342  00003088          	LC5_LF0:
  343  00003088  256300  	.ascii "%c\000"
  344  0000308b          	.align 2
  345  0000308c          	LC6_LF0:
  346  0000308c  0a00    	.ascii "\n\000"
  347  0000308e          	.text
  348  000013f4          	.align 2
  349  000013f4          	.proc _Print_cb
  350  000013f4          	.global _Print_cb
  351  000013f4          	_Print_cb:
  352                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  353  000013f4  afbefffc	sw	-4(r29),r30; push fp
  354  000013f8  001df020	add	r30,r0,r29; fp = sp
  355  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  356  00001400  2fbd0020	subui	r29,r29,#32; alloc local storage
  357  00001404  afa20000	sw	0(r29),r2
  358  00001408  afa30004	sw	4(r29),r3
  359  0000140c  afa40008	sw	8(r29),r4
  360  00001410  afa5000c	sw	12(r29),r5
  361  00001414  afa60010	sw	16(r29),r6
  362  00001418  afa70014	sw	20(r29),r7
  363  0000141c  8fc50000	lw	r5,(r30)
  364  00001420  23bdfff8	addi	r29,r29,#-8
  365  00001424  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  366  00001428  24e73070	addui	r7,r7,(LC4_LF0)&0xffff
  367  0000142c  afa70000	sw	(r29),r7
  368  00001430  0c0002f0	jal	_Printf
  369  00001434  54000000	nop; not filled.
  370  00001438  20040000	addi	r4,r0,#0
  371  0000143c  23bd0008	addi	r29,r29,#8
  372  00001440  2006000a	addi	r6,r0,#10
  373  00001444          	L45_LF0:
  374  00001444  23bdfff8	addi	r29,r29,#-8
  375  00001448  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  376  0000144c  24e73088	addui	r7,r7,(LC5_LF0)&0xffff
  377  00001450  afa70000	sw	(r29),r7
  378  00001454  8ca10004	lw	r1,4(r5)
  379  00001458  00811820	add	r3,r4,r1
  380  0000145c  00600035	movi2fp	f0,r3
  381  00001460  00c00835	movi2fp	f1,r6
  382  00001464  0401000f	div	f0,f0,f1
  383  00001468  00001034	movfp2i	r2,f0
  384  0000146c  50410002	slli	r1,r2,#0x2
  385  00001470  00220820	add	r1,r1,r2
  386  00001474  50210001	slli	r1,r1,#0x1
  387  00001478  00610822	sub	r1,r3,r1
  388  0000147c  00a10820	add	r1,r5,r1
  389  00001480  90210008	lbu	r1,8(r1)
  390  00001484  afa10004	sw	4(r29),r1
  391  00001488  0c000298	jal	_Printf
  392  0000148c  54000000	nop; not filled.
  393  00001490  23bd0008	addi	r29,r29,#8
  394  00001494  20840001	addi	r4,r4,#1
  395  00001498  70810009	slei	r1,r4,#9
  396  0000149c  1420ffa4	bnez	r1,L45_LF0
  397  000014a0  54000000	nop; not filled.
  398  000014a4  23bdfff8	addi	r29,r29,#-8
  399  000014a8  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  400  000014ac  24e7308c	addui	r7,r7,(LC6_LF0)&0xffff
  401  000014b0  afa70000	sw	(r29),r7
  402  000014b4  0c00026c	jal	_Printf
  403  000014b8  54000000	nop; not filled.
  404  000014bc  23bd0008	addi	r29,r29,#8
  405  000014c0  8fa20000	lw	r2,0(r29)
  406  000014c4  8fa30004	lw	r3,4(r29)
  407  000014c8  8fa40008	lw	r4,8(r29)
  408  000014cc  8fa5000c	lw	r5,12(r29)
  409  000014d0  8fa60010	lw	r6,16(r29)
  410  000014d4  8fa70014	lw	r7,20(r29)
  411  000014d8  8fdffff8	lw	r31,-8(r30)
  412  000014dc  001ee820	add	r29,r0,r30
  413  000014e0  8fdefffc	lw	r30,-4(r30)
  414  000014e4  4be00000	jr	r31
  415  000014e8  54000000	nop
  416  000014ec          	.endproc _Print_cb
  417  000014ec          	.data
  418  0000308e          	.align 2
  419  00003090          	LC7_LF0:
  420  00003090  55736167	.ascii "Usage: \000"
  420  00003094  653a2000	
  421  00003098          	.align 2
  422  00003098          	LC8_LF0:
  423  00003098  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
  423  0000309c  6e646c65	
  423  000030a0  5f746f5f	
  423  000030a4  73686172	
  423  000030a8  65645f6d	
  423  000030ac  656d6f72	
  423  000030b0  795f7061	
  423  000030b4  67653e20	
  423  000030b8  3c68616e	
  423  000030bc  646c655f	
  423  000030c0  746f5f70	
  423  000030c4  6167655f	
  423  000030c8  6d617070	
  423  000030cc  65645f73	
  423  000030d0  656d6170	
  423  000030d4  686f7265	
  423  000030d8  3e203c68	
  423  000030dc  616e    	
  424  000030de  646c6520	.ascii "dle to lock>\n\000"
  424  000030e2  746f206c	
  424  000030e6  6f636b3e	
  424  000030ea  0a00    	
  425  000030ec          	.align 2
  426  000030ec          	LC9_LF0:
  427  000030ec  416e204e	.ascii "An N molecules is created\n\000"
  427  000030f0  206d6f6c	
  427  000030f4  6563756c	
  427  000030f8  65732069	
  427  000030fc  73206372	
  427  00003100  65617465	
  427  00003104  640a00  	
  428  00003107          	.align 2
  429  00003108          	LC10_LF0:
  430  00003108  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  430  0000310c  73656d61	
  430  00003110  70686f72	
  430  00003114  6520735f	
  430  00003118  70726f63	
  430  0000311c  735f636f	
  430  00003120  6d706c65	
  430  00003124  74656420	
  430  00003128  28256429	
  430  0000312c  20696e20	
  430  00003130  00      	
  431  00003131          	.align 2
  432  00003134          	LC11_LF0:
  433  00003134  2c206578	.ascii ", exiting...\n\000"
  433  00003138  6974696e	
  433  0000313c  672e2e2e	
  433  00003140  0a00    	
  434  00003142          	.text
  435  000014ec          	.align 2
  436  000014ec          	.proc _main
  437  000014ec          	.global _main
  438  000014ec          	_main:
  439                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  440  000014ec  afbefffc	sw	-4(r29),r30; push fp
  441  000014f0  001df020	add	r30,r0,r29; fp = sp
  442  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  443  000014f8  2fbd0008	subui	r29,r29,#8; alloc local storage
  444  000014fc  8fc20000	lw	r2,(r30)
  445  00001500  8fc70004	lw	r7,4(r30)
  446  00001504  0c001018	jal	___main
  447  00001508  54000000	nop; not filled.
  448  0000150c  64410005	snei	r1,r2,#5
  449  00001510  1020004c	beqz	r1,L48_LF0
  450  00001514  54000000	nop; not filled.
  451  00001518  23bdfff8	addi	r29,r29,#-8
  452  0000151c  3c090000	lhi	r9,((LC7_LF0)>>16)&0xffff
  453  00001520  25293090	addui	r9,r9,(LC7_LF0)&0xffff
  454  00001524  afa90000	sw	(r29),r9
  455  00001528  0c0001f8	jal	_Printf
  456  0000152c  54000000	nop; not filled.
  457  00001530  8ce90000	lw	r9,(r7)
  458  00001534  afa90000	sw	(r29),r9
  459  00001538  0c0001e8	jal	_Printf
  460  0000153c  54000000	nop; not filled.
  461  00001540  3c090000	lhi	r9,((LC8_LF0)>>16)&0xffff
  462  00001544  25293098	addui	r9,r9,(LC8_LF0)&0xffff
  463  00001548  afa90000	sw	(r29),r9
  464  0000154c  0c0001d4	jal	_Printf
  465  00001550  54000000	nop; not filled.
  466  00001554  0c000274	jal	_Exit
  467  00001558  54000000	nop; not filled.
  468  0000155c  23bd0008	addi	r29,r29,#8
  469  00001560          	L48_LF0:
  470  00001560  23bdfff0	addi	r29,r29,#-16
  471  00001564  8ce90004	lw	r9,4(r7)
  472  00001568  afa90000	sw	(r29),r9
  473  0000156c  20090000	addi	r9,r0,#0
  474  00001570  afa90004	sw	4(r29),r9
  475  00001574  2009000a	addi	r9,r0,#10
  476  00001578  afa90008	sw	8(r29),r9
  477  0000157c  0c000af8	jal	_dstrtol
  478  00001580  54000000	nop; not filled.
  479  00001584  00012820	add	r5,r0,r1
  480  00001588  8ce90010	lw	r9,16(r7)
  481  0000158c  afa90000	sw	(r29),r9
  482  00001590  20090000	addi	r9,r0,#0
  483  00001594  afa90004	sw	4(r29),r9
  484  00001598  2009000a	addi	r9,r0,#10
  485  0000159c  afa90008	sw	8(r29),r9
  486  000015a0  0c000ad4	jal	_dstrtol
  487  000015a4  54000000	nop; not filled.
  488  000015a8  00014020	add	r8,r0,r1
  489  000015ac  8ce90008	lw	r9,8(r7)
  490  000015b0  afa90000	sw	(r29),r9
  491  000015b4  20090000	addi	r9,r0,#0
  492  000015b8  afa90004	sw	4(r29),r9
  493  000015bc  2009000a	addi	r9,r0,#10
  494  000015c0  afa90008	sw	8(r29),r9
  495  000015c4  0c000ab0	jal	_dstrtol
  496  000015c8  54000000	nop; not filled.
  497  000015cc  00013020	add	r6,r0,r1
  498  000015d0  8ce9000c	lw	r9,12(r7)
  499  000015d4  afa90000	sw	(r29),r9
  500  000015d8  20090000	addi	r9,r0,#0
  501  000015dc  afa90004	sw	4(r29),r9
  502  000015e0  2009000a	addi	r9,r0,#10
  503  000015e4  afa90008	sw	8(r29),r9
  504  000015e8  0c000a8c	jal	_dstrtol
  505  000015ec  54000000	nop; not filled.
  506  000015f0  00012020	add	r4,r0,r1
  507  000015f4  20030000	addi	r3,r0,#0
  508  000015f8  23bd0010	addi	r29,r29,#16
  509  000015fc  0065082a	sltu	r1,r3,r5
  510  00001600  10200064	beqz	r1,L50_LF0
  511  00001604  54000000	nop; not filled.
  512  00001608          	L51_LF0:
  513  00001608  23bdfff8	addi	r29,r29,#-8
  514  0000160c  afa60000	sw	(r29),r6
  515  00001610  0c000158	jal	_sem_wait
  516  00001614  54000000	nop; not filled.
  517  00001618  20020000	addi	r2,r0,#0
  518  0000161c  23bd0008	addi	r29,r29,#8
  519  00001620          	L55_LF0:
  520  00001620  23bdfff8	addi	r29,r29,#-8
  521  00001624  3c090000	lhi	r9,((LC9_LF0)>>16)&0xffff
  522  00001628  252930ec	addui	r9,r9,(LC9_LF0)&0xffff
  523  0000162c  afa90000	sw	(r29),r9
  524  00001630  0c0000f0	jal	_Printf
  525  00001634  54000000	nop; not filled.
  526  00001638  afa40000	sw	(r29),r4
  527  0000163c  0c000138	jal	_sem_signal
  528  00001640  54000000	nop; not filled.
  529  00001644  23bd0008	addi	r29,r29,#8
  530  00001648  20420001	addi	r2,r2,#1
  531  0000164c  70410002	slei	r1,r2,#2
  532  00001650  1420ffcc	bnez	r1,L55_LF0
  533  00001654  54000000	nop; not filled.
  534  00001658  20630001	addi	r3,r3,#1
  535  0000165c  0065082a	sltu	r1,r3,r5
  536  00001660  1420ffa4	bnez	r1,L51_LF0
  537  00001664  54000000	nop; not filled.
  538  00001668          	L50_LF0:
  539  00001668  23bdfff8	addi	r29,r29,#-8
  540  0000166c  afa80000	sw	(r29),r8
  541  00001670  0c000104	jal	_sem_signal
  542  00001674  54000000	nop; not filled.
  543  00001678  23bd0008	addi	r29,r29,#8
  544  0000167c  64210001	snei	r1,r1,#1
  545  00001680  10200050	beqz	r1,L58_LF0
  546  00001684  54000000	nop; not filled.
  547  00001688  23bdfff8	addi	r29,r29,#-8
  548  0000168c  3c090000	lhi	r9,((LC10_LF0)>>16)&0xffff
  549  00001690  25293108	addui	r9,r9,(LC10_LF0)&0xffff
  550  00001694  afa90000	sw	(r29),r9
  551  00001698  afa80004	sw	4(r29),r8
  552  0000169c  0c000084	jal	_Printf
  553  000016a0  54000000	nop; not filled.
  554  000016a4  8ce70000	lw	r7,(r7)
  555  000016a8  afa70000	sw	(r29),r7
  556  000016ac  0c000074	jal	_Printf
  557  000016b0  54000000	nop; not filled.
  558  000016b4  3c090000	lhi	r9,((LC11_LF0)>>16)&0xffff
  559  000016b8  25293134	addui	r9,r9,(LC11_LF0)&0xffff
  560  000016bc  afa90000	sw	(r29),r9
  561  000016c0  0c000060	jal	_Printf
  562  000016c4  54000000	nop; not filled.
  563  000016c8  0c000100	jal	_Exit
  564  000016cc  54000000	nop; not filled.
  565  000016d0  23bd0008	addi	r29,r29,#8
  566  000016d4          	L58_LF0:
  567  000016d4  0c000e3c	jal	_exit
  568  000016d8  54000000	nop
  569  000016dc          	.endproc _main
  570                      ;;;
  571                      ;;; Stub functions for DLX traps.
  572                      ;;;
  573                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  574                      ;;;
  575                      ;;; The traps such as Open and Close
  576                      ;;; (note the capital letters) are for use by user programs.  The traps
  577                      ;;; with names such as open and close (lower case) are for use by the OS.
  578                      ;;;
  581  000016dc          	.align 2
  583                      ;;; The following are the traps to be used by user-level programs
  584                      ;;;
  586  000016dc          	.align 2
  587  000016dc          	.proc _Open
  588  000016dc          	.global _Open
  589  000016dc          	_Open:
  590                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  591                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  592                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  593  000016dc  44000213	trap	#0x213
  594  000016e0  4be00000	jr	r31
  595  000016e4  54000000	nop
  596  000016e8          	.endproc _Open
  598  000016e8          	.proc _Close
  599  000016e8          	.global _Close
  600  000016e8          	_Close:
  601  000016e8  44000214	trap	#0x214
  602  000016ec  4be00000	jr	r31
  603  000016f0  54000000	nop
  604  000016f4          	.endproc _Close
  606  000016f4          	.proc _Read
  607  000016f4          	.global _Read
  608  000016f4          	_Read:
  609  000016f4  44000210	trap	#0x210
  610  000016f8  4be00000	jr	r31
  611  000016fc  54000000	nop
  612  00001700          	.endproc _Read
  614  00001700          	.proc _Write
  615  00001700          	.global _Write
  616  00001700          	_Write:
  617  00001700  44000211	trap	#0x211
  618  00001704  4be00000	jr	r31
  619  00001708  54000000	nop
  620  0000170c          	.endproc _Write
  622  0000170c          	.proc _Lseek
  623  0000170c          	.global _Lseek
  624  0000170c          	_Lseek:
  625  0000170c  44000212	trap	#0x212
  626  00001710  4be00000	jr	r31
  627  00001714  54000000	nop
  628  00001718          	.endproc _Lseek
  630  00001718          	.proc _Putchar
  631  00001718          	.global _Putchar
  632  00001718          	_Putchar:
  633  00001718  44000280	trap	#0x280
  634  0000171c  4be00000	jr	r31
  635  00001720  54000000	nop
  636  00001724          	.endproc _Putchar
  638  00001724          	.proc _Printf
  639  00001724          	.global _Printf
  640  00001724          	_Printf:
  641  00001724  44000201	trap	#0x201
  642  00001728  4be00000	jr	r31
  643  0000172c  54000000	nop
  644  00001730          	.endproc _Printf
  646  00001730          	.proc _Getpid
  647  00001730          	.global _Getpid
  648  00001730          	_Getpid:
  649  00001730  44000431	trap	#0x431
  650  00001734  4be00000	jr	r31
  651  00001738  54000000	nop
  652  0000173c          	.endproc _Getpid
  654  0000173c          	.proc _process_create
  655  0000173c          	.global _process_create
  656  0000173c          	_process_create:
  657  0000173c  44000432	trap	#0x432
  658  00001740  4be00000	jr	r31
  659  00001744  54000000	nop
  660  00001748          	.endproc _process_create
  662  00001748          	.proc _shmget
  663  00001748          	.global _shmget
  664  00001748          	_shmget:
  665  00001748  44000440	trap	#0x440
  666  0000174c  4be00000	jr	r31
  667  00001750  54000000	nop
  668  00001754          	.endproc _shmget
  670  00001754          	.proc _shmat
  671  00001754          	.global _shmat
  672  00001754          	_shmat:
  673  00001754  44000441	trap	#0x441
  674  00001758  4be00000	jr	r31
  675  0000175c  54000000	nop
  676  00001760          	.endproc _shmat
  678  00001760          	.proc _sem_create
  679  00001760          	.global _sem_create
  680  00001760          	_sem_create:
  681  00001760  44000450	trap	#0x450
  682  00001764  4be00000	jr	r31
  683  00001768  54000000	nop
  684  0000176c          	.endproc _sem_create
  686  0000176c          	.proc _sem_wait
  687  0000176c          	.global _sem_wait
  688  0000176c          	_sem_wait:
  689  0000176c  44000451	trap	#0x451
  690  00001770  4be00000	jr	r31
  691  00001774  54000000	nop
  692  00001778          	.endproc _sem_wait
  694  00001778          	.proc _sem_signal
  695  00001778          	.global _sem_signal
  696  00001778          	_sem_signal:
  697  00001778  44000452	trap	#0x452
  698  0000177c  4be00000	jr	r31
  699  00001780  54000000	nop
  700  00001784          	.endproc _sem_signal
  702  00001784          	.proc _lock_create
  703  00001784          	.global _lock_create
  704  00001784          	_lock_create:
  705  00001784  44000453	trap	#0x453
  706  00001788  4be00000	jr	r31
  707  0000178c  54000000	nop
  708  00001790          	.endproc _lock_create
  710  00001790          	.proc _lock_acquire
  711  00001790          	.global _lock_acquire
  712  00001790          	_lock_acquire:
  713  00001790  44000454	trap	#0x454
  714  00001794  4be00000	jr	r31
  715  00001798  54000000	nop
  716  0000179c          	.endproc _lock_acquire
  718  0000179c          	.proc _lock_release
  719  0000179c          	.global _lock_release
  720  0000179c          	_lock_release:
  721  0000179c  44000455	trap	#0x455
  722  000017a0  4be00000	jr	r31
  723  000017a4  54000000	nop
  724  000017a8          	.endproc _lock_release
  726  000017a8          	.proc _cond_create
  727  000017a8          	.global _cond_create
  728  000017a8          	_cond_create:
  729  000017a8  44000456	trap	#0x456
  730  000017ac  4be00000	jr	r31
  731  000017b0  54000000	nop
  732  000017b4          	.endproc _cond_create
  734  000017b4          	.proc _cond_wait
  735  000017b4          	.global _cond_wait
  736  000017b4          	_cond_wait:
  737  000017b4  44000457	trap	#0x457
  738  000017b8  4be00000	jr	r31
  739  000017bc  54000000	nop
  740  000017c0          	.endproc _cond_wait
  742  000017c0          	.proc _cond_signal
  743  000017c0          	.global _cond_signal
  744  000017c0          	_cond_signal:
  745  000017c0  44000458	trap	#0x458
  746  000017c4  4be00000	jr	r31
  747  000017c8  54000000	nop
  748  000017cc          	.endproc _cond_signal
  750  000017cc          	.proc _Exit
  751  000017cc          	.global _Exit
  752  000017cc          	_Exit:
  753  000017cc  44000500	trap	#0x500
  754  000017d0  4be00000	jr	r31
  755  000017d4  54000000	nop
  756  000017d8          	.endproc _Exit
  757                      ; Compiled by GCC
  759  000017d8          	.align 2
  760  000017d8          	.proc _isspace
  761  000017d8          	.global _isspace
  762  000017d8          	_isspace:
  763                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  764  000017d8  afbefffc	sw	-4(r29),r30; push fp
  765  000017dc  001df020	add	r30,r0,r29; fp = sp
  766  000017e0  afbffff8	sw	-8(r29),r31; push ret addr
  767  000017e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  768  000017e8  afa20000	sw	0(r29),r2
  769  000017ec  afa30004	sw	4(r29),r3
  770  000017f0  afa40008	sw	8(r29),r4
  771  000017f4  83c20003	lb	r2,3(r30)
  772  000017f8  20010000	addi	r1,r0,#0
  773  000017fc  304300ff	andi	r3,r2,#0x00ff
  774  00001800  60640020	seqi	r4,r3,#32
  775  00001804  1480002c	bnez	r4,L3_LF2
  776  00001808  54000000	nop; delay slot nop
  777  0000180c  304300ff	andi	r3,r2,#0x00ff
  778  00001810  60640009	seqi	r4,r3,#9
  779  00001814  1480001c	bnez	r4,L3_LF2
  780  00001818  54000000	nop; delay slot nop
  781  0000181c  304300ff	andi	r3,r2,#0x00ff
  782  00001820  6064000a	seqi	r4,r3,#10
  783  00001824  1480000c	bnez	r4,L3_LF2
  784  00001828  54000000	nop; delay slot nop
  785  0000182c  08000008	j	L2_LF2
  786  00001830  54000000	nop; delay slot nop
  787  00001834          	L3_LF2:
  788  00001834  20010001	addi	r1,r0,#1
  789  00001838          	L2_LF2:
  790  00001838  08000004	j	L1_LF2
  791  0000183c  54000000	nop; delay slot nop
  792  00001840          	L1_LF2:
  793  00001840  8fa20000	lw	r2,0(r29)
  794  00001844  8fa30004	lw	r3,4(r29)
  795  00001848  8fa40008	lw	r4,8(r29)
  796  0000184c  8fdffff8	lw	r31,-8(r30)
  797  00001850  001ee820	add	r29,r0,r30
  798  00001854  8fdefffc	lw	r30,-4(r30)
  799  00001858  4be00000	jr	r31
  800  0000185c  54000000	nop
  801  00001860          	.endproc _isspace
  802  00001860          	.align 2
  803  00001860          	.proc _isxdigit
  804  00001860          	.global _isxdigit
  805  00001860          	_isxdigit:
  806                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  807  00001860  afbefffc	sw	-4(r29),r30; push fp
  808  00001864  001df020	add	r30,r0,r29; fp = sp
  809  00001868  afbffff8	sw	-8(r29),r31; push ret addr
  810  0000186c  2fbd0018	subui	r29,r29,#24; alloc local storage
  811  00001870  afa20000	sw	0(r29),r2
  812  00001874  afa30004	sw	4(r29),r3
  813  00001878  afa40008	sw	8(r29),r4
  814  0000187c  83c20003	lb	r2,3(r30)
  815  00001880  20010000	addi	r1,r0,#0
  816  00001884  304300ff	andi	r3,r2,#0x00ff
  817  00001888  6c64002f	sgtui	r4,r3,#47
  818  0000188c  1080001c	beqz	r4,L7_LF2
  819  00001890  54000000	nop; delay slot nop
  820  00001894  304300ff	andi	r3,r2,#0x00ff
  821  00001898  70640039	sleui	r4,r3,#57
  822  0000189c  1480005c	bnez	r4,L6_LF2
  823  000018a0  54000000	nop; delay slot nop
  824  000018a4  08000004	j	L7_LF2
  825  000018a8  54000000	nop; delay slot nop
  826  000018ac          	L7_LF2:
  827  000018ac  304300ff	andi	r3,r2,#0x00ff
  828  000018b0  6c640060	sgtui	r4,r3,#96
  829  000018b4  1080001c	beqz	r4,L8_LF2
  830  000018b8  54000000	nop; delay slot nop
  831  000018bc  304300ff	andi	r3,r2,#0x00ff
  832  000018c0  70640066	sleui	r4,r3,#102
  833  000018c4  14800034	bnez	r4,L6_LF2
  834  000018c8  54000000	nop; delay slot nop
  835  000018cc  08000004	j	L8_LF2
  836  000018d0  54000000	nop; delay slot nop
  837  000018d4          	L8_LF2:
  838  000018d4  304300ff	andi	r3,r2,#0x00ff
  839  000018d8  6c640040	sgtui	r4,r3,#64
  840  000018dc  10800020	beqz	r4,L5_LF2
  841  000018e0  54000000	nop; delay slot nop
  842  000018e4  304300ff	andi	r3,r2,#0x00ff
  843  000018e8  70640041	sleui	r4,r3,#65
  844  000018ec  1480000c	bnez	r4,L6_LF2
  845  000018f0  54000000	nop; delay slot nop
  846  000018f4  08000008	j	L5_LF2
  847  000018f8  54000000	nop; delay slot nop
  848  000018fc          	L6_LF2:
  849  000018fc  20010001	addi	r1,r0,#1
  850  00001900          	L5_LF2:
  851  00001900  08000004	j	L4_LF2
  852  00001904  54000000	nop; delay slot nop
  853  00001908          	L4_LF2:
  854  00001908  8fa20000	lw	r2,0(r29)
  855  0000190c  8fa30004	lw	r3,4(r29)
  856  00001910  8fa40008	lw	r4,8(r29)
  857  00001914  8fdffff8	lw	r31,-8(r30)
  858  00001918  001ee820	add	r29,r0,r30
  859  0000191c  8fdefffc	lw	r30,-4(r30)
  860  00001920  4be00000	jr	r31
  861  00001924  54000000	nop
  862  00001928          	.endproc _isxdigit
  863  00001928          	.align 2
  864  00001928          	.proc _dstrcpy
  865  00001928          	.global _dstrcpy
  866  00001928          	_dstrcpy:
  867                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  868  00001928  afbefffc	sw	-4(r29),r30; push fp
  869  0000192c  001df020	add	r30,r0,r29; fp = sp
  870  00001930  afbffff8	sw	-8(r29),r31; push ret addr
  871  00001934  2fbd0018	subui	r29,r29,#24; alloc local storage
  872  00001938  afa20000	sw	0(r29),r2
  873  0000193c  afa30004	sw	4(r29),r3
  874  00001940  8fc10000	lw	r1,(r30)
  875  00001944  afc1fff4	sw	-12(r30),r1
  876  00001948          	L10_LF2:
  877  00001948  8fc10000	lw	r1,(r30)
  878  0000194c  20220001	addi	r2,r1,#1
  879  00001950  afc20000	sw	(r30),r2
  880  00001954  8fc20004	lw	r2,4(r30)
  881  00001958  20430001	addi	r3,r2,#1
  882  0000195c  afc30004	sw	4(r30),r3
  883  00001960  80420000	lb	r2,(r2)
  884  00001964  a0220000	sb	(r1),r2
  885  00001968  a3c2fff3	sb	-13(r30),r2
  886  0000196c          	L12_LF2:
  887  0000196c  93c1fff3	lbu	r1,-13(r30)
  888  00001970  64220000	snei	r2,r1,#0
  889  00001974  1440000c	bnez	r2,L13_LF2
  890  00001978  54000000	nop; delay slot nop
  891  0000197c  0800000c	j	L11_LF2
  892  00001980  54000000	nop; delay slot nop
  893  00001984          	L13_LF2:
  894  00001984  0bffffc0	j	L10_LF2
  895  00001988  54000000	nop; delay slot nop
  896  0000198c          	L11_LF2:
  897  0000198c  8fc1fff4	lw	r1,-12(r30)
  898  00001990  08000004	j	L9_LF2
  899  00001994  54000000	nop; delay slot nop
  900  00001998          	L9_LF2:
  901  00001998  8fa20000	lw	r2,0(r29)
  902  0000199c  8fa30004	lw	r3,4(r29)
  903  000019a0  8fdffff8	lw	r31,-8(r30)
  904  000019a4  001ee820	add	r29,r0,r30
  905  000019a8  8fdefffc	lw	r30,-4(r30)
  906  000019ac  4be00000	jr	r31
  907  000019b0  54000000	nop
  908  000019b4          	.endproc _dstrcpy
  909  000019b4          	.align 2
  910  000019b4          	.proc _dstrncpy
  911  000019b4          	.global _dstrncpy
  912  000019b4          	_dstrncpy:
  913                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  914  000019b4  afbefffc	sw	-4(r29),r30; push fp
  915  000019b8  001df020	add	r30,r0,r29; fp = sp
  916  000019bc  afbffff8	sw	-8(r29),r31; push ret addr
  917  000019c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  918  000019c4  afa20000	sw	0(r29),r2
  919  000019c8  afa30004	sw	4(r29),r3
  920  000019cc  8fc10000	lw	r1,(r30)
  921  000019d0  afc1fff4	sw	-12(r30),r1
  922  000019d4          	L15_LF2:
  923  000019d4  8fc10008	lw	r1,8(r30)
  924  000019d8  2022ffff	addi	r2,r1,#-1
  925  000019dc  afc20008	sw	8(r30),r2
  926  000019e0  70210000	slei	r1,r1,#0
  927  000019e4  1020000c	beqz	r1,L18_LF2
  928  000019e8  54000000	nop; delay slot nop
  929  000019ec  08000048	j	L16_LF2
  930  000019f0  54000000	nop; delay slot nop
  931  000019f4          	L18_LF2:
  932  000019f4  8fc10000	lw	r1,(r30)
  933  000019f8  20220001	addi	r2,r1,#1
  934  000019fc  afc20000	sw	(r30),r2
  935  00001a00  8fc20004	lw	r2,4(r30)
  936  00001a04  20430001	addi	r3,r2,#1
  937  00001a08  afc30004	sw	4(r30),r3
  938  00001a0c  80420000	lb	r2,(r2)
  939  00001a10  a0220000	sb	(r1),r2
  940  00001a14  a3c2fff3	sb	-13(r30),r2
  941  00001a18          	L17_LF2:
  942  00001a18  93c1fff3	lbu	r1,-13(r30)
  943  00001a1c  64220000	snei	r2,r1,#0
  944  00001a20  1440000c	bnez	r2,L19_LF2
  945  00001a24  54000000	nop; delay slot nop
  946  00001a28  0800000c	j	L16_LF2
  947  00001a2c  54000000	nop; delay slot nop
  948  00001a30          	L19_LF2:
  949  00001a30  0bffffa0	j	L15_LF2
  950  00001a34  54000000	nop; delay slot nop
  951  00001a38          	L16_LF2:
  952  00001a38  8fc1fff4	lw	r1,-12(r30)
  953  00001a3c  08000004	j	L14_LF2
  954  00001a40  54000000	nop; delay slot nop
  955  00001a44          	L14_LF2:
  956  00001a44  8fa20000	lw	r2,0(r29)
  957  00001a48  8fa30004	lw	r3,4(r29)
  958  00001a4c  8fdffff8	lw	r31,-8(r30)
  959  00001a50  001ee820	add	r29,r0,r30
  960  00001a54  8fdefffc	lw	r30,-4(r30)
  961  00001a58  4be00000	jr	r31
  962  00001a5c  54000000	nop
  963  00001a60          	.endproc _dstrncpy
  964  00001a60          	.align 2
  965  00001a60          	.proc _dstrcat
  966  00001a60          	.global _dstrcat
  967  00001a60          	_dstrcat:
  968                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  969  00001a60  afbefffc	sw	-4(r29),r30; push fp
  970  00001a64  001df020	add	r30,r0,r29; fp = sp
  971  00001a68  afbffff8	sw	-8(r29),r31; push ret addr
  972  00001a6c  2fbd0018	subui	r29,r29,#24; alloc local storage
  973  00001a70  afa20000	sw	0(r29),r2
  974  00001a74  8fc10000	lw	r1,(r30)
  975  00001a78  afc1fff4	sw	-12(r30),r1
  976  00001a7c          	L21_LF2:
  977  00001a7c  8fc10000	lw	r1,(r30)
  978  00001a80  90220000	lbu	r2,(r1)
  979  00001a84  64410000	snei	r1,r2,#0
  980  00001a88  1420000c	bnez	r1,L23_LF2
  981  00001a8c  54000000	nop; delay slot nop
  982  00001a90  0800001c	j	L22_LF2
  983  00001a94  54000000	nop; delay slot nop
  984  00001a98          	L23_LF2:
  985  00001a98  8fc20000	lw	r2,(r30)
  986  00001a9c  20410001	addi	r1,r2,#1
  987  00001aa0  00011020	add	r2,r0,r1
  988  00001aa4  afc20000	sw	(r30),r2
  989  00001aa8  0bffffd0	j	L21_LF2
  990  00001aac  54000000	nop; delay slot nop
  991  00001ab0          	L22_LF2:
  992  00001ab0  23bdfff8	addi	r29,r29,#-8
  993  00001ab4  001d0820	add	r1,r0,r29
  994  00001ab8  8fc20000	lw	r2,(r30)
  995  00001abc  ac220000	sw	(r1),r2
  996  00001ac0  8fc20004	lw	r2,4(r30)
  997  00001ac4  ac220004	sw	4(r1),r2
  998  00001ac8  0ffffe5c	jal	_dstrcpy
  999  00001acc  54000000	nop; delay slot nop
 1000  00001ad0  23bd0008	addi	r29,r29,#8
 1001  00001ad4  8fc1fff4	lw	r1,-12(r30)
 1002  00001ad8  08000004	j	L20_LF2
 1003  00001adc  54000000	nop; delay slot nop
 1004  00001ae0          	L20_LF2:
 1005  00001ae0  8fa20000	lw	r2,0(r29)
 1006  00001ae4  8fdffff8	lw	r31,-8(r30)
 1007  00001ae8  001ee820	add	r29,r0,r30
 1008  00001aec  8fdefffc	lw	r30,-4(r30)
 1009  00001af0  4be00000	jr	r31
 1010  00001af4  54000000	nop
 1011  00001af8          	.endproc _dstrcat
 1012  00001af8          	.align 2
 1013  00001af8          	.proc _dstrncmp
 1014  00001af8          	.global _dstrncmp
 1015  00001af8          	_dstrncmp:
 1016                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1017  00001af8  afbefffc	sw	-4(r29),r30; push fp
 1018  00001afc  001df020	add	r30,r0,r29; fp = sp
 1019  00001b00  afbffff8	sw	-8(r29),r31; push ret addr
 1020  00001b04  2fbd0018	subui	r29,r29,#24; alloc local storage
 1021  00001b08  afa20000	sw	0(r29),r2
 1022  00001b0c  afa30004	sw	4(r29),r3
 1023  00001b10  54000000	nop
 1024  00001b14  20010000	addi	r1,r0,#0
 1025  00001b18  afc1fff4	sw	-12(r30),r1
 1026  00001b1c          	L25_LF2:
 1027  00001b1c  8fc1fff4	lw	r1,-12(r30)
 1028  00001b20  8fc20008	lw	r2,8(r30)
 1029  00001b24  0022082a	slt	r1,r1,r2
 1030  00001b28  1420000c	bnez	r1,L28_LF2
 1031  00001b2c  54000000	nop; delay slot nop
 1032  00001b30  08000088	j	L26_LF2
 1033  00001b34  54000000	nop; delay slot nop
 1034  00001b38          	L28_LF2:
 1035  00001b38  8fc10004	lw	r1,4(r30)
 1036  00001b3c  90220000	lbu	r2,(r1)
 1037  00001b40  64410000	snei	r1,r2,#0
 1038  00001b44  14200018	bnez	r1,L29_LF2
 1039  00001b48  54000000	nop; delay slot nop
 1040  00001b4c  20010000	addi	r1,r0,#0
 1041  00001b50  080000d8	j	L24_LF2
 1042  00001b54  54000000	nop; delay slot nop
 1043  00001b58  08000028	j	L30_LF2
 1044  00001b5c  54000000	nop; delay slot nop
 1045  00001b60          	L29_LF2:
 1046  00001b60  8fc10000	lw	r1,(r30)
 1047  00001b64  8fc20004	lw	r2,4(r30)
 1048  00001b68  90210000	lbu	r1,(r1)
 1049  00001b6c  90420000	lbu	r2,(r2)
 1050  00001b70  00220829	sne	r1,r1,r2
 1051  00001b74  1020000c	beqz	r1,L30_LF2
 1052  00001b78  54000000	nop; delay slot nop
 1053  00001b7c  0800003c	j	L26_LF2
 1054  00001b80  54000000	nop; delay slot nop
 1055  00001b84          	L31_LF2:
 1056  00001b84          	L30_LF2:
 1057  00001b84  8fc20000	lw	r2,(r30)
 1058  00001b88  20410001	addi	r1,r2,#1
 1059  00001b8c  00011020	add	r2,r0,r1
 1060  00001b90  afc20000	sw	(r30),r2
 1061  00001b94  8fc20004	lw	r2,4(r30)
 1062  00001b98  20410001	addi	r1,r2,#1
 1063  00001b9c  00011020	add	r2,r0,r1
 1064  00001ba0  afc20004	sw	4(r30),r2
 1065  00001ba4          	L27_LF2:
 1066  00001ba4  8fc2fff4	lw	r2,-12(r30)
 1067  00001ba8  20410001	addi	r1,r2,#1
 1068  00001bac  00011020	add	r2,r0,r1
 1069  00001bb0  afc2fff4	sw	-12(r30),r2
 1070  00001bb4  0bffff64	j	L25_LF2
 1071  00001bb8  54000000	nop; delay slot nop
 1072  00001bbc          	L26_LF2:
 1073  00001bbc  8fc1fff4	lw	r1,-12(r30)
 1074  00001bc0  8fc20008	lw	r2,8(r30)
 1075  00001bc4  00220828	seq	r1,r1,r2
 1076  00001bc8  10200018	beqz	r1,L32_LF2
 1077  00001bcc  54000000	nop; delay slot nop
 1078  00001bd0  20010000	addi	r1,r0,#0
 1079  00001bd4  08000054	j	L24_LF2
 1080  00001bd8  54000000	nop; delay slot nop
 1081  00001bdc  0800004c	j	L33_LF2
 1082  00001be0  54000000	nop; delay slot nop
 1083  00001be4          	L32_LF2:
 1084  00001be4  8fc20000	lw	r2,(r30)
 1085  00001be8  90410000	lbu	r1,(r2)
 1086  00001bec  8fc20004	lw	r2,4(r30)
 1087  00001bf0  90430000	lbu	r3,(r2)
 1088  00001bf4  00230822	sub	r1,r1,r3
 1089  00001bf8  74220000	sgei	r2,r1,#0
 1090  00001bfc  10400020	beqz	r2,L34_LF2
 1091  00001c00  54000000	nop; delay slot nop
 1092  00001c04  8fc10000	lw	r1,(r30)
 1093  00001c08  8fc20004	lw	r2,4(r30)
 1094  00001c0c  90210000	lbu	r1,(r1)
 1095  00001c10  90420000	lbu	r2,(r2)
 1096  00001c14  00220829	sne	r1,r1,r2
 1097  00001c18  08000008	j	L35_LF2
 1098  00001c1c  54000000	nop; delay slot nop
 1099  00001c20          	L34_LF2:
 1100  00001c20  2001ffff	addi	r1,r0,#-1
 1101  00001c24          	L35_LF2:
 1102  00001c24  08000004	j	L24_LF2
 1103  00001c28  54000000	nop; delay slot nop
 1104  00001c2c          	L33_LF2:
 1105  00001c2c          	L24_LF2:
 1106  00001c2c  8fa20000	lw	r2,0(r29)
 1107  00001c30  8fa30004	lw	r3,4(r29)
 1108  00001c34  8fdffff8	lw	r31,-8(r30)
 1109  00001c38  001ee820	add	r29,r0,r30
 1110  00001c3c  8fdefffc	lw	r30,-4(r30)
 1111  00001c40  4be00000	jr	r31
 1112  00001c44  54000000	nop
 1113  00001c48          	.endproc _dstrncmp
 1114  00001c48          	.align 2
 1115  00001c48          	.proc _dstrlen
 1116  00001c48          	.global _dstrlen
 1117  00001c48          	_dstrlen:
 1118                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1119  00001c48  afbefffc	sw	-4(r29),r30; push fp
 1120  00001c4c  001df020	add	r30,r0,r29; fp = sp
 1121  00001c50  afbffff8	sw	-8(r29),r31; push ret addr
 1122  00001c54  2fbd0018	subui	r29,r29,#24; alloc local storage
 1123  00001c58  afa20000	sw	0(r29),r2
 1124  00001c5c  20010000	addi	r1,r0,#0
 1125  00001c60  afc1fff4	sw	-12(r30),r1
 1126  00001c64          	L37_LF2:
 1127  00001c64  8fc10000	lw	r1,(r30)
 1128  00001c68  20220001	addi	r2,r1,#1
 1129  00001c6c  afc20000	sw	(r30),r2
 1130  00001c70  90210000	lbu	r1,(r1)
 1131  00001c74  64220000	snei	r2,r1,#0
 1132  00001c78  1440000c	bnez	r2,L39_LF2
 1133  00001c7c  54000000	nop; delay slot nop
 1134  00001c80  0800001c	j	L38_LF2
 1135  00001c84  54000000	nop; delay slot nop
 1136  00001c88          	L39_LF2:
 1137  00001c88  8fc2fff4	lw	r2,-12(r30)
 1138  00001c8c  20410001	addi	r1,r2,#1
 1139  00001c90  00011020	add	r2,r0,r1
 1140  00001c94  afc2fff4	sw	-12(r30),r2
 1141  00001c98  0bffffc8	j	L37_LF2
 1142  00001c9c  54000000	nop; delay slot nop
 1143  00001ca0          	L38_LF2:
 1144  00001ca0  8fc1fff4	lw	r1,-12(r30)
 1145  00001ca4  08000004	j	L36_LF2
 1146  00001ca8  54000000	nop; delay slot nop
 1147  00001cac          	L36_LF2:
 1148  00001cac  8fa20000	lw	r2,0(r29)
 1149  00001cb0  8fdffff8	lw	r31,-8(r30)
 1150  00001cb4  001ee820	add	r29,r0,r30
 1151  00001cb8  8fdefffc	lw	r30,-4(r30)
 1152  00001cbc  4be00000	jr	r31
 1153  00001cc0  54000000	nop
 1154  00001cc4          	.endproc _dstrlen
 1155  00001cc4          	.align 2
 1156  00001cc4          	.proc _dstrstr
 1157  00001cc4          	.global _dstrstr
 1158  00001cc4          	_dstrstr:
 1159                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1160  00001cc4  afbefffc	sw	-4(r29),r30; push fp
 1161  00001cc8  001df020	add	r30,r0,r29; fp = sp
 1162  00001ccc  afbffff8	sw	-8(r29),r31; push ret addr
 1163  00001cd0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1164  00001cd4  afa20000	sw	0(r29),r2
 1165  00001cd8  23bdfff8	addi	r29,r29,#-8
 1166  00001cdc  001d0820	add	r1,r0,r29
 1167  00001ce0  8fc20004	lw	r2,4(r30)
 1168  00001ce4  ac220000	sw	(r1),r2
 1169  00001ce8  0fffff5c	jal	_dstrlen
 1170  00001cec  54000000	nop; delay slot nop
 1171  00001cf0  23bd0008	addi	r29,r29,#8
 1172  00001cf4  afc1fff4	sw	-12(r30),r1
 1173  00001cf8          	L41_LF2:
 1174  00001cf8  8fc10000	lw	r1,(r30)
 1175  00001cfc  90220000	lbu	r2,(r1)
 1176  00001d00  64410000	snei	r1,r2,#0
 1177  00001d04  1420000c	bnez	r1,L43_LF2
 1178  00001d08  54000000	nop; delay slot nop
 1179  00001d0c  08000060	j	L42_LF2
 1180  00001d10  54000000	nop; delay slot nop
 1181  00001d14          	L43_LF2:
 1182  00001d14  23bdfff0	addi	r29,r29,#-16
 1183  00001d18  001d0820	add	r1,r0,r29
 1184  00001d1c  8fc20000	lw	r2,(r30)
 1185  00001d20  ac220000	sw	(r1),r2
 1186  00001d24  8fc20004	lw	r2,4(r30)
 1187  00001d28  ac220004	sw	4(r1),r2
 1188  00001d2c  8fc2fff4	lw	r2,-12(r30)
 1189  00001d30  ac220008	sw	8(r1),r2
 1190  00001d34  0ffffdc0	jal	_dstrncmp
 1191  00001d38  54000000	nop; delay slot nop
 1192  00001d3c  23bd0010	addi	r29,r29,#16
 1193  00001d40  64220000	snei	r2,r1,#0
 1194  00001d44  14400010	bnez	r2,L44_LF2
 1195  00001d48  54000000	nop; delay slot nop
 1196  00001d4c  8fc10000	lw	r1,(r30)
 1197  00001d50  08000028	j	L40_LF2
 1198  00001d54  54000000	nop; delay slot nop
 1199  00001d58          	L44_LF2:
 1200  00001d58  8fc20000	lw	r2,(r30)
 1201  00001d5c  20410001	addi	r1,r2,#1
 1202  00001d60  00011020	add	r2,r0,r1
 1203  00001d64  afc20000	sw	(r30),r2
 1204  00001d68  0bffff8c	j	L41_LF2
 1205  00001d6c  54000000	nop; delay slot nop
 1206  00001d70          	L42_LF2:
 1207  00001d70  20010000	addi	r1,r0,#0
 1208  00001d74  08000004	j	L40_LF2
 1209  00001d78  54000000	nop; delay slot nop
 1210  00001d7c          	L40_LF2:
 1211  00001d7c  8fa20000	lw	r2,0(r29)
 1212  00001d80  8fdffff8	lw	r31,-8(r30)
 1213  00001d84  001ee820	add	r29,r0,r30
 1214  00001d88  8fdefffc	lw	r30,-4(r30)
 1215  00001d8c  4be00000	jr	r31
 1216  00001d90  54000000	nop
 1217  00001d94          	.endproc _dstrstr
 1218  00001d94          	.align 2
 1219  00001d94          	.proc _dmindex
 1220  00001d94          	.global _dmindex
 1221  00001d94          	_dmindex:
 1222                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1223  00001d94  afbefffc	sw	-4(r29),r30; push fp
 1224  00001d98  001df020	add	r30,r0,r29; fp = sp
 1225  00001d9c  afbffff8	sw	-8(r29),r31; push ret addr
 1226  00001da0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1227  00001da4  afa20000	sw	0(r29),r2
 1228  00001da8  54000000	nop
 1229  00001dac          	L46_LF2:
 1230  00001dac  8fc10000	lw	r1,(r30)
 1231  00001db0  90220000	lbu	r2,(r1)
 1232  00001db4  64410000	snei	r1,r2,#0
 1233  00001db8  1420000c	bnez	r1,L48_LF2
 1234  00001dbc  54000000	nop; delay slot nop
 1235  00001dc0  08000070	j	L47_LF2
 1236  00001dc4  54000000	nop; delay slot nop
 1237  00001dc8          	L48_LF2:
 1238  00001dc8  8fc10004	lw	r1,4(r30)
 1239  00001dcc  afc1fff4	sw	-12(r30),r1
 1240  00001dd0          	L49_LF2:
 1241  00001dd0  8fc1fff4	lw	r1,-12(r30)
 1242  00001dd4  90220000	lbu	r2,(r1)
 1243  00001dd8  64410000	snei	r1,r2,#0
 1244  00001ddc  1420000c	bnez	r1,L52_LF2
 1245  00001de0  54000000	nop; delay slot nop
 1246  00001de4  08000044	j	L50_LF2
 1247  00001de8  54000000	nop; delay slot nop
 1248  00001dec          	L52_LF2:
 1249  00001dec  8fc10000	lw	r1,(r30)
 1250  00001df0  8fc2fff4	lw	r2,-12(r30)
 1251  00001df4  90210000	lbu	r1,(r1)
 1252  00001df8  90420000	lbu	r2,(r2)
 1253  00001dfc  00220828	seq	r1,r1,r2
 1254  00001e00  10200010	beqz	r1,L51_LF2
 1255  00001e04  54000000	nop; delay slot nop
 1256  00001e08  8fc10000	lw	r1,(r30)
 1257  00001e0c  08000030	j	L45_LF2
 1258  00001e10  54000000	nop; delay slot nop
 1259  00001e14          	L53_LF2:
 1260  00001e14          	L51_LF2:
 1261  00001e14  8fc2fff4	lw	r2,-12(r30)
 1262  00001e18  20410001	addi	r1,r2,#1
 1263  00001e1c  00011020	add	r2,r0,r1
 1264  00001e20  afc2fff4	sw	-12(r30),r2
 1265  00001e24  0bffffa8	j	L49_LF2
 1266  00001e28  54000000	nop; delay slot nop
 1267  00001e2c          	L50_LF2:
 1268  00001e2c  0bffff7c	j	L46_LF2
 1269  00001e30  54000000	nop; delay slot nop
 1270  00001e34          	L47_LF2:
 1271  00001e34  20010000	addi	r1,r0,#0
 1272  00001e38  08000004	j	L45_LF2
 1273  00001e3c  54000000	nop; delay slot nop
 1274  00001e40          	L45_LF2:
 1275  00001e40  8fa20000	lw	r2,0(r29)
 1276  00001e44  8fdffff8	lw	r31,-8(r30)
 1277  00001e48  001ee820	add	r29,r0,r30
 1278  00001e4c  8fdefffc	lw	r30,-4(r30)
 1279  00001e50  4be00000	jr	r31
 1280  00001e54  54000000	nop
 1281  00001e58          	.endproc _dmindex
 1282  00001e58          	.align 2
 1283  00001e58          	.proc _dindex
 1284  00001e58          	.global _dindex
 1285  00001e58          	_dindex:
 1286                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1287  00001e58  afbefffc	sw	-4(r29),r30; push fp
 1288  00001e5c  001df020	add	r30,r0,r29; fp = sp
 1289  00001e60  afbffff8	sw	-8(r29),r31; push ret addr
 1290  00001e64  2fbd0010	subui	r29,r29,#16; alloc local storage
 1291  00001e68  afa20000	sw	0(r29),r2
 1292  00001e6c  54000000	nop
 1293  00001e70          	L55_LF2:
 1294  00001e70  8fc10000	lw	r1,(r30)
 1295  00001e74  90220000	lbu	r2,(r1)
 1296  00001e78  64410000	snei	r1,r2,#0
 1297  00001e7c  1420000c	bnez	r1,L57_LF2
 1298  00001e80  54000000	nop; delay slot nop
 1299  00001e84  08000040	j	L56_LF2
 1300  00001e88  54000000	nop; delay slot nop
 1301  00001e8c          	L57_LF2:
 1302  00001e8c  8fc10000	lw	r1,(r30)
 1303  00001e90  90220000	lbu	r2,(r1)
 1304  00001e94  8fc10004	lw	r1,4(r30)
 1305  00001e98  00411028	seq	r2,r2,r1
 1306  00001e9c  10400010	beqz	r2,L58_LF2
 1307  00001ea0  54000000	nop; delay slot nop
 1308  00001ea4  8fc10000	lw	r1,(r30)
 1309  00001ea8  08000028	j	L54_LF2
 1310  00001eac  54000000	nop; delay slot nop
 1311  00001eb0          	L58_LF2:
 1312  00001eb0  8fc20000	lw	r2,(r30)
 1313  00001eb4  20410001	addi	r1,r2,#1
 1314  00001eb8  00011020	add	r2,r0,r1
 1315  00001ebc  afc20000	sw	(r30),r2
 1316  00001ec0  0bffffac	j	L55_LF2
 1317  00001ec4  54000000	nop; delay slot nop
 1318  00001ec8          	L56_LF2:
 1319  00001ec8  20010000	addi	r1,r0,#0
 1320  00001ecc  08000004	j	L54_LF2
 1321  00001ed0  54000000	nop; delay slot nop
 1322  00001ed4          	L54_LF2:
 1323  00001ed4  8fa20000	lw	r2,0(r29)
 1324  00001ed8  8fdffff8	lw	r31,-8(r30)
 1325  00001edc  001ee820	add	r29,r0,r30
 1326  00001ee0  8fdefffc	lw	r30,-4(r30)
 1327  00001ee4  4be00000	jr	r31
 1328  00001ee8  54000000	nop
 1329  00001eec          	.endproc _dindex
 1330  00001eec          	.align 2
 1331  00001eec          	.proc _ditoa
 1332  00001eec          	.global _ditoa
 1333  00001eec          	_ditoa:
 1334                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1335  00001eec  afbefffc	sw	-4(r29),r30; push fp
 1336  00001ef0  001df020	add	r30,r0,r29; fp = sp
 1337  00001ef4  afbffff8	sw	-8(r29),r31; push ret addr
 1338  00001ef8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1339  00001efc  afa20000	sw	0(r29),r2
 1340  00001f00  afa30004	sw	4(r29),r3
 1341  00001f04  8fc10000	lw	r1,(r30)
 1342  00001f08  68220000	slti	r2,r1,#0
 1343  00001f0c  1040002c	beqz	r2,L60_LF2
 1344  00001f10  54000000	nop; delay slot nop
 1345  00001f14  8fc10004	lw	r1,4(r30)
 1346  00001f18  20220001	addi	r2,r1,#1
 1347  00001f1c  afc20004	sw	4(r30),r2
 1348  00001f20  2002002d	addi	r2,r0,(#0x2d)&0xff
 1349  00001f24  a0220000	sb	(r1),r2
 1350  00001f28  8fc10000	lw	r1,(r30)
 1351  00001f2c  00011022	sub	r2,r0,r1
 1352  00001f30  afc20000	sw	(r30),r2
 1353  00001f34  08000118	j	L61_LF2
 1354  00001f38  54000000	nop; delay slot nop
 1355  00001f3c          	L60_LF2:
 1356  00001f3c  8fc10000	lw	r1,(r30)
 1357  00001f40  64220000	snei	r2,r1,#0
 1358  00001f44  14400020	bnez	r2,L62_LF2
 1359  00001f48  54000000	nop; delay slot nop
 1360  00001f4c  8fc10004	lw	r1,4(r30)
 1361  00001f50  20220001	addi	r2,r1,#1
 1362  00001f54  afc20004	sw	4(r30),r2
 1363  00001f58  20020030	addi	r2,r0,(#0x30)&0xff
 1364  00001f5c  a0220000	sb	(r1),r2
 1365  00001f60  080000ec	j	L61_LF2
 1366  00001f64  54000000	nop; delay slot nop
 1367  00001f68          	L62_LF2:
 1368  00001f68  20010001	addi	r1,r0,#1
 1369  00001f6c  afc1fff4	sw	-12(r30),r1
 1370  00001f70          	L64_LF2:
 1371  00001f70  8fc1fff4	lw	r1,-12(r30)
 1372  00001f74  8fc20000	lw	r2,(r30)
 1373  00001f78  0022082c	sle	r1,r1,r2
 1374  00001f7c  1420000c	bnez	r1,L66_LF2
 1375  00001f80  54000000	nop; delay slot nop
 1376  00001f84  08000024	j	L65_LF2
 1377  00001f88  54000000	nop; delay slot nop
 1378  00001f8c          	L67_LF2:
 1379  00001f8c          	L66_LF2:
 1380  00001f8c  8fc1fff4	lw	r1,-12(r30)
 1381  00001f90  00011820	add	r3,r0,r1
 1382  00001f94  50620002	slli	r2,r3,#0x2
 1383  00001f98  00411020	add	r2,r2,r1
 1384  00001f9c  50410001	slli	r1,r2,#0x1
 1385  00001fa0  afc1fff4	sw	-12(r30),r1
 1386  00001fa4  0bffffc8	j	L64_LF2
 1387  00001fa8  54000000	nop; delay slot nop
 1388  00001fac          	L65_LF2:
 1389  00001fac  54000000	nop
 1390  00001fb0          	L68_LF2:
 1391  00001fb0  8fc1fff4	lw	r1,-12(r30)
 1392  00001fb4  2002000a	addi	r2,r0,#10
 1393  00001fb8  00200035	movi2fp	f0,r1
 1394  00001fbc  00400835	movi2fp	f1,r2
 1395  00001fc0  0401000f	div	f0,f0,f1
 1396  00001fc4  00000834	movfp2i	r1,f0
 1397  00001fc8  afc1fff4	sw	-12(r30),r1
 1398  00001fcc  8fc10004	lw	r1,4(r30)
 1399  00001fd0  20220001	addi	r2,r1,#1
 1400  00001fd4  afc20004	sw	4(r30),r2
 1401  00001fd8  8fc20000	lw	r2,(r30)
 1402  00001fdc  8fc3fff4	lw	r3,-12(r30)
 1403  00001fe0  00400035	movi2fp	f0,r2
 1404  00001fe4  00600835	movi2fp	f1,r3
 1405  00001fe8  0401000f	div	f0,f0,f1
 1406  00001fec  00001034	movfp2i	r2,f0
 1407  00001ff0  00021820	add	r3,r0,r2
 1408  00001ff4  20620030	addi	r2,r3,#48
 1409  00001ff8  a0220000	sb	(r1),r2
 1410  00001ffc  8fc10000	lw	r1,(r30)
 1411  00002000  8fc3fff4	lw	r3,-12(r30)
 1412  00002004  00200035	movi2fp	f0,r1
 1413  00002008  00600835	movi2fp	f1,r3
 1414  0000200c  0401000f	div	f0,f0,f1
 1415  00002010  00001034	movfp2i	r2,f0
 1416  00002014  8fc3fff4	lw	r3,-12(r30)
 1417  00002018  00400035	movi2fp	f0,r2
 1418  0000201c  00600835	movi2fp	f1,r3
 1419  00002020  0401000e	mult	f0,f0,f1
 1420  00002024  00001034	movfp2i	r2,f0
 1421  00002028  00220822	sub	r1,r1,r2
 1422  0000202c  afc10000	sw	(r30),r1
 1423  00002030          	L70_LF2:
 1424  00002030  8fc1fff4	lw	r1,-12(r30)
 1425  00002034  6c220001	sgti	r2,r1,#1
 1426  00002038  1440000c	bnez	r2,L71_LF2
 1427  0000203c  54000000	nop; delay slot nop
 1428  00002040  0800000c	j	L61_LF2
 1429  00002044  54000000	nop; delay slot nop
 1430  00002048          	L71_LF2:
 1431  00002048  0bffff64	j	L68_LF2
 1432  0000204c  54000000	nop; delay slot nop
 1433  00002050          	L69_LF2:
 1434  00002050          	L63_LF2:
 1435  00002050          	L61_LF2:
 1436  00002050  8fc10004	lw	r1,4(r30)
 1437  00002054  20020000	addi	r2,r0,(#0x0)&0xff
 1438  00002058  a0220000	sb	(r1),r2
 1439  0000205c          	L59_LF2:
 1440  0000205c  8fa20000	lw	r2,0(r29)
 1441  00002060  8fa30004	lw	r3,4(r29)
 1442  00002064  8fdffff8	lw	r31,-8(r30)
 1443  00002068  001ee820	add	r29,r0,r30
 1444  0000206c  8fdefffc	lw	r30,-4(r30)
 1445  00002070  4be00000	jr	r31
 1446  00002074  54000000	nop
 1447  00002078          	.endproc _ditoa
 1448  00002078          	.align 2
 1449  00002078          	.proc _dstrtol
 1450  00002078          	.global _dstrtol
 1451  00002078          	_dstrtol:
 1452                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1453  00002078  afbefffc	sw	-4(r29),r30; push fp
 1454  0000207c  001df020	add	r30,r0,r29; fp = sp
 1455  00002080  afbffff8	sw	-8(r29),r31; push ret addr
 1456  00002084  2fbd0020	subui	r29,r29,#32; alloc local storage
 1457  00002088  afa20000	sw	0(r29),r2
 1458  0000208c  20010000	addi	r1,r0,#0
 1459  00002090  afc1fff4	sw	-12(r30),r1
 1460  00002094          	L73_LF2:
 1461  00002094  8fc10000	lw	r1,(r30)
 1462  00002098  90220000	lbu	r2,(r1)
 1463  0000209c  60410020	seqi	r1,r2,#32
 1464  000020a0  14200034	bnez	r1,L75_LF2
 1465  000020a4  54000000	nop; delay slot nop
 1466  000020a8  8fc10000	lw	r1,(r30)
 1467  000020ac  90220000	lbu	r2,(r1)
 1468  000020b0  60410009	seqi	r1,r2,#9
 1469  000020b4  14200020	bnez	r1,L75_LF2
 1470  000020b8  54000000	nop; delay slot nop
 1471  000020bc  8fc10000	lw	r1,(r30)
 1472  000020c0  90220000	lbu	r2,(r1)
 1473  000020c4  6041000a	seqi	r1,r2,#10
 1474  000020c8  1420000c	bnez	r1,L75_LF2
 1475  000020cc  54000000	nop; delay slot nop
 1476  000020d0  0800001c	j	L74_LF2
 1477  000020d4  54000000	nop; delay slot nop
 1478  000020d8          	L75_LF2:
 1479  000020d8  8fc20000	lw	r2,(r30)
 1480  000020dc  20410001	addi	r1,r2,#1
 1481  000020e0  00011020	add	r2,r0,r1
 1482  000020e4  afc20000	sw	(r30),r2
 1483  000020e8  0bffffa8	j	L73_LF2
 1484  000020ec  54000000	nop; delay slot nop
 1485  000020f0          	L74_LF2:
 1486  000020f0  8fc10004	lw	r1,4(r30)
 1487  000020f4  64220000	snei	r2,r1,#0
 1488  000020f8  10400010	beqz	r2,L76_LF2
 1489  000020fc  54000000	nop; delay slot nop
 1490  00002100  8fc10004	lw	r1,4(r30)
 1491  00002104  8fc20000	lw	r2,(r30)
 1492  00002108  ac220000	sw	(r1),r2
 1493  0000210c          	L76_LF2:
 1494  0000210c  8fc10000	lw	r1,(r30)
 1495  00002110  90220000	lbu	r2,(r1)
 1496  00002114  64410000	snei	r1,r2,#0
 1497  00002118  14200010	bnez	r1,L77_LF2
 1498  0000211c  54000000	nop; delay slot nop
 1499  00002120  8fc1fff4	lw	r1,-12(r30)
 1500  00002124  08000294	j	L72_LF2
 1501  00002128  54000000	nop; delay slot nop
 1502  0000212c          	L77_LF2:
 1503  0000212c  8fc10000	lw	r1,(r30)
 1504  00002130  90220000	lbu	r2,(r1)
 1505  00002134  6041002d	seqi	r1,r2,#45
 1506  00002138  10200024	beqz	r1,L78_LF2
 1507  0000213c  54000000	nop; delay slot nop
 1508  00002140  2001ffff	addi	r1,r0,#-1
 1509  00002144  afc1ffec	sw	-20(r30),r1
 1510  00002148  8fc20000	lw	r2,(r30)
 1511  0000214c  20410001	addi	r1,r2,#1
 1512  00002150  00011020	add	r2,r0,r1
 1513  00002154  afc20000	sw	(r30),r2
 1514  00002158  0800000c	j	L79_LF2
 1515  0000215c  54000000	nop; delay slot nop
 1516  00002160          	L78_LF2:
 1517  00002160  20010001	addi	r1,r0,#1
 1518  00002164  afc1ffec	sw	-20(r30),r1
 1519  00002168          	L79_LF2:
 1520  00002168  8fc10008	lw	r1,8(r30)
 1521  0000216c  64220000	snei	r2,r1,#0
 1522  00002170  14400090	bnez	r2,L80_LF2
 1523  00002174  54000000	nop; delay slot nop
 1524  00002178  8fc10000	lw	r1,(r30)
 1525  0000217c  90220000	lbu	r2,(r1)
 1526  00002180  60410030	seqi	r1,r2,#48
 1527  00002184  10200074	beqz	r1,L81_LF2
 1528  00002188  54000000	nop; delay slot nop
 1529  0000218c  8fc20000	lw	r2,(r30)
 1530  00002190  20410001	addi	r1,r2,#1
 1531  00002194  00011020	add	r2,r0,r1
 1532  00002198  afc20000	sw	(r30),r2
 1533  0000219c  8fc10000	lw	r1,(r30)
 1534  000021a0  90220000	lbu	r2,(r1)
 1535  000021a4  60410078	seqi	r1,r2,#120
 1536  000021a8  14200020	bnez	r1,L83_LF2
 1537  000021ac  54000000	nop; delay slot nop
 1538  000021b0  8fc10000	lw	r1,(r30)
 1539  000021b4  90220000	lbu	r2,(r1)
 1540  000021b8  60410058	seqi	r1,r2,#88
 1541  000021bc  1420000c	bnez	r1,L83_LF2
 1542  000021c0  54000000	nop; delay slot nop
 1543  000021c4  08000024	j	L82_LF2
 1544  000021c8  54000000	nop; delay slot nop
 1545  000021cc          	L83_LF2:
 1546  000021cc  20010010	addi	r1,r0,#16
 1547  000021d0  afc10008	sw	8(r30),r1
 1548  000021d4  8fc20000	lw	r2,(r30)
 1549  000021d8  20410001	addi	r1,r2,#1
 1550  000021dc  00011020	add	r2,r0,r1
 1551  000021e0  afc20000	sw	(r30),r2
 1552  000021e4  0800000c	j	L84_LF2
 1553  000021e8  54000000	nop; delay slot nop
 1554  000021ec          	L82_LF2:
 1555  000021ec  20010008	addi	r1,r0,#8
 1556  000021f0  afc10008	sw	8(r30),r1
 1557  000021f4          	L84_LF2:
 1558  000021f4  0800000c	j	L80_LF2
 1559  000021f8  54000000	nop; delay slot nop
 1560  000021fc          	L81_LF2:
 1561  000021fc  2001000a	addi	r1,r0,#10
 1562  00002200  afc10008	sw	8(r30),r1
 1563  00002204          	L85_LF2:
 1564  00002204          	L80_LF2:
 1565  00002204  8fc10008	lw	r1,8(r30)
 1566  00002208  70220000	slei	r2,r1,#0
 1567  0000220c  1440001c	bnez	r2,L87_LF2
 1568  00002210  54000000	nop; delay slot nop
 1569  00002214  8fc10008	lw	r1,8(r30)
 1570  00002218  6c220010	sgti	r2,r1,#16
 1571  0000221c  1440000c	bnez	r2,L87_LF2
 1572  00002220  54000000	nop; delay slot nop
 1573  00002224  08000010	j	L86_LF2
 1574  00002228  54000000	nop; delay slot nop
 1575  0000222c          	L87_LF2:
 1576  0000222c  8fc1fff4	lw	r1,-12(r30)
 1577  00002230  08000188	j	L72_LF2
 1578  00002234  54000000	nop; delay slot nop
 1579  00002238          	L86_LF2:
 1580  00002238  54000000	nop
 1581  0000223c          	L88_LF2:
 1582  0000223c  8fc10000	lw	r1,(r30)
 1583  00002240  90220000	lbu	r2,(r1)
 1584  00002244  6c41002f	sgtui	r1,r2,#47
 1585  00002248  10200030	beqz	r1,L91_LF2
 1586  0000224c  54000000	nop; delay slot nop
 1587  00002250  8fc10000	lw	r1,(r30)
 1588  00002254  90220000	lbu	r2,(r1)
 1589  00002258  70410039	sleui	r1,r2,#57
 1590  0000225c  1020001c	beqz	r1,L91_LF2
 1591  00002260  54000000	nop; delay slot nop
 1592  00002264  8fc10000	lw	r1,(r30)
 1593  00002268  90220000	lbu	r2,(r1)
 1594  0000226c  2041ffd0	addi	r1,r2,#-48
 1595  00002270  afc1fff0	sw	-16(r30),r1
 1596  00002274  0800008c	j	L92_LF2
 1597  00002278  54000000	nop; delay slot nop
 1598  0000227c          	L91_LF2:
 1599  0000227c  8fc10000	lw	r1,(r30)
 1600  00002280  90220000	lbu	r2,(r1)
 1601  00002284  6c410060	sgtui	r1,r2,#96
 1602  00002288  10200030	beqz	r1,L93_LF2
 1603  0000228c  54000000	nop; delay slot nop
 1604  00002290  8fc10000	lw	r1,(r30)
 1605  00002294  90220000	lbu	r2,(r1)
 1606  00002298  7041007a	sleui	r1,r2,#122
 1607  0000229c  1020001c	beqz	r1,L93_LF2
 1608  000022a0  54000000	nop; delay slot nop
 1609  000022a4  8fc10000	lw	r1,(r30)
 1610  000022a8  90220000	lbu	r2,(r1)
 1611  000022ac  2041ffa9	addi	r1,r2,#-87
 1612  000022b0  afc1fff0	sw	-16(r30),r1
 1613  000022b4  0800004c	j	L92_LF2
 1614  000022b8  54000000	nop; delay slot nop
 1615  000022bc          	L93_LF2:
 1616  000022bc  8fc10000	lw	r1,(r30)
 1617  000022c0  90220000	lbu	r2,(r1)
 1618  000022c4  6c410040	sgtui	r1,r2,#64
 1619  000022c8  10200030	beqz	r1,L95_LF2
 1620  000022cc  54000000	nop; delay slot nop
 1621  000022d0  8fc10000	lw	r1,(r30)
 1622  000022d4  90220000	lbu	r2,(r1)
 1623  000022d8  7041005a	sleui	r1,r2,#90
 1624  000022dc  1020001c	beqz	r1,L95_LF2
 1625  000022e0  54000000	nop; delay slot nop
 1626  000022e4  8fc10000	lw	r1,(r30)
 1627  000022e8  90220000	lbu	r2,(r1)
 1628  000022ec  2041ffc9	addi	r1,r2,#-55
 1629  000022f0  afc1fff0	sw	-16(r30),r1
 1630  000022f4  0800000c	j	L92_LF2
 1631  000022f8  54000000	nop; delay slot nop
 1632  000022fc          	L95_LF2:
 1633  000022fc  200103e8	addi	r1,r0,#1000
 1634  00002300  afc1fff0	sw	-16(r30),r1
 1635  00002304          	L96_LF2:
 1636  00002304          	L94_LF2:
 1637  00002304          	L92_LF2:
 1638  00002304  8fc1fff0	lw	r1,-16(r30)
 1639  00002308  8fc20008	lw	r2,8(r30)
 1640  0000230c  0022082a	slt	r1,r1,r2
 1641  00002310  10200040	beqz	r1,L90_LF2
 1642  00002314  54000000	nop; delay slot nop
 1643  00002318  8fc1fff4	lw	r1,-12(r30)
 1644  0000231c  8fc20008	lw	r2,8(r30)
 1645  00002320  00200035	movi2fp	f0,r1
 1646  00002324  00400835	movi2fp	f1,r2
 1647  00002328  0401000e	mult	f0,f0,f1
 1648  0000232c  00000834	movfp2i	r1,f0
 1649  00002330  afc1fff4	sw	-12(r30),r1
 1650  00002334  8fc1fff4	lw	r1,-12(r30)
 1651  00002338  8fc2fff0	lw	r2,-16(r30)
 1652  0000233c  00220820	add	r1,r1,r2
 1653  00002340  afc1fff4	sw	-12(r30),r1
 1654  00002344  8fc20000	lw	r2,(r30)
 1655  00002348  20410001	addi	r1,r2,#1
 1656  0000234c  00011020	add	r2,r0,r1
 1657  00002350  afc20000	sw	(r30),r2
 1658  00002354          	L97_LF2:
 1659  00002354          	L90_LF2:
 1660  00002354  8fc1fff0	lw	r1,-16(r30)
 1661  00002358  8fc20008	lw	r2,8(r30)
 1662  0000235c  0022082a	slt	r1,r1,r2
 1663  00002360  1420000c	bnez	r1,L98_LF2
 1664  00002364  54000000	nop; delay slot nop
 1665  00002368  0800000c	j	L89_LF2
 1666  0000236c  54000000	nop; delay slot nop
 1667  00002370          	L98_LF2:
 1668  00002370  0bfffec8	j	L88_LF2
 1669  00002374  54000000	nop; delay slot nop
 1670  00002378          	L89_LF2:
 1671  00002378  8fc10004	lw	r1,4(r30)
 1672  0000237c  64220000	snei	r2,r1,#0
 1673  00002380  10400010	beqz	r2,L99_LF2
 1674  00002384  54000000	nop; delay slot nop
 1675  00002388  8fc10004	lw	r1,4(r30)
 1676  0000238c  8fc20000	lw	r2,(r30)
 1677  00002390  ac220000	sw	(r1),r2
 1678  00002394          	L99_LF2:
 1679  00002394  8fc1fff4	lw	r1,-12(r30)
 1680  00002398  8fc2ffec	lw	r2,-20(r30)
 1681  0000239c  00200035	movi2fp	f0,r1
 1682  000023a0  00400835	movi2fp	f1,r2
 1683  000023a4  0401000e	mult	f0,f0,f1
 1684  000023a8  00000834	movfp2i	r1,f0
 1685  000023ac  afc1fff4	sw	-12(r30),r1
 1686  000023b0  8fc1fff4	lw	r1,-12(r30)
 1687  000023b4  08000004	j	L72_LF2
 1688  000023b8  54000000	nop; delay slot nop
 1689  000023bc          	L72_LF2:
 1690  000023bc  8fa20000	lw	r2,0(r29)
 1691  000023c0  8fdffff8	lw	r31,-8(r30)
 1692  000023c4  001ee820	add	r29,r0,r30
 1693  000023c8  8fdefffc	lw	r30,-4(r30)
 1694  000023cc  4be00000	jr	r31
 1695  000023d0  54000000	nop
 1696  000023d4          	.endproc _dstrtol
 1697  000023d4          	.align 2
 1698  000023d4          	.proc _bcopy
 1699  000023d4          	.global _bcopy
 1700  000023d4          	_bcopy:
 1701                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1702  000023d4  afbefffc	sw	-4(r29),r30; push fp
 1703  000023d8  001df020	add	r30,r0,r29; fp = sp
 1704  000023dc  afbffff8	sw	-8(r29),r31; push ret addr
 1705  000023e0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1706  000023e4  afa20000	sw	0(r29),r2
 1707  000023e8  afa30004	sw	4(r29),r3
 1708  000023ec  54000000	nop
 1709  000023f0          	L101_LF2:
 1710  000023f0  8fc10008	lw	r1,8(r30)
 1711  000023f4  2022ffff	addi	r2,r1,#-1
 1712  000023f8  afc20008	sw	8(r30),r2
 1713  000023fc  6c210000	sgti	r1,r1,#0
 1714  00002400  1420000c	bnez	r1,L103_LF2
 1715  00002404  54000000	nop; delay slot nop
 1716  00002408  0800002c	j	L102_LF2
 1717  0000240c  54000000	nop; delay slot nop
 1718  00002410          	L103_LF2:
 1719  00002410  8fc10004	lw	r1,4(r30)
 1720  00002414  20220001	addi	r2,r1,#1
 1721  00002418  afc20004	sw	4(r30),r2
 1722  0000241c  8fc20000	lw	r2,(r30)
 1723  00002420  20430001	addi	r3,r2,#1
 1724  00002424  afc30000	sw	(r30),r3
 1725  00002428  80420000	lb	r2,(r2)
 1726  0000242c  a0220000	sb	(r1),r2
 1727  00002430  0bffffbc	j	L101_LF2
 1728  00002434  54000000	nop; delay slot nop
 1729  00002438          	L102_LF2:
 1730  00002438          	L100_LF2:
 1731  00002438  8fa20000	lw	r2,0(r29)
 1732  0000243c  8fa30004	lw	r3,4(r29)
 1733  00002440  8fdffff8	lw	r31,-8(r30)
 1734  00002444  001ee820	add	r29,r0,r30
 1735  00002448  8fdefffc	lw	r30,-4(r30)
 1736  0000244c  4be00000	jr	r31
 1737  00002450  54000000	nop
 1738  00002454          	.endproc _bcopy
 1739  00002454          	.align 2
 1740  00002454          	.proc _bzero
 1741  00002454          	.global _bzero
 1742  00002454          	_bzero:
 1743                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1744  00002454  afbefffc	sw	-4(r29),r30; push fp
 1745  00002458  001df020	add	r30,r0,r29; fp = sp
 1746  0000245c  afbffff8	sw	-8(r29),r31; push ret addr
 1747  00002460  2fbd0010	subui	r29,r29,#16; alloc local storage
 1748  00002464  afa20000	sw	0(r29),r2
 1749  00002468  54000000	nop
 1750  0000246c          	L105_LF2:
 1751  0000246c  8fc10004	lw	r1,4(r30)
 1752  00002470  2022ffff	addi	r2,r1,#-1
 1753  00002474  afc20004	sw	4(r30),r2
 1754  00002478  6c210000	sgti	r1,r1,#0
 1755  0000247c  1420000c	bnez	r1,L107_LF2
 1756  00002480  54000000	nop; delay slot nop
 1757  00002484  08000020	j	L106_LF2
 1758  00002488  54000000	nop; delay slot nop
 1759  0000248c          	L107_LF2:
 1760  0000248c  8fc10000	lw	r1,(r30)
 1761  00002490  20220001	addi	r2,r1,#1
 1762  00002494  afc20000	sw	(r30),r2
 1763  00002498  20020000	addi	r2,r0,(#0x0)&0xff
 1764  0000249c  a0220000	sb	(r1),r2
 1765  000024a0  0bffffc8	j	L105_LF2
 1766  000024a4  54000000	nop; delay slot nop
 1767  000024a8          	L106_LF2:
 1768  000024a8          	L104_LF2:
 1769  000024a8  8fa20000	lw	r2,0(r29)
 1770  000024ac  8fdffff8	lw	r31,-8(r30)
 1771  000024b0  001ee820	add	r29,r0,r30
 1772  000024b4  8fdefffc	lw	r30,-4(r30)
 1773  000024b8  4be00000	jr	r31
 1774  000024bc  54000000	nop
 1775  000024c0          	.endproc _bzero
 1776  000024c0          	.align 2
 1777  000024c0          	.proc _min
 1778  000024c0          	.global _min
 1779  000024c0          	_min:
 1780                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1781  000024c0  afbefffc	sw	-4(r29),r30; push fp
 1782  000024c4  001df020	add	r30,r0,r29; fp = sp
 1783  000024c8  afbffff8	sw	-8(r29),r31; push ret addr
 1784  000024cc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1785  000024d0  afa20000	sw	0(r29),r2
 1786  000024d4  afa30004	sw	4(r29),r3
 1787  000024d8  8fc10000	lw	r1,(r30)
 1788  000024dc  8fc20004	lw	r2,4(r30)
 1789  000024e0  0022182c	sle	r3,r1,r2
 1790  000024e4  14600008	bnez	r3,L109_LF2
 1791  000024e8  54000000	nop; delay slot nop
 1792  000024ec  8fc10004	lw	r1,4(r30)
 1793  000024f0          	L109_LF2:
 1794  000024f0  08000004	j	L108_LF2
 1795  000024f4  54000000	nop; delay slot nop
 1796  000024f8          	L108_LF2:
 1797  000024f8  8fa20000	lw	r2,0(r29)
 1798  000024fc  8fa30004	lw	r3,4(r29)
 1799  00002500  8fdffff8	lw	r31,-8(r30)
 1800  00002504  001ee820	add	r29,r0,r30
 1801  00002508  8fdefffc	lw	r30,-4(r30)
 1802  0000250c  4be00000	jr	r31
 1803  00002510  54000000	nop
 1804  00002514          	.endproc _min
 1805                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1806                      ;;;
 1807                      ;;; Most of the traps are called in files from libtraps.
 1810  00002514          	.align 2
 1811  00002514          	.proc _exit
 1812  00002514          	.global _exit
 1813  00002514          	_exit:
 1814  00002514  44000300	trap	#0x300
 1815  00002518  4be00000	jr	r31
 1816  0000251c  54000000	nop
 1817  00002520          	.endproc _exit
 1819                      ; for the benefit of gcc.
 1820  00002520          	.proc ___main
 1821  00002520          	.global ___main
 1822  00002520          	___main:
 1823  00002520  4be00000	jr	r31
 1824  00002524  54000000	nop
 1825  00002528          	.endproc ___main
 1826  00002528          	.text
 1827  00002528          	.global _etext
 1828  00002528          	_etext:
 1829  00002528          	.align 3
 1830  00002528          	.data
 1831  00003142          	.global _edata
 1832  00003142          	_edata:

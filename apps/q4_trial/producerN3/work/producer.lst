 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 673
    4                      ; Text size: 6260
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  4342202d	.ascii "CB ---- Put %c in %d\n\000"
   82  00003004  2d2d2d20	
   82  00003008  50757420	
   82  0000300c  25632069	
   82  00003010  6e202564	
   82  00003014  0a00    	
   83  00003016          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _put_item_cb
   86  000010d4          	.global _put_item_cb
   87  000010d4          	_put_item_cb:
   88                      ;  Function 'put_item_cb'; 0 bytes of locals, 4 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  afa40008	sw	8(r29),r4
   96  000010f0  afa5000c	sw	12(r29),r5
   97  000010f4  83c20003	lb	r2,3(r30)
   98  000010f8  8fc30004	lw	r3,4(r30)
   99  000010fc  8c610000	lw	r1,(r3)
  100  00001100  00610820	add	r1,r3,r1
  101  00001104  a0220008	sb	8(r1),r2
  102  00001108  23bdfff0	addi	r29,r29,#-16
  103  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  104  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  105  00001114  afa50000	sw	(r29),r5
  106  00001118  304100ff	andi	r1,r2,#0x00ff
  107  0000111c  afa10004	sw	4(r29),r1
  108  00001120  8c650000	lw	r5,(r3)
  109  00001124  afa50008	sw	8(r29),r5
  110  00001128  0c000944	jal	_Printf
  111  0000112c  54000000	nop; not filled.
  112  00001130  8c610000	lw	r1,(r3)
  113  00001134  20240001	addi	r4,r1,#1
  114  00001138  2001000a	addi	r1,r0,#10
  115  0000113c  00800035	movi2fp	f0,r4
  116  00001140  00200835	movi2fp	f1,r1
  117  00001144  0401000f	div	f0,f0,f1
  118  00001148  00001034	movfp2i	r2,f0
  119  0000114c  50410002	slli	r1,r2,#0x2
  120  00001150  00220820	add	r1,r1,r2
  121  00001154  50210001	slli	r1,r1,#0x1
  122  00001158  00810822	sub	r1,r4,r1
  123  0000115c  ac610000	sw	(r3),r1
  124  00001160  20010001	addi	r1,r0,#1
  125  00001164  23bd0010	addi	r29,r29,#16
  126  00001168  8fa20000	lw	r2,0(r29)
  127  0000116c  8fa30004	lw	r3,4(r29)
  128  00001170  8fa40008	lw	r4,8(r29)
  129  00001174  8fa5000c	lw	r5,12(r29)
  130  00001178  8fdffff8	lw	r31,-8(r30)
  131  0000117c  001ee820	add	r29,r0,r30
  132  00001180  8fdefffc	lw	r30,-4(r30)
  133  00001184  4be00000	jr	r31
  134  00001188  54000000	nop
  135  0000118c          	.endproc _put_item_cb
  136  0000118c          	.data
  137  00003016          	.align 2
  138  00003018          	LC1_LF0:
  139  00003018  4342202d	.ascii "CB ----  checking %c from %d\n\000"
  139  0000301c  2d2d2d20	
  139  00003020  20636865	
  139  00003024  636b696e	
  139  00003028  67202563	
  139  0000302c  2066726f	
  139  00003030  6d202564	
  139  00003034  0a00    	
  140  00003036          	.text
  141  0000118c          	.align 2
  142  0000118c          	.proc _check_item_cb
  143  0000118c          	.global _check_item_cb
  144  0000118c          	_check_item_cb:
  145                      ;  Function 'check_item_cb'; 0 bytes of locals, 3 regs to save.
  146  0000118c  afbefffc	sw	-4(r29),r30; push fp
  147  00001190  001df020	add	r30,r0,r29; fp = sp
  148  00001194  afbffff8	sw	-8(r29),r31; push ret addr
  149  00001198  2fbd0018	subui	r29,r29,#24; alloc local storage
  150  0000119c  afa20000	sw	0(r29),r2
  151  000011a0  afa30004	sw	4(r29),r3
  152  000011a4  afa40008	sw	8(r29),r4
  153  000011a8  8fc30000	lw	r3,(r30)
  154  000011ac  8fc20004	lw	r2,4(r30)
  155  000011b0  8c410004	lw	r1,4(r2)
  156  000011b4  00410820	add	r1,r2,r1
  157  000011b8  80210008	lb	r1,8(r1)
  158  000011bc  a0610000	sb	(r3),r1
  159  000011c0  23bdfff0	addi	r29,r29,#-16
  160  000011c4  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  161  000011c8  24843018	addui	r4,r4,(LC1_LF0)&0xffff
  162  000011cc  afa40000	sw	(r29),r4
  163  000011d0  90610000	lbu	r1,(r3)
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  8c420004	lw	r2,4(r2)
  166  000011dc  afa20008	sw	8(r29),r2
  167  000011e0  0c00088c	jal	_Printf
  168  000011e4  54000000	nop; not filled.
  169  000011e8  20010001	addi	r1,r0,#1
  170  000011ec  23bd0010	addi	r29,r29,#16
  171  000011f0  8fa20000	lw	r2,0(r29)
  172  000011f4  8fa30004	lw	r3,4(r29)
  173  000011f8  8fa40008	lw	r4,8(r29)
  174  000011fc  8fdffff8	lw	r31,-8(r30)
  175  00001200  001ee820	add	r29,r0,r30
  176  00001204  8fdefffc	lw	r30,-4(r30)
  177  00001208  4be00000	jr	r31
  178  0000120c  54000000	nop
  179  00001210          	.endproc _check_item_cb
  180  00001210          	.data
  181  00003036          	.align 2
  182  00003038          	LC2_LF0:
  183  00003038  4342202d	.ascii "CB ----  Got %c from %d\n\000"
  183  0000303c  2d2d2d20	
  183  00003040  20476f74	
  183  00003044  20256320	
  183  00003048  66726f6d	
  183  0000304c  2025640a	
  183  00003050  00      	
  184  00003051          	.text
  185  00001210          	.align 2
  186  00001210          	.proc _get_item_cb
  187  00001210          	.global _get_item_cb
  188  00001210          	_get_item_cb:
  189                      ;  Function 'get_item_cb'; 0 bytes of locals, 4 regs to save.
  190  00001210  afbefffc	sw	-4(r29),r30; push fp
  191  00001214  001df020	add	r30,r0,r29; fp = sp
  192  00001218  afbffff8	sw	-8(r29),r31; push ret addr
  193  0000121c  2fbd0018	subui	r29,r29,#24; alloc local storage
  194  00001220  afa20000	sw	0(r29),r2
  195  00001224  afa30004	sw	4(r29),r3
  196  00001228  afa40008	sw	8(r29),r4
  197  0000122c  afa5000c	sw	12(r29),r5
  198  00001230  8fc20000	lw	r2,(r30)
  199  00001234  8fc30004	lw	r3,4(r30)
  200  00001238  8c610004	lw	r1,4(r3)
  201  0000123c  00610820	add	r1,r3,r1
  202  00001240  80210008	lb	r1,8(r1)
  203  00001244  a0410000	sb	(r2),r1
  204  00001248  23bdfff0	addi	r29,r29,#-16
  205  0000124c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  206  00001250  24a53038	addui	r5,r5,(LC2_LF0)&0xffff
  207  00001254  afa50000	sw	(r29),r5
  208  00001258  90410000	lbu	r1,(r2)
  209  0000125c  afa10004	sw	4(r29),r1
  210  00001260  8c650004	lw	r5,4(r3)
  211  00001264  afa50008	sw	8(r29),r5
  212  00001268  0c000804	jal	_Printf
  213  0000126c  54000000	nop; not filled.
  214  00001270  8c610004	lw	r1,4(r3)
  215  00001274  20240001	addi	r4,r1,#1
  216  00001278  2001000a	addi	r1,r0,#10
  217  0000127c  00800035	movi2fp	f0,r4
  218  00001280  00200835	movi2fp	f1,r1
  219  00001284  0401000f	div	f0,f0,f1
  220  00001288  00001034	movfp2i	r2,f0
  221  0000128c  50410002	slli	r1,r2,#0x2
  222  00001290  00220820	add	r1,r1,r2
  223  00001294  50210001	slli	r1,r1,#0x1
  224  00001298  00810822	sub	r1,r4,r1
  225  0000129c  ac610004	sw	4(r3),r1
  226  000012a0  20010001	addi	r1,r0,#1
  227  000012a4  23bd0010	addi	r29,r29,#16
  228  000012a8  8fa20000	lw	r2,0(r29)
  229  000012ac  8fa30004	lw	r3,4(r29)
  230  000012b0  8fa40008	lw	r4,8(r29)
  231  000012b4  8fa5000c	lw	r5,12(r29)
  232  000012b8  8fdffff8	lw	r31,-8(r30)
  233  000012bc  001ee820	add	r29,r0,r30
  234  000012c0  8fdefffc	lw	r30,-4(r30)
  235  000012c4  4be00000	jr	r31
  236  000012c8  54000000	nop
  237  000012cc          	.endproc _get_item_cb
  238  000012cc          	.align 2
  239  000012cc          	.proc _is_full
  240  000012cc          	.global _is_full
  241  000012cc          	_is_full:
  242                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  243  000012cc  afbefffc	sw	-4(r29),r30; push fp
  244  000012d0  001df020	add	r30,r0,r29; fp = sp
  245  000012d4  afbffff8	sw	-8(r29),r31; push ret addr
  246  000012d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  247  000012dc  afa20000	sw	0(r29),r2
  248  000012e0  afa30004	sw	4(r29),r3
  249  000012e4  afa40008	sw	8(r29),r4
  250  000012e8  8fc40000	lw	r4,(r30)
  251  000012ec  8c810000	lw	r1,(r4)
  252  000012f0  20230001	addi	r3,r1,#1
  253  000012f4  2001000a	addi	r1,r0,#10
  254  000012f8  00600035	movi2fp	f0,r3
  255  000012fc  00200835	movi2fp	f1,r1
  256  00001300  0401000f	div	f0,f0,f1
  257  00001304  00001034	movfp2i	r2,f0
  258  00001308  50410002	slli	r1,r2,#0x2
  259  0000130c  00220820	add	r1,r1,r2
  260  00001310  50210001	slli	r1,r1,#0x1
  261  00001314  00611022	sub	r2,r3,r1
  262  00001318  8c810004	lw	r1,4(r4)
  263  0000131c  00411028	seq	r2,r2,r1
  264  00001320  20010001	addi	r1,r0,#1
  265  00001324  14400008	bnez	r2,L23_LF0
  266  00001328  54000000	nop; not filled.
  267  0000132c  20010000	addi	r1,r0,#0
  268  00001330          	L23_LF0:
  269  00001330  8fa20000	lw	r2,0(r29)
  270  00001334  8fa30004	lw	r3,4(r29)
  271  00001338  8fa40008	lw	r4,8(r29)
  272  0000133c  8fdffff8	lw	r31,-8(r30)
  273  00001340  001ee820	add	r29,r0,r30
  274  00001344  8fdefffc	lw	r30,-4(r30)
  275  00001348  4be00000	jr	r31
  276  0000134c  54000000	nop
  277  00001350          	.endproc _is_full
  278  00001350          	.align 2
  279  00001350          	.proc _is_empty
  280  00001350          	.global _is_empty
  281  00001350          	_is_empty:
  282                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  283  00001350  afbefffc	sw	-4(r29),r30; push fp
  284  00001354  001df020	add	r30,r0,r29; fp = sp
  285  00001358  afbffff8	sw	-8(r29),r31; push ret addr
  286  0000135c  2fbd0010	subui	r29,r29,#16; alloc local storage
  287  00001360  afa20000	sw	0(r29),r2
  288  00001364  8fc10000	lw	r1,(r30)
  289  00001368  8c220000	lw	r2,(r1)
  290  0000136c  8c210004	lw	r1,4(r1)
  291  00001370  00411028	seq	r2,r2,r1
  292  00001374  20010001	addi	r1,r0,#1
  293  00001378  14400008	bnez	r2,L30_LF0
  294  0000137c  54000000	nop; not filled.
  295  00001380  20010000	addi	r1,r0,#0
  296  00001384          	L30_LF0:
  297  00001384  8fa20000	lw	r2,0(r29)
  298  00001388  8fdffff8	lw	r31,-8(r30)
  299  0000138c  001ee820	add	r29,r0,r30
  300  00001390  8fdefffc	lw	r30,-4(r30)
  301  00001394  4be00000	jr	r31
  302  00001398  54000000	nop
  303  0000139c          	.endproc _is_empty
  304  0000139c          	.data
  305  00003051          	.align 2
  306  00003054          	LC3_LF0:
  307  00003054  43697263	.ascii "Circular Buffer Initiated\n\000"
  307  00003058  756c6172	
  307  0000305c  20427566	
  307  00003060  66657220	
  307  00003064  496e6974	
  307  00003068  69617465	
  307  0000306c  640a00  	
  308  0000306f          	.text
  309  0000139c          	.align 2
  310  0000139c          	.proc _init_cb
  311  0000139c          	.global _init_cb
  312  0000139c          	_init_cb:
  313                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  314  0000139c  afbefffc	sw	-4(r29),r30; push fp
  315  000013a0  001df020	add	r30,r0,r29; fp = sp
  316  000013a4  afbffff8	sw	-8(r29),r31; push ret addr
  317  000013a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  318  000013ac  afa20000	sw	0(r29),r2
  319  000013b0  8fc10000	lw	r1,(r30)
  320  000013b4  20020000	addi	r2,r0,#0
  321  000013b8  ac220000	sw	(r1),r2
  322  000013bc  ac220004	sw	4(r1),r2
  323  000013c0  23bdfff8	addi	r29,r29,#-8
  324  000013c4  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
  325  000013c8  24423054	addui	r2,r2,(LC3_LF0)&0xffff
  326  000013cc  afa20000	sw	(r29),r2
  327  000013d0  0c00069c	jal	_Printf
  328  000013d4  54000000	nop; not filled.
  329  000013d8  23bd0008	addi	r29,r29,#8
  330  000013dc  8fa20000	lw	r2,0(r29)
  331  000013e0  8fdffff8	lw	r31,-8(r30)
  332  000013e4  001ee820	add	r29,r0,r30
  333  000013e8  8fdefffc	lw	r30,-4(r30)
  334  000013ec  4be00000	jr	r31
  335  000013f0  54000000	nop
  336  000013f4          	.endproc _init_cb
  337  000013f4          	.data
  338  0000306f          	.align 2
  339  00003070          	LC4_LF0:
  340  00003070  20436972	.ascii " Circular Buffer =>  \000"
  340  00003074  63756c61	
  340  00003078  72204275	
  340  0000307c  66666572	
  340  00003080  203d3e20	
  340  00003084  2000    	
  341  00003086          	.align 2
  342  00003088          	LC5_LF0:
  343  00003088  256300  	.ascii "%c\000"
  344  0000308b          	.align 2
  345  0000308c          	LC6_LF0:
  346  0000308c  0a00    	.ascii "\n\000"
  347  0000308e          	.text
  348  000013f4          	.align 2
  349  000013f4          	.proc _Print_cb
  350  000013f4          	.global _Print_cb
  351  000013f4          	_Print_cb:
  352                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  353  000013f4  afbefffc	sw	-4(r29),r30; push fp
  354  000013f8  001df020	add	r30,r0,r29; fp = sp
  355  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  356  00001400  2fbd0020	subui	r29,r29,#32; alloc local storage
  357  00001404  afa20000	sw	0(r29),r2
  358  00001408  afa30004	sw	4(r29),r3
  359  0000140c  afa40008	sw	8(r29),r4
  360  00001410  afa5000c	sw	12(r29),r5
  361  00001414  afa60010	sw	16(r29),r6
  362  00001418  afa70014	sw	20(r29),r7
  363  0000141c  8fc50000	lw	r5,(r30)
  364  00001420  23bdfff8	addi	r29,r29,#-8
  365  00001424  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  366  00001428  24e73070	addui	r7,r7,(LC4_LF0)&0xffff
  367  0000142c  afa70000	sw	(r29),r7
  368  00001430  0c00063c	jal	_Printf
  369  00001434  54000000	nop; not filled.
  370  00001438  20040000	addi	r4,r0,#0
  371  0000143c  23bd0008	addi	r29,r29,#8
  372  00001440  2006000a	addi	r6,r0,#10
  373  00001444          	L45_LF0:
  374  00001444  23bdfff8	addi	r29,r29,#-8
  375  00001448  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  376  0000144c  24e73088	addui	r7,r7,(LC5_LF0)&0xffff
  377  00001450  afa70000	sw	(r29),r7
  378  00001454  8ca10004	lw	r1,4(r5)
  379  00001458  00811820	add	r3,r4,r1
  380  0000145c  00600035	movi2fp	f0,r3
  381  00001460  00c00835	movi2fp	f1,r6
  382  00001464  0401000f	div	f0,f0,f1
  383  00001468  00001034	movfp2i	r2,f0
  384  0000146c  50410002	slli	r1,r2,#0x2
  385  00001470  00220820	add	r1,r1,r2
  386  00001474  50210001	slli	r1,r1,#0x1
  387  00001478  00610822	sub	r1,r3,r1
  388  0000147c  00a10820	add	r1,r5,r1
  389  00001480  90210008	lbu	r1,8(r1)
  390  00001484  afa10004	sw	4(r29),r1
  391  00001488  0c0005e4	jal	_Printf
  392  0000148c  54000000	nop; not filled.
  393  00001490  23bd0008	addi	r29,r29,#8
  394  00001494  20840001	addi	r4,r4,#1
  395  00001498  70810009	slei	r1,r4,#9
  396  0000149c  1420ffa4	bnez	r1,L45_LF0
  397  000014a0  54000000	nop; not filled.
  398  000014a4  23bdfff8	addi	r29,r29,#-8
  399  000014a8  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  400  000014ac  24e7308c	addui	r7,r7,(LC6_LF0)&0xffff
  401  000014b0  afa70000	sw	(r29),r7
  402  000014b4  0c0005b8	jal	_Printf
  403  000014b8  54000000	nop; not filled.
  404  000014bc  23bd0008	addi	r29,r29,#8
  405  000014c0  8fa20000	lw	r2,0(r29)
  406  000014c4  8fa30004	lw	r3,4(r29)
  407  000014c8  8fa40008	lw	r4,8(r29)
  408  000014cc  8fa5000c	lw	r5,12(r29)
  409  000014d0  8fa60010	lw	r6,16(r29)
  410  000014d4  8fa70014	lw	r7,20(r29)
  411  000014d8  8fdffff8	lw	r31,-8(r30)
  412  000014dc  001ee820	add	r29,r0,r30
  413  000014e0  8fdefffc	lw	r30,-4(r30)
  414  000014e4  4be00000	jr	r31
  415  000014e8  54000000	nop
  416  000014ec          	.endproc _Print_cb
  417  000014ec          	.data
  418  0000308e          	.align 2
  419  00003090          	LC7_LF0:
  420  00003090  30313233	.ascii "0123456789\000"
  420  00003094  34353637	
  420  00003098  383900  	
  421  0000309b          	.align 2
  422  0000309c          	LC8_LF0:
  423  0000309c  55736167	.ascii "Usage: \000"
  423  000030a0  653a2000	
  424  000030a4          	.align 2
  425  000030a4          	LC9_LF0:
  426  000030a4  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
  426  000030a8  6e646c65	
  426  000030ac  5f746f5f	
  426  000030b0  73686172	
  426  000030b4  65645f6d	
  426  000030b8  656d6f72	
  426  000030bc  795f7061	
  426  000030c0  67653e20	
  426  000030c4  3c68616e	
  426  000030c8  646c655f	
  426  000030cc  746f5f70	
  426  000030d0  6167655f	
  426  000030d4  6d617070	
  426  000030d8  65645f73	
  426  000030dc  656d6170	
  426  000030e0  686f7265	
  426  000030e4  3e203c68	
  426  000030e8  616e    	
  427  000030ea  646c6520	.ascii "dle to lock>\n\000"
  427  000030ee  746f206c	
  427  000030f2  6f636b3e	
  427  000030f6  0a00    	
  428  000030f8          	.align 2
  429  000030f8          	LC10_LF0:
  430  000030f8  436f756c	.ascii "Could not map the virtual address to the memory in \000"
  430  000030fc  64206e6f	
  430  00003100  74206d61	
  430  00003104  70207468	
  430  00003108  65207669	
  430  0000310c  72747561	
  430  00003110  6c206164	
  430  00003114  64726573	
  430  00003118  7320746f	
  430  0000311c  20746865	
  430  00003120  206d656d	
  430  00003124  6f727920	
  430  00003128  696e2000	
  431  0000312c          	.align 2
  432  0000312c          	LC11_LF0:
  433  0000312c  2c206578	.ascii ", exiting...\n\000"
  433  00003130  6974696e	
  433  00003134  672e2e2e	
  433  00003138  0a00    	
  434  0000313a          	.align 2
  435  0000313c          	LC12_LF0:
  436  0000313c  0a50524f	.ascii "\nPROD - PID %d ---- ACQUIRED LOCK \n\000"
  436  00003140  44202d20	
  436  00003144  50494420	
  436  00003148  2564202d	
  436  0000314c  2d2d2d20	
  436  00003150  41435155	
  436  00003154  49524544	
  436  00003158  204c4f43	
  436  0000315c  4b200a00	
  437  00003160          	.align 2
  438  00003160          	LC13_LF0:
  439  00003160  50524f44	.ascii "PROD - PID %d ---- Found to be Full\n\000"
  439  00003164  202d2050	
  439  00003168  49442025	
  439  0000316c  64202d2d	
  439  00003170  2d2d2046	
  439  00003174  6f756e64	
  439  00003178  20746f20	
  439  0000317c  62652046	
  439  00003180  756c6c0a	
  439  00003184  00      	
  440  00003185          	.align 2
  441  00003188          	LC14_LF0:
  442  00003188  50524f44	.ascii "PROD - PID %d ---- Succesful Wait for j =  %d \n\000"
  442  0000318c  202d2050	
  442  00003190  49442025	
  442  00003194  64202d2d	
  442  00003198  2d2d2053	
  442  0000319c  75636365	
  442  000031a0  7366756c	
  442  000031a4  20576169	
  442  000031a8  7420666f	
  442  000031ac  72206a20	
  442  000031b0  3d202025	
  442  000031b4  64200a00	
  443  000031b8          	.align 2
  444  000031b8          	LC15_LF0:
  445  000031b8  50524f44	.ascii "PROD - PID %d ---- Put %c in cb \n\000"
  445  000031bc  202d2050	
  445  000031c0  49442025	
  445  000031c4  64202d2d	
  445  000031c8  2d2d2050	
  445  000031cc  75742025	
  445  000031d0  6320696e	
  445  000031d4  20636220	
  445  000031d8  0a00    	
  446  000031da          	.align 2
  447  000031dc          	LC16_LF0:
  448  000031dc  50524f44	.ascii "PROD - PID %d ---- Successful Signal For j =  %d \n\000"
  448  000031e0  202d2050	
  448  000031e4  49442025	
  448  000031e8  64202d2d	
  448  000031ec  2d2d2053	
  448  000031f0  75636365	
  448  000031f4  73736675	
  448  000031f8  6c205369	
  448  000031fc  676e616c	
  448  00003200  20466f72	
  448  00003204  206a203d	
  448  00003208  20202564	
  448  0000320c  200a00  	
  449  0000320f          	.align 2
  450  00003210          	LC17_LF0:
  451  00003210  0a50524f	.ascii "\nPROD - PID %d ---- RELEASED LOCK \n\000"
  451  00003214  44202d20	
  451  00003218  50494420	
  451  0000321c  2564202d	
  451  00003220  2d2d2d20	
  451  00003224  52454c45	
  451  00003228  41534544	
  451  0000322c  204c4f43	
  451  00003230  4b200a00	
  452  00003234          	.align 2
  453  00003234          	LC18_LF0:
  454  00003234  50524f44	.ascii "PROD - PID ---- %d Sent Everything \n\000"
  454  00003238  202d2050	
  454  0000323c  4944202d	
  454  00003240  2d2d2d20	
  454  00003244  25642053	
  454  00003248  656e7420	
  454  0000324c  45766572	
  454  00003250  79746869	
  454  00003254  6e67200a	
  454  00003258  00      	
  455  00003259          	.align 2
  456  0000325c          	LC19_LF0:
  457  0000325c  50524f44	.ascii "PROD - PID %d is complete.\n\000"
  457  00003260  202d2050	
  457  00003264  49442025	
  457  00003268  64206973	
  457  0000326c  20636f6d	
  457  00003270  706c6574	
  457  00003274  652e0a00	
  458  00003278          	.align 2
  459  00003278          	LC20_LF0:
  460  00003278  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  460  0000327c  73656d61	
  460  00003280  70686f72	
  460  00003284  6520735f	
  460  00003288  70726f63	
  460  0000328c  735f636f	
  460  00003290  6d706c65	
  460  00003294  74656420	
  460  00003298  28256429	
  460  0000329c  20696e20	
  460  000032a0  00      	
  461  000032a1          	.text
  462  000014ec          	.align 2
  463  000014ec          	.proc _main
  464  000014ec          	.global _main
  465  000014ec          	_main:
  466                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  467  000014ec  afbefffc	sw	-4(r29),r30; push fp
  468  000014f0  001df020	add	r30,r0,r29; fp = sp
  469  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  470  000014f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  471  000014fc  8fc20000	lw	r2,(r30)
  472  00001500  8fc70004	lw	r7,4(r30)
  473  00001504  0c001364	jal	___main
  474  00001508  54000000	nop; not filled.
  475  0000150c  3c010000	lhi	r1,((LC7_LF0)>>16)&0xffff
  476  00001510  24213090	addui	r1,r1,(LC7_LF0)&0xffff
  477  00001514  802c0000	lb	r12,(r1)
  478  00001518  a3ccffe8	sb	-24(r30),r12
  479  0000151c  802c0001	lb	r12,1(r1)
  480  00001520  a3ccffe9	sb	-23(r30),r12
  481  00001524  802c0002	lb	r12,2(r1)
  482  00001528  a3ccffea	sb	-22(r30),r12
  483  0000152c  802c0003	lb	r12,3(r1)
  484  00001530  a3ccffeb	sb	-21(r30),r12
  485  00001534  802c0004	lb	r12,4(r1)
  486  00001538  a3ccffec	sb	-20(r30),r12
  487  0000153c  802c0005	lb	r12,5(r1)
  488  00001540  a3ccffed	sb	-19(r30),r12
  489  00001544  802c0006	lb	r12,6(r1)
  490  00001548  a3ccffee	sb	-18(r30),r12
  491  0000154c  802c0007	lb	r12,7(r1)
  492  00001550  a3ccffef	sb	-17(r30),r12
  493  00001554  802c0008	lb	r12,8(r1)
  494  00001558  a3ccfff0	sb	-16(r30),r12
  495  0000155c  802c0009	lb	r12,9(r1)
  496  00001560  a3ccfff1	sb	-15(r30),r12
  497  00001564  8021000a	lb	r1,10(r1)
  498  00001568  a3c1fff2	sb	-14(r30),r1
  499  0000156c  64410006	snei	r1,r2,#6
  500  00001570  1020004c	beqz	r1,L48_LF0
  501  00001574  54000000	nop; not filled.
  502  00001578  23bdfff8	addi	r29,r29,#-8
  503  0000157c  3c0c0000	lhi	r12,((LC8_LF0)>>16)&0xffff
  504  00001580  258c309c	addui	r12,r12,(LC8_LF0)&0xffff
  505  00001584  afac0000	sw	(r29),r12
  506  00001588  0c0004e4	jal	_Printf
  507  0000158c  54000000	nop; not filled.
  508  00001590  8cec0000	lw	r12,(r7)
  509  00001594  afac0000	sw	(r29),r12
  510  00001598  0c0004d4	jal	_Printf
  511  0000159c  54000000	nop; not filled.
  512  000015a0  3c0c0000	lhi	r12,((LC9_LF0)>>16)&0xffff
  513  000015a4  258c30a4	addui	r12,r12,(LC9_LF0)&0xffff
  514  000015a8  afac0000	sw	(r29),r12
  515  000015ac  0c0004c0	jal	_Printf
  516  000015b0  54000000	nop; not filled.
  517  000015b4  0c000560	jal	_Exit
  518  000015b8  54000000	nop; not filled.
  519  000015bc  23bd0008	addi	r29,r29,#8
  520  000015c0          	L48_LF0:
  521  000015c0  23bdfff0	addi	r29,r29,#-16
  522  000015c4  8cec0004	lw	r12,4(r7)
  523  000015c8  afac0000	sw	(r29),r12
  524  000015cc  200c0000	addi	r12,r0,#0
  525  000015d0  afac0004	sw	4(r29),r12
  526  000015d4  200c000a	addi	r12,r0,#10
  527  000015d8  afac0008	sw	8(r29),r12
  528  000015dc  0c000de4	jal	_dstrtol
  529  000015e0  54000000	nop; not filled.
  530  000015e4  00011020	add	r2,r0,r1
  531  000015e8  8cec0008	lw	r12,8(r7)
  532  000015ec  afac0000	sw	(r29),r12
  533  000015f0  200c0000	addi	r12,r0,#0
  534  000015f4  afac0004	sw	4(r29),r12
  535  000015f8  200c000a	addi	r12,r0,#10
  536  000015fc  afac0008	sw	8(r29),r12
  537  00001600  0c000dc0	jal	_dstrtol
  538  00001604  54000000	nop; not filled.
  539  00001608  00015820	add	r11,r0,r1
  540  0000160c  8cec000c	lw	r12,12(r7)
  541  00001610  afac0000	sw	(r29),r12
  542  00001614  200c0000	addi	r12,r0,#0
  543  00001618  afac0004	sw	4(r29),r12
  544  0000161c  200c000a	addi	r12,r0,#10
  545  00001620  afac0008	sw	8(r29),r12
  546  00001624  0c000d9c	jal	_dstrtol
  547  00001628  54000000	nop; not filled.
  548  0000162c  00013020	add	r6,r0,r1
  549  00001630  8cec0010	lw	r12,16(r7)
  550  00001634  afac0000	sw	(r29),r12
  551  00001638  200c0000	addi	r12,r0,#0
  552  0000163c  afac0004	sw	4(r29),r12
  553  00001640  200c000a	addi	r12,r0,#10
  554  00001644  afac0008	sw	8(r29),r12
  555  00001648  0c000d78	jal	_dstrtol
  556  0000164c  54000000	nop; not filled.
  557  00001650  00015020	add	r10,r0,r1
  558  00001654  8cec0014	lw	r12,20(r7)
  559  00001658  afac0000	sw	(r29),r12
  560  0000165c  200c0000	addi	r12,r0,#0
  561  00001660  afac0004	sw	4(r29),r12
  562  00001664  200c000a	addi	r12,r0,#10
  563  00001668  afac0008	sw	8(r29),r12
  564  0000166c  0c000d54	jal	_dstrtol
  565  00001670  54000000	nop; not filled.
  566  00001674  00014820	add	r9,r0,r1
  567  00001678  afa20000	sw	(r29),r2
  568  0000167c  0c000420	jal	_shmat
  569  00001680  54000000	nop; not filled.
  570  00001684  00011020	add	r2,r0,r1
  571  00001688  23bd0010	addi	r29,r29,#16
  572  0000168c  64410000	snei	r1,r2,#0
  573  00001690  1420004c	bnez	r1,L49_LF0
  574  00001694  54000000	nop; not filled.
  575  00001698  23bdfff8	addi	r29,r29,#-8
  576  0000169c  3c0c0000	lhi	r12,((LC10_LF0)>>16)&0xffff
  577  000016a0  258c30f8	addui	r12,r12,(LC10_LF0)&0xffff
  578  000016a4  afac0000	sw	(r29),r12
  579  000016a8  0c0003c4	jal	_Printf
  580  000016ac  54000000	nop; not filled.
  581  000016b0  8cec0000	lw	r12,(r7)
  582  000016b4  afac0000	sw	(r29),r12
  583  000016b8  0c0003b4	jal	_Printf
  584  000016bc  54000000	nop; not filled.
  585  000016c0  3c0c0000	lhi	r12,((LC11_LF0)>>16)&0xffff
  586  000016c4  258c312c	addui	r12,r12,(LC11_LF0)&0xffff
  587  000016c8  afac0000	sw	(r29),r12
  588  000016cc  0c0003a0	jal	_Printf
  589  000016d0  54000000	nop; not filled.
  590  000016d4  0c000440	jal	_Exit
  591  000016d8  54000000	nop; not filled.
  592  000016dc  23bd0008	addi	r29,r29,#8
  593  000016e0          	L49_LF0:
  594  000016e0  20440008	addi	r4,r2,#8
  595  000016e4  20050000	addi	r5,r0,#0
  596  000016e8  2008000a	addi	r8,r0,#10
  597  000016ec          	L52_LF0:
  598  000016ec  23bdfff8	addi	r29,r29,#-8
  599  000016f0  afa60000	sw	(r29),r6
  600  000016f4  0c0003e4	jal	_lock_acquire
  601  000016f8  54000000	nop; not filled.
  602  000016fc  23bd0008	addi	r29,r29,#8
  603  00001700  64210000	snei	r1,r1,#0
  604  00001704  1020002c	beqz	r1,L53_LF0
  605  00001708  54000000	nop; not filled.
  606  0000170c  0c00036c	jal	_Getpid
  607  00001710  54000000	nop; not filled.
  608  00001714  23bdfff8	addi	r29,r29,#-8
  609  00001718  3c0c0000	lhi	r12,((LC12_LF0)>>16)&0xffff
  610  0000171c  258c313c	addui	r12,r12,(LC12_LF0)&0xffff
  611  00001720  afac0000	sw	(r29),r12
  612  00001724  afa10004	sw	4(r29),r1
  613  00001728  0c000344	jal	_Printf
  614  0000172c  54000000	nop; not filled.
  615  00001730  23bd0008	addi	r29,r29,#8
  616  00001734          	L53_LF0:
  617  00001734  8c810000	lw	r1,(r4)
  618  00001738  20230001	addi	r3,r1,#1
  619  0000173c  00600035	movi2fp	f0,r3
  620  00001740  01000835	movi2fp	f1,r8
  621  00001744  0401000f	div	f0,f0,f1
  622  00001748  00001034	movfp2i	r2,f0
  623  0000174c  50410002	slli	r1,r2,#0x2
  624  00001750  00220820	add	r1,r1,r2
  625  00001754  50210001	slli	r1,r1,#0x1
  626  00001758  00611022	sub	r2,r3,r1
  627  0000175c  8c810004	lw	r1,4(r4)
  628  00001760  00410828	seq	r1,r2,r1
  629  00001764  20020000	addi	r2,r0,#0
  630  00001768  10200008	beqz	r1,L56_LF0
  631  0000176c  54000000	nop; not filled.
  632  00001770  20020001	addi	r2,r0,#1
  633  00001774          	L56_LF0:
  634  00001774  64410000	snei	r1,r2,#0
  635  00001778  10200070	beqz	r1,L54_LF0
  636  0000177c  54000000	nop; not filled.
  637  00001780  0c0002f8	jal	_Getpid
  638  00001784  54000000	nop; not filled.
  639  00001788  23bdfff8	addi	r29,r29,#-8
  640  0000178c  3c0c0000	lhi	r12,((LC13_LF0)>>16)&0xffff
  641  00001790  258c3160	addui	r12,r12,(LC13_LF0)&0xffff
  642  00001794  afac0000	sw	(r29),r12
  643  00001798  afa10004	sw	4(r29),r1
  644  0000179c  0c0002d0	jal	_Printf
  645  000017a0  54000000	nop; not filled.
  646  000017a4  afaa0000	sw	(r29),r10
  647  000017a8  0c000354	jal	_cond_wait
  648  000017ac  54000000	nop; not filled.
  649  000017b0  23bd0008	addi	r29,r29,#8
  650  000017b4  64210000	snei	r1,r1,#0
  651  000017b8  10200030	beqz	r1,L54_LF0
  652  000017bc  54000000	nop; not filled.
  653  000017c0  0c0002b8	jal	_Getpid
  654  000017c4  54000000	nop; not filled.
  655  000017c8  23bdfff0	addi	r29,r29,#-16
  656  000017cc  3c0c0000	lhi	r12,((LC14_LF0)>>16)&0xffff
  657  000017d0  258c3188	addui	r12,r12,(LC14_LF0)&0xffff
  658  000017d4  afac0000	sw	(r29),r12
  659  000017d8  afa10004	sw	4(r29),r1
  660  000017dc  afa50008	sw	8(r29),r5
  661  000017e0  0c00028c	jal	_Printf
  662  000017e4  54000000	nop; not filled.
  663  000017e8  23bd0010	addi	r29,r29,#16
  664  000017ec          	L54_LF0:
  665  000017ec  0c00028c	jal	_Getpid
  666  000017f0  54000000	nop; not filled.
  667  000017f4  23bdfff0	addi	r29,r29,#-16
  668  000017f8  3c0c0000	lhi	r12,((LC15_LF0)>>16)&0xffff
  669  000017fc  258c31b8	addui	r12,r12,(LC15_LF0)&0xffff
  670  00001800  afac0000	sw	(r29),r12
  671  00001804  afa10004	sw	4(r29),r1
  672  00001808  23c1ffe8	addi	r1,r30,#-24
  673  0000180c  00251020	add	r2,r1,r5
  674  00001810  90410000	lbu	r1,(r2)
  675  00001814  afa10008	sw	8(r29),r1
  676  00001818  0c000254	jal	_Printf
  677  0000181c  54000000	nop; not filled.
  678  00001820  80420000	lb	r2,(r2)
  679  00001824  23bd0010	addi	r29,r29,#16
  680  00001828  8c810000	lw	r1,(r4)
  681  0000182c  00810820	add	r1,r4,r1
  682  00001830  a0220008	sb	8(r1),r2
  683  00001834  23bdfff0	addi	r29,r29,#-16
  684  00001838  3c0c0000	lhi	r12,((LC0_LF0)>>16)&0xffff
  685  0000183c  258c3000	addui	r12,r12,(LC0_LF0)&0xffff
  686  00001840  afac0000	sw	(r29),r12
  687  00001844  304100ff	andi	r1,r2,#0x00ff
  688  00001848  afa10004	sw	4(r29),r1
  689  0000184c  8c8c0000	lw	r12,(r4)
  690  00001850  afac0008	sw	8(r29),r12
  691  00001854  0c000218	jal	_Printf
  692  00001858  54000000	nop; not filled.
  693  0000185c  8c810000	lw	r1,(r4)
  694  00001860  20230001	addi	r3,r1,#1
  695  00001864  00600035	movi2fp	f0,r3
  696  00001868  01000835	movi2fp	f1,r8
  697  0000186c  0401000f	div	f0,f0,f1
  698  00001870  00001034	movfp2i	r2,f0
  699  00001874  50410002	slli	r1,r2,#0x2
  700  00001878  00220820	add	r1,r1,r2
  701  0000187c  50210001	slli	r1,r1,#0x1
  702  00001880  00610822	sub	r1,r3,r1
  703  00001884  ac810000	sw	(r4),r1
  704  00001888  23bd0010	addi	r29,r29,#16
  705  0000188c  20a50001	addi	r5,r5,#1
  706  00001890  23bdfff8	addi	r29,r29,#-8
  707  00001894  3c0c0000	lhi	r12,((LC6_LF0)>>16)&0xffff
  708  00001898  258c308c	addui	r12,r12,(LC6_LF0)&0xffff
  709  0000189c  afac0000	sw	(r29),r12
  710  000018a0  0c0001cc	jal	_Printf
  711  000018a4  54000000	nop; not filled.
  712  000018a8  afa90000	sw	(r29),r9
  713  000018ac  0c00025c	jal	_cond_signal
  714  000018b0  54000000	nop; not filled.
  715  000018b4  23bd0008	addi	r29,r29,#8
  716  000018b8  64210000	snei	r1,r1,#0
  717  000018bc  10200034	beqz	r1,L60_LF0
  718  000018c0  54000000	nop; not filled.
  719  000018c4  0c0001b4	jal	_Getpid
  720  000018c8  54000000	nop; not filled.
  721  000018cc  23bdfff0	addi	r29,r29,#-16
  722  000018d0  3c0c0000	lhi	r12,((LC16_LF0)>>16)&0xffff
  723  000018d4  258c31dc	addui	r12,r12,(LC16_LF0)&0xffff
  724  000018d8  afac0000	sw	(r29),r12
  725  000018dc  afa10004	sw	4(r29),r1
  726  000018e0  20a1ffff	addi	r1,r5,#-1
  727  000018e4  afa10008	sw	8(r29),r1
  728  000018e8  0c000184	jal	_Printf
  729  000018ec  54000000	nop; not filled.
  730  000018f0  23bd0010	addi	r29,r29,#16
  731  000018f4          	L60_LF0:
  732  000018f4  23bdfff8	addi	r29,r29,#-8
  733  000018f8  afa60000	sw	(r29),r6
  734  000018fc  0c0001e8	jal	_lock_release
  735  00001900  54000000	nop; not filled.
  736  00001904  23bd0008	addi	r29,r29,#8
  737  00001908  64210000	snei	r1,r1,#0
  738  0000190c  1020002c	beqz	r1,L50_LF0
  739  00001910  54000000	nop; not filled.
  740  00001914  0c000164	jal	_Getpid
  741  00001918  54000000	nop; not filled.
  742  0000191c  23bdfff8	addi	r29,r29,#-8
  743  00001920  3c0c0000	lhi	r12,((LC17_LF0)>>16)&0xffff
  744  00001924  258c3210	addui	r12,r12,(LC17_LF0)&0xffff
  745  00001928  afac0000	sw	(r29),r12
  746  0000192c  afa10004	sw	4(r29),r1
  747  00001930  0c00013c	jal	_Printf
  748  00001934  54000000	nop; not filled.
  749  00001938  23bd0008	addi	r29,r29,#8
  750  0000193c          	L50_LF0:
  751  0000193c  03c50820	add	r1,r30,r5
  752  00001940  9021ffe7	lbu	r1,-25(r1)
  753  00001944  64210000	snei	r1,r1,#0
  754  00001948  1420fda0	bnez	r1,L52_LF0
  755  0000194c  54000000	nop; not filled.
  756  00001950  64a10000	snei	r1,r5,#0
  757  00001954  1020fd94	beqz	r1,L52_LF0
  758  00001958  54000000	nop; not filled.
  759  0000195c  23bdfff8	addi	r29,r29,#-8
  760  00001960  afa60000	sw	(r29),r6
  761  00001964  0c000174	jal	_lock_acquire
  762  00001968  54000000	nop; not filled.
  763  0000196c  0c00010c	jal	_Getpid
  764  00001970  54000000	nop; not filled.
  765  00001974  3c0c0000	lhi	r12,((LC18_LF0)>>16)&0xffff
  766  00001978  258c3234	addui	r12,r12,(LC18_LF0)&0xffff
  767  0000197c  afac0000	sw	(r29),r12
  768  00001980  afa10004	sw	4(r29),r1
  769  00001984  0c0000e8	jal	_Printf
  770  00001988  54000000	nop; not filled.
  771  0000198c  afa60000	sw	(r29),r6
  772  00001990  0c000154	jal	_lock_release
  773  00001994  54000000	nop; not filled.
  774  00001998  0c0000e0	jal	_Getpid
  775  0000199c  54000000	nop; not filled.
  776  000019a0  3c0c0000	lhi	r12,((LC19_LF0)>>16)&0xffff
  777  000019a4  258c325c	addui	r12,r12,(LC19_LF0)&0xffff
  778  000019a8  afac0000	sw	(r29),r12
  779  000019ac  afa10004	sw	4(r29),r1
  780  000019b0  0c0000bc	jal	_Printf
  781  000019b4  54000000	nop; not filled.
  782  000019b8  afab0000	sw	(r29),r11
  783  000019bc  0c000104	jal	_sem_signal
  784  000019c0  54000000	nop; not filled.
  785  000019c4  23bd0008	addi	r29,r29,#8
  786  000019c8  64210001	snei	r1,r1,#1
  787  000019cc  10200050	beqz	r1,L63_LF0
  788  000019d0  54000000	nop; not filled.
  789  000019d4  23bdfff8	addi	r29,r29,#-8
  790  000019d8  3c0c0000	lhi	r12,((LC20_LF0)>>16)&0xffff
  791  000019dc  258c3278	addui	r12,r12,(LC20_LF0)&0xffff
  792  000019e0  afac0000	sw	(r29),r12
  793  000019e4  afab0004	sw	4(r29),r11
  794  000019e8  0c000084	jal	_Printf
  795  000019ec  54000000	nop; not filled.
  796  000019f0  8ce70000	lw	r7,(r7)
  797  000019f4  afa70000	sw	(r29),r7
  798  000019f8  0c000074	jal	_Printf
  799  000019fc  54000000	nop; not filled.
  800  00001a00  3c0c0000	lhi	r12,((LC11_LF0)>>16)&0xffff
  801  00001a04  258c312c	addui	r12,r12,(LC11_LF0)&0xffff
  802  00001a08  afac0000	sw	(r29),r12
  803  00001a0c  0c000060	jal	_Printf
  804  00001a10  54000000	nop; not filled.
  805  00001a14  0c000100	jal	_Exit
  806  00001a18  54000000	nop; not filled.
  807  00001a1c  23bd0008	addi	r29,r29,#8
  808  00001a20          	L63_LF0:
  809  00001a20  0c000e3c	jal	_exit
  810  00001a24  54000000	nop
  811  00001a28          	.endproc _main
  812                      ;;;
  813                      ;;; Stub functions for DLX traps.
  814                      ;;;
  815                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  816                      ;;;
  817                      ;;; The traps such as Open and Close
  818                      ;;; (note the capital letters) are for use by user programs.  The traps
  819                      ;;; with names such as open and close (lower case) are for use by the OS.
  820                      ;;;
  823  00001a28          	.align 2
  825                      ;;; The following are the traps to be used by user-level programs
  826                      ;;;
  828  00001a28          	.align 2
  829  00001a28          	.proc _Open
  830  00001a28          	.global _Open
  831  00001a28          	_Open:
  832                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  833                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  834                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  835  00001a28  44000213	trap	#0x213
  836  00001a2c  4be00000	jr	r31
  837  00001a30  54000000	nop
  838  00001a34          	.endproc _Open
  840  00001a34          	.proc _Close
  841  00001a34          	.global _Close
  842  00001a34          	_Close:
  843  00001a34  44000214	trap	#0x214
  844  00001a38  4be00000	jr	r31
  845  00001a3c  54000000	nop
  846  00001a40          	.endproc _Close
  848  00001a40          	.proc _Read
  849  00001a40          	.global _Read
  850  00001a40          	_Read:
  851  00001a40  44000210	trap	#0x210
  852  00001a44  4be00000	jr	r31
  853  00001a48  54000000	nop
  854  00001a4c          	.endproc _Read
  856  00001a4c          	.proc _Write
  857  00001a4c          	.global _Write
  858  00001a4c          	_Write:
  859  00001a4c  44000211	trap	#0x211
  860  00001a50  4be00000	jr	r31
  861  00001a54  54000000	nop
  862  00001a58          	.endproc _Write
  864  00001a58          	.proc _Lseek
  865  00001a58          	.global _Lseek
  866  00001a58          	_Lseek:
  867  00001a58  44000212	trap	#0x212
  868  00001a5c  4be00000	jr	r31
  869  00001a60  54000000	nop
  870  00001a64          	.endproc _Lseek
  872  00001a64          	.proc _Putchar
  873  00001a64          	.global _Putchar
  874  00001a64          	_Putchar:
  875  00001a64  44000280	trap	#0x280
  876  00001a68  4be00000	jr	r31
  877  00001a6c  54000000	nop
  878  00001a70          	.endproc _Putchar
  880  00001a70          	.proc _Printf
  881  00001a70          	.global _Printf
  882  00001a70          	_Printf:
  883  00001a70  44000201	trap	#0x201
  884  00001a74  4be00000	jr	r31
  885  00001a78  54000000	nop
  886  00001a7c          	.endproc _Printf
  888  00001a7c          	.proc _Getpid
  889  00001a7c          	.global _Getpid
  890  00001a7c          	_Getpid:
  891  00001a7c  44000431	trap	#0x431
  892  00001a80  4be00000	jr	r31
  893  00001a84  54000000	nop
  894  00001a88          	.endproc _Getpid
  896  00001a88          	.proc _process_create
  897  00001a88          	.global _process_create
  898  00001a88          	_process_create:
  899  00001a88  44000432	trap	#0x432
  900  00001a8c  4be00000	jr	r31
  901  00001a90  54000000	nop
  902  00001a94          	.endproc _process_create
  904  00001a94          	.proc _shmget
  905  00001a94          	.global _shmget
  906  00001a94          	_shmget:
  907  00001a94  44000440	trap	#0x440
  908  00001a98  4be00000	jr	r31
  909  00001a9c  54000000	nop
  910  00001aa0          	.endproc _shmget
  912  00001aa0          	.proc _shmat
  913  00001aa0          	.global _shmat
  914  00001aa0          	_shmat:
  915  00001aa0  44000441	trap	#0x441
  916  00001aa4  4be00000	jr	r31
  917  00001aa8  54000000	nop
  918  00001aac          	.endproc _shmat
  920  00001aac          	.proc _sem_create
  921  00001aac          	.global _sem_create
  922  00001aac          	_sem_create:
  923  00001aac  44000450	trap	#0x450
  924  00001ab0  4be00000	jr	r31
  925  00001ab4  54000000	nop
  926  00001ab8          	.endproc _sem_create
  928  00001ab8          	.proc _sem_wait
  929  00001ab8          	.global _sem_wait
  930  00001ab8          	_sem_wait:
  931  00001ab8  44000451	trap	#0x451
  932  00001abc  4be00000	jr	r31
  933  00001ac0  54000000	nop
  934  00001ac4          	.endproc _sem_wait
  936  00001ac4          	.proc _sem_signal
  937  00001ac4          	.global _sem_signal
  938  00001ac4          	_sem_signal:
  939  00001ac4  44000452	trap	#0x452
  940  00001ac8  4be00000	jr	r31
  941  00001acc  54000000	nop
  942  00001ad0          	.endproc _sem_signal
  944  00001ad0          	.proc _lock_create
  945  00001ad0          	.global _lock_create
  946  00001ad0          	_lock_create:
  947  00001ad0  44000453	trap	#0x453
  948  00001ad4  4be00000	jr	r31
  949  00001ad8  54000000	nop
  950  00001adc          	.endproc _lock_create
  952  00001adc          	.proc _lock_acquire
  953  00001adc          	.global _lock_acquire
  954  00001adc          	_lock_acquire:
  955  00001adc  44000454	trap	#0x454
  956  00001ae0  4be00000	jr	r31
  957  00001ae4  54000000	nop
  958  00001ae8          	.endproc _lock_acquire
  960  00001ae8          	.proc _lock_release
  961  00001ae8          	.global _lock_release
  962  00001ae8          	_lock_release:
  963  00001ae8  44000455	trap	#0x455
  964  00001aec  4be00000	jr	r31
  965  00001af0  54000000	nop
  966  00001af4          	.endproc _lock_release
  968  00001af4          	.proc _cond_create
  969  00001af4          	.global _cond_create
  970  00001af4          	_cond_create:
  971  00001af4  44000456	trap	#0x456
  972  00001af8  4be00000	jr	r31
  973  00001afc  54000000	nop
  974  00001b00          	.endproc _cond_create
  976  00001b00          	.proc _cond_wait
  977  00001b00          	.global _cond_wait
  978  00001b00          	_cond_wait:
  979  00001b00  44000457	trap	#0x457
  980  00001b04  4be00000	jr	r31
  981  00001b08  54000000	nop
  982  00001b0c          	.endproc _cond_wait
  984  00001b0c          	.proc _cond_signal
  985  00001b0c          	.global _cond_signal
  986  00001b0c          	_cond_signal:
  987  00001b0c  44000458	trap	#0x458
  988  00001b10  4be00000	jr	r31
  989  00001b14  54000000	nop
  990  00001b18          	.endproc _cond_signal
  992  00001b18          	.proc _Exit
  993  00001b18          	.global _Exit
  994  00001b18          	_Exit:
  995  00001b18  44000500	trap	#0x500
  996  00001b1c  4be00000	jr	r31
  997  00001b20  54000000	nop
  998  00001b24          	.endproc _Exit
  999                      ; Compiled by GCC
 1001  00001b24          	.align 2
 1002  00001b24          	.proc _isspace
 1003  00001b24          	.global _isspace
 1004  00001b24          	_isspace:
 1005                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
 1006  00001b24  afbefffc	sw	-4(r29),r30; push fp
 1007  00001b28  001df020	add	r30,r0,r29; fp = sp
 1008  00001b2c  afbffff8	sw	-8(r29),r31; push ret addr
 1009  00001b30  2fbd0018	subui	r29,r29,#24; alloc local storage
 1010  00001b34  afa20000	sw	0(r29),r2
 1011  00001b38  afa30004	sw	4(r29),r3
 1012  00001b3c  afa40008	sw	8(r29),r4
 1013  00001b40  83c20003	lb	r2,3(r30)
 1014  00001b44  20010000	addi	r1,r0,#0
 1015  00001b48  304300ff	andi	r3,r2,#0x00ff
 1016  00001b4c  60640020	seqi	r4,r3,#32
 1017  00001b50  1480002c	bnez	r4,L3_LF2
 1018  00001b54  54000000	nop; delay slot nop
 1019  00001b58  304300ff	andi	r3,r2,#0x00ff
 1020  00001b5c  60640009	seqi	r4,r3,#9
 1021  00001b60  1480001c	bnez	r4,L3_LF2
 1022  00001b64  54000000	nop; delay slot nop
 1023  00001b68  304300ff	andi	r3,r2,#0x00ff
 1024  00001b6c  6064000a	seqi	r4,r3,#10
 1025  00001b70  1480000c	bnez	r4,L3_LF2
 1026  00001b74  54000000	nop; delay slot nop
 1027  00001b78  08000008	j	L2_LF2
 1028  00001b7c  54000000	nop; delay slot nop
 1029  00001b80          	L3_LF2:
 1030  00001b80  20010001	addi	r1,r0,#1
 1031  00001b84          	L2_LF2:
 1032  00001b84  08000004	j	L1_LF2
 1033  00001b88  54000000	nop; delay slot nop
 1034  00001b8c          	L1_LF2:
 1035  00001b8c  8fa20000	lw	r2,0(r29)
 1036  00001b90  8fa30004	lw	r3,4(r29)
 1037  00001b94  8fa40008	lw	r4,8(r29)
 1038  00001b98  8fdffff8	lw	r31,-8(r30)
 1039  00001b9c  001ee820	add	r29,r0,r30
 1040  00001ba0  8fdefffc	lw	r30,-4(r30)
 1041  00001ba4  4be00000	jr	r31
 1042  00001ba8  54000000	nop
 1043  00001bac          	.endproc _isspace
 1044  00001bac          	.align 2
 1045  00001bac          	.proc _isxdigit
 1046  00001bac          	.global _isxdigit
 1047  00001bac          	_isxdigit:
 1048                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
 1049  00001bac  afbefffc	sw	-4(r29),r30; push fp
 1050  00001bb0  001df020	add	r30,r0,r29; fp = sp
 1051  00001bb4  afbffff8	sw	-8(r29),r31; push ret addr
 1052  00001bb8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1053  00001bbc  afa20000	sw	0(r29),r2
 1054  00001bc0  afa30004	sw	4(r29),r3
 1055  00001bc4  afa40008	sw	8(r29),r4
 1056  00001bc8  83c20003	lb	r2,3(r30)
 1057  00001bcc  20010000	addi	r1,r0,#0
 1058  00001bd0  304300ff	andi	r3,r2,#0x00ff
 1059  00001bd4  6c64002f	sgtui	r4,r3,#47
 1060  00001bd8  1080001c	beqz	r4,L7_LF2
 1061  00001bdc  54000000	nop; delay slot nop
 1062  00001be0  304300ff	andi	r3,r2,#0x00ff
 1063  00001be4  70640039	sleui	r4,r3,#57
 1064  00001be8  1480005c	bnez	r4,L6_LF2
 1065  00001bec  54000000	nop; delay slot nop
 1066  00001bf0  08000004	j	L7_LF2
 1067  00001bf4  54000000	nop; delay slot nop
 1068  00001bf8          	L7_LF2:
 1069  00001bf8  304300ff	andi	r3,r2,#0x00ff
 1070  00001bfc  6c640060	sgtui	r4,r3,#96
 1071  00001c00  1080001c	beqz	r4,L8_LF2
 1072  00001c04  54000000	nop; delay slot nop
 1073  00001c08  304300ff	andi	r3,r2,#0x00ff
 1074  00001c0c  70640066	sleui	r4,r3,#102
 1075  00001c10  14800034	bnez	r4,L6_LF2
 1076  00001c14  54000000	nop; delay slot nop
 1077  00001c18  08000004	j	L8_LF2
 1078  00001c1c  54000000	nop; delay slot nop
 1079  00001c20          	L8_LF2:
 1080  00001c20  304300ff	andi	r3,r2,#0x00ff
 1081  00001c24  6c640040	sgtui	r4,r3,#64
 1082  00001c28  10800020	beqz	r4,L5_LF2
 1083  00001c2c  54000000	nop; delay slot nop
 1084  00001c30  304300ff	andi	r3,r2,#0x00ff
 1085  00001c34  70640041	sleui	r4,r3,#65
 1086  00001c38  1480000c	bnez	r4,L6_LF2
 1087  00001c3c  54000000	nop; delay slot nop
 1088  00001c40  08000008	j	L5_LF2
 1089  00001c44  54000000	nop; delay slot nop
 1090  00001c48          	L6_LF2:
 1091  00001c48  20010001	addi	r1,r0,#1
 1092  00001c4c          	L5_LF2:
 1093  00001c4c  08000004	j	L4_LF2
 1094  00001c50  54000000	nop; delay slot nop
 1095  00001c54          	L4_LF2:
 1096  00001c54  8fa20000	lw	r2,0(r29)
 1097  00001c58  8fa30004	lw	r3,4(r29)
 1098  00001c5c  8fa40008	lw	r4,8(r29)
 1099  00001c60  8fdffff8	lw	r31,-8(r30)
 1100  00001c64  001ee820	add	r29,r0,r30
 1101  00001c68  8fdefffc	lw	r30,-4(r30)
 1102  00001c6c  4be00000	jr	r31
 1103  00001c70  54000000	nop
 1104  00001c74          	.endproc _isxdigit
 1105  00001c74          	.align 2
 1106  00001c74          	.proc _dstrcpy
 1107  00001c74          	.global _dstrcpy
 1108  00001c74          	_dstrcpy:
 1109                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
 1110  00001c74  afbefffc	sw	-4(r29),r30; push fp
 1111  00001c78  001df020	add	r30,r0,r29; fp = sp
 1112  00001c7c  afbffff8	sw	-8(r29),r31; push ret addr
 1113  00001c80  2fbd0018	subui	r29,r29,#24; alloc local storage
 1114  00001c84  afa20000	sw	0(r29),r2
 1115  00001c88  afa30004	sw	4(r29),r3
 1116  00001c8c  8fc10000	lw	r1,(r30)
 1117  00001c90  afc1fff4	sw	-12(r30),r1
 1118  00001c94          	L10_LF2:
 1119  00001c94  8fc10000	lw	r1,(r30)
 1120  00001c98  20220001	addi	r2,r1,#1
 1121  00001c9c  afc20000	sw	(r30),r2
 1122  00001ca0  8fc20004	lw	r2,4(r30)
 1123  00001ca4  20430001	addi	r3,r2,#1
 1124  00001ca8  afc30004	sw	4(r30),r3
 1125  00001cac  80420000	lb	r2,(r2)
 1126  00001cb0  a0220000	sb	(r1),r2
 1127  00001cb4  a3c2fff3	sb	-13(r30),r2
 1128  00001cb8          	L12_LF2:
 1129  00001cb8  93c1fff3	lbu	r1,-13(r30)
 1130  00001cbc  64220000	snei	r2,r1,#0
 1131  00001cc0  1440000c	bnez	r2,L13_LF2
 1132  00001cc4  54000000	nop; delay slot nop
 1133  00001cc8  0800000c	j	L11_LF2
 1134  00001ccc  54000000	nop; delay slot nop
 1135  00001cd0          	L13_LF2:
 1136  00001cd0  0bffffc0	j	L10_LF2
 1137  00001cd4  54000000	nop; delay slot nop
 1138  00001cd8          	L11_LF2:
 1139  00001cd8  8fc1fff4	lw	r1,-12(r30)
 1140  00001cdc  08000004	j	L9_LF2
 1141  00001ce0  54000000	nop; delay slot nop
 1142  00001ce4          	L9_LF2:
 1143  00001ce4  8fa20000	lw	r2,0(r29)
 1144  00001ce8  8fa30004	lw	r3,4(r29)
 1145  00001cec  8fdffff8	lw	r31,-8(r30)
 1146  00001cf0  001ee820	add	r29,r0,r30
 1147  00001cf4  8fdefffc	lw	r30,-4(r30)
 1148  00001cf8  4be00000	jr	r31
 1149  00001cfc  54000000	nop
 1150  00001d00          	.endproc _dstrcpy
 1151  00001d00          	.align 2
 1152  00001d00          	.proc _dstrncpy
 1153  00001d00          	.global _dstrncpy
 1154  00001d00          	_dstrncpy:
 1155                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
 1156  00001d00  afbefffc	sw	-4(r29),r30; push fp
 1157  00001d04  001df020	add	r30,r0,r29; fp = sp
 1158  00001d08  afbffff8	sw	-8(r29),r31; push ret addr
 1159  00001d0c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1160  00001d10  afa20000	sw	0(r29),r2
 1161  00001d14  afa30004	sw	4(r29),r3
 1162  00001d18  8fc10000	lw	r1,(r30)
 1163  00001d1c  afc1fff4	sw	-12(r30),r1
 1164  00001d20          	L15_LF2:
 1165  00001d20  8fc10008	lw	r1,8(r30)
 1166  00001d24  2022ffff	addi	r2,r1,#-1
 1167  00001d28  afc20008	sw	8(r30),r2
 1168  00001d2c  70210000	slei	r1,r1,#0
 1169  00001d30  1020000c	beqz	r1,L18_LF2
 1170  00001d34  54000000	nop; delay slot nop
 1171  00001d38  08000048	j	L16_LF2
 1172  00001d3c  54000000	nop; delay slot nop
 1173  00001d40          	L18_LF2:
 1174  00001d40  8fc10000	lw	r1,(r30)
 1175  00001d44  20220001	addi	r2,r1,#1
 1176  00001d48  afc20000	sw	(r30),r2
 1177  00001d4c  8fc20004	lw	r2,4(r30)
 1178  00001d50  20430001	addi	r3,r2,#1
 1179  00001d54  afc30004	sw	4(r30),r3
 1180  00001d58  80420000	lb	r2,(r2)
 1181  00001d5c  a0220000	sb	(r1),r2
 1182  00001d60  a3c2fff3	sb	-13(r30),r2
 1183  00001d64          	L17_LF2:
 1184  00001d64  93c1fff3	lbu	r1,-13(r30)
 1185  00001d68  64220000	snei	r2,r1,#0
 1186  00001d6c  1440000c	bnez	r2,L19_LF2
 1187  00001d70  54000000	nop; delay slot nop
 1188  00001d74  0800000c	j	L16_LF2
 1189  00001d78  54000000	nop; delay slot nop
 1190  00001d7c          	L19_LF2:
 1191  00001d7c  0bffffa0	j	L15_LF2
 1192  00001d80  54000000	nop; delay slot nop
 1193  00001d84          	L16_LF2:
 1194  00001d84  8fc1fff4	lw	r1,-12(r30)
 1195  00001d88  08000004	j	L14_LF2
 1196  00001d8c  54000000	nop; delay slot nop
 1197  00001d90          	L14_LF2:
 1198  00001d90  8fa20000	lw	r2,0(r29)
 1199  00001d94  8fa30004	lw	r3,4(r29)
 1200  00001d98  8fdffff8	lw	r31,-8(r30)
 1201  00001d9c  001ee820	add	r29,r0,r30
 1202  00001da0  8fdefffc	lw	r30,-4(r30)
 1203  00001da4  4be00000	jr	r31
 1204  00001da8  54000000	nop
 1205  00001dac          	.endproc _dstrncpy
 1206  00001dac          	.align 2
 1207  00001dac          	.proc _dstrcat
 1208  00001dac          	.global _dstrcat
 1209  00001dac          	_dstrcat:
 1210                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1211  00001dac  afbefffc	sw	-4(r29),r30; push fp
 1212  00001db0  001df020	add	r30,r0,r29; fp = sp
 1213  00001db4  afbffff8	sw	-8(r29),r31; push ret addr
 1214  00001db8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1215  00001dbc  afa20000	sw	0(r29),r2
 1216  00001dc0  8fc10000	lw	r1,(r30)
 1217  00001dc4  afc1fff4	sw	-12(r30),r1
 1218  00001dc8          	L21_LF2:
 1219  00001dc8  8fc10000	lw	r1,(r30)
 1220  00001dcc  90220000	lbu	r2,(r1)
 1221  00001dd0  64410000	snei	r1,r2,#0
 1222  00001dd4  1420000c	bnez	r1,L23_LF2
 1223  00001dd8  54000000	nop; delay slot nop
 1224  00001ddc  0800001c	j	L22_LF2
 1225  00001de0  54000000	nop; delay slot nop
 1226  00001de4          	L23_LF2:
 1227  00001de4  8fc20000	lw	r2,(r30)
 1228  00001de8  20410001	addi	r1,r2,#1
 1229  00001dec  00011020	add	r2,r0,r1
 1230  00001df0  afc20000	sw	(r30),r2
 1231  00001df4  0bffffd0	j	L21_LF2
 1232  00001df8  54000000	nop; delay slot nop
 1233  00001dfc          	L22_LF2:
 1234  00001dfc  23bdfff8	addi	r29,r29,#-8
 1235  00001e00  001d0820	add	r1,r0,r29
 1236  00001e04  8fc20000	lw	r2,(r30)
 1237  00001e08  ac220000	sw	(r1),r2
 1238  00001e0c  8fc20004	lw	r2,4(r30)
 1239  00001e10  ac220004	sw	4(r1),r2
 1240  00001e14  0ffffe5c	jal	_dstrcpy
 1241  00001e18  54000000	nop; delay slot nop
 1242  00001e1c  23bd0008	addi	r29,r29,#8
 1243  00001e20  8fc1fff4	lw	r1,-12(r30)
 1244  00001e24  08000004	j	L20_LF2
 1245  00001e28  54000000	nop; delay slot nop
 1246  00001e2c          	L20_LF2:
 1247  00001e2c  8fa20000	lw	r2,0(r29)
 1248  00001e30  8fdffff8	lw	r31,-8(r30)
 1249  00001e34  001ee820	add	r29,r0,r30
 1250  00001e38  8fdefffc	lw	r30,-4(r30)
 1251  00001e3c  4be00000	jr	r31
 1252  00001e40  54000000	nop
 1253  00001e44          	.endproc _dstrcat
 1254  00001e44          	.align 2
 1255  00001e44          	.proc _dstrncmp
 1256  00001e44          	.global _dstrncmp
 1257  00001e44          	_dstrncmp:
 1258                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1259  00001e44  afbefffc	sw	-4(r29),r30; push fp
 1260  00001e48  001df020	add	r30,r0,r29; fp = sp
 1261  00001e4c  afbffff8	sw	-8(r29),r31; push ret addr
 1262  00001e50  2fbd0018	subui	r29,r29,#24; alloc local storage
 1263  00001e54  afa20000	sw	0(r29),r2
 1264  00001e58  afa30004	sw	4(r29),r3
 1265  00001e5c  54000000	nop
 1266  00001e60  20010000	addi	r1,r0,#0
 1267  00001e64  afc1fff4	sw	-12(r30),r1
 1268  00001e68          	L25_LF2:
 1269  00001e68  8fc1fff4	lw	r1,-12(r30)
 1270  00001e6c  8fc20008	lw	r2,8(r30)
 1271  00001e70  0022082a	slt	r1,r1,r2
 1272  00001e74  1420000c	bnez	r1,L28_LF2
 1273  00001e78  54000000	nop; delay slot nop
 1274  00001e7c  08000088	j	L26_LF2
 1275  00001e80  54000000	nop; delay slot nop
 1276  00001e84          	L28_LF2:
 1277  00001e84  8fc10004	lw	r1,4(r30)
 1278  00001e88  90220000	lbu	r2,(r1)
 1279  00001e8c  64410000	snei	r1,r2,#0
 1280  00001e90  14200018	bnez	r1,L29_LF2
 1281  00001e94  54000000	nop; delay slot nop
 1282  00001e98  20010000	addi	r1,r0,#0
 1283  00001e9c  080000d8	j	L24_LF2
 1284  00001ea0  54000000	nop; delay slot nop
 1285  00001ea4  08000028	j	L30_LF2
 1286  00001ea8  54000000	nop; delay slot nop
 1287  00001eac          	L29_LF2:
 1288  00001eac  8fc10000	lw	r1,(r30)
 1289  00001eb0  8fc20004	lw	r2,4(r30)
 1290  00001eb4  90210000	lbu	r1,(r1)
 1291  00001eb8  90420000	lbu	r2,(r2)
 1292  00001ebc  00220829	sne	r1,r1,r2
 1293  00001ec0  1020000c	beqz	r1,L30_LF2
 1294  00001ec4  54000000	nop; delay slot nop
 1295  00001ec8  0800003c	j	L26_LF2
 1296  00001ecc  54000000	nop; delay slot nop
 1297  00001ed0          	L31_LF2:
 1298  00001ed0          	L30_LF2:
 1299  00001ed0  8fc20000	lw	r2,(r30)
 1300  00001ed4  20410001	addi	r1,r2,#1
 1301  00001ed8  00011020	add	r2,r0,r1
 1302  00001edc  afc20000	sw	(r30),r2
 1303  00001ee0  8fc20004	lw	r2,4(r30)
 1304  00001ee4  20410001	addi	r1,r2,#1
 1305  00001ee8  00011020	add	r2,r0,r1
 1306  00001eec  afc20004	sw	4(r30),r2
 1307  00001ef0          	L27_LF2:
 1308  00001ef0  8fc2fff4	lw	r2,-12(r30)
 1309  00001ef4  20410001	addi	r1,r2,#1
 1310  00001ef8  00011020	add	r2,r0,r1
 1311  00001efc  afc2fff4	sw	-12(r30),r2
 1312  00001f00  0bffff64	j	L25_LF2
 1313  00001f04  54000000	nop; delay slot nop
 1314  00001f08          	L26_LF2:
 1315  00001f08  8fc1fff4	lw	r1,-12(r30)
 1316  00001f0c  8fc20008	lw	r2,8(r30)
 1317  00001f10  00220828	seq	r1,r1,r2
 1318  00001f14  10200018	beqz	r1,L32_LF2
 1319  00001f18  54000000	nop; delay slot nop
 1320  00001f1c  20010000	addi	r1,r0,#0
 1321  00001f20  08000054	j	L24_LF2
 1322  00001f24  54000000	nop; delay slot nop
 1323  00001f28  0800004c	j	L33_LF2
 1324  00001f2c  54000000	nop; delay slot nop
 1325  00001f30          	L32_LF2:
 1326  00001f30  8fc20000	lw	r2,(r30)
 1327  00001f34  90410000	lbu	r1,(r2)
 1328  00001f38  8fc20004	lw	r2,4(r30)
 1329  00001f3c  90430000	lbu	r3,(r2)
 1330  00001f40  00230822	sub	r1,r1,r3
 1331  00001f44  74220000	sgei	r2,r1,#0
 1332  00001f48  10400020	beqz	r2,L34_LF2
 1333  00001f4c  54000000	nop; delay slot nop
 1334  00001f50  8fc10000	lw	r1,(r30)
 1335  00001f54  8fc20004	lw	r2,4(r30)
 1336  00001f58  90210000	lbu	r1,(r1)
 1337  00001f5c  90420000	lbu	r2,(r2)
 1338  00001f60  00220829	sne	r1,r1,r2
 1339  00001f64  08000008	j	L35_LF2
 1340  00001f68  54000000	nop; delay slot nop
 1341  00001f6c          	L34_LF2:
 1342  00001f6c  2001ffff	addi	r1,r0,#-1
 1343  00001f70          	L35_LF2:
 1344  00001f70  08000004	j	L24_LF2
 1345  00001f74  54000000	nop; delay slot nop
 1346  00001f78          	L33_LF2:
 1347  00001f78          	L24_LF2:
 1348  00001f78  8fa20000	lw	r2,0(r29)
 1349  00001f7c  8fa30004	lw	r3,4(r29)
 1350  00001f80  8fdffff8	lw	r31,-8(r30)
 1351  00001f84  001ee820	add	r29,r0,r30
 1352  00001f88  8fdefffc	lw	r30,-4(r30)
 1353  00001f8c  4be00000	jr	r31
 1354  00001f90  54000000	nop
 1355  00001f94          	.endproc _dstrncmp
 1356  00001f94          	.align 2
 1357  00001f94          	.proc _dstrlen
 1358  00001f94          	.global _dstrlen
 1359  00001f94          	_dstrlen:
 1360                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1361  00001f94  afbefffc	sw	-4(r29),r30; push fp
 1362  00001f98  001df020	add	r30,r0,r29; fp = sp
 1363  00001f9c  afbffff8	sw	-8(r29),r31; push ret addr
 1364  00001fa0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1365  00001fa4  afa20000	sw	0(r29),r2
 1366  00001fa8  20010000	addi	r1,r0,#0
 1367  00001fac  afc1fff4	sw	-12(r30),r1
 1368  00001fb0          	L37_LF2:
 1369  00001fb0  8fc10000	lw	r1,(r30)
 1370  00001fb4  20220001	addi	r2,r1,#1
 1371  00001fb8  afc20000	sw	(r30),r2
 1372  00001fbc  90210000	lbu	r1,(r1)
 1373  00001fc0  64220000	snei	r2,r1,#0
 1374  00001fc4  1440000c	bnez	r2,L39_LF2
 1375  00001fc8  54000000	nop; delay slot nop
 1376  00001fcc  0800001c	j	L38_LF2
 1377  00001fd0  54000000	nop; delay slot nop
 1378  00001fd4          	L39_LF2:
 1379  00001fd4  8fc2fff4	lw	r2,-12(r30)
 1380  00001fd8  20410001	addi	r1,r2,#1
 1381  00001fdc  00011020	add	r2,r0,r1
 1382  00001fe0  afc2fff4	sw	-12(r30),r2
 1383  00001fe4  0bffffc8	j	L37_LF2
 1384  00001fe8  54000000	nop; delay slot nop
 1385  00001fec          	L38_LF2:
 1386  00001fec  8fc1fff4	lw	r1,-12(r30)
 1387  00001ff0  08000004	j	L36_LF2
 1388  00001ff4  54000000	nop; delay slot nop
 1389  00001ff8          	L36_LF2:
 1390  00001ff8  8fa20000	lw	r2,0(r29)
 1391  00001ffc  8fdffff8	lw	r31,-8(r30)
 1392  00002000  001ee820	add	r29,r0,r30
 1393  00002004  8fdefffc	lw	r30,-4(r30)
 1394  00002008  4be00000	jr	r31
 1395  0000200c  54000000	nop
 1396  00002010          	.endproc _dstrlen
 1397  00002010          	.align 2
 1398  00002010          	.proc _dstrstr
 1399  00002010          	.global _dstrstr
 1400  00002010          	_dstrstr:
 1401                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1402  00002010  afbefffc	sw	-4(r29),r30; push fp
 1403  00002014  001df020	add	r30,r0,r29; fp = sp
 1404  00002018  afbffff8	sw	-8(r29),r31; push ret addr
 1405  0000201c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1406  00002020  afa20000	sw	0(r29),r2
 1407  00002024  23bdfff8	addi	r29,r29,#-8
 1408  00002028  001d0820	add	r1,r0,r29
 1409  0000202c  8fc20004	lw	r2,4(r30)
 1410  00002030  ac220000	sw	(r1),r2
 1411  00002034  0fffff5c	jal	_dstrlen
 1412  00002038  54000000	nop; delay slot nop
 1413  0000203c  23bd0008	addi	r29,r29,#8
 1414  00002040  afc1fff4	sw	-12(r30),r1
 1415  00002044          	L41_LF2:
 1416  00002044  8fc10000	lw	r1,(r30)
 1417  00002048  90220000	lbu	r2,(r1)
 1418  0000204c  64410000	snei	r1,r2,#0
 1419  00002050  1420000c	bnez	r1,L43_LF2
 1420  00002054  54000000	nop; delay slot nop
 1421  00002058  08000060	j	L42_LF2
 1422  0000205c  54000000	nop; delay slot nop
 1423  00002060          	L43_LF2:
 1424  00002060  23bdfff0	addi	r29,r29,#-16
 1425  00002064  001d0820	add	r1,r0,r29
 1426  00002068  8fc20000	lw	r2,(r30)
 1427  0000206c  ac220000	sw	(r1),r2
 1428  00002070  8fc20004	lw	r2,4(r30)
 1429  00002074  ac220004	sw	4(r1),r2
 1430  00002078  8fc2fff4	lw	r2,-12(r30)
 1431  0000207c  ac220008	sw	8(r1),r2
 1432  00002080  0ffffdc0	jal	_dstrncmp
 1433  00002084  54000000	nop; delay slot nop
 1434  00002088  23bd0010	addi	r29,r29,#16
 1435  0000208c  64220000	snei	r2,r1,#0
 1436  00002090  14400010	bnez	r2,L44_LF2
 1437  00002094  54000000	nop; delay slot nop
 1438  00002098  8fc10000	lw	r1,(r30)
 1439  0000209c  08000028	j	L40_LF2
 1440  000020a0  54000000	nop; delay slot nop
 1441  000020a4          	L44_LF2:
 1442  000020a4  8fc20000	lw	r2,(r30)
 1443  000020a8  20410001	addi	r1,r2,#1
 1444  000020ac  00011020	add	r2,r0,r1
 1445  000020b0  afc20000	sw	(r30),r2
 1446  000020b4  0bffff8c	j	L41_LF2
 1447  000020b8  54000000	nop; delay slot nop
 1448  000020bc          	L42_LF2:
 1449  000020bc  20010000	addi	r1,r0,#0
 1450  000020c0  08000004	j	L40_LF2
 1451  000020c4  54000000	nop; delay slot nop
 1452  000020c8          	L40_LF2:
 1453  000020c8  8fa20000	lw	r2,0(r29)
 1454  000020cc  8fdffff8	lw	r31,-8(r30)
 1455  000020d0  001ee820	add	r29,r0,r30
 1456  000020d4  8fdefffc	lw	r30,-4(r30)
 1457  000020d8  4be00000	jr	r31
 1458  000020dc  54000000	nop
 1459  000020e0          	.endproc _dstrstr
 1460  000020e0          	.align 2
 1461  000020e0          	.proc _dmindex
 1462  000020e0          	.global _dmindex
 1463  000020e0          	_dmindex:
 1464                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1465  000020e0  afbefffc	sw	-4(r29),r30; push fp
 1466  000020e4  001df020	add	r30,r0,r29; fp = sp
 1467  000020e8  afbffff8	sw	-8(r29),r31; push ret addr
 1468  000020ec  2fbd0018	subui	r29,r29,#24; alloc local storage
 1469  000020f0  afa20000	sw	0(r29),r2
 1470  000020f4  54000000	nop
 1471  000020f8          	L46_LF2:
 1472  000020f8  8fc10000	lw	r1,(r30)
 1473  000020fc  90220000	lbu	r2,(r1)
 1474  00002100  64410000	snei	r1,r2,#0
 1475  00002104  1420000c	bnez	r1,L48_LF2
 1476  00002108  54000000	nop; delay slot nop
 1477  0000210c  08000070	j	L47_LF2
 1478  00002110  54000000	nop; delay slot nop
 1479  00002114          	L48_LF2:
 1480  00002114  8fc10004	lw	r1,4(r30)
 1481  00002118  afc1fff4	sw	-12(r30),r1
 1482  0000211c          	L49_LF2:
 1483  0000211c  8fc1fff4	lw	r1,-12(r30)
 1484  00002120  90220000	lbu	r2,(r1)
 1485  00002124  64410000	snei	r1,r2,#0
 1486  00002128  1420000c	bnez	r1,L52_LF2
 1487  0000212c  54000000	nop; delay slot nop
 1488  00002130  08000044	j	L50_LF2
 1489  00002134  54000000	nop; delay slot nop
 1490  00002138          	L52_LF2:
 1491  00002138  8fc10000	lw	r1,(r30)
 1492  0000213c  8fc2fff4	lw	r2,-12(r30)
 1493  00002140  90210000	lbu	r1,(r1)
 1494  00002144  90420000	lbu	r2,(r2)
 1495  00002148  00220828	seq	r1,r1,r2
 1496  0000214c  10200010	beqz	r1,L51_LF2
 1497  00002150  54000000	nop; delay slot nop
 1498  00002154  8fc10000	lw	r1,(r30)
 1499  00002158  08000030	j	L45_LF2
 1500  0000215c  54000000	nop; delay slot nop
 1501  00002160          	L53_LF2:
 1502  00002160          	L51_LF2:
 1503  00002160  8fc2fff4	lw	r2,-12(r30)
 1504  00002164  20410001	addi	r1,r2,#1
 1505  00002168  00011020	add	r2,r0,r1
 1506  0000216c  afc2fff4	sw	-12(r30),r2
 1507  00002170  0bffffa8	j	L49_LF2
 1508  00002174  54000000	nop; delay slot nop
 1509  00002178          	L50_LF2:
 1510  00002178  0bffff7c	j	L46_LF2
 1511  0000217c  54000000	nop; delay slot nop
 1512  00002180          	L47_LF2:
 1513  00002180  20010000	addi	r1,r0,#0
 1514  00002184  08000004	j	L45_LF2
 1515  00002188  54000000	nop; delay slot nop
 1516  0000218c          	L45_LF2:
 1517  0000218c  8fa20000	lw	r2,0(r29)
 1518  00002190  8fdffff8	lw	r31,-8(r30)
 1519  00002194  001ee820	add	r29,r0,r30
 1520  00002198  8fdefffc	lw	r30,-4(r30)
 1521  0000219c  4be00000	jr	r31
 1522  000021a0  54000000	nop
 1523  000021a4          	.endproc _dmindex
 1524  000021a4          	.align 2
 1525  000021a4          	.proc _dindex
 1526  000021a4          	.global _dindex
 1527  000021a4          	_dindex:
 1528                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1529  000021a4  afbefffc	sw	-4(r29),r30; push fp
 1530  000021a8  001df020	add	r30,r0,r29; fp = sp
 1531  000021ac  afbffff8	sw	-8(r29),r31; push ret addr
 1532  000021b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1533  000021b4  afa20000	sw	0(r29),r2
 1534  000021b8  54000000	nop
 1535  000021bc          	L55_LF2:
 1536  000021bc  8fc10000	lw	r1,(r30)
 1537  000021c0  90220000	lbu	r2,(r1)
 1538  000021c4  64410000	snei	r1,r2,#0
 1539  000021c8  1420000c	bnez	r1,L57_LF2
 1540  000021cc  54000000	nop; delay slot nop
 1541  000021d0  08000040	j	L56_LF2
 1542  000021d4  54000000	nop; delay slot nop
 1543  000021d8          	L57_LF2:
 1544  000021d8  8fc10000	lw	r1,(r30)
 1545  000021dc  90220000	lbu	r2,(r1)
 1546  000021e0  8fc10004	lw	r1,4(r30)
 1547  000021e4  00411028	seq	r2,r2,r1
 1548  000021e8  10400010	beqz	r2,L58_LF2
 1549  000021ec  54000000	nop; delay slot nop
 1550  000021f0  8fc10000	lw	r1,(r30)
 1551  000021f4  08000028	j	L54_LF2
 1552  000021f8  54000000	nop; delay slot nop
 1553  000021fc          	L58_LF2:
 1554  000021fc  8fc20000	lw	r2,(r30)
 1555  00002200  20410001	addi	r1,r2,#1
 1556  00002204  00011020	add	r2,r0,r1
 1557  00002208  afc20000	sw	(r30),r2
 1558  0000220c  0bffffac	j	L55_LF2
 1559  00002210  54000000	nop; delay slot nop
 1560  00002214          	L56_LF2:
 1561  00002214  20010000	addi	r1,r0,#0
 1562  00002218  08000004	j	L54_LF2
 1563  0000221c  54000000	nop; delay slot nop
 1564  00002220          	L54_LF2:
 1565  00002220  8fa20000	lw	r2,0(r29)
 1566  00002224  8fdffff8	lw	r31,-8(r30)
 1567  00002228  001ee820	add	r29,r0,r30
 1568  0000222c  8fdefffc	lw	r30,-4(r30)
 1569  00002230  4be00000	jr	r31
 1570  00002234  54000000	nop
 1571  00002238          	.endproc _dindex
 1572  00002238          	.align 2
 1573  00002238          	.proc _ditoa
 1574  00002238          	.global _ditoa
 1575  00002238          	_ditoa:
 1576                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1577  00002238  afbefffc	sw	-4(r29),r30; push fp
 1578  0000223c  001df020	add	r30,r0,r29; fp = sp
 1579  00002240  afbffff8	sw	-8(r29),r31; push ret addr
 1580  00002244  2fbd0018	subui	r29,r29,#24; alloc local storage
 1581  00002248  afa20000	sw	0(r29),r2
 1582  0000224c  afa30004	sw	4(r29),r3
 1583  00002250  8fc10000	lw	r1,(r30)
 1584  00002254  68220000	slti	r2,r1,#0
 1585  00002258  1040002c	beqz	r2,L60_LF2
 1586  0000225c  54000000	nop; delay slot nop
 1587  00002260  8fc10004	lw	r1,4(r30)
 1588  00002264  20220001	addi	r2,r1,#1
 1589  00002268  afc20004	sw	4(r30),r2
 1590  0000226c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1591  00002270  a0220000	sb	(r1),r2
 1592  00002274  8fc10000	lw	r1,(r30)
 1593  00002278  00011022	sub	r2,r0,r1
 1594  0000227c  afc20000	sw	(r30),r2
 1595  00002280  08000118	j	L61_LF2
 1596  00002284  54000000	nop; delay slot nop
 1597  00002288          	L60_LF2:
 1598  00002288  8fc10000	lw	r1,(r30)
 1599  0000228c  64220000	snei	r2,r1,#0
 1600  00002290  14400020	bnez	r2,L62_LF2
 1601  00002294  54000000	nop; delay slot nop
 1602  00002298  8fc10004	lw	r1,4(r30)
 1603  0000229c  20220001	addi	r2,r1,#1
 1604  000022a0  afc20004	sw	4(r30),r2
 1605  000022a4  20020030	addi	r2,r0,(#0x30)&0xff
 1606  000022a8  a0220000	sb	(r1),r2
 1607  000022ac  080000ec	j	L61_LF2
 1608  000022b0  54000000	nop; delay slot nop
 1609  000022b4          	L62_LF2:
 1610  000022b4  20010001	addi	r1,r0,#1
 1611  000022b8  afc1fff4	sw	-12(r30),r1
 1612  000022bc          	L64_LF2:
 1613  000022bc  8fc1fff4	lw	r1,-12(r30)
 1614  000022c0  8fc20000	lw	r2,(r30)
 1615  000022c4  0022082c	sle	r1,r1,r2
 1616  000022c8  1420000c	bnez	r1,L66_LF2
 1617  000022cc  54000000	nop; delay slot nop
 1618  000022d0  08000024	j	L65_LF2
 1619  000022d4  54000000	nop; delay slot nop
 1620  000022d8          	L67_LF2:
 1621  000022d8          	L66_LF2:
 1622  000022d8  8fc1fff4	lw	r1,-12(r30)
 1623  000022dc  00011820	add	r3,r0,r1
 1624  000022e0  50620002	slli	r2,r3,#0x2
 1625  000022e4  00411020	add	r2,r2,r1
 1626  000022e8  50410001	slli	r1,r2,#0x1
 1627  000022ec  afc1fff4	sw	-12(r30),r1
 1628  000022f0  0bffffc8	j	L64_LF2
 1629  000022f4  54000000	nop; delay slot nop
 1630  000022f8          	L65_LF2:
 1631  000022f8  54000000	nop
 1632  000022fc          	L68_LF2:
 1633  000022fc  8fc1fff4	lw	r1,-12(r30)
 1634  00002300  2002000a	addi	r2,r0,#10
 1635  00002304  00200035	movi2fp	f0,r1
 1636  00002308  00400835	movi2fp	f1,r2
 1637  0000230c  0401000f	div	f0,f0,f1
 1638  00002310  00000834	movfp2i	r1,f0
 1639  00002314  afc1fff4	sw	-12(r30),r1
 1640  00002318  8fc10004	lw	r1,4(r30)
 1641  0000231c  20220001	addi	r2,r1,#1
 1642  00002320  afc20004	sw	4(r30),r2
 1643  00002324  8fc20000	lw	r2,(r30)
 1644  00002328  8fc3fff4	lw	r3,-12(r30)
 1645  0000232c  00400035	movi2fp	f0,r2
 1646  00002330  00600835	movi2fp	f1,r3
 1647  00002334  0401000f	div	f0,f0,f1
 1648  00002338  00001034	movfp2i	r2,f0
 1649  0000233c  00021820	add	r3,r0,r2
 1650  00002340  20620030	addi	r2,r3,#48
 1651  00002344  a0220000	sb	(r1),r2
 1652  00002348  8fc10000	lw	r1,(r30)
 1653  0000234c  8fc3fff4	lw	r3,-12(r30)
 1654  00002350  00200035	movi2fp	f0,r1
 1655  00002354  00600835	movi2fp	f1,r3
 1656  00002358  0401000f	div	f0,f0,f1
 1657  0000235c  00001034	movfp2i	r2,f0
 1658  00002360  8fc3fff4	lw	r3,-12(r30)
 1659  00002364  00400035	movi2fp	f0,r2
 1660  00002368  00600835	movi2fp	f1,r3
 1661  0000236c  0401000e	mult	f0,f0,f1
 1662  00002370  00001034	movfp2i	r2,f0
 1663  00002374  00220822	sub	r1,r1,r2
 1664  00002378  afc10000	sw	(r30),r1
 1665  0000237c          	L70_LF2:
 1666  0000237c  8fc1fff4	lw	r1,-12(r30)
 1667  00002380  6c220001	sgti	r2,r1,#1
 1668  00002384  1440000c	bnez	r2,L71_LF2
 1669  00002388  54000000	nop; delay slot nop
 1670  0000238c  0800000c	j	L61_LF2
 1671  00002390  54000000	nop; delay slot nop
 1672  00002394          	L71_LF2:
 1673  00002394  0bffff64	j	L68_LF2
 1674  00002398  54000000	nop; delay slot nop
 1675  0000239c          	L69_LF2:
 1676  0000239c          	L63_LF2:
 1677  0000239c          	L61_LF2:
 1678  0000239c  8fc10004	lw	r1,4(r30)
 1679  000023a0  20020000	addi	r2,r0,(#0x0)&0xff
 1680  000023a4  a0220000	sb	(r1),r2
 1681  000023a8          	L59_LF2:
 1682  000023a8  8fa20000	lw	r2,0(r29)
 1683  000023ac  8fa30004	lw	r3,4(r29)
 1684  000023b0  8fdffff8	lw	r31,-8(r30)
 1685  000023b4  001ee820	add	r29,r0,r30
 1686  000023b8  8fdefffc	lw	r30,-4(r30)
 1687  000023bc  4be00000	jr	r31
 1688  000023c0  54000000	nop
 1689  000023c4          	.endproc _ditoa
 1690  000023c4          	.align 2
 1691  000023c4          	.proc _dstrtol
 1692  000023c4          	.global _dstrtol
 1693  000023c4          	_dstrtol:
 1694                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1695  000023c4  afbefffc	sw	-4(r29),r30; push fp
 1696  000023c8  001df020	add	r30,r0,r29; fp = sp
 1697  000023cc  afbffff8	sw	-8(r29),r31; push ret addr
 1698  000023d0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1699  000023d4  afa20000	sw	0(r29),r2
 1700  000023d8  20010000	addi	r1,r0,#0
 1701  000023dc  afc1fff4	sw	-12(r30),r1
 1702  000023e0          	L73_LF2:
 1703  000023e0  8fc10000	lw	r1,(r30)
 1704  000023e4  90220000	lbu	r2,(r1)
 1705  000023e8  60410020	seqi	r1,r2,#32
 1706  000023ec  14200034	bnez	r1,L75_LF2
 1707  000023f0  54000000	nop; delay slot nop
 1708  000023f4  8fc10000	lw	r1,(r30)
 1709  000023f8  90220000	lbu	r2,(r1)
 1710  000023fc  60410009	seqi	r1,r2,#9
 1711  00002400  14200020	bnez	r1,L75_LF2
 1712  00002404  54000000	nop; delay slot nop
 1713  00002408  8fc10000	lw	r1,(r30)
 1714  0000240c  90220000	lbu	r2,(r1)
 1715  00002410  6041000a	seqi	r1,r2,#10
 1716  00002414  1420000c	bnez	r1,L75_LF2
 1717  00002418  54000000	nop; delay slot nop
 1718  0000241c  0800001c	j	L74_LF2
 1719  00002420  54000000	nop; delay slot nop
 1720  00002424          	L75_LF2:
 1721  00002424  8fc20000	lw	r2,(r30)
 1722  00002428  20410001	addi	r1,r2,#1
 1723  0000242c  00011020	add	r2,r0,r1
 1724  00002430  afc20000	sw	(r30),r2
 1725  00002434  0bffffa8	j	L73_LF2
 1726  00002438  54000000	nop; delay slot nop
 1727  0000243c          	L74_LF2:
 1728  0000243c  8fc10004	lw	r1,4(r30)
 1729  00002440  64220000	snei	r2,r1,#0
 1730  00002444  10400010	beqz	r2,L76_LF2
 1731  00002448  54000000	nop; delay slot nop
 1732  0000244c  8fc10004	lw	r1,4(r30)
 1733  00002450  8fc20000	lw	r2,(r30)
 1734  00002454  ac220000	sw	(r1),r2
 1735  00002458          	L76_LF2:
 1736  00002458  8fc10000	lw	r1,(r30)
 1737  0000245c  90220000	lbu	r2,(r1)
 1738  00002460  64410000	snei	r1,r2,#0
 1739  00002464  14200010	bnez	r1,L77_LF2
 1740  00002468  54000000	nop; delay slot nop
 1741  0000246c  8fc1fff4	lw	r1,-12(r30)
 1742  00002470  08000294	j	L72_LF2
 1743  00002474  54000000	nop; delay slot nop
 1744  00002478          	L77_LF2:
 1745  00002478  8fc10000	lw	r1,(r30)
 1746  0000247c  90220000	lbu	r2,(r1)
 1747  00002480  6041002d	seqi	r1,r2,#45
 1748  00002484  10200024	beqz	r1,L78_LF2
 1749  00002488  54000000	nop; delay slot nop
 1750  0000248c  2001ffff	addi	r1,r0,#-1
 1751  00002490  afc1ffec	sw	-20(r30),r1
 1752  00002494  8fc20000	lw	r2,(r30)
 1753  00002498  20410001	addi	r1,r2,#1
 1754  0000249c  00011020	add	r2,r0,r1
 1755  000024a0  afc20000	sw	(r30),r2
 1756  000024a4  0800000c	j	L79_LF2
 1757  000024a8  54000000	nop; delay slot nop
 1758  000024ac          	L78_LF2:
 1759  000024ac  20010001	addi	r1,r0,#1
 1760  000024b0  afc1ffec	sw	-20(r30),r1
 1761  000024b4          	L79_LF2:
 1762  000024b4  8fc10008	lw	r1,8(r30)
 1763  000024b8  64220000	snei	r2,r1,#0
 1764  000024bc  14400090	bnez	r2,L80_LF2
 1765  000024c0  54000000	nop; delay slot nop
 1766  000024c4  8fc10000	lw	r1,(r30)
 1767  000024c8  90220000	lbu	r2,(r1)
 1768  000024cc  60410030	seqi	r1,r2,#48
 1769  000024d0  10200074	beqz	r1,L81_LF2
 1770  000024d4  54000000	nop; delay slot nop
 1771  000024d8  8fc20000	lw	r2,(r30)
 1772  000024dc  20410001	addi	r1,r2,#1
 1773  000024e0  00011020	add	r2,r0,r1
 1774  000024e4  afc20000	sw	(r30),r2
 1775  000024e8  8fc10000	lw	r1,(r30)
 1776  000024ec  90220000	lbu	r2,(r1)
 1777  000024f0  60410078	seqi	r1,r2,#120
 1778  000024f4  14200020	bnez	r1,L83_LF2
 1779  000024f8  54000000	nop; delay slot nop
 1780  000024fc  8fc10000	lw	r1,(r30)
 1781  00002500  90220000	lbu	r2,(r1)
 1782  00002504  60410058	seqi	r1,r2,#88
 1783  00002508  1420000c	bnez	r1,L83_LF2
 1784  0000250c  54000000	nop; delay slot nop
 1785  00002510  08000024	j	L82_LF2
 1786  00002514  54000000	nop; delay slot nop
 1787  00002518          	L83_LF2:
 1788  00002518  20010010	addi	r1,r0,#16
 1789  0000251c  afc10008	sw	8(r30),r1
 1790  00002520  8fc20000	lw	r2,(r30)
 1791  00002524  20410001	addi	r1,r2,#1
 1792  00002528  00011020	add	r2,r0,r1
 1793  0000252c  afc20000	sw	(r30),r2
 1794  00002530  0800000c	j	L84_LF2
 1795  00002534  54000000	nop; delay slot nop
 1796  00002538          	L82_LF2:
 1797  00002538  20010008	addi	r1,r0,#8
 1798  0000253c  afc10008	sw	8(r30),r1
 1799  00002540          	L84_LF2:
 1800  00002540  0800000c	j	L80_LF2
 1801  00002544  54000000	nop; delay slot nop
 1802  00002548          	L81_LF2:
 1803  00002548  2001000a	addi	r1,r0,#10
 1804  0000254c  afc10008	sw	8(r30),r1
 1805  00002550          	L85_LF2:
 1806  00002550          	L80_LF2:
 1807  00002550  8fc10008	lw	r1,8(r30)
 1808  00002554  70220000	slei	r2,r1,#0
 1809  00002558  1440001c	bnez	r2,L87_LF2
 1810  0000255c  54000000	nop; delay slot nop
 1811  00002560  8fc10008	lw	r1,8(r30)
 1812  00002564  6c220010	sgti	r2,r1,#16
 1813  00002568  1440000c	bnez	r2,L87_LF2
 1814  0000256c  54000000	nop; delay slot nop
 1815  00002570  08000010	j	L86_LF2
 1816  00002574  54000000	nop; delay slot nop
 1817  00002578          	L87_LF2:
 1818  00002578  8fc1fff4	lw	r1,-12(r30)
 1819  0000257c  08000188	j	L72_LF2
 1820  00002580  54000000	nop; delay slot nop
 1821  00002584          	L86_LF2:
 1822  00002584  54000000	nop
 1823  00002588          	L88_LF2:
 1824  00002588  8fc10000	lw	r1,(r30)
 1825  0000258c  90220000	lbu	r2,(r1)
 1826  00002590  6c41002f	sgtui	r1,r2,#47
 1827  00002594  10200030	beqz	r1,L91_LF2
 1828  00002598  54000000	nop; delay slot nop
 1829  0000259c  8fc10000	lw	r1,(r30)
 1830  000025a0  90220000	lbu	r2,(r1)
 1831  000025a4  70410039	sleui	r1,r2,#57
 1832  000025a8  1020001c	beqz	r1,L91_LF2
 1833  000025ac  54000000	nop; delay slot nop
 1834  000025b0  8fc10000	lw	r1,(r30)
 1835  000025b4  90220000	lbu	r2,(r1)
 1836  000025b8  2041ffd0	addi	r1,r2,#-48
 1837  000025bc  afc1fff0	sw	-16(r30),r1
 1838  000025c0  0800008c	j	L92_LF2
 1839  000025c4  54000000	nop; delay slot nop
 1840  000025c8          	L91_LF2:
 1841  000025c8  8fc10000	lw	r1,(r30)
 1842  000025cc  90220000	lbu	r2,(r1)
 1843  000025d0  6c410060	sgtui	r1,r2,#96
 1844  000025d4  10200030	beqz	r1,L93_LF2
 1845  000025d8  54000000	nop; delay slot nop
 1846  000025dc  8fc10000	lw	r1,(r30)
 1847  000025e0  90220000	lbu	r2,(r1)
 1848  000025e4  7041007a	sleui	r1,r2,#122
 1849  000025e8  1020001c	beqz	r1,L93_LF2
 1850  000025ec  54000000	nop; delay slot nop
 1851  000025f0  8fc10000	lw	r1,(r30)
 1852  000025f4  90220000	lbu	r2,(r1)
 1853  000025f8  2041ffa9	addi	r1,r2,#-87
 1854  000025fc  afc1fff0	sw	-16(r30),r1
 1855  00002600  0800004c	j	L92_LF2
 1856  00002604  54000000	nop; delay slot nop
 1857  00002608          	L93_LF2:
 1858  00002608  8fc10000	lw	r1,(r30)
 1859  0000260c  90220000	lbu	r2,(r1)
 1860  00002610  6c410040	sgtui	r1,r2,#64
 1861  00002614  10200030	beqz	r1,L95_LF2
 1862  00002618  54000000	nop; delay slot nop
 1863  0000261c  8fc10000	lw	r1,(r30)
 1864  00002620  90220000	lbu	r2,(r1)
 1865  00002624  7041005a	sleui	r1,r2,#90
 1866  00002628  1020001c	beqz	r1,L95_LF2
 1867  0000262c  54000000	nop; delay slot nop
 1868  00002630  8fc10000	lw	r1,(r30)
 1869  00002634  90220000	lbu	r2,(r1)
 1870  00002638  2041ffc9	addi	r1,r2,#-55
 1871  0000263c  afc1fff0	sw	-16(r30),r1
 1872  00002640  0800000c	j	L92_LF2
 1873  00002644  54000000	nop; delay slot nop
 1874  00002648          	L95_LF2:
 1875  00002648  200103e8	addi	r1,r0,#1000
 1876  0000264c  afc1fff0	sw	-16(r30),r1
 1877  00002650          	L96_LF2:
 1878  00002650          	L94_LF2:
 1879  00002650          	L92_LF2:
 1880  00002650  8fc1fff0	lw	r1,-16(r30)
 1881  00002654  8fc20008	lw	r2,8(r30)
 1882  00002658  0022082a	slt	r1,r1,r2
 1883  0000265c  10200040	beqz	r1,L90_LF2
 1884  00002660  54000000	nop; delay slot nop
 1885  00002664  8fc1fff4	lw	r1,-12(r30)
 1886  00002668  8fc20008	lw	r2,8(r30)
 1887  0000266c  00200035	movi2fp	f0,r1
 1888  00002670  00400835	movi2fp	f1,r2
 1889  00002674  0401000e	mult	f0,f0,f1
 1890  00002678  00000834	movfp2i	r1,f0
 1891  0000267c  afc1fff4	sw	-12(r30),r1
 1892  00002680  8fc1fff4	lw	r1,-12(r30)
 1893  00002684  8fc2fff0	lw	r2,-16(r30)
 1894  00002688  00220820	add	r1,r1,r2
 1895  0000268c  afc1fff4	sw	-12(r30),r1
 1896  00002690  8fc20000	lw	r2,(r30)
 1897  00002694  20410001	addi	r1,r2,#1
 1898  00002698  00011020	add	r2,r0,r1
 1899  0000269c  afc20000	sw	(r30),r2
 1900  000026a0          	L97_LF2:
 1901  000026a0          	L90_LF2:
 1902  000026a0  8fc1fff0	lw	r1,-16(r30)
 1903  000026a4  8fc20008	lw	r2,8(r30)
 1904  000026a8  0022082a	slt	r1,r1,r2
 1905  000026ac  1420000c	bnez	r1,L98_LF2
 1906  000026b0  54000000	nop; delay slot nop
 1907  000026b4  0800000c	j	L89_LF2
 1908  000026b8  54000000	nop; delay slot nop
 1909  000026bc          	L98_LF2:
 1910  000026bc  0bfffec8	j	L88_LF2
 1911  000026c0  54000000	nop; delay slot nop
 1912  000026c4          	L89_LF2:
 1913  000026c4  8fc10004	lw	r1,4(r30)
 1914  000026c8  64220000	snei	r2,r1,#0
 1915  000026cc  10400010	beqz	r2,L99_LF2
 1916  000026d0  54000000	nop; delay slot nop
 1917  000026d4  8fc10004	lw	r1,4(r30)
 1918  000026d8  8fc20000	lw	r2,(r30)
 1919  000026dc  ac220000	sw	(r1),r2
 1920  000026e0          	L99_LF2:
 1921  000026e0  8fc1fff4	lw	r1,-12(r30)
 1922  000026e4  8fc2ffec	lw	r2,-20(r30)
 1923  000026e8  00200035	movi2fp	f0,r1
 1924  000026ec  00400835	movi2fp	f1,r2
 1925  000026f0  0401000e	mult	f0,f0,f1
 1926  000026f4  00000834	movfp2i	r1,f0
 1927  000026f8  afc1fff4	sw	-12(r30),r1
 1928  000026fc  8fc1fff4	lw	r1,-12(r30)
 1929  00002700  08000004	j	L72_LF2
 1930  00002704  54000000	nop; delay slot nop
 1931  00002708          	L72_LF2:
 1932  00002708  8fa20000	lw	r2,0(r29)
 1933  0000270c  8fdffff8	lw	r31,-8(r30)
 1934  00002710  001ee820	add	r29,r0,r30
 1935  00002714  8fdefffc	lw	r30,-4(r30)
 1936  00002718  4be00000	jr	r31
 1937  0000271c  54000000	nop
 1938  00002720          	.endproc _dstrtol
 1939  00002720          	.align 2
 1940  00002720          	.proc _bcopy
 1941  00002720          	.global _bcopy
 1942  00002720          	_bcopy:
 1943                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1944  00002720  afbefffc	sw	-4(r29),r30; push fp
 1945  00002724  001df020	add	r30,r0,r29; fp = sp
 1946  00002728  afbffff8	sw	-8(r29),r31; push ret addr
 1947  0000272c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1948  00002730  afa20000	sw	0(r29),r2
 1949  00002734  afa30004	sw	4(r29),r3
 1950  00002738  54000000	nop
 1951  0000273c          	L101_LF2:
 1952  0000273c  8fc10008	lw	r1,8(r30)
 1953  00002740  2022ffff	addi	r2,r1,#-1
 1954  00002744  afc20008	sw	8(r30),r2
 1955  00002748  6c210000	sgti	r1,r1,#0
 1956  0000274c  1420000c	bnez	r1,L103_LF2
 1957  00002750  54000000	nop; delay slot nop
 1958  00002754  0800002c	j	L102_LF2
 1959  00002758  54000000	nop; delay slot nop
 1960  0000275c          	L103_LF2:
 1961  0000275c  8fc10004	lw	r1,4(r30)
 1962  00002760  20220001	addi	r2,r1,#1
 1963  00002764  afc20004	sw	4(r30),r2
 1964  00002768  8fc20000	lw	r2,(r30)
 1965  0000276c  20430001	addi	r3,r2,#1
 1966  00002770  afc30000	sw	(r30),r3
 1967  00002774  80420000	lb	r2,(r2)
 1968  00002778  a0220000	sb	(r1),r2
 1969  0000277c  0bffffbc	j	L101_LF2
 1970  00002780  54000000	nop; delay slot nop
 1971  00002784          	L102_LF2:
 1972  00002784          	L100_LF2:
 1973  00002784  8fa20000	lw	r2,0(r29)
 1974  00002788  8fa30004	lw	r3,4(r29)
 1975  0000278c  8fdffff8	lw	r31,-8(r30)
 1976  00002790  001ee820	add	r29,r0,r30
 1977  00002794  8fdefffc	lw	r30,-4(r30)
 1978  00002798  4be00000	jr	r31
 1979  0000279c  54000000	nop
 1980  000027a0          	.endproc _bcopy
 1981  000027a0          	.align 2
 1982  000027a0          	.proc _bzero
 1983  000027a0          	.global _bzero
 1984  000027a0          	_bzero:
 1985                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1986  000027a0  afbefffc	sw	-4(r29),r30; push fp
 1987  000027a4  001df020	add	r30,r0,r29; fp = sp
 1988  000027a8  afbffff8	sw	-8(r29),r31; push ret addr
 1989  000027ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1990  000027b0  afa20000	sw	0(r29),r2
 1991  000027b4  54000000	nop
 1992  000027b8          	L105_LF2:
 1993  000027b8  8fc10004	lw	r1,4(r30)
 1994  000027bc  2022ffff	addi	r2,r1,#-1
 1995  000027c0  afc20004	sw	4(r30),r2
 1996  000027c4  6c210000	sgti	r1,r1,#0
 1997  000027c8  1420000c	bnez	r1,L107_LF2
 1998  000027cc  54000000	nop; delay slot nop
 1999  000027d0  08000020	j	L106_LF2
 2000  000027d4  54000000	nop; delay slot nop
 2001  000027d8          	L107_LF2:
 2002  000027d8  8fc10000	lw	r1,(r30)
 2003  000027dc  20220001	addi	r2,r1,#1
 2004  000027e0  afc20000	sw	(r30),r2
 2005  000027e4  20020000	addi	r2,r0,(#0x0)&0xff
 2006  000027e8  a0220000	sb	(r1),r2
 2007  000027ec  0bffffc8	j	L105_LF2
 2008  000027f0  54000000	nop; delay slot nop
 2009  000027f4          	L106_LF2:
 2010  000027f4          	L104_LF2:
 2011  000027f4  8fa20000	lw	r2,0(r29)
 2012  000027f8  8fdffff8	lw	r31,-8(r30)
 2013  000027fc  001ee820	add	r29,r0,r30
 2014  00002800  8fdefffc	lw	r30,-4(r30)
 2015  00002804  4be00000	jr	r31
 2016  00002808  54000000	nop
 2017  0000280c          	.endproc _bzero
 2018  0000280c          	.align 2
 2019  0000280c          	.proc _min
 2020  0000280c          	.global _min
 2021  0000280c          	_min:
 2022                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 2023  0000280c  afbefffc	sw	-4(r29),r30; push fp
 2024  00002810  001df020	add	r30,r0,r29; fp = sp
 2025  00002814  afbffff8	sw	-8(r29),r31; push ret addr
 2026  00002818  2fbd0010	subui	r29,r29,#16; alloc local storage
 2027  0000281c  afa20000	sw	0(r29),r2
 2028  00002820  afa30004	sw	4(r29),r3
 2029  00002824  8fc10000	lw	r1,(r30)
 2030  00002828  8fc20004	lw	r2,4(r30)
 2031  0000282c  0022182c	sle	r3,r1,r2
 2032  00002830  14600008	bnez	r3,L109_LF2
 2033  00002834  54000000	nop; delay slot nop
 2034  00002838  8fc10004	lw	r1,4(r30)
 2035  0000283c          	L109_LF2:
 2036  0000283c  08000004	j	L108_LF2
 2037  00002840  54000000	nop; delay slot nop
 2038  00002844          	L108_LF2:
 2039  00002844  8fa20000	lw	r2,0(r29)
 2040  00002848  8fa30004	lw	r3,4(r29)
 2041  0000284c  8fdffff8	lw	r31,-8(r30)
 2042  00002850  001ee820	add	r29,r0,r30
 2043  00002854  8fdefffc	lw	r30,-4(r30)
 2044  00002858  4be00000	jr	r31
 2045  0000285c  54000000	nop
 2046  00002860          	.endproc _min
 2047                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 2048                      ;;;
 2049                      ;;; Most of the traps are called in files from libtraps.
 2052  00002860          	.align 2
 2053  00002860          	.proc _exit
 2054  00002860          	.global _exit
 2055  00002860          	_exit:
 2056  00002860  44000300	trap	#0x300
 2057  00002864  4be00000	jr	r31
 2058  00002868  54000000	nop
 2059  0000286c          	.endproc _exit
 2061                      ; for the benefit of gcc.
 2062  0000286c          	.proc ___main
 2063  0000286c          	.global ___main
 2064  0000286c          	___main:
 2065  0000286c  4be00000	jr	r31
 2066  00002870  54000000	nop
 2067  00002874          	.endproc ___main
 2068  00002874          	.text
 2069  00002874          	.global _etext
 2070  00002874          	_etext:
 2071  00002874          	.align 3
 2072  00002878          	.data
 2073  000032a1          	.global _edata
 2074  000032a1          	_edata:

 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 410
    4                      ; Text size: 5640
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  4342202d	.ascii "CB ---- Put %c in %d\n\000"
   82  00003004  2d2d2d20	
   82  00003008  50757420	
   82  0000300c  25632069	
   82  00003010  6e202564	
   82  00003014  0a00    	
   83  00003016          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _put_item_cb
   86  000010d4          	.global _put_item_cb
   87  000010d4          	_put_item_cb:
   88                      ;  Function 'put_item_cb'; 0 bytes of locals, 4 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  afa40008	sw	8(r29),r4
   96  000010f0  afa5000c	sw	12(r29),r5
   97  000010f4  83c20003	lb	r2,3(r30)
   98  000010f8  8fc30004	lw	r3,4(r30)
   99  000010fc  8c610000	lw	r1,(r3)
  100  00001100  00610820	add	r1,r3,r1
  101  00001104  a0220008	sb	8(r1),r2
  102  00001108  23bdfff0	addi	r29,r29,#-16
  103  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  104  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  105  00001114  afa50000	sw	(r29),r5
  106  00001118  304100ff	andi	r1,r2,#0x00ff
  107  0000111c  afa10004	sw	4(r29),r1
  108  00001120  8c650000	lw	r5,(r3)
  109  00001124  afa50008	sw	8(r29),r5
  110  00001128  0c0006d8	jal	_Printf
  111  0000112c  54000000	nop; not filled.
  112  00001130  8c610000	lw	r1,(r3)
  113  00001134  20240001	addi	r4,r1,#1
  114  00001138  2001000a	addi	r1,r0,#10
  115  0000113c  00800035	movi2fp	f0,r4
  116  00001140  00200835	movi2fp	f1,r1
  117  00001144  0401000f	div	f0,f0,f1
  118  00001148  00001034	movfp2i	r2,f0
  119  0000114c  50410002	slli	r1,r2,#0x2
  120  00001150  00220820	add	r1,r1,r2
  121  00001154  50210001	slli	r1,r1,#0x1
  122  00001158  00810822	sub	r1,r4,r1
  123  0000115c  ac610000	sw	(r3),r1
  124  00001160  20010001	addi	r1,r0,#1
  125  00001164  23bd0010	addi	r29,r29,#16
  126  00001168  8fa20000	lw	r2,0(r29)
  127  0000116c  8fa30004	lw	r3,4(r29)
  128  00001170  8fa40008	lw	r4,8(r29)
  129  00001174  8fa5000c	lw	r5,12(r29)
  130  00001178  8fdffff8	lw	r31,-8(r30)
  131  0000117c  001ee820	add	r29,r0,r30
  132  00001180  8fdefffc	lw	r30,-4(r30)
  133  00001184  4be00000	jr	r31
  134  00001188  54000000	nop
  135  0000118c          	.endproc _put_item_cb
  136  0000118c          	.data
  137  00003016          	.align 2
  138  00003018          	LC1_LF0:
  139  00003018  4342202d	.ascii "CB ----  checking %c from %d\n\000"
  139  0000301c  2d2d2d20	
  139  00003020  20636865	
  139  00003024  636b696e	
  139  00003028  67202563	
  139  0000302c  2066726f	
  139  00003030  6d202564	
  139  00003034  0a00    	
  140  00003036          	.text
  141  0000118c          	.align 2
  142  0000118c          	.proc _check_item_cb
  143  0000118c          	.global _check_item_cb
  144  0000118c          	_check_item_cb:
  145                      ;  Function 'check_item_cb'; 0 bytes of locals, 3 regs to save.
  146  0000118c  afbefffc	sw	-4(r29),r30; push fp
  147  00001190  001df020	add	r30,r0,r29; fp = sp
  148  00001194  afbffff8	sw	-8(r29),r31; push ret addr
  149  00001198  2fbd0018	subui	r29,r29,#24; alloc local storage
  150  0000119c  afa20000	sw	0(r29),r2
  151  000011a0  afa30004	sw	4(r29),r3
  152  000011a4  afa40008	sw	8(r29),r4
  153  000011a8  8fc30000	lw	r3,(r30)
  154  000011ac  8fc20004	lw	r2,4(r30)
  155  000011b0  8c410004	lw	r1,4(r2)
  156  000011b4  00410820	add	r1,r2,r1
  157  000011b8  80210008	lb	r1,8(r1)
  158  000011bc  a0610000	sb	(r3),r1
  159  000011c0  23bdfff0	addi	r29,r29,#-16
  160  000011c4  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  161  000011c8  24843018	addui	r4,r4,(LC1_LF0)&0xffff
  162  000011cc  afa40000	sw	(r29),r4
  163  000011d0  90610000	lbu	r1,(r3)
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  8c420004	lw	r2,4(r2)
  166  000011dc  afa20008	sw	8(r29),r2
  167  000011e0  0c000620	jal	_Printf
  168  000011e4  54000000	nop; not filled.
  169  000011e8  20010001	addi	r1,r0,#1
  170  000011ec  23bd0010	addi	r29,r29,#16
  171  000011f0  8fa20000	lw	r2,0(r29)
  172  000011f4  8fa30004	lw	r3,4(r29)
  173  000011f8  8fa40008	lw	r4,8(r29)
  174  000011fc  8fdffff8	lw	r31,-8(r30)
  175  00001200  001ee820	add	r29,r0,r30
  176  00001204  8fdefffc	lw	r30,-4(r30)
  177  00001208  4be00000	jr	r31
  178  0000120c  54000000	nop
  179  00001210          	.endproc _check_item_cb
  180  00001210          	.data
  181  00003036          	.align 2
  182  00003038          	LC2_LF0:
  183  00003038  4342202d	.ascii "CB ----  Got %c from %d\n\000"
  183  0000303c  2d2d2d20	
  183  00003040  20476f74	
  183  00003044  20256320	
  183  00003048  66726f6d	
  183  0000304c  2025640a	
  183  00003050  00      	
  184  00003051          	.text
  185  00001210          	.align 2
  186  00001210          	.proc _get_item_cb
  187  00001210          	.global _get_item_cb
  188  00001210          	_get_item_cb:
  189                      ;  Function 'get_item_cb'; 0 bytes of locals, 4 regs to save.
  190  00001210  afbefffc	sw	-4(r29),r30; push fp
  191  00001214  001df020	add	r30,r0,r29; fp = sp
  192  00001218  afbffff8	sw	-8(r29),r31; push ret addr
  193  0000121c  2fbd0018	subui	r29,r29,#24; alloc local storage
  194  00001220  afa20000	sw	0(r29),r2
  195  00001224  afa30004	sw	4(r29),r3
  196  00001228  afa40008	sw	8(r29),r4
  197  0000122c  afa5000c	sw	12(r29),r5
  198  00001230  8fc20000	lw	r2,(r30)
  199  00001234  8fc30004	lw	r3,4(r30)
  200  00001238  8c610004	lw	r1,4(r3)
  201  0000123c  00610820	add	r1,r3,r1
  202  00001240  80210008	lb	r1,8(r1)
  203  00001244  a0410000	sb	(r2),r1
  204  00001248  23bdfff0	addi	r29,r29,#-16
  205  0000124c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  206  00001250  24a53038	addui	r5,r5,(LC2_LF0)&0xffff
  207  00001254  afa50000	sw	(r29),r5
  208  00001258  90410000	lbu	r1,(r2)
  209  0000125c  afa10004	sw	4(r29),r1
  210  00001260  8c650004	lw	r5,4(r3)
  211  00001264  afa50008	sw	8(r29),r5
  212  00001268  0c000598	jal	_Printf
  213  0000126c  54000000	nop; not filled.
  214  00001270  8c610004	lw	r1,4(r3)
  215  00001274  20240001	addi	r4,r1,#1
  216  00001278  2001000a	addi	r1,r0,#10
  217  0000127c  00800035	movi2fp	f0,r4
  218  00001280  00200835	movi2fp	f1,r1
  219  00001284  0401000f	div	f0,f0,f1
  220  00001288  00001034	movfp2i	r2,f0
  221  0000128c  50410002	slli	r1,r2,#0x2
  222  00001290  00220820	add	r1,r1,r2
  223  00001294  50210001	slli	r1,r1,#0x1
  224  00001298  00810822	sub	r1,r4,r1
  225  0000129c  ac610004	sw	4(r3),r1
  226  000012a0  20010001	addi	r1,r0,#1
  227  000012a4  23bd0010	addi	r29,r29,#16
  228  000012a8  8fa20000	lw	r2,0(r29)
  229  000012ac  8fa30004	lw	r3,4(r29)
  230  000012b0  8fa40008	lw	r4,8(r29)
  231  000012b4  8fa5000c	lw	r5,12(r29)
  232  000012b8  8fdffff8	lw	r31,-8(r30)
  233  000012bc  001ee820	add	r29,r0,r30
  234  000012c0  8fdefffc	lw	r30,-4(r30)
  235  000012c4  4be00000	jr	r31
  236  000012c8  54000000	nop
  237  000012cc          	.endproc _get_item_cb
  238  000012cc          	.align 2
  239  000012cc          	.proc _is_full
  240  000012cc          	.global _is_full
  241  000012cc          	_is_full:
  242                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  243  000012cc  afbefffc	sw	-4(r29),r30; push fp
  244  000012d0  001df020	add	r30,r0,r29; fp = sp
  245  000012d4  afbffff8	sw	-8(r29),r31; push ret addr
  246  000012d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  247  000012dc  afa20000	sw	0(r29),r2
  248  000012e0  afa30004	sw	4(r29),r3
  249  000012e4  afa40008	sw	8(r29),r4
  250  000012e8  8fc40000	lw	r4,(r30)
  251  000012ec  8c810000	lw	r1,(r4)
  252  000012f0  20230001	addi	r3,r1,#1
  253  000012f4  2001000a	addi	r1,r0,#10
  254  000012f8  00600035	movi2fp	f0,r3
  255  000012fc  00200835	movi2fp	f1,r1
  256  00001300  0401000f	div	f0,f0,f1
  257  00001304  00001034	movfp2i	r2,f0
  258  00001308  50410002	slli	r1,r2,#0x2
  259  0000130c  00220820	add	r1,r1,r2
  260  00001310  50210001	slli	r1,r1,#0x1
  261  00001314  00611022	sub	r2,r3,r1
  262  00001318  8c810004	lw	r1,4(r4)
  263  0000131c  00411028	seq	r2,r2,r1
  264  00001320  20010001	addi	r1,r0,#1
  265  00001324  14400008	bnez	r2,L23_LF0
  266  00001328  54000000	nop; not filled.
  267  0000132c  20010000	addi	r1,r0,#0
  268  00001330          	L23_LF0:
  269  00001330  8fa20000	lw	r2,0(r29)
  270  00001334  8fa30004	lw	r3,4(r29)
  271  00001338  8fa40008	lw	r4,8(r29)
  272  0000133c  8fdffff8	lw	r31,-8(r30)
  273  00001340  001ee820	add	r29,r0,r30
  274  00001344  8fdefffc	lw	r30,-4(r30)
  275  00001348  4be00000	jr	r31
  276  0000134c  54000000	nop
  277  00001350          	.endproc _is_full
  278  00001350          	.align 2
  279  00001350          	.proc _is_empty
  280  00001350          	.global _is_empty
  281  00001350          	_is_empty:
  282                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  283  00001350  afbefffc	sw	-4(r29),r30; push fp
  284  00001354  001df020	add	r30,r0,r29; fp = sp
  285  00001358  afbffff8	sw	-8(r29),r31; push ret addr
  286  0000135c  2fbd0010	subui	r29,r29,#16; alloc local storage
  287  00001360  afa20000	sw	0(r29),r2
  288  00001364  8fc10000	lw	r1,(r30)
  289  00001368  8c220000	lw	r2,(r1)
  290  0000136c  8c210004	lw	r1,4(r1)
  291  00001370  00411028	seq	r2,r2,r1
  292  00001374  20010001	addi	r1,r0,#1
  293  00001378  14400008	bnez	r2,L30_LF0
  294  0000137c  54000000	nop; not filled.
  295  00001380  20010000	addi	r1,r0,#0
  296  00001384          	L30_LF0:
  297  00001384  8fa20000	lw	r2,0(r29)
  298  00001388  8fdffff8	lw	r31,-8(r30)
  299  0000138c  001ee820	add	r29,r0,r30
  300  00001390  8fdefffc	lw	r30,-4(r30)
  301  00001394  4be00000	jr	r31
  302  00001398  54000000	nop
  303  0000139c          	.endproc _is_empty
  304  0000139c          	.data
  305  00003051          	.align 2
  306  00003054          	LC3_LF0:
  307  00003054  43697263	.ascii "Circular Buffer Initiated\n\000"
  307  00003058  756c6172	
  307  0000305c  20427566	
  307  00003060  66657220	
  307  00003064  496e6974	
  307  00003068  69617465	
  307  0000306c  640a00  	
  308  0000306f          	.text
  309  0000139c          	.align 2
  310  0000139c          	.proc _init_cb
  311  0000139c          	.global _init_cb
  312  0000139c          	_init_cb:
  313                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  314  0000139c  afbefffc	sw	-4(r29),r30; push fp
  315  000013a0  001df020	add	r30,r0,r29; fp = sp
  316  000013a4  afbffff8	sw	-8(r29),r31; push ret addr
  317  000013a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  318  000013ac  afa20000	sw	0(r29),r2
  319  000013b0  8fc10000	lw	r1,(r30)
  320  000013b4  20020000	addi	r2,r0,#0
  321  000013b8  ac220000	sw	(r1),r2
  322  000013bc  ac220004	sw	4(r1),r2
  323  000013c0  23bdfff8	addi	r29,r29,#-8
  324  000013c4  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
  325  000013c8  24423054	addui	r2,r2,(LC3_LF0)&0xffff
  326  000013cc  afa20000	sw	(r29),r2
  327  000013d0  0c000430	jal	_Printf
  328  000013d4  54000000	nop; not filled.
  329  000013d8  23bd0008	addi	r29,r29,#8
  330  000013dc  8fa20000	lw	r2,0(r29)
  331  000013e0  8fdffff8	lw	r31,-8(r30)
  332  000013e4  001ee820	add	r29,r0,r30
  333  000013e8  8fdefffc	lw	r30,-4(r30)
  334  000013ec  4be00000	jr	r31
  335  000013f0  54000000	nop
  336  000013f4          	.endproc _init_cb
  337  000013f4          	.data
  338  0000306f          	.align 2
  339  00003070          	LC4_LF0:
  340  00003070  20436972	.ascii " Circular Buffer =>  \000"
  340  00003074  63756c61	
  340  00003078  72204275	
  340  0000307c  66666572	
  340  00003080  203d3e20	
  340  00003084  2000    	
  341  00003086          	.align 2
  342  00003088          	LC5_LF0:
  343  00003088  256300  	.ascii "%c\000"
  344  0000308b          	.align 2
  345  0000308c          	LC6_LF0:
  346  0000308c  0a00    	.ascii "\n\000"
  347  0000308e          	.text
  348  000013f4          	.align 2
  349  000013f4          	.proc _Print_cb
  350  000013f4          	.global _Print_cb
  351  000013f4          	_Print_cb:
  352                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  353  000013f4  afbefffc	sw	-4(r29),r30; push fp
  354  000013f8  001df020	add	r30,r0,r29; fp = sp
  355  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  356  00001400  2fbd0020	subui	r29,r29,#32; alloc local storage
  357  00001404  afa20000	sw	0(r29),r2
  358  00001408  afa30004	sw	4(r29),r3
  359  0000140c  afa40008	sw	8(r29),r4
  360  00001410  afa5000c	sw	12(r29),r5
  361  00001414  afa60010	sw	16(r29),r6
  362  00001418  afa70014	sw	20(r29),r7
  363  0000141c  8fc50000	lw	r5,(r30)
  364  00001420  23bdfff8	addi	r29,r29,#-8
  365  00001424  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  366  00001428  24e73070	addui	r7,r7,(LC4_LF0)&0xffff
  367  0000142c  afa70000	sw	(r29),r7
  368  00001430  0c0003d0	jal	_Printf
  369  00001434  54000000	nop; not filled.
  370  00001438  20040000	addi	r4,r0,#0
  371  0000143c  23bd0008	addi	r29,r29,#8
  372  00001440  2006000a	addi	r6,r0,#10
  373  00001444          	L45_LF0:
  374  00001444  23bdfff8	addi	r29,r29,#-8
  375  00001448  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  376  0000144c  24e73088	addui	r7,r7,(LC5_LF0)&0xffff
  377  00001450  afa70000	sw	(r29),r7
  378  00001454  8ca10004	lw	r1,4(r5)
  379  00001458  00811820	add	r3,r4,r1
  380  0000145c  00600035	movi2fp	f0,r3
  381  00001460  00c00835	movi2fp	f1,r6
  382  00001464  0401000f	div	f0,f0,f1
  383  00001468  00001034	movfp2i	r2,f0
  384  0000146c  50410002	slli	r1,r2,#0x2
  385  00001470  00220820	add	r1,r1,r2
  386  00001474  50210001	slli	r1,r1,#0x1
  387  00001478  00610822	sub	r1,r3,r1
  388  0000147c  00a10820	add	r1,r5,r1
  389  00001480  90210008	lbu	r1,8(r1)
  390  00001484  afa10004	sw	4(r29),r1
  391  00001488  0c000378	jal	_Printf
  392  0000148c  54000000	nop; not filled.
  393  00001490  23bd0008	addi	r29,r29,#8
  394  00001494  20840001	addi	r4,r4,#1
  395  00001498  70810009	slei	r1,r4,#9
  396  0000149c  1420ffa4	bnez	r1,L45_LF0
  397  000014a0  54000000	nop; not filled.
  398  000014a4  23bdfff8	addi	r29,r29,#-8
  399  000014a8  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  400  000014ac  24e7308c	addui	r7,r7,(LC6_LF0)&0xffff
  401  000014b0  afa70000	sw	(r29),r7
  402  000014b4  0c00034c	jal	_Printf
  403  000014b8  54000000	nop; not filled.
  404  000014bc  23bd0008	addi	r29,r29,#8
  405  000014c0  8fa20000	lw	r2,0(r29)
  406  000014c4  8fa30004	lw	r3,4(r29)
  407  000014c8  8fa40008	lw	r4,8(r29)
  408  000014cc  8fa5000c	lw	r5,12(r29)
  409  000014d0  8fa60010	lw	r6,16(r29)
  410  000014d4  8fa70014	lw	r7,20(r29)
  411  000014d8  8fdffff8	lw	r31,-8(r30)
  412  000014dc  001ee820	add	r29,r0,r30
  413  000014e0  8fdefffc	lw	r30,-4(r30)
  414  000014e4  4be00000	jr	r31
  415  000014e8  54000000	nop
  416  000014ec          	.endproc _Print_cb
  417  000014ec          	.data
  418  0000308e          	.align 2
  419  00003090          	LC7_LF0:
  420  00003090  55736167	.ascii "Usage: \000"
  420  00003094  653a2000	
  421  00003098          	.align 2
  422  00003098          	LC8_LF0:
  423  00003098  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
  423  0000309c  6e646c65	
  423  000030a0  5f746f5f	
  423  000030a4  73686172	
  423  000030a8  65645f6d	
  423  000030ac  656d6f72	
  423  000030b0  795f7061	
  423  000030b4  67653e20	
  423  000030b8  3c68616e	
  423  000030bc  646c655f	
  423  000030c0  746f5f70	
  423  000030c4  6167655f	
  423  000030c8  6d617070	
  423  000030cc  65645f73	
  423  000030d0  656d6170	
  423  000030d4  686f7265	
  423  000030d8  3e203c68	
  423  000030dc  616e    	
  424  000030de  646c6520	.ascii "dle to lock>\n\000"
  424  000030e2  746f206c	
  424  000030e6  6f636b3e	
  424  000030ea  0a00    	
  425  000030ec          	.align 2
  426  000030ec          	LC9_LF0:
  427  000030ec  53656d5f	.ascii "Sem_wait of O2 passed \n\000"
  427  000030f0  77616974	
  427  000030f4  206f6620	
  427  000030f8  4f322070	
  427  000030fc  61737365	
  427  00003100  64200a00	
  428  00003104          	.align 2
  429  00003104          	LC10_LF0:
  430  00003104  53656d5f	.ascii "Sem_wait of N is passed \n\000"
  430  00003108  77616974	
  430  0000310c  206f6620	
  430  00003110  4e206973	
  430  00003114  20706173	
  430  00003118  73656420	
  430  0000311c  0a00    	
  431  0000311e          	.align 2
  432  00003120          	LC11_LF0:
  433  00003120  416e204e	.ascii "An NO2 molecule is created \n\000"
  433  00003124  4f32206d	
  433  00003128  6f6c6563	
  433  0000312c  756c6520	
  433  00003130  69732063	
  433  00003134  72656174	
  433  00003138  6564200a	
  433  0000313c  00      	
  434  0000313d          	.align 2
  435  00003140          	LC12_LF0:
  436  00003140  53656d5f	.ascii "Sem_signal of NO2 is passed \n\n\000"
  436  00003144  7369676e	
  436  00003148  616c206f	
  436  0000314c  66204e4f	
  436  00003150  32206973	
  436  00003154  20706173	
  436  00003158  73656420	
  436  0000315c  0a0a00  	
  437  0000315f          	.align 2
  438  00003160          	LC13_LF0:
  439  00003160  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  439  00003164  73656d61	
  439  00003168  70686f72	
  439  0000316c  6520735f	
  439  00003170  70726f63	
  439  00003174  735f636f	
  439  00003178  6d706c65	
  439  0000317c  74656420	
  439  00003180  28256429	
  439  00003184  20696e20	
  439  00003188  00      	
  440  00003189          	.align 2
  441  0000318c          	LC14_LF0:
  442  0000318c  2c206578	.ascii ", exiting...\n\000"
  442  00003190  6974696e	
  442  00003194  672e2e2e	
  442  00003198  0a00    	
  443  0000319a          	.text
  444  000014ec          	.align 2
  445  000014ec          	.proc _main
  446  000014ec          	.global _main
  447  000014ec          	_main:
  448                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  449  000014ec  afbefffc	sw	-4(r29),r30; push fp
  450  000014f0  001df020	add	r30,r0,r29; fp = sp
  451  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  452  000014f8  2fbd0008	subui	r29,r29,#8; alloc local storage
  453  000014fc  8fc20000	lw	r2,(r30)
  454  00001500  8fc40004	lw	r4,4(r30)
  455  00001504  0c0010f8	jal	___main
  456  00001508  54000000	nop; not filled.
  457  0000150c  64410007	snei	r1,r2,#7
  458  00001510  1020004c	beqz	r1,L48_LF0
  459  00001514  54000000	nop; not filled.
  460  00001518  23bdfff8	addi	r29,r29,#-8
  461  0000151c  3c0a0000	lhi	r10,((LC7_LF0)>>16)&0xffff
  462  00001520  254a3090	addui	r10,r10,(LC7_LF0)&0xffff
  463  00001524  afaa0000	sw	(r29),r10
  464  00001528  0c0002d8	jal	_Printf
  465  0000152c  54000000	nop; not filled.
  466  00001530  8c8a0000	lw	r10,(r4)
  467  00001534  afaa0000	sw	(r29),r10
  468  00001538  0c0002c8	jal	_Printf
  469  0000153c  54000000	nop; not filled.
  470  00001540  3c0a0000	lhi	r10,((LC8_LF0)>>16)&0xffff
  471  00001544  254a3098	addui	r10,r10,(LC8_LF0)&0xffff
  472  00001548  afaa0000	sw	(r29),r10
  473  0000154c  0c0002b4	jal	_Printf
  474  00001550  54000000	nop; not filled.
  475  00001554  0c000354	jal	_Exit
  476  00001558  54000000	nop; not filled.
  477  0000155c  23bd0008	addi	r29,r29,#8
  478  00001560          	L48_LF0:
  479  00001560  23bdfff0	addi	r29,r29,#-16
  480  00001564  8c8a0004	lw	r10,4(r4)
  481  00001568  afaa0000	sw	(r29),r10
  482  0000156c  200a0000	addi	r10,r0,#0
  483  00001570  afaa0004	sw	4(r29),r10
  484  00001574  200a000a	addi	r10,r0,#10
  485  00001578  afaa0008	sw	8(r29),r10
  486  0000157c  0c000bd8	jal	_dstrtol
  487  00001580  54000000	nop; not filled.
  488  00001584  00011020	add	r2,r0,r1
  489  00001588  8c8a0008	lw	r10,8(r4)
  490  0000158c  afaa0000	sw	(r29),r10
  491  00001590  200a0000	addi	r10,r0,#0
  492  00001594  afaa0004	sw	4(r29),r10
  493  00001598  200a000a	addi	r10,r0,#10
  494  0000159c  afaa0008	sw	8(r29),r10
  495  000015a0  0c000bb4	jal	_dstrtol
  496  000015a4  54000000	nop; not filled.
  497  000015a8  00011820	add	r3,r0,r1
  498  000015ac  8c8a0018	lw	r10,24(r4)
  499  000015b0  afaa0000	sw	(r29),r10
  500  000015b4  200a0000	addi	r10,r0,#0
  501  000015b8  afaa0004	sw	4(r29),r10
  502  000015bc  200a000a	addi	r10,r0,#10
  503  000015c0  afaa0008	sw	8(r29),r10
  504  000015c4  0c000b90	jal	_dstrtol
  505  000015c8  54000000	nop; not filled.
  506  000015cc  00014820	add	r9,r0,r1
  507  000015d0  8c8a000c	lw	r10,12(r4)
  508  000015d4  afaa0000	sw	(r29),r10
  509  000015d8  200a0000	addi	r10,r0,#0
  510  000015dc  afaa0004	sw	4(r29),r10
  511  000015e0  200a000a	addi	r10,r0,#10
  512  000015e4  afaa0008	sw	8(r29),r10
  513  000015e8  0c000b6c	jal	_dstrtol
  514  000015ec  54000000	nop; not filled.
  515  000015f0  00014020	add	r8,r0,r1
  516  000015f4  8c8a0010	lw	r10,16(r4)
  517  000015f8  afaa0000	sw	(r29),r10
  518  000015fc  200a0000	addi	r10,r0,#0
  519  00001600  afaa0004	sw	4(r29),r10
  520  00001604  200a000a	addi	r10,r0,#10
  521  00001608  afaa0008	sw	8(r29),r10
  522  0000160c  0c000b48	jal	_dstrtol
  523  00001610  54000000	nop; not filled.
  524  00001614  00013820	add	r7,r0,r1
  525  00001618  8c8a0014	lw	r10,20(r4)
  526  0000161c  afaa0000	sw	(r29),r10
  527  00001620  200a0000	addi	r10,r0,#0
  528  00001624  afaa0004	sw	4(r29),r10
  529  00001628  200a000a	addi	r10,r0,#10
  530  0000162c  afaa0008	sw	8(r29),r10
  531  00001630  0c000b24	jal	_dstrtol
  532  00001634  54000000	nop; not filled.
  533  00001638  00013020	add	r6,r0,r1
  534  0000163c  50410001	slli	r1,r2,#0x1
  535  00001640  00222820	add	r5,r1,r2
  536  00001644  58630001	srli	r3,r3,#0x1
  537  00001648  20020000	addi	r2,r0,#0
  538  0000164c  23bd0010	addi	r29,r29,#16
  539  00001650          	L49_LF0:
  540  00001650  23bdfff8	addi	r29,r29,#-8
  541  00001654  afa50000	sw	(r29),r5
  542  00001658  afa30004	sw	4(r29),r3
  543  0000165c  0c000f40	jal	_min
  544  00001660  54000000	nop; not filled.
  545  00001664  23bd0008	addi	r29,r29,#8
  546  00001668  0041082a	slt	r1,r2,r1
  547  0000166c  102000d8	beqz	r1,L50_LF0
  548  00001670  54000000	nop; not filled.
  549  00001674  23bdfff8	addi	r29,r29,#-8
  550  00001678  afa70000	sw	(r29),r7
  551  0000167c  0c0001cc	jal	_sem_wait
  552  00001680  54000000	nop; not filled.
  553  00001684  23bd0008	addi	r29,r29,#8
  554  00001688  64210000	snei	r1,r1,#0
  555  0000168c  10200020	beqz	r1,L52_LF0
  556  00001690  54000000	nop; not filled.
  557  00001694  23bdfff8	addi	r29,r29,#-8
  558  00001698  3c0a0000	lhi	r10,((LC9_LF0)>>16)&0xffff
  559  0000169c  254a30ec	addui	r10,r10,(LC9_LF0)&0xffff
  560  000016a0  afaa0000	sw	(r29),r10
  561  000016a4  0c00015c	jal	_Printf
  562  000016a8  54000000	nop; not filled.
  563  000016ac  23bd0008	addi	r29,r29,#8
  564  000016b0          	L52_LF0:
  565  000016b0  23bdfff8	addi	r29,r29,#-8
  566  000016b4  afa80000	sw	(r29),r8
  567  000016b8  0c000190	jal	_sem_wait
  568  000016bc  54000000	nop; not filled.
  569  000016c0  23bd0008	addi	r29,r29,#8
  570  000016c4  64210000	snei	r1,r1,#0
  571  000016c8  10200020	beqz	r1,L53_LF0
  572  000016cc  54000000	nop; not filled.
  573  000016d0  23bdfff8	addi	r29,r29,#-8
  574  000016d4  3c0a0000	lhi	r10,((LC10_LF0)>>16)&0xffff
  575  000016d8  254a3104	addui	r10,r10,(LC10_LF0)&0xffff
  576  000016dc  afaa0000	sw	(r29),r10
  577  000016e0  0c000120	jal	_Printf
  578  000016e4  54000000	nop; not filled.
  579  000016e8  23bd0008	addi	r29,r29,#8
  580  000016ec          	L53_LF0:
  581  000016ec  23bdfff8	addi	r29,r29,#-8
  582  000016f0  3c0a0000	lhi	r10,((LC11_LF0)>>16)&0xffff
  583  000016f4  254a3120	addui	r10,r10,(LC11_LF0)&0xffff
  584  000016f8  afaa0000	sw	(r29),r10
  585  000016fc  0c000104	jal	_Printf
  586  00001700  54000000	nop; not filled.
  587  00001704  afa60000	sw	(r29),r6
  588  00001708  0c00014c	jal	_sem_signal
  589  0000170c  54000000	nop; not filled.
  590  00001710  23bd0008	addi	r29,r29,#8
  591  00001714  64210000	snei	r1,r1,#0
  592  00001718  10200020	beqz	r1,L54_LF0
  593  0000171c  54000000	nop; not filled.
  594  00001720  23bdfff8	addi	r29,r29,#-8
  595  00001724  3c0a0000	lhi	r10,((LC12_LF0)>>16)&0xffff
  596  00001728  254a3140	addui	r10,r10,(LC12_LF0)&0xffff
  597  0000172c  afaa0000	sw	(r29),r10
  598  00001730  0c0000d0	jal	_Printf
  599  00001734  54000000	nop; not filled.
  600  00001738  23bd0008	addi	r29,r29,#8
  601  0000173c          	L54_LF0:
  602  0000173c  20420001	addi	r2,r2,#1
  603  00001740  0bffff0c	j	L49_LF0
  604  00001744  54000000	nop; not filled.
  605  00001748          	L50_LF0:
  606  00001748  23bdfff8	addi	r29,r29,#-8
  607  0000174c  afa90000	sw	(r29),r9
  608  00001750  0c000104	jal	_sem_signal
  609  00001754  54000000	nop; not filled.
  610  00001758  23bd0008	addi	r29,r29,#8
  611  0000175c  64210001	snei	r1,r1,#1
  612  00001760  10200050	beqz	r1,L55_LF0
  613  00001764  54000000	nop; not filled.
  614  00001768  23bdfff8	addi	r29,r29,#-8
  615  0000176c  3c0a0000	lhi	r10,((LC13_LF0)>>16)&0xffff
  616  00001770  254a3160	addui	r10,r10,(LC13_LF0)&0xffff
  617  00001774  afaa0000	sw	(r29),r10
  618  00001778  afa90004	sw	4(r29),r9
  619  0000177c  0c000084	jal	_Printf
  620  00001780  54000000	nop; not filled.
  621  00001784  8c840000	lw	r4,(r4)
  622  00001788  afa40000	sw	(r29),r4
  623  0000178c  0c000074	jal	_Printf
  624  00001790  54000000	nop; not filled.
  625  00001794  3c0a0000	lhi	r10,((LC14_LF0)>>16)&0xffff
  626  00001798  254a318c	addui	r10,r10,(LC14_LF0)&0xffff
  627  0000179c  afaa0000	sw	(r29),r10
  628  000017a0  0c000060	jal	_Printf
  629  000017a4  54000000	nop; not filled.
  630  000017a8  0c000100	jal	_Exit
  631  000017ac  54000000	nop; not filled.
  632  000017b0  23bd0008	addi	r29,r29,#8
  633  000017b4          	L55_LF0:
  634  000017b4  0c000e3c	jal	_exit
  635  000017b8  54000000	nop
  636  000017bc          	.endproc _main
  637                      ;;;
  638                      ;;; Stub functions for DLX traps.
  639                      ;;;
  640                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  641                      ;;;
  642                      ;;; The traps such as Open and Close
  643                      ;;; (note the capital letters) are for use by user programs.  The traps
  644                      ;;; with names such as open and close (lower case) are for use by the OS.
  645                      ;;;
  648  000017bc          	.align 2
  650                      ;;; The following are the traps to be used by user-level programs
  651                      ;;;
  653  000017bc          	.align 2
  654  000017bc          	.proc _Open
  655  000017bc          	.global _Open
  656  000017bc          	_Open:
  657                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  658                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  659                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  660  000017bc  44000213	trap	#0x213
  661  000017c0  4be00000	jr	r31
  662  000017c4  54000000	nop
  663  000017c8          	.endproc _Open
  665  000017c8          	.proc _Close
  666  000017c8          	.global _Close
  667  000017c8          	_Close:
  668  000017c8  44000214	trap	#0x214
  669  000017cc  4be00000	jr	r31
  670  000017d0  54000000	nop
  671  000017d4          	.endproc _Close
  673  000017d4          	.proc _Read
  674  000017d4          	.global _Read
  675  000017d4          	_Read:
  676  000017d4  44000210	trap	#0x210
  677  000017d8  4be00000	jr	r31
  678  000017dc  54000000	nop
  679  000017e0          	.endproc _Read
  681  000017e0          	.proc _Write
  682  000017e0          	.global _Write
  683  000017e0          	_Write:
  684  000017e0  44000211	trap	#0x211
  685  000017e4  4be00000	jr	r31
  686  000017e8  54000000	nop
  687  000017ec          	.endproc _Write
  689  000017ec          	.proc _Lseek
  690  000017ec          	.global _Lseek
  691  000017ec          	_Lseek:
  692  000017ec  44000212	trap	#0x212
  693  000017f0  4be00000	jr	r31
  694  000017f4  54000000	nop
  695  000017f8          	.endproc _Lseek
  697  000017f8          	.proc _Putchar
  698  000017f8          	.global _Putchar
  699  000017f8          	_Putchar:
  700  000017f8  44000280	trap	#0x280
  701  000017fc  4be00000	jr	r31
  702  00001800  54000000	nop
  703  00001804          	.endproc _Putchar
  705  00001804          	.proc _Printf
  706  00001804          	.global _Printf
  707  00001804          	_Printf:
  708  00001804  44000201	trap	#0x201
  709  00001808  4be00000	jr	r31
  710  0000180c  54000000	nop
  711  00001810          	.endproc _Printf
  713  00001810          	.proc _Getpid
  714  00001810          	.global _Getpid
  715  00001810          	_Getpid:
  716  00001810  44000431	trap	#0x431
  717  00001814  4be00000	jr	r31
  718  00001818  54000000	nop
  719  0000181c          	.endproc _Getpid
  721  0000181c          	.proc _process_create
  722  0000181c          	.global _process_create
  723  0000181c          	_process_create:
  724  0000181c  44000432	trap	#0x432
  725  00001820  4be00000	jr	r31
  726  00001824  54000000	nop
  727  00001828          	.endproc _process_create
  729  00001828          	.proc _shmget
  730  00001828          	.global _shmget
  731  00001828          	_shmget:
  732  00001828  44000440	trap	#0x440
  733  0000182c  4be00000	jr	r31
  734  00001830  54000000	nop
  735  00001834          	.endproc _shmget
  737  00001834          	.proc _shmat
  738  00001834          	.global _shmat
  739  00001834          	_shmat:
  740  00001834  44000441	trap	#0x441
  741  00001838  4be00000	jr	r31
  742  0000183c  54000000	nop
  743  00001840          	.endproc _shmat
  745  00001840          	.proc _sem_create
  746  00001840          	.global _sem_create
  747  00001840          	_sem_create:
  748  00001840  44000450	trap	#0x450
  749  00001844  4be00000	jr	r31
  750  00001848  54000000	nop
  751  0000184c          	.endproc _sem_create
  753  0000184c          	.proc _sem_wait
  754  0000184c          	.global _sem_wait
  755  0000184c          	_sem_wait:
  756  0000184c  44000451	trap	#0x451
  757  00001850  4be00000	jr	r31
  758  00001854  54000000	nop
  759  00001858          	.endproc _sem_wait
  761  00001858          	.proc _sem_signal
  762  00001858          	.global _sem_signal
  763  00001858          	_sem_signal:
  764  00001858  44000452	trap	#0x452
  765  0000185c  4be00000	jr	r31
  766  00001860  54000000	nop
  767  00001864          	.endproc _sem_signal
  769  00001864          	.proc _lock_create
  770  00001864          	.global _lock_create
  771  00001864          	_lock_create:
  772  00001864  44000453	trap	#0x453
  773  00001868  4be00000	jr	r31
  774  0000186c  54000000	nop
  775  00001870          	.endproc _lock_create
  777  00001870          	.proc _lock_acquire
  778  00001870          	.global _lock_acquire
  779  00001870          	_lock_acquire:
  780  00001870  44000454	trap	#0x454
  781  00001874  4be00000	jr	r31
  782  00001878  54000000	nop
  783  0000187c          	.endproc _lock_acquire
  785  0000187c          	.proc _lock_release
  786  0000187c          	.global _lock_release
  787  0000187c          	_lock_release:
  788  0000187c  44000455	trap	#0x455
  789  00001880  4be00000	jr	r31
  790  00001884  54000000	nop
  791  00001888          	.endproc _lock_release
  793  00001888          	.proc _cond_create
  794  00001888          	.global _cond_create
  795  00001888          	_cond_create:
  796  00001888  44000456	trap	#0x456
  797  0000188c  4be00000	jr	r31
  798  00001890  54000000	nop
  799  00001894          	.endproc _cond_create
  801  00001894          	.proc _cond_wait
  802  00001894          	.global _cond_wait
  803  00001894          	_cond_wait:
  804  00001894  44000457	trap	#0x457
  805  00001898  4be00000	jr	r31
  806  0000189c  54000000	nop
  807  000018a0          	.endproc _cond_wait
  809  000018a0          	.proc _cond_signal
  810  000018a0          	.global _cond_signal
  811  000018a0          	_cond_signal:
  812  000018a0  44000458	trap	#0x458
  813  000018a4  4be00000	jr	r31
  814  000018a8  54000000	nop
  815  000018ac          	.endproc _cond_signal
  817  000018ac          	.proc _Exit
  818  000018ac          	.global _Exit
  819  000018ac          	_Exit:
  820  000018ac  44000500	trap	#0x500
  821  000018b0  4be00000	jr	r31
  822  000018b4  54000000	nop
  823  000018b8          	.endproc _Exit
  824                      ; Compiled by GCC
  826  000018b8          	.align 2
  827  000018b8          	.proc _isspace
  828  000018b8          	.global _isspace
  829  000018b8          	_isspace:
  830                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  831  000018b8  afbefffc	sw	-4(r29),r30; push fp
  832  000018bc  001df020	add	r30,r0,r29; fp = sp
  833  000018c0  afbffff8	sw	-8(r29),r31; push ret addr
  834  000018c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  835  000018c8  afa20000	sw	0(r29),r2
  836  000018cc  afa30004	sw	4(r29),r3
  837  000018d0  afa40008	sw	8(r29),r4
  838  000018d4  83c20003	lb	r2,3(r30)
  839  000018d8  20010000	addi	r1,r0,#0
  840  000018dc  304300ff	andi	r3,r2,#0x00ff
  841  000018e0  60640020	seqi	r4,r3,#32
  842  000018e4  1480002c	bnez	r4,L3_LF2
  843  000018e8  54000000	nop; delay slot nop
  844  000018ec  304300ff	andi	r3,r2,#0x00ff
  845  000018f0  60640009	seqi	r4,r3,#9
  846  000018f4  1480001c	bnez	r4,L3_LF2
  847  000018f8  54000000	nop; delay slot nop
  848  000018fc  304300ff	andi	r3,r2,#0x00ff
  849  00001900  6064000a	seqi	r4,r3,#10
  850  00001904  1480000c	bnez	r4,L3_LF2
  851  00001908  54000000	nop; delay slot nop
  852  0000190c  08000008	j	L2_LF2
  853  00001910  54000000	nop; delay slot nop
  854  00001914          	L3_LF2:
  855  00001914  20010001	addi	r1,r0,#1
  856  00001918          	L2_LF2:
  857  00001918  08000004	j	L1_LF2
  858  0000191c  54000000	nop; delay slot nop
  859  00001920          	L1_LF2:
  860  00001920  8fa20000	lw	r2,0(r29)
  861  00001924  8fa30004	lw	r3,4(r29)
  862  00001928  8fa40008	lw	r4,8(r29)
  863  0000192c  8fdffff8	lw	r31,-8(r30)
  864  00001930  001ee820	add	r29,r0,r30
  865  00001934  8fdefffc	lw	r30,-4(r30)
  866  00001938  4be00000	jr	r31
  867  0000193c  54000000	nop
  868  00001940          	.endproc _isspace
  869  00001940          	.align 2
  870  00001940          	.proc _isxdigit
  871  00001940          	.global _isxdigit
  872  00001940          	_isxdigit:
  873                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  874  00001940  afbefffc	sw	-4(r29),r30; push fp
  875  00001944  001df020	add	r30,r0,r29; fp = sp
  876  00001948  afbffff8	sw	-8(r29),r31; push ret addr
  877  0000194c  2fbd0018	subui	r29,r29,#24; alloc local storage
  878  00001950  afa20000	sw	0(r29),r2
  879  00001954  afa30004	sw	4(r29),r3
  880  00001958  afa40008	sw	8(r29),r4
  881  0000195c  83c20003	lb	r2,3(r30)
  882  00001960  20010000	addi	r1,r0,#0
  883  00001964  304300ff	andi	r3,r2,#0x00ff
  884  00001968  6c64002f	sgtui	r4,r3,#47
  885  0000196c  1080001c	beqz	r4,L7_LF2
  886  00001970  54000000	nop; delay slot nop
  887  00001974  304300ff	andi	r3,r2,#0x00ff
  888  00001978  70640039	sleui	r4,r3,#57
  889  0000197c  1480005c	bnez	r4,L6_LF2
  890  00001980  54000000	nop; delay slot nop
  891  00001984  08000004	j	L7_LF2
  892  00001988  54000000	nop; delay slot nop
  893  0000198c          	L7_LF2:
  894  0000198c  304300ff	andi	r3,r2,#0x00ff
  895  00001990  6c640060	sgtui	r4,r3,#96
  896  00001994  1080001c	beqz	r4,L8_LF2
  897  00001998  54000000	nop; delay slot nop
  898  0000199c  304300ff	andi	r3,r2,#0x00ff
  899  000019a0  70640066	sleui	r4,r3,#102
  900  000019a4  14800034	bnez	r4,L6_LF2
  901  000019a8  54000000	nop; delay slot nop
  902  000019ac  08000004	j	L8_LF2
  903  000019b0  54000000	nop; delay slot nop
  904  000019b4          	L8_LF2:
  905  000019b4  304300ff	andi	r3,r2,#0x00ff
  906  000019b8  6c640040	sgtui	r4,r3,#64
  907  000019bc  10800020	beqz	r4,L5_LF2
  908  000019c0  54000000	nop; delay slot nop
  909  000019c4  304300ff	andi	r3,r2,#0x00ff
  910  000019c8  70640041	sleui	r4,r3,#65
  911  000019cc  1480000c	bnez	r4,L6_LF2
  912  000019d0  54000000	nop; delay slot nop
  913  000019d4  08000008	j	L5_LF2
  914  000019d8  54000000	nop; delay slot nop
  915  000019dc          	L6_LF2:
  916  000019dc  20010001	addi	r1,r0,#1
  917  000019e0          	L5_LF2:
  918  000019e0  08000004	j	L4_LF2
  919  000019e4  54000000	nop; delay slot nop
  920  000019e8          	L4_LF2:
  921  000019e8  8fa20000	lw	r2,0(r29)
  922  000019ec  8fa30004	lw	r3,4(r29)
  923  000019f0  8fa40008	lw	r4,8(r29)
  924  000019f4  8fdffff8	lw	r31,-8(r30)
  925  000019f8  001ee820	add	r29,r0,r30
  926  000019fc  8fdefffc	lw	r30,-4(r30)
  927  00001a00  4be00000	jr	r31
  928  00001a04  54000000	nop
  929  00001a08          	.endproc _isxdigit
  930  00001a08          	.align 2
  931  00001a08          	.proc _dstrcpy
  932  00001a08          	.global _dstrcpy
  933  00001a08          	_dstrcpy:
  934                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  935  00001a08  afbefffc	sw	-4(r29),r30; push fp
  936  00001a0c  001df020	add	r30,r0,r29; fp = sp
  937  00001a10  afbffff8	sw	-8(r29),r31; push ret addr
  938  00001a14  2fbd0018	subui	r29,r29,#24; alloc local storage
  939  00001a18  afa20000	sw	0(r29),r2
  940  00001a1c  afa30004	sw	4(r29),r3
  941  00001a20  8fc10000	lw	r1,(r30)
  942  00001a24  afc1fff4	sw	-12(r30),r1
  943  00001a28          	L10_LF2:
  944  00001a28  8fc10000	lw	r1,(r30)
  945  00001a2c  20220001	addi	r2,r1,#1
  946  00001a30  afc20000	sw	(r30),r2
  947  00001a34  8fc20004	lw	r2,4(r30)
  948  00001a38  20430001	addi	r3,r2,#1
  949  00001a3c  afc30004	sw	4(r30),r3
  950  00001a40  80420000	lb	r2,(r2)
  951  00001a44  a0220000	sb	(r1),r2
  952  00001a48  a3c2fff3	sb	-13(r30),r2
  953  00001a4c          	L12_LF2:
  954  00001a4c  93c1fff3	lbu	r1,-13(r30)
  955  00001a50  64220000	snei	r2,r1,#0
  956  00001a54  1440000c	bnez	r2,L13_LF2
  957  00001a58  54000000	nop; delay slot nop
  958  00001a5c  0800000c	j	L11_LF2
  959  00001a60  54000000	nop; delay slot nop
  960  00001a64          	L13_LF2:
  961  00001a64  0bffffc0	j	L10_LF2
  962  00001a68  54000000	nop; delay slot nop
  963  00001a6c          	L11_LF2:
  964  00001a6c  8fc1fff4	lw	r1,-12(r30)
  965  00001a70  08000004	j	L9_LF2
  966  00001a74  54000000	nop; delay slot nop
  967  00001a78          	L9_LF2:
  968  00001a78  8fa20000	lw	r2,0(r29)
  969  00001a7c  8fa30004	lw	r3,4(r29)
  970  00001a80  8fdffff8	lw	r31,-8(r30)
  971  00001a84  001ee820	add	r29,r0,r30
  972  00001a88  8fdefffc	lw	r30,-4(r30)
  973  00001a8c  4be00000	jr	r31
  974  00001a90  54000000	nop
  975  00001a94          	.endproc _dstrcpy
  976  00001a94          	.align 2
  977  00001a94          	.proc _dstrncpy
  978  00001a94          	.global _dstrncpy
  979  00001a94          	_dstrncpy:
  980                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  981  00001a94  afbefffc	sw	-4(r29),r30; push fp
  982  00001a98  001df020	add	r30,r0,r29; fp = sp
  983  00001a9c  afbffff8	sw	-8(r29),r31; push ret addr
  984  00001aa0  2fbd0018	subui	r29,r29,#24; alloc local storage
  985  00001aa4  afa20000	sw	0(r29),r2
  986  00001aa8  afa30004	sw	4(r29),r3
  987  00001aac  8fc10000	lw	r1,(r30)
  988  00001ab0  afc1fff4	sw	-12(r30),r1
  989  00001ab4          	L15_LF2:
  990  00001ab4  8fc10008	lw	r1,8(r30)
  991  00001ab8  2022ffff	addi	r2,r1,#-1
  992  00001abc  afc20008	sw	8(r30),r2
  993  00001ac0  70210000	slei	r1,r1,#0
  994  00001ac4  1020000c	beqz	r1,L18_LF2
  995  00001ac8  54000000	nop; delay slot nop
  996  00001acc  08000048	j	L16_LF2
  997  00001ad0  54000000	nop; delay slot nop
  998  00001ad4          	L18_LF2:
  999  00001ad4  8fc10000	lw	r1,(r30)
 1000  00001ad8  20220001	addi	r2,r1,#1
 1001  00001adc  afc20000	sw	(r30),r2
 1002  00001ae0  8fc20004	lw	r2,4(r30)
 1003  00001ae4  20430001	addi	r3,r2,#1
 1004  00001ae8  afc30004	sw	4(r30),r3
 1005  00001aec  80420000	lb	r2,(r2)
 1006  00001af0  a0220000	sb	(r1),r2
 1007  00001af4  a3c2fff3	sb	-13(r30),r2
 1008  00001af8          	L17_LF2:
 1009  00001af8  93c1fff3	lbu	r1,-13(r30)
 1010  00001afc  64220000	snei	r2,r1,#0
 1011  00001b00  1440000c	bnez	r2,L19_LF2
 1012  00001b04  54000000	nop; delay slot nop
 1013  00001b08  0800000c	j	L16_LF2
 1014  00001b0c  54000000	nop; delay slot nop
 1015  00001b10          	L19_LF2:
 1016  00001b10  0bffffa0	j	L15_LF2
 1017  00001b14  54000000	nop; delay slot nop
 1018  00001b18          	L16_LF2:
 1019  00001b18  8fc1fff4	lw	r1,-12(r30)
 1020  00001b1c  08000004	j	L14_LF2
 1021  00001b20  54000000	nop; delay slot nop
 1022  00001b24          	L14_LF2:
 1023  00001b24  8fa20000	lw	r2,0(r29)
 1024  00001b28  8fa30004	lw	r3,4(r29)
 1025  00001b2c  8fdffff8	lw	r31,-8(r30)
 1026  00001b30  001ee820	add	r29,r0,r30
 1027  00001b34  8fdefffc	lw	r30,-4(r30)
 1028  00001b38  4be00000	jr	r31
 1029  00001b3c  54000000	nop
 1030  00001b40          	.endproc _dstrncpy
 1031  00001b40          	.align 2
 1032  00001b40          	.proc _dstrcat
 1033  00001b40          	.global _dstrcat
 1034  00001b40          	_dstrcat:
 1035                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1036  00001b40  afbefffc	sw	-4(r29),r30; push fp
 1037  00001b44  001df020	add	r30,r0,r29; fp = sp
 1038  00001b48  afbffff8	sw	-8(r29),r31; push ret addr
 1039  00001b4c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1040  00001b50  afa20000	sw	0(r29),r2
 1041  00001b54  8fc10000	lw	r1,(r30)
 1042  00001b58  afc1fff4	sw	-12(r30),r1
 1043  00001b5c          	L21_LF2:
 1044  00001b5c  8fc10000	lw	r1,(r30)
 1045  00001b60  90220000	lbu	r2,(r1)
 1046  00001b64  64410000	snei	r1,r2,#0
 1047  00001b68  1420000c	bnez	r1,L23_LF2
 1048  00001b6c  54000000	nop; delay slot nop
 1049  00001b70  0800001c	j	L22_LF2
 1050  00001b74  54000000	nop; delay slot nop
 1051  00001b78          	L23_LF2:
 1052  00001b78  8fc20000	lw	r2,(r30)
 1053  00001b7c  20410001	addi	r1,r2,#1
 1054  00001b80  00011020	add	r2,r0,r1
 1055  00001b84  afc20000	sw	(r30),r2
 1056  00001b88  0bffffd0	j	L21_LF2
 1057  00001b8c  54000000	nop; delay slot nop
 1058  00001b90          	L22_LF2:
 1059  00001b90  23bdfff8	addi	r29,r29,#-8
 1060  00001b94  001d0820	add	r1,r0,r29
 1061  00001b98  8fc20000	lw	r2,(r30)
 1062  00001b9c  ac220000	sw	(r1),r2
 1063  00001ba0  8fc20004	lw	r2,4(r30)
 1064  00001ba4  ac220004	sw	4(r1),r2
 1065  00001ba8  0ffffe5c	jal	_dstrcpy
 1066  00001bac  54000000	nop; delay slot nop
 1067  00001bb0  23bd0008	addi	r29,r29,#8
 1068  00001bb4  8fc1fff4	lw	r1,-12(r30)
 1069  00001bb8  08000004	j	L20_LF2
 1070  00001bbc  54000000	nop; delay slot nop
 1071  00001bc0          	L20_LF2:
 1072  00001bc0  8fa20000	lw	r2,0(r29)
 1073  00001bc4  8fdffff8	lw	r31,-8(r30)
 1074  00001bc8  001ee820	add	r29,r0,r30
 1075  00001bcc  8fdefffc	lw	r30,-4(r30)
 1076  00001bd0  4be00000	jr	r31
 1077  00001bd4  54000000	nop
 1078  00001bd8          	.endproc _dstrcat
 1079  00001bd8          	.align 2
 1080  00001bd8          	.proc _dstrncmp
 1081  00001bd8          	.global _dstrncmp
 1082  00001bd8          	_dstrncmp:
 1083                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1084  00001bd8  afbefffc	sw	-4(r29),r30; push fp
 1085  00001bdc  001df020	add	r30,r0,r29; fp = sp
 1086  00001be0  afbffff8	sw	-8(r29),r31; push ret addr
 1087  00001be4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1088  00001be8  afa20000	sw	0(r29),r2
 1089  00001bec  afa30004	sw	4(r29),r3
 1090  00001bf0  54000000	nop
 1091  00001bf4  20010000	addi	r1,r0,#0
 1092  00001bf8  afc1fff4	sw	-12(r30),r1
 1093  00001bfc          	L25_LF2:
 1094  00001bfc  8fc1fff4	lw	r1,-12(r30)
 1095  00001c00  8fc20008	lw	r2,8(r30)
 1096  00001c04  0022082a	slt	r1,r1,r2
 1097  00001c08  1420000c	bnez	r1,L28_LF2
 1098  00001c0c  54000000	nop; delay slot nop
 1099  00001c10  08000088	j	L26_LF2
 1100  00001c14  54000000	nop; delay slot nop
 1101  00001c18          	L28_LF2:
 1102  00001c18  8fc10004	lw	r1,4(r30)
 1103  00001c1c  90220000	lbu	r2,(r1)
 1104  00001c20  64410000	snei	r1,r2,#0
 1105  00001c24  14200018	bnez	r1,L29_LF2
 1106  00001c28  54000000	nop; delay slot nop
 1107  00001c2c  20010000	addi	r1,r0,#0
 1108  00001c30  080000d8	j	L24_LF2
 1109  00001c34  54000000	nop; delay slot nop
 1110  00001c38  08000028	j	L30_LF2
 1111  00001c3c  54000000	nop; delay slot nop
 1112  00001c40          	L29_LF2:
 1113  00001c40  8fc10000	lw	r1,(r30)
 1114  00001c44  8fc20004	lw	r2,4(r30)
 1115  00001c48  90210000	lbu	r1,(r1)
 1116  00001c4c  90420000	lbu	r2,(r2)
 1117  00001c50  00220829	sne	r1,r1,r2
 1118  00001c54  1020000c	beqz	r1,L30_LF2
 1119  00001c58  54000000	nop; delay slot nop
 1120  00001c5c  0800003c	j	L26_LF2
 1121  00001c60  54000000	nop; delay slot nop
 1122  00001c64          	L31_LF2:
 1123  00001c64          	L30_LF2:
 1124  00001c64  8fc20000	lw	r2,(r30)
 1125  00001c68  20410001	addi	r1,r2,#1
 1126  00001c6c  00011020	add	r2,r0,r1
 1127  00001c70  afc20000	sw	(r30),r2
 1128  00001c74  8fc20004	lw	r2,4(r30)
 1129  00001c78  20410001	addi	r1,r2,#1
 1130  00001c7c  00011020	add	r2,r0,r1
 1131  00001c80  afc20004	sw	4(r30),r2
 1132  00001c84          	L27_LF2:
 1133  00001c84  8fc2fff4	lw	r2,-12(r30)
 1134  00001c88  20410001	addi	r1,r2,#1
 1135  00001c8c  00011020	add	r2,r0,r1
 1136  00001c90  afc2fff4	sw	-12(r30),r2
 1137  00001c94  0bffff64	j	L25_LF2
 1138  00001c98  54000000	nop; delay slot nop
 1139  00001c9c          	L26_LF2:
 1140  00001c9c  8fc1fff4	lw	r1,-12(r30)
 1141  00001ca0  8fc20008	lw	r2,8(r30)
 1142  00001ca4  00220828	seq	r1,r1,r2
 1143  00001ca8  10200018	beqz	r1,L32_LF2
 1144  00001cac  54000000	nop; delay slot nop
 1145  00001cb0  20010000	addi	r1,r0,#0
 1146  00001cb4  08000054	j	L24_LF2
 1147  00001cb8  54000000	nop; delay slot nop
 1148  00001cbc  0800004c	j	L33_LF2
 1149  00001cc0  54000000	nop; delay slot nop
 1150  00001cc4          	L32_LF2:
 1151  00001cc4  8fc20000	lw	r2,(r30)
 1152  00001cc8  90410000	lbu	r1,(r2)
 1153  00001ccc  8fc20004	lw	r2,4(r30)
 1154  00001cd0  90430000	lbu	r3,(r2)
 1155  00001cd4  00230822	sub	r1,r1,r3
 1156  00001cd8  74220000	sgei	r2,r1,#0
 1157  00001cdc  10400020	beqz	r2,L34_LF2
 1158  00001ce0  54000000	nop; delay slot nop
 1159  00001ce4  8fc10000	lw	r1,(r30)
 1160  00001ce8  8fc20004	lw	r2,4(r30)
 1161  00001cec  90210000	lbu	r1,(r1)
 1162  00001cf0  90420000	lbu	r2,(r2)
 1163  00001cf4  00220829	sne	r1,r1,r2
 1164  00001cf8  08000008	j	L35_LF2
 1165  00001cfc  54000000	nop; delay slot nop
 1166  00001d00          	L34_LF2:
 1167  00001d00  2001ffff	addi	r1,r0,#-1
 1168  00001d04          	L35_LF2:
 1169  00001d04  08000004	j	L24_LF2
 1170  00001d08  54000000	nop; delay slot nop
 1171  00001d0c          	L33_LF2:
 1172  00001d0c          	L24_LF2:
 1173  00001d0c  8fa20000	lw	r2,0(r29)
 1174  00001d10  8fa30004	lw	r3,4(r29)
 1175  00001d14  8fdffff8	lw	r31,-8(r30)
 1176  00001d18  001ee820	add	r29,r0,r30
 1177  00001d1c  8fdefffc	lw	r30,-4(r30)
 1178  00001d20  4be00000	jr	r31
 1179  00001d24  54000000	nop
 1180  00001d28          	.endproc _dstrncmp
 1181  00001d28          	.align 2
 1182  00001d28          	.proc _dstrlen
 1183  00001d28          	.global _dstrlen
 1184  00001d28          	_dstrlen:
 1185                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1186  00001d28  afbefffc	sw	-4(r29),r30; push fp
 1187  00001d2c  001df020	add	r30,r0,r29; fp = sp
 1188  00001d30  afbffff8	sw	-8(r29),r31; push ret addr
 1189  00001d34  2fbd0018	subui	r29,r29,#24; alloc local storage
 1190  00001d38  afa20000	sw	0(r29),r2
 1191  00001d3c  20010000	addi	r1,r0,#0
 1192  00001d40  afc1fff4	sw	-12(r30),r1
 1193  00001d44          	L37_LF2:
 1194  00001d44  8fc10000	lw	r1,(r30)
 1195  00001d48  20220001	addi	r2,r1,#1
 1196  00001d4c  afc20000	sw	(r30),r2
 1197  00001d50  90210000	lbu	r1,(r1)
 1198  00001d54  64220000	snei	r2,r1,#0
 1199  00001d58  1440000c	bnez	r2,L39_LF2
 1200  00001d5c  54000000	nop; delay slot nop
 1201  00001d60  0800001c	j	L38_LF2
 1202  00001d64  54000000	nop; delay slot nop
 1203  00001d68          	L39_LF2:
 1204  00001d68  8fc2fff4	lw	r2,-12(r30)
 1205  00001d6c  20410001	addi	r1,r2,#1
 1206  00001d70  00011020	add	r2,r0,r1
 1207  00001d74  afc2fff4	sw	-12(r30),r2
 1208  00001d78  0bffffc8	j	L37_LF2
 1209  00001d7c  54000000	nop; delay slot nop
 1210  00001d80          	L38_LF2:
 1211  00001d80  8fc1fff4	lw	r1,-12(r30)
 1212  00001d84  08000004	j	L36_LF2
 1213  00001d88  54000000	nop; delay slot nop
 1214  00001d8c          	L36_LF2:
 1215  00001d8c  8fa20000	lw	r2,0(r29)
 1216  00001d90  8fdffff8	lw	r31,-8(r30)
 1217  00001d94  001ee820	add	r29,r0,r30
 1218  00001d98  8fdefffc	lw	r30,-4(r30)
 1219  00001d9c  4be00000	jr	r31
 1220  00001da0  54000000	nop
 1221  00001da4          	.endproc _dstrlen
 1222  00001da4          	.align 2
 1223  00001da4          	.proc _dstrstr
 1224  00001da4          	.global _dstrstr
 1225  00001da4          	_dstrstr:
 1226                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1227  00001da4  afbefffc	sw	-4(r29),r30; push fp
 1228  00001da8  001df020	add	r30,r0,r29; fp = sp
 1229  00001dac  afbffff8	sw	-8(r29),r31; push ret addr
 1230  00001db0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1231  00001db4  afa20000	sw	0(r29),r2
 1232  00001db8  23bdfff8	addi	r29,r29,#-8
 1233  00001dbc  001d0820	add	r1,r0,r29
 1234  00001dc0  8fc20004	lw	r2,4(r30)
 1235  00001dc4  ac220000	sw	(r1),r2
 1236  00001dc8  0fffff5c	jal	_dstrlen
 1237  00001dcc  54000000	nop; delay slot nop
 1238  00001dd0  23bd0008	addi	r29,r29,#8
 1239  00001dd4  afc1fff4	sw	-12(r30),r1
 1240  00001dd8          	L41_LF2:
 1241  00001dd8  8fc10000	lw	r1,(r30)
 1242  00001ddc  90220000	lbu	r2,(r1)
 1243  00001de0  64410000	snei	r1,r2,#0
 1244  00001de4  1420000c	bnez	r1,L43_LF2
 1245  00001de8  54000000	nop; delay slot nop
 1246  00001dec  08000060	j	L42_LF2
 1247  00001df0  54000000	nop; delay slot nop
 1248  00001df4          	L43_LF2:
 1249  00001df4  23bdfff0	addi	r29,r29,#-16
 1250  00001df8  001d0820	add	r1,r0,r29
 1251  00001dfc  8fc20000	lw	r2,(r30)
 1252  00001e00  ac220000	sw	(r1),r2
 1253  00001e04  8fc20004	lw	r2,4(r30)
 1254  00001e08  ac220004	sw	4(r1),r2
 1255  00001e0c  8fc2fff4	lw	r2,-12(r30)
 1256  00001e10  ac220008	sw	8(r1),r2
 1257  00001e14  0ffffdc0	jal	_dstrncmp
 1258  00001e18  54000000	nop; delay slot nop
 1259  00001e1c  23bd0010	addi	r29,r29,#16
 1260  00001e20  64220000	snei	r2,r1,#0
 1261  00001e24  14400010	bnez	r2,L44_LF2
 1262  00001e28  54000000	nop; delay slot nop
 1263  00001e2c  8fc10000	lw	r1,(r30)
 1264  00001e30  08000028	j	L40_LF2
 1265  00001e34  54000000	nop; delay slot nop
 1266  00001e38          	L44_LF2:
 1267  00001e38  8fc20000	lw	r2,(r30)
 1268  00001e3c  20410001	addi	r1,r2,#1
 1269  00001e40  00011020	add	r2,r0,r1
 1270  00001e44  afc20000	sw	(r30),r2
 1271  00001e48  0bffff8c	j	L41_LF2
 1272  00001e4c  54000000	nop; delay slot nop
 1273  00001e50          	L42_LF2:
 1274  00001e50  20010000	addi	r1,r0,#0
 1275  00001e54  08000004	j	L40_LF2
 1276  00001e58  54000000	nop; delay slot nop
 1277  00001e5c          	L40_LF2:
 1278  00001e5c  8fa20000	lw	r2,0(r29)
 1279  00001e60  8fdffff8	lw	r31,-8(r30)
 1280  00001e64  001ee820	add	r29,r0,r30
 1281  00001e68  8fdefffc	lw	r30,-4(r30)
 1282  00001e6c  4be00000	jr	r31
 1283  00001e70  54000000	nop
 1284  00001e74          	.endproc _dstrstr
 1285  00001e74          	.align 2
 1286  00001e74          	.proc _dmindex
 1287  00001e74          	.global _dmindex
 1288  00001e74          	_dmindex:
 1289                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1290  00001e74  afbefffc	sw	-4(r29),r30; push fp
 1291  00001e78  001df020	add	r30,r0,r29; fp = sp
 1292  00001e7c  afbffff8	sw	-8(r29),r31; push ret addr
 1293  00001e80  2fbd0018	subui	r29,r29,#24; alloc local storage
 1294  00001e84  afa20000	sw	0(r29),r2
 1295  00001e88  54000000	nop
 1296  00001e8c          	L46_LF2:
 1297  00001e8c  8fc10000	lw	r1,(r30)
 1298  00001e90  90220000	lbu	r2,(r1)
 1299  00001e94  64410000	snei	r1,r2,#0
 1300  00001e98  1420000c	bnez	r1,L48_LF2
 1301  00001e9c  54000000	nop; delay slot nop
 1302  00001ea0  08000070	j	L47_LF2
 1303  00001ea4  54000000	nop; delay slot nop
 1304  00001ea8          	L48_LF2:
 1305  00001ea8  8fc10004	lw	r1,4(r30)
 1306  00001eac  afc1fff4	sw	-12(r30),r1
 1307  00001eb0          	L49_LF2:
 1308  00001eb0  8fc1fff4	lw	r1,-12(r30)
 1309  00001eb4  90220000	lbu	r2,(r1)
 1310  00001eb8  64410000	snei	r1,r2,#0
 1311  00001ebc  1420000c	bnez	r1,L52_LF2
 1312  00001ec0  54000000	nop; delay slot nop
 1313  00001ec4  08000044	j	L50_LF2
 1314  00001ec8  54000000	nop; delay slot nop
 1315  00001ecc          	L52_LF2:
 1316  00001ecc  8fc10000	lw	r1,(r30)
 1317  00001ed0  8fc2fff4	lw	r2,-12(r30)
 1318  00001ed4  90210000	lbu	r1,(r1)
 1319  00001ed8  90420000	lbu	r2,(r2)
 1320  00001edc  00220828	seq	r1,r1,r2
 1321  00001ee0  10200010	beqz	r1,L51_LF2
 1322  00001ee4  54000000	nop; delay slot nop
 1323  00001ee8  8fc10000	lw	r1,(r30)
 1324  00001eec  08000030	j	L45_LF2
 1325  00001ef0  54000000	nop; delay slot nop
 1326  00001ef4          	L53_LF2:
 1327  00001ef4          	L51_LF2:
 1328  00001ef4  8fc2fff4	lw	r2,-12(r30)
 1329  00001ef8  20410001	addi	r1,r2,#1
 1330  00001efc  00011020	add	r2,r0,r1
 1331  00001f00  afc2fff4	sw	-12(r30),r2
 1332  00001f04  0bffffa8	j	L49_LF2
 1333  00001f08  54000000	nop; delay slot nop
 1334  00001f0c          	L50_LF2:
 1335  00001f0c  0bffff7c	j	L46_LF2
 1336  00001f10  54000000	nop; delay slot nop
 1337  00001f14          	L47_LF2:
 1338  00001f14  20010000	addi	r1,r0,#0
 1339  00001f18  08000004	j	L45_LF2
 1340  00001f1c  54000000	nop; delay slot nop
 1341  00001f20          	L45_LF2:
 1342  00001f20  8fa20000	lw	r2,0(r29)
 1343  00001f24  8fdffff8	lw	r31,-8(r30)
 1344  00001f28  001ee820	add	r29,r0,r30
 1345  00001f2c  8fdefffc	lw	r30,-4(r30)
 1346  00001f30  4be00000	jr	r31
 1347  00001f34  54000000	nop
 1348  00001f38          	.endproc _dmindex
 1349  00001f38          	.align 2
 1350  00001f38          	.proc _dindex
 1351  00001f38          	.global _dindex
 1352  00001f38          	_dindex:
 1353                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1354  00001f38  afbefffc	sw	-4(r29),r30; push fp
 1355  00001f3c  001df020	add	r30,r0,r29; fp = sp
 1356  00001f40  afbffff8	sw	-8(r29),r31; push ret addr
 1357  00001f44  2fbd0010	subui	r29,r29,#16; alloc local storage
 1358  00001f48  afa20000	sw	0(r29),r2
 1359  00001f4c  54000000	nop
 1360  00001f50          	L55_LF2:
 1361  00001f50  8fc10000	lw	r1,(r30)
 1362  00001f54  90220000	lbu	r2,(r1)
 1363  00001f58  64410000	snei	r1,r2,#0
 1364  00001f5c  1420000c	bnez	r1,L57_LF2
 1365  00001f60  54000000	nop; delay slot nop
 1366  00001f64  08000040	j	L56_LF2
 1367  00001f68  54000000	nop; delay slot nop
 1368  00001f6c          	L57_LF2:
 1369  00001f6c  8fc10000	lw	r1,(r30)
 1370  00001f70  90220000	lbu	r2,(r1)
 1371  00001f74  8fc10004	lw	r1,4(r30)
 1372  00001f78  00411028	seq	r2,r2,r1
 1373  00001f7c  10400010	beqz	r2,L58_LF2
 1374  00001f80  54000000	nop; delay slot nop
 1375  00001f84  8fc10000	lw	r1,(r30)
 1376  00001f88  08000028	j	L54_LF2
 1377  00001f8c  54000000	nop; delay slot nop
 1378  00001f90          	L58_LF2:
 1379  00001f90  8fc20000	lw	r2,(r30)
 1380  00001f94  20410001	addi	r1,r2,#1
 1381  00001f98  00011020	add	r2,r0,r1
 1382  00001f9c  afc20000	sw	(r30),r2
 1383  00001fa0  0bffffac	j	L55_LF2
 1384  00001fa4  54000000	nop; delay slot nop
 1385  00001fa8          	L56_LF2:
 1386  00001fa8  20010000	addi	r1,r0,#0
 1387  00001fac  08000004	j	L54_LF2
 1388  00001fb0  54000000	nop; delay slot nop
 1389  00001fb4          	L54_LF2:
 1390  00001fb4  8fa20000	lw	r2,0(r29)
 1391  00001fb8  8fdffff8	lw	r31,-8(r30)
 1392  00001fbc  001ee820	add	r29,r0,r30
 1393  00001fc0  8fdefffc	lw	r30,-4(r30)
 1394  00001fc4  4be00000	jr	r31
 1395  00001fc8  54000000	nop
 1396  00001fcc          	.endproc _dindex
 1397  00001fcc          	.align 2
 1398  00001fcc          	.proc _ditoa
 1399  00001fcc          	.global _ditoa
 1400  00001fcc          	_ditoa:
 1401                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1402  00001fcc  afbefffc	sw	-4(r29),r30; push fp
 1403  00001fd0  001df020	add	r30,r0,r29; fp = sp
 1404  00001fd4  afbffff8	sw	-8(r29),r31; push ret addr
 1405  00001fd8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1406  00001fdc  afa20000	sw	0(r29),r2
 1407  00001fe0  afa30004	sw	4(r29),r3
 1408  00001fe4  8fc10000	lw	r1,(r30)
 1409  00001fe8  68220000	slti	r2,r1,#0
 1410  00001fec  1040002c	beqz	r2,L60_LF2
 1411  00001ff0  54000000	nop; delay slot nop
 1412  00001ff4  8fc10004	lw	r1,4(r30)
 1413  00001ff8  20220001	addi	r2,r1,#1
 1414  00001ffc  afc20004	sw	4(r30),r2
 1415  00002000  2002002d	addi	r2,r0,(#0x2d)&0xff
 1416  00002004  a0220000	sb	(r1),r2
 1417  00002008  8fc10000	lw	r1,(r30)
 1418  0000200c  00011022	sub	r2,r0,r1
 1419  00002010  afc20000	sw	(r30),r2
 1420  00002014  08000118	j	L61_LF2
 1421  00002018  54000000	nop; delay slot nop
 1422  0000201c          	L60_LF2:
 1423  0000201c  8fc10000	lw	r1,(r30)
 1424  00002020  64220000	snei	r2,r1,#0
 1425  00002024  14400020	bnez	r2,L62_LF2
 1426  00002028  54000000	nop; delay slot nop
 1427  0000202c  8fc10004	lw	r1,4(r30)
 1428  00002030  20220001	addi	r2,r1,#1
 1429  00002034  afc20004	sw	4(r30),r2
 1430  00002038  20020030	addi	r2,r0,(#0x30)&0xff
 1431  0000203c  a0220000	sb	(r1),r2
 1432  00002040  080000ec	j	L61_LF2
 1433  00002044  54000000	nop; delay slot nop
 1434  00002048          	L62_LF2:
 1435  00002048  20010001	addi	r1,r0,#1
 1436  0000204c  afc1fff4	sw	-12(r30),r1
 1437  00002050          	L64_LF2:
 1438  00002050  8fc1fff4	lw	r1,-12(r30)
 1439  00002054  8fc20000	lw	r2,(r30)
 1440  00002058  0022082c	sle	r1,r1,r2
 1441  0000205c  1420000c	bnez	r1,L66_LF2
 1442  00002060  54000000	nop; delay slot nop
 1443  00002064  08000024	j	L65_LF2
 1444  00002068  54000000	nop; delay slot nop
 1445  0000206c          	L67_LF2:
 1446  0000206c          	L66_LF2:
 1447  0000206c  8fc1fff4	lw	r1,-12(r30)
 1448  00002070  00011820	add	r3,r0,r1
 1449  00002074  50620002	slli	r2,r3,#0x2
 1450  00002078  00411020	add	r2,r2,r1
 1451  0000207c  50410001	slli	r1,r2,#0x1
 1452  00002080  afc1fff4	sw	-12(r30),r1
 1453  00002084  0bffffc8	j	L64_LF2
 1454  00002088  54000000	nop; delay slot nop
 1455  0000208c          	L65_LF2:
 1456  0000208c  54000000	nop
 1457  00002090          	L68_LF2:
 1458  00002090  8fc1fff4	lw	r1,-12(r30)
 1459  00002094  2002000a	addi	r2,r0,#10
 1460  00002098  00200035	movi2fp	f0,r1
 1461  0000209c  00400835	movi2fp	f1,r2
 1462  000020a0  0401000f	div	f0,f0,f1
 1463  000020a4  00000834	movfp2i	r1,f0
 1464  000020a8  afc1fff4	sw	-12(r30),r1
 1465  000020ac  8fc10004	lw	r1,4(r30)
 1466  000020b0  20220001	addi	r2,r1,#1
 1467  000020b4  afc20004	sw	4(r30),r2
 1468  000020b8  8fc20000	lw	r2,(r30)
 1469  000020bc  8fc3fff4	lw	r3,-12(r30)
 1470  000020c0  00400035	movi2fp	f0,r2
 1471  000020c4  00600835	movi2fp	f1,r3
 1472  000020c8  0401000f	div	f0,f0,f1
 1473  000020cc  00001034	movfp2i	r2,f0
 1474  000020d0  00021820	add	r3,r0,r2
 1475  000020d4  20620030	addi	r2,r3,#48
 1476  000020d8  a0220000	sb	(r1),r2
 1477  000020dc  8fc10000	lw	r1,(r30)
 1478  000020e0  8fc3fff4	lw	r3,-12(r30)
 1479  000020e4  00200035	movi2fp	f0,r1
 1480  000020e8  00600835	movi2fp	f1,r3
 1481  000020ec  0401000f	div	f0,f0,f1
 1482  000020f0  00001034	movfp2i	r2,f0
 1483  000020f4  8fc3fff4	lw	r3,-12(r30)
 1484  000020f8  00400035	movi2fp	f0,r2
 1485  000020fc  00600835	movi2fp	f1,r3
 1486  00002100  0401000e	mult	f0,f0,f1
 1487  00002104  00001034	movfp2i	r2,f0
 1488  00002108  00220822	sub	r1,r1,r2
 1489  0000210c  afc10000	sw	(r30),r1
 1490  00002110          	L70_LF2:
 1491  00002110  8fc1fff4	lw	r1,-12(r30)
 1492  00002114  6c220001	sgti	r2,r1,#1
 1493  00002118  1440000c	bnez	r2,L71_LF2
 1494  0000211c  54000000	nop; delay slot nop
 1495  00002120  0800000c	j	L61_LF2
 1496  00002124  54000000	nop; delay slot nop
 1497  00002128          	L71_LF2:
 1498  00002128  0bffff64	j	L68_LF2
 1499  0000212c  54000000	nop; delay slot nop
 1500  00002130          	L69_LF2:
 1501  00002130          	L63_LF2:
 1502  00002130          	L61_LF2:
 1503  00002130  8fc10004	lw	r1,4(r30)
 1504  00002134  20020000	addi	r2,r0,(#0x0)&0xff
 1505  00002138  a0220000	sb	(r1),r2
 1506  0000213c          	L59_LF2:
 1507  0000213c  8fa20000	lw	r2,0(r29)
 1508  00002140  8fa30004	lw	r3,4(r29)
 1509  00002144  8fdffff8	lw	r31,-8(r30)
 1510  00002148  001ee820	add	r29,r0,r30
 1511  0000214c  8fdefffc	lw	r30,-4(r30)
 1512  00002150  4be00000	jr	r31
 1513  00002154  54000000	nop
 1514  00002158          	.endproc _ditoa
 1515  00002158          	.align 2
 1516  00002158          	.proc _dstrtol
 1517  00002158          	.global _dstrtol
 1518  00002158          	_dstrtol:
 1519                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1520  00002158  afbefffc	sw	-4(r29),r30; push fp
 1521  0000215c  001df020	add	r30,r0,r29; fp = sp
 1522  00002160  afbffff8	sw	-8(r29),r31; push ret addr
 1523  00002164  2fbd0020	subui	r29,r29,#32; alloc local storage
 1524  00002168  afa20000	sw	0(r29),r2
 1525  0000216c  20010000	addi	r1,r0,#0
 1526  00002170  afc1fff4	sw	-12(r30),r1
 1527  00002174          	L73_LF2:
 1528  00002174  8fc10000	lw	r1,(r30)
 1529  00002178  90220000	lbu	r2,(r1)
 1530  0000217c  60410020	seqi	r1,r2,#32
 1531  00002180  14200034	bnez	r1,L75_LF2
 1532  00002184  54000000	nop; delay slot nop
 1533  00002188  8fc10000	lw	r1,(r30)
 1534  0000218c  90220000	lbu	r2,(r1)
 1535  00002190  60410009	seqi	r1,r2,#9
 1536  00002194  14200020	bnez	r1,L75_LF2
 1537  00002198  54000000	nop; delay slot nop
 1538  0000219c  8fc10000	lw	r1,(r30)
 1539  000021a0  90220000	lbu	r2,(r1)
 1540  000021a4  6041000a	seqi	r1,r2,#10
 1541  000021a8  1420000c	bnez	r1,L75_LF2
 1542  000021ac  54000000	nop; delay slot nop
 1543  000021b0  0800001c	j	L74_LF2
 1544  000021b4  54000000	nop; delay slot nop
 1545  000021b8          	L75_LF2:
 1546  000021b8  8fc20000	lw	r2,(r30)
 1547  000021bc  20410001	addi	r1,r2,#1
 1548  000021c0  00011020	add	r2,r0,r1
 1549  000021c4  afc20000	sw	(r30),r2
 1550  000021c8  0bffffa8	j	L73_LF2
 1551  000021cc  54000000	nop; delay slot nop
 1552  000021d0          	L74_LF2:
 1553  000021d0  8fc10004	lw	r1,4(r30)
 1554  000021d4  64220000	snei	r2,r1,#0
 1555  000021d8  10400010	beqz	r2,L76_LF2
 1556  000021dc  54000000	nop; delay slot nop
 1557  000021e0  8fc10004	lw	r1,4(r30)
 1558  000021e4  8fc20000	lw	r2,(r30)
 1559  000021e8  ac220000	sw	(r1),r2
 1560  000021ec          	L76_LF2:
 1561  000021ec  8fc10000	lw	r1,(r30)
 1562  000021f0  90220000	lbu	r2,(r1)
 1563  000021f4  64410000	snei	r1,r2,#0
 1564  000021f8  14200010	bnez	r1,L77_LF2
 1565  000021fc  54000000	nop; delay slot nop
 1566  00002200  8fc1fff4	lw	r1,-12(r30)
 1567  00002204  08000294	j	L72_LF2
 1568  00002208  54000000	nop; delay slot nop
 1569  0000220c          	L77_LF2:
 1570  0000220c  8fc10000	lw	r1,(r30)
 1571  00002210  90220000	lbu	r2,(r1)
 1572  00002214  6041002d	seqi	r1,r2,#45
 1573  00002218  10200024	beqz	r1,L78_LF2
 1574  0000221c  54000000	nop; delay slot nop
 1575  00002220  2001ffff	addi	r1,r0,#-1
 1576  00002224  afc1ffec	sw	-20(r30),r1
 1577  00002228  8fc20000	lw	r2,(r30)
 1578  0000222c  20410001	addi	r1,r2,#1
 1579  00002230  00011020	add	r2,r0,r1
 1580  00002234  afc20000	sw	(r30),r2
 1581  00002238  0800000c	j	L79_LF2
 1582  0000223c  54000000	nop; delay slot nop
 1583  00002240          	L78_LF2:
 1584  00002240  20010001	addi	r1,r0,#1
 1585  00002244  afc1ffec	sw	-20(r30),r1
 1586  00002248          	L79_LF2:
 1587  00002248  8fc10008	lw	r1,8(r30)
 1588  0000224c  64220000	snei	r2,r1,#0
 1589  00002250  14400090	bnez	r2,L80_LF2
 1590  00002254  54000000	nop; delay slot nop
 1591  00002258  8fc10000	lw	r1,(r30)
 1592  0000225c  90220000	lbu	r2,(r1)
 1593  00002260  60410030	seqi	r1,r2,#48
 1594  00002264  10200074	beqz	r1,L81_LF2
 1595  00002268  54000000	nop; delay slot nop
 1596  0000226c  8fc20000	lw	r2,(r30)
 1597  00002270  20410001	addi	r1,r2,#1
 1598  00002274  00011020	add	r2,r0,r1
 1599  00002278  afc20000	sw	(r30),r2
 1600  0000227c  8fc10000	lw	r1,(r30)
 1601  00002280  90220000	lbu	r2,(r1)
 1602  00002284  60410078	seqi	r1,r2,#120
 1603  00002288  14200020	bnez	r1,L83_LF2
 1604  0000228c  54000000	nop; delay slot nop
 1605  00002290  8fc10000	lw	r1,(r30)
 1606  00002294  90220000	lbu	r2,(r1)
 1607  00002298  60410058	seqi	r1,r2,#88
 1608  0000229c  1420000c	bnez	r1,L83_LF2
 1609  000022a0  54000000	nop; delay slot nop
 1610  000022a4  08000024	j	L82_LF2
 1611  000022a8  54000000	nop; delay slot nop
 1612  000022ac          	L83_LF2:
 1613  000022ac  20010010	addi	r1,r0,#16
 1614  000022b0  afc10008	sw	8(r30),r1
 1615  000022b4  8fc20000	lw	r2,(r30)
 1616  000022b8  20410001	addi	r1,r2,#1
 1617  000022bc  00011020	add	r2,r0,r1
 1618  000022c0  afc20000	sw	(r30),r2
 1619  000022c4  0800000c	j	L84_LF2
 1620  000022c8  54000000	nop; delay slot nop
 1621  000022cc          	L82_LF2:
 1622  000022cc  20010008	addi	r1,r0,#8
 1623  000022d0  afc10008	sw	8(r30),r1
 1624  000022d4          	L84_LF2:
 1625  000022d4  0800000c	j	L80_LF2
 1626  000022d8  54000000	nop; delay slot nop
 1627  000022dc          	L81_LF2:
 1628  000022dc  2001000a	addi	r1,r0,#10
 1629  000022e0  afc10008	sw	8(r30),r1
 1630  000022e4          	L85_LF2:
 1631  000022e4          	L80_LF2:
 1632  000022e4  8fc10008	lw	r1,8(r30)
 1633  000022e8  70220000	slei	r2,r1,#0
 1634  000022ec  1440001c	bnez	r2,L87_LF2
 1635  000022f0  54000000	nop; delay slot nop
 1636  000022f4  8fc10008	lw	r1,8(r30)
 1637  000022f8  6c220010	sgti	r2,r1,#16
 1638  000022fc  1440000c	bnez	r2,L87_LF2
 1639  00002300  54000000	nop; delay slot nop
 1640  00002304  08000010	j	L86_LF2
 1641  00002308  54000000	nop; delay slot nop
 1642  0000230c          	L87_LF2:
 1643  0000230c  8fc1fff4	lw	r1,-12(r30)
 1644  00002310  08000188	j	L72_LF2
 1645  00002314  54000000	nop; delay slot nop
 1646  00002318          	L86_LF2:
 1647  00002318  54000000	nop
 1648  0000231c          	L88_LF2:
 1649  0000231c  8fc10000	lw	r1,(r30)
 1650  00002320  90220000	lbu	r2,(r1)
 1651  00002324  6c41002f	sgtui	r1,r2,#47
 1652  00002328  10200030	beqz	r1,L91_LF2
 1653  0000232c  54000000	nop; delay slot nop
 1654  00002330  8fc10000	lw	r1,(r30)
 1655  00002334  90220000	lbu	r2,(r1)
 1656  00002338  70410039	sleui	r1,r2,#57
 1657  0000233c  1020001c	beqz	r1,L91_LF2
 1658  00002340  54000000	nop; delay slot nop
 1659  00002344  8fc10000	lw	r1,(r30)
 1660  00002348  90220000	lbu	r2,(r1)
 1661  0000234c  2041ffd0	addi	r1,r2,#-48
 1662  00002350  afc1fff0	sw	-16(r30),r1
 1663  00002354  0800008c	j	L92_LF2
 1664  00002358  54000000	nop; delay slot nop
 1665  0000235c          	L91_LF2:
 1666  0000235c  8fc10000	lw	r1,(r30)
 1667  00002360  90220000	lbu	r2,(r1)
 1668  00002364  6c410060	sgtui	r1,r2,#96
 1669  00002368  10200030	beqz	r1,L93_LF2
 1670  0000236c  54000000	nop; delay slot nop
 1671  00002370  8fc10000	lw	r1,(r30)
 1672  00002374  90220000	lbu	r2,(r1)
 1673  00002378  7041007a	sleui	r1,r2,#122
 1674  0000237c  1020001c	beqz	r1,L93_LF2
 1675  00002380  54000000	nop; delay slot nop
 1676  00002384  8fc10000	lw	r1,(r30)
 1677  00002388  90220000	lbu	r2,(r1)
 1678  0000238c  2041ffa9	addi	r1,r2,#-87
 1679  00002390  afc1fff0	sw	-16(r30),r1
 1680  00002394  0800004c	j	L92_LF2
 1681  00002398  54000000	nop; delay slot nop
 1682  0000239c          	L93_LF2:
 1683  0000239c  8fc10000	lw	r1,(r30)
 1684  000023a0  90220000	lbu	r2,(r1)
 1685  000023a4  6c410040	sgtui	r1,r2,#64
 1686  000023a8  10200030	beqz	r1,L95_LF2
 1687  000023ac  54000000	nop; delay slot nop
 1688  000023b0  8fc10000	lw	r1,(r30)
 1689  000023b4  90220000	lbu	r2,(r1)
 1690  000023b8  7041005a	sleui	r1,r2,#90
 1691  000023bc  1020001c	beqz	r1,L95_LF2
 1692  000023c0  54000000	nop; delay slot nop
 1693  000023c4  8fc10000	lw	r1,(r30)
 1694  000023c8  90220000	lbu	r2,(r1)
 1695  000023cc  2041ffc9	addi	r1,r2,#-55
 1696  000023d0  afc1fff0	sw	-16(r30),r1
 1697  000023d4  0800000c	j	L92_LF2
 1698  000023d8  54000000	nop; delay slot nop
 1699  000023dc          	L95_LF2:
 1700  000023dc  200103e8	addi	r1,r0,#1000
 1701  000023e0  afc1fff0	sw	-16(r30),r1
 1702  000023e4          	L96_LF2:
 1703  000023e4          	L94_LF2:
 1704  000023e4          	L92_LF2:
 1705  000023e4  8fc1fff0	lw	r1,-16(r30)
 1706  000023e8  8fc20008	lw	r2,8(r30)
 1707  000023ec  0022082a	slt	r1,r1,r2
 1708  000023f0  10200040	beqz	r1,L90_LF2
 1709  000023f4  54000000	nop; delay slot nop
 1710  000023f8  8fc1fff4	lw	r1,-12(r30)
 1711  000023fc  8fc20008	lw	r2,8(r30)
 1712  00002400  00200035	movi2fp	f0,r1
 1713  00002404  00400835	movi2fp	f1,r2
 1714  00002408  0401000e	mult	f0,f0,f1
 1715  0000240c  00000834	movfp2i	r1,f0
 1716  00002410  afc1fff4	sw	-12(r30),r1
 1717  00002414  8fc1fff4	lw	r1,-12(r30)
 1718  00002418  8fc2fff0	lw	r2,-16(r30)
 1719  0000241c  00220820	add	r1,r1,r2
 1720  00002420  afc1fff4	sw	-12(r30),r1
 1721  00002424  8fc20000	lw	r2,(r30)
 1722  00002428  20410001	addi	r1,r2,#1
 1723  0000242c  00011020	add	r2,r0,r1
 1724  00002430  afc20000	sw	(r30),r2
 1725  00002434          	L97_LF2:
 1726  00002434          	L90_LF2:
 1727  00002434  8fc1fff0	lw	r1,-16(r30)
 1728  00002438  8fc20008	lw	r2,8(r30)
 1729  0000243c  0022082a	slt	r1,r1,r2
 1730  00002440  1420000c	bnez	r1,L98_LF2
 1731  00002444  54000000	nop; delay slot nop
 1732  00002448  0800000c	j	L89_LF2
 1733  0000244c  54000000	nop; delay slot nop
 1734  00002450          	L98_LF2:
 1735  00002450  0bfffec8	j	L88_LF2
 1736  00002454  54000000	nop; delay slot nop
 1737  00002458          	L89_LF2:
 1738  00002458  8fc10004	lw	r1,4(r30)
 1739  0000245c  64220000	snei	r2,r1,#0
 1740  00002460  10400010	beqz	r2,L99_LF2
 1741  00002464  54000000	nop; delay slot nop
 1742  00002468  8fc10004	lw	r1,4(r30)
 1743  0000246c  8fc20000	lw	r2,(r30)
 1744  00002470  ac220000	sw	(r1),r2
 1745  00002474          	L99_LF2:
 1746  00002474  8fc1fff4	lw	r1,-12(r30)
 1747  00002478  8fc2ffec	lw	r2,-20(r30)
 1748  0000247c  00200035	movi2fp	f0,r1
 1749  00002480  00400835	movi2fp	f1,r2
 1750  00002484  0401000e	mult	f0,f0,f1
 1751  00002488  00000834	movfp2i	r1,f0
 1752  0000248c  afc1fff4	sw	-12(r30),r1
 1753  00002490  8fc1fff4	lw	r1,-12(r30)
 1754  00002494  08000004	j	L72_LF2
 1755  00002498  54000000	nop; delay slot nop
 1756  0000249c          	L72_LF2:
 1757  0000249c  8fa20000	lw	r2,0(r29)
 1758  000024a0  8fdffff8	lw	r31,-8(r30)
 1759  000024a4  001ee820	add	r29,r0,r30
 1760  000024a8  8fdefffc	lw	r30,-4(r30)
 1761  000024ac  4be00000	jr	r31
 1762  000024b0  54000000	nop
 1763  000024b4          	.endproc _dstrtol
 1764  000024b4          	.align 2
 1765  000024b4          	.proc _bcopy
 1766  000024b4          	.global _bcopy
 1767  000024b4          	_bcopy:
 1768                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1769  000024b4  afbefffc	sw	-4(r29),r30; push fp
 1770  000024b8  001df020	add	r30,r0,r29; fp = sp
 1771  000024bc  afbffff8	sw	-8(r29),r31; push ret addr
 1772  000024c0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1773  000024c4  afa20000	sw	0(r29),r2
 1774  000024c8  afa30004	sw	4(r29),r3
 1775  000024cc  54000000	nop
 1776  000024d0          	L101_LF2:
 1777  000024d0  8fc10008	lw	r1,8(r30)
 1778  000024d4  2022ffff	addi	r2,r1,#-1
 1779  000024d8  afc20008	sw	8(r30),r2
 1780  000024dc  6c210000	sgti	r1,r1,#0
 1781  000024e0  1420000c	bnez	r1,L103_LF2
 1782  000024e4  54000000	nop; delay slot nop
 1783  000024e8  0800002c	j	L102_LF2
 1784  000024ec  54000000	nop; delay slot nop
 1785  000024f0          	L103_LF2:
 1786  000024f0  8fc10004	lw	r1,4(r30)
 1787  000024f4  20220001	addi	r2,r1,#1
 1788  000024f8  afc20004	sw	4(r30),r2
 1789  000024fc  8fc20000	lw	r2,(r30)
 1790  00002500  20430001	addi	r3,r2,#1
 1791  00002504  afc30000	sw	(r30),r3
 1792  00002508  80420000	lb	r2,(r2)
 1793  0000250c  a0220000	sb	(r1),r2
 1794  00002510  0bffffbc	j	L101_LF2
 1795  00002514  54000000	nop; delay slot nop
 1796  00002518          	L102_LF2:
 1797  00002518          	L100_LF2:
 1798  00002518  8fa20000	lw	r2,0(r29)
 1799  0000251c  8fa30004	lw	r3,4(r29)
 1800  00002520  8fdffff8	lw	r31,-8(r30)
 1801  00002524  001ee820	add	r29,r0,r30
 1802  00002528  8fdefffc	lw	r30,-4(r30)
 1803  0000252c  4be00000	jr	r31
 1804  00002530  54000000	nop
 1805  00002534          	.endproc _bcopy
 1806  00002534          	.align 2
 1807  00002534          	.proc _bzero
 1808  00002534          	.global _bzero
 1809  00002534          	_bzero:
 1810                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1811  00002534  afbefffc	sw	-4(r29),r30; push fp
 1812  00002538  001df020	add	r30,r0,r29; fp = sp
 1813  0000253c  afbffff8	sw	-8(r29),r31; push ret addr
 1814  00002540  2fbd0010	subui	r29,r29,#16; alloc local storage
 1815  00002544  afa20000	sw	0(r29),r2
 1816  00002548  54000000	nop
 1817  0000254c          	L105_LF2:
 1818  0000254c  8fc10004	lw	r1,4(r30)
 1819  00002550  2022ffff	addi	r2,r1,#-1
 1820  00002554  afc20004	sw	4(r30),r2
 1821  00002558  6c210000	sgti	r1,r1,#0
 1822  0000255c  1420000c	bnez	r1,L107_LF2
 1823  00002560  54000000	nop; delay slot nop
 1824  00002564  08000020	j	L106_LF2
 1825  00002568  54000000	nop; delay slot nop
 1826  0000256c          	L107_LF2:
 1827  0000256c  8fc10000	lw	r1,(r30)
 1828  00002570  20220001	addi	r2,r1,#1
 1829  00002574  afc20000	sw	(r30),r2
 1830  00002578  20020000	addi	r2,r0,(#0x0)&0xff
 1831  0000257c  a0220000	sb	(r1),r2
 1832  00002580  0bffffc8	j	L105_LF2
 1833  00002584  54000000	nop; delay slot nop
 1834  00002588          	L106_LF2:
 1835  00002588          	L104_LF2:
 1836  00002588  8fa20000	lw	r2,0(r29)
 1837  0000258c  8fdffff8	lw	r31,-8(r30)
 1838  00002590  001ee820	add	r29,r0,r30
 1839  00002594  8fdefffc	lw	r30,-4(r30)
 1840  00002598  4be00000	jr	r31
 1841  0000259c  54000000	nop
 1842  000025a0          	.endproc _bzero
 1843  000025a0          	.align 2
 1844  000025a0          	.proc _min
 1845  000025a0          	.global _min
 1846  000025a0          	_min:
 1847                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1848  000025a0  afbefffc	sw	-4(r29),r30; push fp
 1849  000025a4  001df020	add	r30,r0,r29; fp = sp
 1850  000025a8  afbffff8	sw	-8(r29),r31; push ret addr
 1851  000025ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1852  000025b0  afa20000	sw	0(r29),r2
 1853  000025b4  afa30004	sw	4(r29),r3
 1854  000025b8  8fc10000	lw	r1,(r30)
 1855  000025bc  8fc20004	lw	r2,4(r30)
 1856  000025c0  0022182c	sle	r3,r1,r2
 1857  000025c4  14600008	bnez	r3,L109_LF2
 1858  000025c8  54000000	nop; delay slot nop
 1859  000025cc  8fc10004	lw	r1,4(r30)
 1860  000025d0          	L109_LF2:
 1861  000025d0  08000004	j	L108_LF2
 1862  000025d4  54000000	nop; delay slot nop
 1863  000025d8          	L108_LF2:
 1864  000025d8  8fa20000	lw	r2,0(r29)
 1865  000025dc  8fa30004	lw	r3,4(r29)
 1866  000025e0  8fdffff8	lw	r31,-8(r30)
 1867  000025e4  001ee820	add	r29,r0,r30
 1868  000025e8  8fdefffc	lw	r30,-4(r30)
 1869  000025ec  4be00000	jr	r31
 1870  000025f0  54000000	nop
 1871  000025f4          	.endproc _min
 1872                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1873                      ;;;
 1874                      ;;; Most of the traps are called in files from libtraps.
 1877  000025f4          	.align 2
 1878  000025f4          	.proc _exit
 1879  000025f4          	.global _exit
 1880  000025f4          	_exit:
 1881  000025f4  44000300	trap	#0x300
 1882  000025f8  4be00000	jr	r31
 1883  000025fc  54000000	nop
 1884  00002600          	.endproc _exit
 1886                      ; for the benefit of gcc.
 1887  00002600          	.proc ___main
 1888  00002600          	.global ___main
 1889  00002600          	___main:
 1890  00002600  4be00000	jr	r31
 1891  00002604  54000000	nop
 1892  00002608          	.endproc ___main
 1893  00002608          	.text
 1894  00002608          	.global _etext
 1895  00002608          	_etext:
 1896  00002608          	.align 3
 1897  00002608          	.data
 1898  0000319a          	.global _edata
 1899  0000319a          	_edata:

 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 382
    4                      ; Text size: 5408
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  4342202d	.ascii "CB ---- Put %c in %d\n\000"
   82  00003004  2d2d2d20	
   82  00003008  50757420	
   82  0000300c  25632069	
   82  00003010  6e202564	
   82  00003014  0a00    	
   83  00003016          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _put_item_cb
   86  000010d4          	.global _put_item_cb
   87  000010d4          	_put_item_cb:
   88                      ;  Function 'put_item_cb'; 0 bytes of locals, 4 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  afa40008	sw	8(r29),r4
   96  000010f0  afa5000c	sw	12(r29),r5
   97  000010f4  83c20003	lb	r2,3(r30)
   98  000010f8  8fc30004	lw	r3,4(r30)
   99  000010fc  8c610000	lw	r1,(r3)
  100  00001100  00610820	add	r1,r3,r1
  101  00001104  a0220008	sb	8(r1),r2
  102  00001108  23bdfff0	addi	r29,r29,#-16
  103  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  104  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  105  00001114  afa50000	sw	(r29),r5
  106  00001118  304100ff	andi	r1,r2,#0x00ff
  107  0000111c  afa10004	sw	4(r29),r1
  108  00001120  8c650000	lw	r5,(r3)
  109  00001124  afa50008	sw	8(r29),r5
  110  00001128  0c0005f0	jal	_Printf
  111  0000112c  54000000	nop; not filled.
  112  00001130  8c610000	lw	r1,(r3)
  113  00001134  20240001	addi	r4,r1,#1
  114  00001138  2001000a	addi	r1,r0,#10
  115  0000113c  00800035	movi2fp	f0,r4
  116  00001140  00200835	movi2fp	f1,r1
  117  00001144  0401000f	div	f0,f0,f1
  118  00001148  00001034	movfp2i	r2,f0
  119  0000114c  50410002	slli	r1,r2,#0x2
  120  00001150  00220820	add	r1,r1,r2
  121  00001154  50210001	slli	r1,r1,#0x1
  122  00001158  00810822	sub	r1,r4,r1
  123  0000115c  ac610000	sw	(r3),r1
  124  00001160  20010001	addi	r1,r0,#1
  125  00001164  23bd0010	addi	r29,r29,#16
  126  00001168  8fa20000	lw	r2,0(r29)
  127  0000116c  8fa30004	lw	r3,4(r29)
  128  00001170  8fa40008	lw	r4,8(r29)
  129  00001174  8fa5000c	lw	r5,12(r29)
  130  00001178  8fdffff8	lw	r31,-8(r30)
  131  0000117c  001ee820	add	r29,r0,r30
  132  00001180  8fdefffc	lw	r30,-4(r30)
  133  00001184  4be00000	jr	r31
  134  00001188  54000000	nop
  135  0000118c          	.endproc _put_item_cb
  136  0000118c          	.data
  137  00003016          	.align 2
  138  00003018          	LC1_LF0:
  139  00003018  4342202d	.ascii "CB ----  checking %c from %d\n\000"
  139  0000301c  2d2d2d20	
  139  00003020  20636865	
  139  00003024  636b696e	
  139  00003028  67202563	
  139  0000302c  2066726f	
  139  00003030  6d202564	
  139  00003034  0a00    	
  140  00003036          	.text
  141  0000118c          	.align 2
  142  0000118c          	.proc _check_item_cb
  143  0000118c          	.global _check_item_cb
  144  0000118c          	_check_item_cb:
  145                      ;  Function 'check_item_cb'; 0 bytes of locals, 3 regs to save.
  146  0000118c  afbefffc	sw	-4(r29),r30; push fp
  147  00001190  001df020	add	r30,r0,r29; fp = sp
  148  00001194  afbffff8	sw	-8(r29),r31; push ret addr
  149  00001198  2fbd0018	subui	r29,r29,#24; alloc local storage
  150  0000119c  afa20000	sw	0(r29),r2
  151  000011a0  afa30004	sw	4(r29),r3
  152  000011a4  afa40008	sw	8(r29),r4
  153  000011a8  8fc30000	lw	r3,(r30)
  154  000011ac  8fc20004	lw	r2,4(r30)
  155  000011b0  8c410004	lw	r1,4(r2)
  156  000011b4  00410820	add	r1,r2,r1
  157  000011b8  80210008	lb	r1,8(r1)
  158  000011bc  a0610000	sb	(r3),r1
  159  000011c0  23bdfff0	addi	r29,r29,#-16
  160  000011c4  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  161  000011c8  24843018	addui	r4,r4,(LC1_LF0)&0xffff
  162  000011cc  afa40000	sw	(r29),r4
  163  000011d0  90610000	lbu	r1,(r3)
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  8c420004	lw	r2,4(r2)
  166  000011dc  afa20008	sw	8(r29),r2
  167  000011e0  0c000538	jal	_Printf
  168  000011e4  54000000	nop; not filled.
  169  000011e8  20010001	addi	r1,r0,#1
  170  000011ec  23bd0010	addi	r29,r29,#16
  171  000011f0  8fa20000	lw	r2,0(r29)
  172  000011f4  8fa30004	lw	r3,4(r29)
  173  000011f8  8fa40008	lw	r4,8(r29)
  174  000011fc  8fdffff8	lw	r31,-8(r30)
  175  00001200  001ee820	add	r29,r0,r30
  176  00001204  8fdefffc	lw	r30,-4(r30)
  177  00001208  4be00000	jr	r31
  178  0000120c  54000000	nop
  179  00001210          	.endproc _check_item_cb
  180  00001210          	.data
  181  00003036          	.align 2
  182  00003038          	LC2_LF0:
  183  00003038  4342202d	.ascii "CB ----  Got %c from %d\n\000"
  183  0000303c  2d2d2d20	
  183  00003040  20476f74	
  183  00003044  20256320	
  183  00003048  66726f6d	
  183  0000304c  2025640a	
  183  00003050  00      	
  184  00003051          	.text
  185  00001210          	.align 2
  186  00001210          	.proc _get_item_cb
  187  00001210          	.global _get_item_cb
  188  00001210          	_get_item_cb:
  189                      ;  Function 'get_item_cb'; 0 bytes of locals, 4 regs to save.
  190  00001210  afbefffc	sw	-4(r29),r30; push fp
  191  00001214  001df020	add	r30,r0,r29; fp = sp
  192  00001218  afbffff8	sw	-8(r29),r31; push ret addr
  193  0000121c  2fbd0018	subui	r29,r29,#24; alloc local storage
  194  00001220  afa20000	sw	0(r29),r2
  195  00001224  afa30004	sw	4(r29),r3
  196  00001228  afa40008	sw	8(r29),r4
  197  0000122c  afa5000c	sw	12(r29),r5
  198  00001230  8fc20000	lw	r2,(r30)
  199  00001234  8fc30004	lw	r3,4(r30)
  200  00001238  8c610004	lw	r1,4(r3)
  201  0000123c  00610820	add	r1,r3,r1
  202  00001240  80210008	lb	r1,8(r1)
  203  00001244  a0410000	sb	(r2),r1
  204  00001248  23bdfff0	addi	r29,r29,#-16
  205  0000124c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  206  00001250  24a53038	addui	r5,r5,(LC2_LF0)&0xffff
  207  00001254  afa50000	sw	(r29),r5
  208  00001258  90410000	lbu	r1,(r2)
  209  0000125c  afa10004	sw	4(r29),r1
  210  00001260  8c650004	lw	r5,4(r3)
  211  00001264  afa50008	sw	8(r29),r5
  212  00001268  0c0004b0	jal	_Printf
  213  0000126c  54000000	nop; not filled.
  214  00001270  8c610004	lw	r1,4(r3)
  215  00001274  20240001	addi	r4,r1,#1
  216  00001278  2001000a	addi	r1,r0,#10
  217  0000127c  00800035	movi2fp	f0,r4
  218  00001280  00200835	movi2fp	f1,r1
  219  00001284  0401000f	div	f0,f0,f1
  220  00001288  00001034	movfp2i	r2,f0
  221  0000128c  50410002	slli	r1,r2,#0x2
  222  00001290  00220820	add	r1,r1,r2
  223  00001294  50210001	slli	r1,r1,#0x1
  224  00001298  00810822	sub	r1,r4,r1
  225  0000129c  ac610004	sw	4(r3),r1
  226  000012a0  20010001	addi	r1,r0,#1
  227  000012a4  23bd0010	addi	r29,r29,#16
  228  000012a8  8fa20000	lw	r2,0(r29)
  229  000012ac  8fa30004	lw	r3,4(r29)
  230  000012b0  8fa40008	lw	r4,8(r29)
  231  000012b4  8fa5000c	lw	r5,12(r29)
  232  000012b8  8fdffff8	lw	r31,-8(r30)
  233  000012bc  001ee820	add	r29,r0,r30
  234  000012c0  8fdefffc	lw	r30,-4(r30)
  235  000012c4  4be00000	jr	r31
  236  000012c8  54000000	nop
  237  000012cc          	.endproc _get_item_cb
  238  000012cc          	.align 2
  239  000012cc          	.proc _is_full
  240  000012cc          	.global _is_full
  241  000012cc          	_is_full:
  242                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  243  000012cc  afbefffc	sw	-4(r29),r30; push fp
  244  000012d0  001df020	add	r30,r0,r29; fp = sp
  245  000012d4  afbffff8	sw	-8(r29),r31; push ret addr
  246  000012d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  247  000012dc  afa20000	sw	0(r29),r2
  248  000012e0  afa30004	sw	4(r29),r3
  249  000012e4  afa40008	sw	8(r29),r4
  250  000012e8  8fc40000	lw	r4,(r30)
  251  000012ec  8c810000	lw	r1,(r4)
  252  000012f0  20230001	addi	r3,r1,#1
  253  000012f4  2001000a	addi	r1,r0,#10
  254  000012f8  00600035	movi2fp	f0,r3
  255  000012fc  00200835	movi2fp	f1,r1
  256  00001300  0401000f	div	f0,f0,f1
  257  00001304  00001034	movfp2i	r2,f0
  258  00001308  50410002	slli	r1,r2,#0x2
  259  0000130c  00220820	add	r1,r1,r2
  260  00001310  50210001	slli	r1,r1,#0x1
  261  00001314  00611022	sub	r2,r3,r1
  262  00001318  8c810004	lw	r1,4(r4)
  263  0000131c  00411028	seq	r2,r2,r1
  264  00001320  20010001	addi	r1,r0,#1
  265  00001324  14400008	bnez	r2,L23_LF0
  266  00001328  54000000	nop; not filled.
  267  0000132c  20010000	addi	r1,r0,#0
  268  00001330          	L23_LF0:
  269  00001330  8fa20000	lw	r2,0(r29)
  270  00001334  8fa30004	lw	r3,4(r29)
  271  00001338  8fa40008	lw	r4,8(r29)
  272  0000133c  8fdffff8	lw	r31,-8(r30)
  273  00001340  001ee820	add	r29,r0,r30
  274  00001344  8fdefffc	lw	r30,-4(r30)
  275  00001348  4be00000	jr	r31
  276  0000134c  54000000	nop
  277  00001350          	.endproc _is_full
  278  00001350          	.align 2
  279  00001350          	.proc _is_empty
  280  00001350          	.global _is_empty
  281  00001350          	_is_empty:
  282                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  283  00001350  afbefffc	sw	-4(r29),r30; push fp
  284  00001354  001df020	add	r30,r0,r29; fp = sp
  285  00001358  afbffff8	sw	-8(r29),r31; push ret addr
  286  0000135c  2fbd0010	subui	r29,r29,#16; alloc local storage
  287  00001360  afa20000	sw	0(r29),r2
  288  00001364  8fc10000	lw	r1,(r30)
  289  00001368  8c220000	lw	r2,(r1)
  290  0000136c  8c210004	lw	r1,4(r1)
  291  00001370  00411028	seq	r2,r2,r1
  292  00001374  20010001	addi	r1,r0,#1
  293  00001378  14400008	bnez	r2,L30_LF0
  294  0000137c  54000000	nop; not filled.
  295  00001380  20010000	addi	r1,r0,#0
  296  00001384          	L30_LF0:
  297  00001384  8fa20000	lw	r2,0(r29)
  298  00001388  8fdffff8	lw	r31,-8(r30)
  299  0000138c  001ee820	add	r29,r0,r30
  300  00001390  8fdefffc	lw	r30,-4(r30)
  301  00001394  4be00000	jr	r31
  302  00001398  54000000	nop
  303  0000139c          	.endproc _is_empty
  304  0000139c          	.data
  305  00003051          	.align 2
  306  00003054          	LC3_LF0:
  307  00003054  43697263	.ascii "Circular Buffer Initiated\n\000"
  307  00003058  756c6172	
  307  0000305c  20427566	
  307  00003060  66657220	
  307  00003064  496e6974	
  307  00003068  69617465	
  307  0000306c  640a00  	
  308  0000306f          	.text
  309  0000139c          	.align 2
  310  0000139c          	.proc _init_cb
  311  0000139c          	.global _init_cb
  312  0000139c          	_init_cb:
  313                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  314  0000139c  afbefffc	sw	-4(r29),r30; push fp
  315  000013a0  001df020	add	r30,r0,r29; fp = sp
  316  000013a4  afbffff8	sw	-8(r29),r31; push ret addr
  317  000013a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  318  000013ac  afa20000	sw	0(r29),r2
  319  000013b0  8fc10000	lw	r1,(r30)
  320  000013b4  20020000	addi	r2,r0,#0
  321  000013b8  ac220000	sw	(r1),r2
  322  000013bc  ac220004	sw	4(r1),r2
  323  000013c0  23bdfff8	addi	r29,r29,#-8
  324  000013c4  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
  325  000013c8  24423054	addui	r2,r2,(LC3_LF0)&0xffff
  326  000013cc  afa20000	sw	(r29),r2
  327  000013d0  0c000348	jal	_Printf
  328  000013d4  54000000	nop; not filled.
  329  000013d8  23bd0008	addi	r29,r29,#8
  330  000013dc  8fa20000	lw	r2,0(r29)
  331  000013e0  8fdffff8	lw	r31,-8(r30)
  332  000013e4  001ee820	add	r29,r0,r30
  333  000013e8  8fdefffc	lw	r30,-4(r30)
  334  000013ec  4be00000	jr	r31
  335  000013f0  54000000	nop
  336  000013f4          	.endproc _init_cb
  337  000013f4          	.data
  338  0000306f          	.align 2
  339  00003070          	LC4_LF0:
  340  00003070  20436972	.ascii " Circular Buffer =>  \000"
  340  00003074  63756c61	
  340  00003078  72204275	
  340  0000307c  66666572	
  340  00003080  203d3e20	
  340  00003084  2000    	
  341  00003086          	.align 2
  342  00003088          	LC5_LF0:
  343  00003088  256300  	.ascii "%c\000"
  344  0000308b          	.align 2
  345  0000308c          	LC6_LF0:
  346  0000308c  0a00    	.ascii "\n\000"
  347  0000308e          	.text
  348  000013f4          	.align 2
  349  000013f4          	.proc _Print_cb
  350  000013f4          	.global _Print_cb
  351  000013f4          	_Print_cb:
  352                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  353  000013f4  afbefffc	sw	-4(r29),r30; push fp
  354  000013f8  001df020	add	r30,r0,r29; fp = sp
  355  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  356  00001400  2fbd0020	subui	r29,r29,#32; alloc local storage
  357  00001404  afa20000	sw	0(r29),r2
  358  00001408  afa30004	sw	4(r29),r3
  359  0000140c  afa40008	sw	8(r29),r4
  360  00001410  afa5000c	sw	12(r29),r5
  361  00001414  afa60010	sw	16(r29),r6
  362  00001418  afa70014	sw	20(r29),r7
  363  0000141c  8fc50000	lw	r5,(r30)
  364  00001420  23bdfff8	addi	r29,r29,#-8
  365  00001424  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  366  00001428  24e73070	addui	r7,r7,(LC4_LF0)&0xffff
  367  0000142c  afa70000	sw	(r29),r7
  368  00001430  0c0002e8	jal	_Printf
  369  00001434  54000000	nop; not filled.
  370  00001438  20040000	addi	r4,r0,#0
  371  0000143c  23bd0008	addi	r29,r29,#8
  372  00001440  2006000a	addi	r6,r0,#10
  373  00001444          	L45_LF0:
  374  00001444  23bdfff8	addi	r29,r29,#-8
  375  00001448  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  376  0000144c  24e73088	addui	r7,r7,(LC5_LF0)&0xffff
  377  00001450  afa70000	sw	(r29),r7
  378  00001454  8ca10004	lw	r1,4(r5)
  379  00001458  00811820	add	r3,r4,r1
  380  0000145c  00600035	movi2fp	f0,r3
  381  00001460  00c00835	movi2fp	f1,r6
  382  00001464  0401000f	div	f0,f0,f1
  383  00001468  00001034	movfp2i	r2,f0
  384  0000146c  50410002	slli	r1,r2,#0x2
  385  00001470  00220820	add	r1,r1,r2
  386  00001474  50210001	slli	r1,r1,#0x1
  387  00001478  00610822	sub	r1,r3,r1
  388  0000147c  00a10820	add	r1,r5,r1
  389  00001480  90210008	lbu	r1,8(r1)
  390  00001484  afa10004	sw	4(r29),r1
  391  00001488  0c000290	jal	_Printf
  392  0000148c  54000000	nop; not filled.
  393  00001490  23bd0008	addi	r29,r29,#8
  394  00001494  20840001	addi	r4,r4,#1
  395  00001498  70810009	slei	r1,r4,#9
  396  0000149c  1420ffa4	bnez	r1,L45_LF0
  397  000014a0  54000000	nop; not filled.
  398  000014a4  23bdfff8	addi	r29,r29,#-8
  399  000014a8  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  400  000014ac  24e7308c	addui	r7,r7,(LC6_LF0)&0xffff
  401  000014b0  afa70000	sw	(r29),r7
  402  000014b4  0c000264	jal	_Printf
  403  000014b8  54000000	nop; not filled.
  404  000014bc  23bd0008	addi	r29,r29,#8
  405  000014c0  8fa20000	lw	r2,0(r29)
  406  000014c4  8fa30004	lw	r3,4(r29)
  407  000014c8  8fa40008	lw	r4,8(r29)
  408  000014cc  8fa5000c	lw	r5,12(r29)
  409  000014d0  8fa60010	lw	r6,16(r29)
  410  000014d4  8fa70014	lw	r7,20(r29)
  411  000014d8  8fdffff8	lw	r31,-8(r30)
  412  000014dc  001ee820	add	r29,r0,r30
  413  000014e0  8fdefffc	lw	r30,-4(r30)
  414  000014e4  4be00000	jr	r31
  415  000014e8  54000000	nop
  416  000014ec          	.endproc _Print_cb
  417  000014ec          	.data
  418  0000308e          	.align 2
  419  00003090          	LC7_LF0:
  420  00003090  55736167	.ascii "Usage: \000"
  420  00003094  653a2000	
  421  00003098          	.align 2
  422  00003098          	LC8_LF0:
  423  00003098  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
  423  0000309c  6e646c65	
  423  000030a0  5f746f5f	
  423  000030a4  73686172	
  423  000030a8  65645f6d	
  423  000030ac  656d6f72	
  423  000030b0  795f7061	
  423  000030b4  67653e20	
  423  000030b8  3c68616e	
  423  000030bc  646c655f	
  423  000030c0  746f5f70	
  423  000030c4  6167655f	
  423  000030c8  6d617070	
  423  000030cc  65645f73	
  423  000030d0  656d6170	
  423  000030d4  686f7265	
  423  000030d8  3e203c68	
  423  000030dc  616e    	
  424  000030de  646c6520	.ascii "dle to lock>\n\000"
  424  000030e2  746f206c	
  424  000030e6  6f636b3e	
  424  000030ea  0a00    	
  425  000030ec          	.align 2
  426  000030ec          	LC9_LF0:
  427  000030ec  416e2048	.ascii "An H2O molecule is created \n\000"
  427  000030f0  324f206d	
  427  000030f4  6f6c6563	
  427  000030f8  756c6520	
  427  000030fc  69732063	
  427  00003100  72656174	
  427  00003104  6564200a	
  427  00003108  00      	
  428  00003109          	.align 2
  429  0000310c          	LC10_LF0:
  430  0000310c  73656d5f	.ascii "sem_H2O signal passed \n\n\000"
  430  00003110  48324f20	
  430  00003114  7369676e	
  430  00003118  616c2070	
  430  0000311c  61737365	
  430  00003120  64200a0a	
  430  00003124  00      	
  431  00003125          	.align 2
  432  00003128          	LC11_LF0:
  433  00003128  50524f44	.ascii "PROD - PID %d is complete.\n\000"
  433  0000312c  202d2050	
  433  00003130  49442025	
  433  00003134  64206973	
  433  00003138  20636f6d	
  433  0000313c  706c6574	
  433  00003140  652e0a00	
  434  00003144          	.align 2
  435  00003144          	LC12_LF0:
  436  00003144  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  436  00003148  73656d61	
  436  0000314c  70686f72	
  436  00003150  6520735f	
  436  00003154  70726f63	
  436  00003158  735f636f	
  436  0000315c  6d706c65	
  436  00003160  74656420	
  436  00003164  28256429	
  436  00003168  20696e20	
  436  0000316c  00      	
  437  0000316d          	.align 2
  438  00003170          	LC13_LF0:
  439  00003170  2c206578	.ascii ", exiting...\n\000"
  439  00003174  6974696e	
  439  00003178  672e2e2e	
  439  0000317c  0a00    	
  440  0000317e          	.text
  441  000014ec          	.align 2
  442  000014ec          	.proc _main
  443  000014ec          	.global _main
  444  000014ec          	_main:
  445                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  446  000014ec  afbefffc	sw	-4(r29),r30; push fp
  447  000014f0  001df020	add	r30,r0,r29; fp = sp
  448  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  449  000014f8  2fbd0008	subui	r29,r29,#8; alloc local storage
  450  000014fc  8fc20000	lw	r2,(r30)
  451  00001500  8fc50004	lw	r5,4(r30)
  452  00001504  0c001010	jal	___main
  453  00001508  54000000	nop; not filled.
  454  0000150c  64410004	snei	r1,r2,#4
  455  00001510  1020004c	beqz	r1,L48_LF0
  456  00001514  54000000	nop; not filled.
  457  00001518  23bdfff8	addi	r29,r29,#-8
  458  0000151c  3c070000	lhi	r7,((LC7_LF0)>>16)&0xffff
  459  00001520  24e73090	addui	r7,r7,(LC7_LF0)&0xffff
  460  00001524  afa70000	sw	(r29),r7
  461  00001528  0c0001f0	jal	_Printf
  462  0000152c  54000000	nop; not filled.
  463  00001530  8ca70000	lw	r7,(r5)
  464  00001534  afa70000	sw	(r29),r7
  465  00001538  0c0001e0	jal	_Printf
  466  0000153c  54000000	nop; not filled.
  467  00001540  3c070000	lhi	r7,((LC8_LF0)>>16)&0xffff
  468  00001544  24e73098	addui	r7,r7,(LC8_LF0)&0xffff
  469  00001548  afa70000	sw	(r29),r7
  470  0000154c  0c0001cc	jal	_Printf
  471  00001550  54000000	nop; not filled.
  472  00001554  0c00026c	jal	_Exit
  473  00001558  54000000	nop; not filled.
  474  0000155c  23bd0008	addi	r29,r29,#8
  475  00001560          	L48_LF0:
  476  00001560  23bdfff0	addi	r29,r29,#-16
  477  00001564  8ca70004	lw	r7,4(r5)
  478  00001568  afa70000	sw	(r29),r7
  479  0000156c  20070000	addi	r7,r0,#0
  480  00001570  afa70004	sw	4(r29),r7
  481  00001574  2007000a	addi	r7,r0,#10
  482  00001578  afa70008	sw	8(r29),r7
  483  0000157c  0c000af0	jal	_dstrtol
  484  00001580  54000000	nop; not filled.
  485  00001584  00011020	add	r2,r0,r1
  486  00001588  8ca7000c	lw	r7,12(r5)
  487  0000158c  afa70000	sw	(r29),r7
  488  00001590  20070000	addi	r7,r0,#0
  489  00001594  afa70004	sw	4(r29),r7
  490  00001598  2007000a	addi	r7,r0,#10
  491  0000159c  afa70008	sw	8(r29),r7
  492  000015a0  0c000acc	jal	_dstrtol
  493  000015a4  54000000	nop; not filled.
  494  000015a8  00013020	add	r6,r0,r1
  495  000015ac  8ca70008	lw	r7,8(r5)
  496  000015b0  afa70000	sw	(r29),r7
  497  000015b4  20070000	addi	r7,r0,#0
  498  000015b8  afa70004	sw	4(r29),r7
  499  000015bc  2007000a	addi	r7,r0,#10
  500  000015c0  afa70008	sw	8(r29),r7
  501  000015c4  0c000aa8	jal	_dstrtol
  502  000015c8  54000000	nop; not filled.
  503  000015cc  00012020	add	r4,r0,r1
  504  000015d0  23bd0010	addi	r29,r29,#16
  505  000015d4  0062082a	sltu	r1,r3,r2
  506  000015d8  10200064	beqz	r1,L50_LF0
  507  000015dc  54000000	nop; not filled.
  508  000015e0          	L51_LF0:
  509  000015e0  23bdfff8	addi	r29,r29,#-8
  510  000015e4  3c070000	lhi	r7,((LC9_LF0)>>16)&0xffff
  511  000015e8  24e730ec	addui	r7,r7,(LC9_LF0)&0xffff
  512  000015ec  afa70000	sw	(r29),r7
  513  000015f0  0c000128	jal	_Printf
  514  000015f4  54000000	nop; not filled.
  515  000015f8  afa40000	sw	(r29),r4
  516  000015fc  0c000170	jal	_sem_signal
  517  00001600  54000000	nop; not filled.
  518  00001604  23bd0008	addi	r29,r29,#8
  519  00001608  64210000	snei	r1,r1,#0
  520  0000160c  10200020	beqz	r1,L52_LF0
  521  00001610  54000000	nop; not filled.
  522  00001614  23bdfff8	addi	r29,r29,#-8
  523  00001618  3c070000	lhi	r7,((LC10_LF0)>>16)&0xffff
  524  0000161c  24e7310c	addui	r7,r7,(LC10_LF0)&0xffff
  525  00001620  afa70000	sw	(r29),r7
  526  00001624  0c0000f4	jal	_Printf
  527  00001628  54000000	nop; not filled.
  528  0000162c  23bd0008	addi	r29,r29,#8
  529  00001630          	L52_LF0:
  530  00001630  20630001	addi	r3,r3,#1
  531  00001634  0062082a	sltu	r1,r3,r2
  532  00001638  1420ffa4	bnez	r1,L51_LF0
  533  0000163c  54000000	nop; not filled.
  534  00001640          	L50_LF0:
  535  00001640  0c0000e4	jal	_Getpid
  536  00001644  54000000	nop; not filled.
  537  00001648  23bdfff8	addi	r29,r29,#-8
  538  0000164c  3c070000	lhi	r7,((LC11_LF0)>>16)&0xffff
  539  00001650  24e73128	addui	r7,r7,(LC11_LF0)&0xffff
  540  00001654  afa70000	sw	(r29),r7
  541  00001658  afa10004	sw	4(r29),r1
  542  0000165c  0c0000bc	jal	_Printf
  543  00001660  54000000	nop; not filled.
  544  00001664  afa60000	sw	(r29),r6
  545  00001668  0c000104	jal	_sem_signal
  546  0000166c  54000000	nop; not filled.
  547  00001670  23bd0008	addi	r29,r29,#8
  548  00001674  64210001	snei	r1,r1,#1
  549  00001678  10200050	beqz	r1,L54_LF0
  550  0000167c  54000000	nop; not filled.
  551  00001680  23bdfff8	addi	r29,r29,#-8
  552  00001684  3c070000	lhi	r7,((LC12_LF0)>>16)&0xffff
  553  00001688  24e73144	addui	r7,r7,(LC12_LF0)&0xffff
  554  0000168c  afa70000	sw	(r29),r7
  555  00001690  afa60004	sw	4(r29),r6
  556  00001694  0c000084	jal	_Printf
  557  00001698  54000000	nop; not filled.
  558  0000169c  8ca50000	lw	r5,(r5)
  559  000016a0  afa50000	sw	(r29),r5
  560  000016a4  0c000074	jal	_Printf
  561  000016a8  54000000	nop; not filled.
  562  000016ac  3c070000	lhi	r7,((LC13_LF0)>>16)&0xffff
  563  000016b0  24e73170	addui	r7,r7,(LC13_LF0)&0xffff
  564  000016b4  afa70000	sw	(r29),r7
  565  000016b8  0c000060	jal	_Printf
  566  000016bc  54000000	nop; not filled.
  567  000016c0  0c000100	jal	_Exit
  568  000016c4  54000000	nop; not filled.
  569  000016c8  23bd0008	addi	r29,r29,#8
  570  000016cc          	L54_LF0:
  571  000016cc  0c000e3c	jal	_exit
  572  000016d0  54000000	nop
  573  000016d4          	.endproc _main
  574                      ;;;
  575                      ;;; Stub functions for DLX traps.
  576                      ;;;
  577                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  578                      ;;;
  579                      ;;; The traps such as Open and Close
  580                      ;;; (note the capital letters) are for use by user programs.  The traps
  581                      ;;; with names such as open and close (lower case) are for use by the OS.
  582                      ;;;
  585  000016d4          	.align 2
  587                      ;;; The following are the traps to be used by user-level programs
  588                      ;;;
  590  000016d4          	.align 2
  591  000016d4          	.proc _Open
  592  000016d4          	.global _Open
  593  000016d4          	_Open:
  594                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  595                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  596                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  597  000016d4  44000213	trap	#0x213
  598  000016d8  4be00000	jr	r31
  599  000016dc  54000000	nop
  600  000016e0          	.endproc _Open
  602  000016e0          	.proc _Close
  603  000016e0          	.global _Close
  604  000016e0          	_Close:
  605  000016e0  44000214	trap	#0x214
  606  000016e4  4be00000	jr	r31
  607  000016e8  54000000	nop
  608  000016ec          	.endproc _Close
  610  000016ec          	.proc _Read
  611  000016ec          	.global _Read
  612  000016ec          	_Read:
  613  000016ec  44000210	trap	#0x210
  614  000016f0  4be00000	jr	r31
  615  000016f4  54000000	nop
  616  000016f8          	.endproc _Read
  618  000016f8          	.proc _Write
  619  000016f8          	.global _Write
  620  000016f8          	_Write:
  621  000016f8  44000211	trap	#0x211
  622  000016fc  4be00000	jr	r31
  623  00001700  54000000	nop
  624  00001704          	.endproc _Write
  626  00001704          	.proc _Lseek
  627  00001704          	.global _Lseek
  628  00001704          	_Lseek:
  629  00001704  44000212	trap	#0x212
  630  00001708  4be00000	jr	r31
  631  0000170c  54000000	nop
  632  00001710          	.endproc _Lseek
  634  00001710          	.proc _Putchar
  635  00001710          	.global _Putchar
  636  00001710          	_Putchar:
  637  00001710  44000280	trap	#0x280
  638  00001714  4be00000	jr	r31
  639  00001718  54000000	nop
  640  0000171c          	.endproc _Putchar
  642  0000171c          	.proc _Printf
  643  0000171c          	.global _Printf
  644  0000171c          	_Printf:
  645  0000171c  44000201	trap	#0x201
  646  00001720  4be00000	jr	r31
  647  00001724  54000000	nop
  648  00001728          	.endproc _Printf
  650  00001728          	.proc _Getpid
  651  00001728          	.global _Getpid
  652  00001728          	_Getpid:
  653  00001728  44000431	trap	#0x431
  654  0000172c  4be00000	jr	r31
  655  00001730  54000000	nop
  656  00001734          	.endproc _Getpid
  658  00001734          	.proc _process_create
  659  00001734          	.global _process_create
  660  00001734          	_process_create:
  661  00001734  44000432	trap	#0x432
  662  00001738  4be00000	jr	r31
  663  0000173c  54000000	nop
  664  00001740          	.endproc _process_create
  666  00001740          	.proc _shmget
  667  00001740          	.global _shmget
  668  00001740          	_shmget:
  669  00001740  44000440	trap	#0x440
  670  00001744  4be00000	jr	r31
  671  00001748  54000000	nop
  672  0000174c          	.endproc _shmget
  674  0000174c          	.proc _shmat
  675  0000174c          	.global _shmat
  676  0000174c          	_shmat:
  677  0000174c  44000441	trap	#0x441
  678  00001750  4be00000	jr	r31
  679  00001754  54000000	nop
  680  00001758          	.endproc _shmat
  682  00001758          	.proc _sem_create
  683  00001758          	.global _sem_create
  684  00001758          	_sem_create:
  685  00001758  44000450	trap	#0x450
  686  0000175c  4be00000	jr	r31
  687  00001760  54000000	nop
  688  00001764          	.endproc _sem_create
  690  00001764          	.proc _sem_wait
  691  00001764          	.global _sem_wait
  692  00001764          	_sem_wait:
  693  00001764  44000451	trap	#0x451
  694  00001768  4be00000	jr	r31
  695  0000176c  54000000	nop
  696  00001770          	.endproc _sem_wait
  698  00001770          	.proc _sem_signal
  699  00001770          	.global _sem_signal
  700  00001770          	_sem_signal:
  701  00001770  44000452	trap	#0x452
  702  00001774  4be00000	jr	r31
  703  00001778  54000000	nop
  704  0000177c          	.endproc _sem_signal
  706  0000177c          	.proc _lock_create
  707  0000177c          	.global _lock_create
  708  0000177c          	_lock_create:
  709  0000177c  44000453	trap	#0x453
  710  00001780  4be00000	jr	r31
  711  00001784  54000000	nop
  712  00001788          	.endproc _lock_create
  714  00001788          	.proc _lock_acquire
  715  00001788          	.global _lock_acquire
  716  00001788          	_lock_acquire:
  717  00001788  44000454	trap	#0x454
  718  0000178c  4be00000	jr	r31
  719  00001790  54000000	nop
  720  00001794          	.endproc _lock_acquire
  722  00001794          	.proc _lock_release
  723  00001794          	.global _lock_release
  724  00001794          	_lock_release:
  725  00001794  44000455	trap	#0x455
  726  00001798  4be00000	jr	r31
  727  0000179c  54000000	nop
  728  000017a0          	.endproc _lock_release
  730  000017a0          	.proc _cond_create
  731  000017a0          	.global _cond_create
  732  000017a0          	_cond_create:
  733  000017a0  44000456	trap	#0x456
  734  000017a4  4be00000	jr	r31
  735  000017a8  54000000	nop
  736  000017ac          	.endproc _cond_create
  738  000017ac          	.proc _cond_wait
  739  000017ac          	.global _cond_wait
  740  000017ac          	_cond_wait:
  741  000017ac  44000457	trap	#0x457
  742  000017b0  4be00000	jr	r31
  743  000017b4  54000000	nop
  744  000017b8          	.endproc _cond_wait
  746  000017b8          	.proc _cond_signal
  747  000017b8          	.global _cond_signal
  748  000017b8          	_cond_signal:
  749  000017b8  44000458	trap	#0x458
  750  000017bc  4be00000	jr	r31
  751  000017c0  54000000	nop
  752  000017c4          	.endproc _cond_signal
  754  000017c4          	.proc _Exit
  755  000017c4          	.global _Exit
  756  000017c4          	_Exit:
  757  000017c4  44000500	trap	#0x500
  758  000017c8  4be00000	jr	r31
  759  000017cc  54000000	nop
  760  000017d0          	.endproc _Exit
  761                      ; Compiled by GCC
  763  000017d0          	.align 2
  764  000017d0          	.proc _isspace
  765  000017d0          	.global _isspace
  766  000017d0          	_isspace:
  767                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  768  000017d0  afbefffc	sw	-4(r29),r30; push fp
  769  000017d4  001df020	add	r30,r0,r29; fp = sp
  770  000017d8  afbffff8	sw	-8(r29),r31; push ret addr
  771  000017dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  772  000017e0  afa20000	sw	0(r29),r2
  773  000017e4  afa30004	sw	4(r29),r3
  774  000017e8  afa40008	sw	8(r29),r4
  775  000017ec  83c20003	lb	r2,3(r30)
  776  000017f0  20010000	addi	r1,r0,#0
  777  000017f4  304300ff	andi	r3,r2,#0x00ff
  778  000017f8  60640020	seqi	r4,r3,#32
  779  000017fc  1480002c	bnez	r4,L3_LF2
  780  00001800  54000000	nop; delay slot nop
  781  00001804  304300ff	andi	r3,r2,#0x00ff
  782  00001808  60640009	seqi	r4,r3,#9
  783  0000180c  1480001c	bnez	r4,L3_LF2
  784  00001810  54000000	nop; delay slot nop
  785  00001814  304300ff	andi	r3,r2,#0x00ff
  786  00001818  6064000a	seqi	r4,r3,#10
  787  0000181c  1480000c	bnez	r4,L3_LF2
  788  00001820  54000000	nop; delay slot nop
  789  00001824  08000008	j	L2_LF2
  790  00001828  54000000	nop; delay slot nop
  791  0000182c          	L3_LF2:
  792  0000182c  20010001	addi	r1,r0,#1
  793  00001830          	L2_LF2:
  794  00001830  08000004	j	L1_LF2
  795  00001834  54000000	nop; delay slot nop
  796  00001838          	L1_LF2:
  797  00001838  8fa20000	lw	r2,0(r29)
  798  0000183c  8fa30004	lw	r3,4(r29)
  799  00001840  8fa40008	lw	r4,8(r29)
  800  00001844  8fdffff8	lw	r31,-8(r30)
  801  00001848  001ee820	add	r29,r0,r30
  802  0000184c  8fdefffc	lw	r30,-4(r30)
  803  00001850  4be00000	jr	r31
  804  00001854  54000000	nop
  805  00001858          	.endproc _isspace
  806  00001858          	.align 2
  807  00001858          	.proc _isxdigit
  808  00001858          	.global _isxdigit
  809  00001858          	_isxdigit:
  810                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  811  00001858  afbefffc	sw	-4(r29),r30; push fp
  812  0000185c  001df020	add	r30,r0,r29; fp = sp
  813  00001860  afbffff8	sw	-8(r29),r31; push ret addr
  814  00001864  2fbd0018	subui	r29,r29,#24; alloc local storage
  815  00001868  afa20000	sw	0(r29),r2
  816  0000186c  afa30004	sw	4(r29),r3
  817  00001870  afa40008	sw	8(r29),r4
  818  00001874  83c20003	lb	r2,3(r30)
  819  00001878  20010000	addi	r1,r0,#0
  820  0000187c  304300ff	andi	r3,r2,#0x00ff
  821  00001880  6c64002f	sgtui	r4,r3,#47
  822  00001884  1080001c	beqz	r4,L7_LF2
  823  00001888  54000000	nop; delay slot nop
  824  0000188c  304300ff	andi	r3,r2,#0x00ff
  825  00001890  70640039	sleui	r4,r3,#57
  826  00001894  1480005c	bnez	r4,L6_LF2
  827  00001898  54000000	nop; delay slot nop
  828  0000189c  08000004	j	L7_LF2
  829  000018a0  54000000	nop; delay slot nop
  830  000018a4          	L7_LF2:
  831  000018a4  304300ff	andi	r3,r2,#0x00ff
  832  000018a8  6c640060	sgtui	r4,r3,#96
  833  000018ac  1080001c	beqz	r4,L8_LF2
  834  000018b0  54000000	nop; delay slot nop
  835  000018b4  304300ff	andi	r3,r2,#0x00ff
  836  000018b8  70640066	sleui	r4,r3,#102
  837  000018bc  14800034	bnez	r4,L6_LF2
  838  000018c0  54000000	nop; delay slot nop
  839  000018c4  08000004	j	L8_LF2
  840  000018c8  54000000	nop; delay slot nop
  841  000018cc          	L8_LF2:
  842  000018cc  304300ff	andi	r3,r2,#0x00ff
  843  000018d0  6c640040	sgtui	r4,r3,#64
  844  000018d4  10800020	beqz	r4,L5_LF2
  845  000018d8  54000000	nop; delay slot nop
  846  000018dc  304300ff	andi	r3,r2,#0x00ff
  847  000018e0  70640041	sleui	r4,r3,#65
  848  000018e4  1480000c	bnez	r4,L6_LF2
  849  000018e8  54000000	nop; delay slot nop
  850  000018ec  08000008	j	L5_LF2
  851  000018f0  54000000	nop; delay slot nop
  852  000018f4          	L6_LF2:
  853  000018f4  20010001	addi	r1,r0,#1
  854  000018f8          	L5_LF2:
  855  000018f8  08000004	j	L4_LF2
  856  000018fc  54000000	nop; delay slot nop
  857  00001900          	L4_LF2:
  858  00001900  8fa20000	lw	r2,0(r29)
  859  00001904  8fa30004	lw	r3,4(r29)
  860  00001908  8fa40008	lw	r4,8(r29)
  861  0000190c  8fdffff8	lw	r31,-8(r30)
  862  00001910  001ee820	add	r29,r0,r30
  863  00001914  8fdefffc	lw	r30,-4(r30)
  864  00001918  4be00000	jr	r31
  865  0000191c  54000000	nop
  866  00001920          	.endproc _isxdigit
  867  00001920          	.align 2
  868  00001920          	.proc _dstrcpy
  869  00001920          	.global _dstrcpy
  870  00001920          	_dstrcpy:
  871                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  872  00001920  afbefffc	sw	-4(r29),r30; push fp
  873  00001924  001df020	add	r30,r0,r29; fp = sp
  874  00001928  afbffff8	sw	-8(r29),r31; push ret addr
  875  0000192c  2fbd0018	subui	r29,r29,#24; alloc local storage
  876  00001930  afa20000	sw	0(r29),r2
  877  00001934  afa30004	sw	4(r29),r3
  878  00001938  8fc10000	lw	r1,(r30)
  879  0000193c  afc1fff4	sw	-12(r30),r1
  880  00001940          	L10_LF2:
  881  00001940  8fc10000	lw	r1,(r30)
  882  00001944  20220001	addi	r2,r1,#1
  883  00001948  afc20000	sw	(r30),r2
  884  0000194c  8fc20004	lw	r2,4(r30)
  885  00001950  20430001	addi	r3,r2,#1
  886  00001954  afc30004	sw	4(r30),r3
  887  00001958  80420000	lb	r2,(r2)
  888  0000195c  a0220000	sb	(r1),r2
  889  00001960  a3c2fff3	sb	-13(r30),r2
  890  00001964          	L12_LF2:
  891  00001964  93c1fff3	lbu	r1,-13(r30)
  892  00001968  64220000	snei	r2,r1,#0
  893  0000196c  1440000c	bnez	r2,L13_LF2
  894  00001970  54000000	nop; delay slot nop
  895  00001974  0800000c	j	L11_LF2
  896  00001978  54000000	nop; delay slot nop
  897  0000197c          	L13_LF2:
  898  0000197c  0bffffc0	j	L10_LF2
  899  00001980  54000000	nop; delay slot nop
  900  00001984          	L11_LF2:
  901  00001984  8fc1fff4	lw	r1,-12(r30)
  902  00001988  08000004	j	L9_LF2
  903  0000198c  54000000	nop; delay slot nop
  904  00001990          	L9_LF2:
  905  00001990  8fa20000	lw	r2,0(r29)
  906  00001994  8fa30004	lw	r3,4(r29)
  907  00001998  8fdffff8	lw	r31,-8(r30)
  908  0000199c  001ee820	add	r29,r0,r30
  909  000019a0  8fdefffc	lw	r30,-4(r30)
  910  000019a4  4be00000	jr	r31
  911  000019a8  54000000	nop
  912  000019ac          	.endproc _dstrcpy
  913  000019ac          	.align 2
  914  000019ac          	.proc _dstrncpy
  915  000019ac          	.global _dstrncpy
  916  000019ac          	_dstrncpy:
  917                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  918  000019ac  afbefffc	sw	-4(r29),r30; push fp
  919  000019b0  001df020	add	r30,r0,r29; fp = sp
  920  000019b4  afbffff8	sw	-8(r29),r31; push ret addr
  921  000019b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  922  000019bc  afa20000	sw	0(r29),r2
  923  000019c0  afa30004	sw	4(r29),r3
  924  000019c4  8fc10000	lw	r1,(r30)
  925  000019c8  afc1fff4	sw	-12(r30),r1
  926  000019cc          	L15_LF2:
  927  000019cc  8fc10008	lw	r1,8(r30)
  928  000019d0  2022ffff	addi	r2,r1,#-1
  929  000019d4  afc20008	sw	8(r30),r2
  930  000019d8  70210000	slei	r1,r1,#0
  931  000019dc  1020000c	beqz	r1,L18_LF2
  932  000019e0  54000000	nop; delay slot nop
  933  000019e4  08000048	j	L16_LF2
  934  000019e8  54000000	nop; delay slot nop
  935  000019ec          	L18_LF2:
  936  000019ec  8fc10000	lw	r1,(r30)
  937  000019f0  20220001	addi	r2,r1,#1
  938  000019f4  afc20000	sw	(r30),r2
  939  000019f8  8fc20004	lw	r2,4(r30)
  940  000019fc  20430001	addi	r3,r2,#1
  941  00001a00  afc30004	sw	4(r30),r3
  942  00001a04  80420000	lb	r2,(r2)
  943  00001a08  a0220000	sb	(r1),r2
  944  00001a0c  a3c2fff3	sb	-13(r30),r2
  945  00001a10          	L17_LF2:
  946  00001a10  93c1fff3	lbu	r1,-13(r30)
  947  00001a14  64220000	snei	r2,r1,#0
  948  00001a18  1440000c	bnez	r2,L19_LF2
  949  00001a1c  54000000	nop; delay slot nop
  950  00001a20  0800000c	j	L16_LF2
  951  00001a24  54000000	nop; delay slot nop
  952  00001a28          	L19_LF2:
  953  00001a28  0bffffa0	j	L15_LF2
  954  00001a2c  54000000	nop; delay slot nop
  955  00001a30          	L16_LF2:
  956  00001a30  8fc1fff4	lw	r1,-12(r30)
  957  00001a34  08000004	j	L14_LF2
  958  00001a38  54000000	nop; delay slot nop
  959  00001a3c          	L14_LF2:
  960  00001a3c  8fa20000	lw	r2,0(r29)
  961  00001a40  8fa30004	lw	r3,4(r29)
  962  00001a44  8fdffff8	lw	r31,-8(r30)
  963  00001a48  001ee820	add	r29,r0,r30
  964  00001a4c  8fdefffc	lw	r30,-4(r30)
  965  00001a50  4be00000	jr	r31
  966  00001a54  54000000	nop
  967  00001a58          	.endproc _dstrncpy
  968  00001a58          	.align 2
  969  00001a58          	.proc _dstrcat
  970  00001a58          	.global _dstrcat
  971  00001a58          	_dstrcat:
  972                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  973  00001a58  afbefffc	sw	-4(r29),r30; push fp
  974  00001a5c  001df020	add	r30,r0,r29; fp = sp
  975  00001a60  afbffff8	sw	-8(r29),r31; push ret addr
  976  00001a64  2fbd0018	subui	r29,r29,#24; alloc local storage
  977  00001a68  afa20000	sw	0(r29),r2
  978  00001a6c  8fc10000	lw	r1,(r30)
  979  00001a70  afc1fff4	sw	-12(r30),r1
  980  00001a74          	L21_LF2:
  981  00001a74  8fc10000	lw	r1,(r30)
  982  00001a78  90220000	lbu	r2,(r1)
  983  00001a7c  64410000	snei	r1,r2,#0
  984  00001a80  1420000c	bnez	r1,L23_LF2
  985  00001a84  54000000	nop; delay slot nop
  986  00001a88  0800001c	j	L22_LF2
  987  00001a8c  54000000	nop; delay slot nop
  988  00001a90          	L23_LF2:
  989  00001a90  8fc20000	lw	r2,(r30)
  990  00001a94  20410001	addi	r1,r2,#1
  991  00001a98  00011020	add	r2,r0,r1
  992  00001a9c  afc20000	sw	(r30),r2
  993  00001aa0  0bffffd0	j	L21_LF2
  994  00001aa4  54000000	nop; delay slot nop
  995  00001aa8          	L22_LF2:
  996  00001aa8  23bdfff8	addi	r29,r29,#-8
  997  00001aac  001d0820	add	r1,r0,r29
  998  00001ab0  8fc20000	lw	r2,(r30)
  999  00001ab4  ac220000	sw	(r1),r2
 1000  00001ab8  8fc20004	lw	r2,4(r30)
 1001  00001abc  ac220004	sw	4(r1),r2
 1002  00001ac0  0ffffe5c	jal	_dstrcpy
 1003  00001ac4  54000000	nop; delay slot nop
 1004  00001ac8  23bd0008	addi	r29,r29,#8
 1005  00001acc  8fc1fff4	lw	r1,-12(r30)
 1006  00001ad0  08000004	j	L20_LF2
 1007  00001ad4  54000000	nop; delay slot nop
 1008  00001ad8          	L20_LF2:
 1009  00001ad8  8fa20000	lw	r2,0(r29)
 1010  00001adc  8fdffff8	lw	r31,-8(r30)
 1011  00001ae0  001ee820	add	r29,r0,r30
 1012  00001ae4  8fdefffc	lw	r30,-4(r30)
 1013  00001ae8  4be00000	jr	r31
 1014  00001aec  54000000	nop
 1015  00001af0          	.endproc _dstrcat
 1016  00001af0          	.align 2
 1017  00001af0          	.proc _dstrncmp
 1018  00001af0          	.global _dstrncmp
 1019  00001af0          	_dstrncmp:
 1020                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1021  00001af0  afbefffc	sw	-4(r29),r30; push fp
 1022  00001af4  001df020	add	r30,r0,r29; fp = sp
 1023  00001af8  afbffff8	sw	-8(r29),r31; push ret addr
 1024  00001afc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1025  00001b00  afa20000	sw	0(r29),r2
 1026  00001b04  afa30004	sw	4(r29),r3
 1027  00001b08  54000000	nop
 1028  00001b0c  20010000	addi	r1,r0,#0
 1029  00001b10  afc1fff4	sw	-12(r30),r1
 1030  00001b14          	L25_LF2:
 1031  00001b14  8fc1fff4	lw	r1,-12(r30)
 1032  00001b18  8fc20008	lw	r2,8(r30)
 1033  00001b1c  0022082a	slt	r1,r1,r2
 1034  00001b20  1420000c	bnez	r1,L28_LF2
 1035  00001b24  54000000	nop; delay slot nop
 1036  00001b28  08000088	j	L26_LF2
 1037  00001b2c  54000000	nop; delay slot nop
 1038  00001b30          	L28_LF2:
 1039  00001b30  8fc10004	lw	r1,4(r30)
 1040  00001b34  90220000	lbu	r2,(r1)
 1041  00001b38  64410000	snei	r1,r2,#0
 1042  00001b3c  14200018	bnez	r1,L29_LF2
 1043  00001b40  54000000	nop; delay slot nop
 1044  00001b44  20010000	addi	r1,r0,#0
 1045  00001b48  080000d8	j	L24_LF2
 1046  00001b4c  54000000	nop; delay slot nop
 1047  00001b50  08000028	j	L30_LF2
 1048  00001b54  54000000	nop; delay slot nop
 1049  00001b58          	L29_LF2:
 1050  00001b58  8fc10000	lw	r1,(r30)
 1051  00001b5c  8fc20004	lw	r2,4(r30)
 1052  00001b60  90210000	lbu	r1,(r1)
 1053  00001b64  90420000	lbu	r2,(r2)
 1054  00001b68  00220829	sne	r1,r1,r2
 1055  00001b6c  1020000c	beqz	r1,L30_LF2
 1056  00001b70  54000000	nop; delay slot nop
 1057  00001b74  0800003c	j	L26_LF2
 1058  00001b78  54000000	nop; delay slot nop
 1059  00001b7c          	L31_LF2:
 1060  00001b7c          	L30_LF2:
 1061  00001b7c  8fc20000	lw	r2,(r30)
 1062  00001b80  20410001	addi	r1,r2,#1
 1063  00001b84  00011020	add	r2,r0,r1
 1064  00001b88  afc20000	sw	(r30),r2
 1065  00001b8c  8fc20004	lw	r2,4(r30)
 1066  00001b90  20410001	addi	r1,r2,#1
 1067  00001b94  00011020	add	r2,r0,r1
 1068  00001b98  afc20004	sw	4(r30),r2
 1069  00001b9c          	L27_LF2:
 1070  00001b9c  8fc2fff4	lw	r2,-12(r30)
 1071  00001ba0  20410001	addi	r1,r2,#1
 1072  00001ba4  00011020	add	r2,r0,r1
 1073  00001ba8  afc2fff4	sw	-12(r30),r2
 1074  00001bac  0bffff64	j	L25_LF2
 1075  00001bb0  54000000	nop; delay slot nop
 1076  00001bb4          	L26_LF2:
 1077  00001bb4  8fc1fff4	lw	r1,-12(r30)
 1078  00001bb8  8fc20008	lw	r2,8(r30)
 1079  00001bbc  00220828	seq	r1,r1,r2
 1080  00001bc0  10200018	beqz	r1,L32_LF2
 1081  00001bc4  54000000	nop; delay slot nop
 1082  00001bc8  20010000	addi	r1,r0,#0
 1083  00001bcc  08000054	j	L24_LF2
 1084  00001bd0  54000000	nop; delay slot nop
 1085  00001bd4  0800004c	j	L33_LF2
 1086  00001bd8  54000000	nop; delay slot nop
 1087  00001bdc          	L32_LF2:
 1088  00001bdc  8fc20000	lw	r2,(r30)
 1089  00001be0  90410000	lbu	r1,(r2)
 1090  00001be4  8fc20004	lw	r2,4(r30)
 1091  00001be8  90430000	lbu	r3,(r2)
 1092  00001bec  00230822	sub	r1,r1,r3
 1093  00001bf0  74220000	sgei	r2,r1,#0
 1094  00001bf4  10400020	beqz	r2,L34_LF2
 1095  00001bf8  54000000	nop; delay slot nop
 1096  00001bfc  8fc10000	lw	r1,(r30)
 1097  00001c00  8fc20004	lw	r2,4(r30)
 1098  00001c04  90210000	lbu	r1,(r1)
 1099  00001c08  90420000	lbu	r2,(r2)
 1100  00001c0c  00220829	sne	r1,r1,r2
 1101  00001c10  08000008	j	L35_LF2
 1102  00001c14  54000000	nop; delay slot nop
 1103  00001c18          	L34_LF2:
 1104  00001c18  2001ffff	addi	r1,r0,#-1
 1105  00001c1c          	L35_LF2:
 1106  00001c1c  08000004	j	L24_LF2
 1107  00001c20  54000000	nop; delay slot nop
 1108  00001c24          	L33_LF2:
 1109  00001c24          	L24_LF2:
 1110  00001c24  8fa20000	lw	r2,0(r29)
 1111  00001c28  8fa30004	lw	r3,4(r29)
 1112  00001c2c  8fdffff8	lw	r31,-8(r30)
 1113  00001c30  001ee820	add	r29,r0,r30
 1114  00001c34  8fdefffc	lw	r30,-4(r30)
 1115  00001c38  4be00000	jr	r31
 1116  00001c3c  54000000	nop
 1117  00001c40          	.endproc _dstrncmp
 1118  00001c40          	.align 2
 1119  00001c40          	.proc _dstrlen
 1120  00001c40          	.global _dstrlen
 1121  00001c40          	_dstrlen:
 1122                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1123  00001c40  afbefffc	sw	-4(r29),r30; push fp
 1124  00001c44  001df020	add	r30,r0,r29; fp = sp
 1125  00001c48  afbffff8	sw	-8(r29),r31; push ret addr
 1126  00001c4c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1127  00001c50  afa20000	sw	0(r29),r2
 1128  00001c54  20010000	addi	r1,r0,#0
 1129  00001c58  afc1fff4	sw	-12(r30),r1
 1130  00001c5c          	L37_LF2:
 1131  00001c5c  8fc10000	lw	r1,(r30)
 1132  00001c60  20220001	addi	r2,r1,#1
 1133  00001c64  afc20000	sw	(r30),r2
 1134  00001c68  90210000	lbu	r1,(r1)
 1135  00001c6c  64220000	snei	r2,r1,#0
 1136  00001c70  1440000c	bnez	r2,L39_LF2
 1137  00001c74  54000000	nop; delay slot nop
 1138  00001c78  0800001c	j	L38_LF2
 1139  00001c7c  54000000	nop; delay slot nop
 1140  00001c80          	L39_LF2:
 1141  00001c80  8fc2fff4	lw	r2,-12(r30)
 1142  00001c84  20410001	addi	r1,r2,#1
 1143  00001c88  00011020	add	r2,r0,r1
 1144  00001c8c  afc2fff4	sw	-12(r30),r2
 1145  00001c90  0bffffc8	j	L37_LF2
 1146  00001c94  54000000	nop; delay slot nop
 1147  00001c98          	L38_LF2:
 1148  00001c98  8fc1fff4	lw	r1,-12(r30)
 1149  00001c9c  08000004	j	L36_LF2
 1150  00001ca0  54000000	nop; delay slot nop
 1151  00001ca4          	L36_LF2:
 1152  00001ca4  8fa20000	lw	r2,0(r29)
 1153  00001ca8  8fdffff8	lw	r31,-8(r30)
 1154  00001cac  001ee820	add	r29,r0,r30
 1155  00001cb0  8fdefffc	lw	r30,-4(r30)
 1156  00001cb4  4be00000	jr	r31
 1157  00001cb8  54000000	nop
 1158  00001cbc          	.endproc _dstrlen
 1159  00001cbc          	.align 2
 1160  00001cbc          	.proc _dstrstr
 1161  00001cbc          	.global _dstrstr
 1162  00001cbc          	_dstrstr:
 1163                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1164  00001cbc  afbefffc	sw	-4(r29),r30; push fp
 1165  00001cc0  001df020	add	r30,r0,r29; fp = sp
 1166  00001cc4  afbffff8	sw	-8(r29),r31; push ret addr
 1167  00001cc8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1168  00001ccc  afa20000	sw	0(r29),r2
 1169  00001cd0  23bdfff8	addi	r29,r29,#-8
 1170  00001cd4  001d0820	add	r1,r0,r29
 1171  00001cd8  8fc20004	lw	r2,4(r30)
 1172  00001cdc  ac220000	sw	(r1),r2
 1173  00001ce0  0fffff5c	jal	_dstrlen
 1174  00001ce4  54000000	nop; delay slot nop
 1175  00001ce8  23bd0008	addi	r29,r29,#8
 1176  00001cec  afc1fff4	sw	-12(r30),r1
 1177  00001cf0          	L41_LF2:
 1178  00001cf0  8fc10000	lw	r1,(r30)
 1179  00001cf4  90220000	lbu	r2,(r1)
 1180  00001cf8  64410000	snei	r1,r2,#0
 1181  00001cfc  1420000c	bnez	r1,L43_LF2
 1182  00001d00  54000000	nop; delay slot nop
 1183  00001d04  08000060	j	L42_LF2
 1184  00001d08  54000000	nop; delay slot nop
 1185  00001d0c          	L43_LF2:
 1186  00001d0c  23bdfff0	addi	r29,r29,#-16
 1187  00001d10  001d0820	add	r1,r0,r29
 1188  00001d14  8fc20000	lw	r2,(r30)
 1189  00001d18  ac220000	sw	(r1),r2
 1190  00001d1c  8fc20004	lw	r2,4(r30)
 1191  00001d20  ac220004	sw	4(r1),r2
 1192  00001d24  8fc2fff4	lw	r2,-12(r30)
 1193  00001d28  ac220008	sw	8(r1),r2
 1194  00001d2c  0ffffdc0	jal	_dstrncmp
 1195  00001d30  54000000	nop; delay slot nop
 1196  00001d34  23bd0010	addi	r29,r29,#16
 1197  00001d38  64220000	snei	r2,r1,#0
 1198  00001d3c  14400010	bnez	r2,L44_LF2
 1199  00001d40  54000000	nop; delay slot nop
 1200  00001d44  8fc10000	lw	r1,(r30)
 1201  00001d48  08000028	j	L40_LF2
 1202  00001d4c  54000000	nop; delay slot nop
 1203  00001d50          	L44_LF2:
 1204  00001d50  8fc20000	lw	r2,(r30)
 1205  00001d54  20410001	addi	r1,r2,#1
 1206  00001d58  00011020	add	r2,r0,r1
 1207  00001d5c  afc20000	sw	(r30),r2
 1208  00001d60  0bffff8c	j	L41_LF2
 1209  00001d64  54000000	nop; delay slot nop
 1210  00001d68          	L42_LF2:
 1211  00001d68  20010000	addi	r1,r0,#0
 1212  00001d6c  08000004	j	L40_LF2
 1213  00001d70  54000000	nop; delay slot nop
 1214  00001d74          	L40_LF2:
 1215  00001d74  8fa20000	lw	r2,0(r29)
 1216  00001d78  8fdffff8	lw	r31,-8(r30)
 1217  00001d7c  001ee820	add	r29,r0,r30
 1218  00001d80  8fdefffc	lw	r30,-4(r30)
 1219  00001d84  4be00000	jr	r31
 1220  00001d88  54000000	nop
 1221  00001d8c          	.endproc _dstrstr
 1222  00001d8c          	.align 2
 1223  00001d8c          	.proc _dmindex
 1224  00001d8c          	.global _dmindex
 1225  00001d8c          	_dmindex:
 1226                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1227  00001d8c  afbefffc	sw	-4(r29),r30; push fp
 1228  00001d90  001df020	add	r30,r0,r29; fp = sp
 1229  00001d94  afbffff8	sw	-8(r29),r31; push ret addr
 1230  00001d98  2fbd0018	subui	r29,r29,#24; alloc local storage
 1231  00001d9c  afa20000	sw	0(r29),r2
 1232  00001da0  54000000	nop
 1233  00001da4          	L46_LF2:
 1234  00001da4  8fc10000	lw	r1,(r30)
 1235  00001da8  90220000	lbu	r2,(r1)
 1236  00001dac  64410000	snei	r1,r2,#0
 1237  00001db0  1420000c	bnez	r1,L48_LF2
 1238  00001db4  54000000	nop; delay slot nop
 1239  00001db8  08000070	j	L47_LF2
 1240  00001dbc  54000000	nop; delay slot nop
 1241  00001dc0          	L48_LF2:
 1242  00001dc0  8fc10004	lw	r1,4(r30)
 1243  00001dc4  afc1fff4	sw	-12(r30),r1
 1244  00001dc8          	L49_LF2:
 1245  00001dc8  8fc1fff4	lw	r1,-12(r30)
 1246  00001dcc  90220000	lbu	r2,(r1)
 1247  00001dd0  64410000	snei	r1,r2,#0
 1248  00001dd4  1420000c	bnez	r1,L52_LF2
 1249  00001dd8  54000000	nop; delay slot nop
 1250  00001ddc  08000044	j	L50_LF2
 1251  00001de0  54000000	nop; delay slot nop
 1252  00001de4          	L52_LF2:
 1253  00001de4  8fc10000	lw	r1,(r30)
 1254  00001de8  8fc2fff4	lw	r2,-12(r30)
 1255  00001dec  90210000	lbu	r1,(r1)
 1256  00001df0  90420000	lbu	r2,(r2)
 1257  00001df4  00220828	seq	r1,r1,r2
 1258  00001df8  10200010	beqz	r1,L51_LF2
 1259  00001dfc  54000000	nop; delay slot nop
 1260  00001e00  8fc10000	lw	r1,(r30)
 1261  00001e04  08000030	j	L45_LF2
 1262  00001e08  54000000	nop; delay slot nop
 1263  00001e0c          	L53_LF2:
 1264  00001e0c          	L51_LF2:
 1265  00001e0c  8fc2fff4	lw	r2,-12(r30)
 1266  00001e10  20410001	addi	r1,r2,#1
 1267  00001e14  00011020	add	r2,r0,r1
 1268  00001e18  afc2fff4	sw	-12(r30),r2
 1269  00001e1c  0bffffa8	j	L49_LF2
 1270  00001e20  54000000	nop; delay slot nop
 1271  00001e24          	L50_LF2:
 1272  00001e24  0bffff7c	j	L46_LF2
 1273  00001e28  54000000	nop; delay slot nop
 1274  00001e2c          	L47_LF2:
 1275  00001e2c  20010000	addi	r1,r0,#0
 1276  00001e30  08000004	j	L45_LF2
 1277  00001e34  54000000	nop; delay slot nop
 1278  00001e38          	L45_LF2:
 1279  00001e38  8fa20000	lw	r2,0(r29)
 1280  00001e3c  8fdffff8	lw	r31,-8(r30)
 1281  00001e40  001ee820	add	r29,r0,r30
 1282  00001e44  8fdefffc	lw	r30,-4(r30)
 1283  00001e48  4be00000	jr	r31
 1284  00001e4c  54000000	nop
 1285  00001e50          	.endproc _dmindex
 1286  00001e50          	.align 2
 1287  00001e50          	.proc _dindex
 1288  00001e50          	.global _dindex
 1289  00001e50          	_dindex:
 1290                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1291  00001e50  afbefffc	sw	-4(r29),r30; push fp
 1292  00001e54  001df020	add	r30,r0,r29; fp = sp
 1293  00001e58  afbffff8	sw	-8(r29),r31; push ret addr
 1294  00001e5c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1295  00001e60  afa20000	sw	0(r29),r2
 1296  00001e64  54000000	nop
 1297  00001e68          	L55_LF2:
 1298  00001e68  8fc10000	lw	r1,(r30)
 1299  00001e6c  90220000	lbu	r2,(r1)
 1300  00001e70  64410000	snei	r1,r2,#0
 1301  00001e74  1420000c	bnez	r1,L57_LF2
 1302  00001e78  54000000	nop; delay slot nop
 1303  00001e7c  08000040	j	L56_LF2
 1304  00001e80  54000000	nop; delay slot nop
 1305  00001e84          	L57_LF2:
 1306  00001e84  8fc10000	lw	r1,(r30)
 1307  00001e88  90220000	lbu	r2,(r1)
 1308  00001e8c  8fc10004	lw	r1,4(r30)
 1309  00001e90  00411028	seq	r2,r2,r1
 1310  00001e94  10400010	beqz	r2,L58_LF2
 1311  00001e98  54000000	nop; delay slot nop
 1312  00001e9c  8fc10000	lw	r1,(r30)
 1313  00001ea0  08000028	j	L54_LF2
 1314  00001ea4  54000000	nop; delay slot nop
 1315  00001ea8          	L58_LF2:
 1316  00001ea8  8fc20000	lw	r2,(r30)
 1317  00001eac  20410001	addi	r1,r2,#1
 1318  00001eb0  00011020	add	r2,r0,r1
 1319  00001eb4  afc20000	sw	(r30),r2
 1320  00001eb8  0bffffac	j	L55_LF2
 1321  00001ebc  54000000	nop; delay slot nop
 1322  00001ec0          	L56_LF2:
 1323  00001ec0  20010000	addi	r1,r0,#0
 1324  00001ec4  08000004	j	L54_LF2
 1325  00001ec8  54000000	nop; delay slot nop
 1326  00001ecc          	L54_LF2:
 1327  00001ecc  8fa20000	lw	r2,0(r29)
 1328  00001ed0  8fdffff8	lw	r31,-8(r30)
 1329  00001ed4  001ee820	add	r29,r0,r30
 1330  00001ed8  8fdefffc	lw	r30,-4(r30)
 1331  00001edc  4be00000	jr	r31
 1332  00001ee0  54000000	nop
 1333  00001ee4          	.endproc _dindex
 1334  00001ee4          	.align 2
 1335  00001ee4          	.proc _ditoa
 1336  00001ee4          	.global _ditoa
 1337  00001ee4          	_ditoa:
 1338                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1339  00001ee4  afbefffc	sw	-4(r29),r30; push fp
 1340  00001ee8  001df020	add	r30,r0,r29; fp = sp
 1341  00001eec  afbffff8	sw	-8(r29),r31; push ret addr
 1342  00001ef0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1343  00001ef4  afa20000	sw	0(r29),r2
 1344  00001ef8  afa30004	sw	4(r29),r3
 1345  00001efc  8fc10000	lw	r1,(r30)
 1346  00001f00  68220000	slti	r2,r1,#0
 1347  00001f04  1040002c	beqz	r2,L60_LF2
 1348  00001f08  54000000	nop; delay slot nop
 1349  00001f0c  8fc10004	lw	r1,4(r30)
 1350  00001f10  20220001	addi	r2,r1,#1
 1351  00001f14  afc20004	sw	4(r30),r2
 1352  00001f18  2002002d	addi	r2,r0,(#0x2d)&0xff
 1353  00001f1c  a0220000	sb	(r1),r2
 1354  00001f20  8fc10000	lw	r1,(r30)
 1355  00001f24  00011022	sub	r2,r0,r1
 1356  00001f28  afc20000	sw	(r30),r2
 1357  00001f2c  08000118	j	L61_LF2
 1358  00001f30  54000000	nop; delay slot nop
 1359  00001f34          	L60_LF2:
 1360  00001f34  8fc10000	lw	r1,(r30)
 1361  00001f38  64220000	snei	r2,r1,#0
 1362  00001f3c  14400020	bnez	r2,L62_LF2
 1363  00001f40  54000000	nop; delay slot nop
 1364  00001f44  8fc10004	lw	r1,4(r30)
 1365  00001f48  20220001	addi	r2,r1,#1
 1366  00001f4c  afc20004	sw	4(r30),r2
 1367  00001f50  20020030	addi	r2,r0,(#0x30)&0xff
 1368  00001f54  a0220000	sb	(r1),r2
 1369  00001f58  080000ec	j	L61_LF2
 1370  00001f5c  54000000	nop; delay slot nop
 1371  00001f60          	L62_LF2:
 1372  00001f60  20010001	addi	r1,r0,#1
 1373  00001f64  afc1fff4	sw	-12(r30),r1
 1374  00001f68          	L64_LF2:
 1375  00001f68  8fc1fff4	lw	r1,-12(r30)
 1376  00001f6c  8fc20000	lw	r2,(r30)
 1377  00001f70  0022082c	sle	r1,r1,r2
 1378  00001f74  1420000c	bnez	r1,L66_LF2
 1379  00001f78  54000000	nop; delay slot nop
 1380  00001f7c  08000024	j	L65_LF2
 1381  00001f80  54000000	nop; delay slot nop
 1382  00001f84          	L67_LF2:
 1383  00001f84          	L66_LF2:
 1384  00001f84  8fc1fff4	lw	r1,-12(r30)
 1385  00001f88  00011820	add	r3,r0,r1
 1386  00001f8c  50620002	slli	r2,r3,#0x2
 1387  00001f90  00411020	add	r2,r2,r1
 1388  00001f94  50410001	slli	r1,r2,#0x1
 1389  00001f98  afc1fff4	sw	-12(r30),r1
 1390  00001f9c  0bffffc8	j	L64_LF2
 1391  00001fa0  54000000	nop; delay slot nop
 1392  00001fa4          	L65_LF2:
 1393  00001fa4  54000000	nop
 1394  00001fa8          	L68_LF2:
 1395  00001fa8  8fc1fff4	lw	r1,-12(r30)
 1396  00001fac  2002000a	addi	r2,r0,#10
 1397  00001fb0  00200035	movi2fp	f0,r1
 1398  00001fb4  00400835	movi2fp	f1,r2
 1399  00001fb8  0401000f	div	f0,f0,f1
 1400  00001fbc  00000834	movfp2i	r1,f0
 1401  00001fc0  afc1fff4	sw	-12(r30),r1
 1402  00001fc4  8fc10004	lw	r1,4(r30)
 1403  00001fc8  20220001	addi	r2,r1,#1
 1404  00001fcc  afc20004	sw	4(r30),r2
 1405  00001fd0  8fc20000	lw	r2,(r30)
 1406  00001fd4  8fc3fff4	lw	r3,-12(r30)
 1407  00001fd8  00400035	movi2fp	f0,r2
 1408  00001fdc  00600835	movi2fp	f1,r3
 1409  00001fe0  0401000f	div	f0,f0,f1
 1410  00001fe4  00001034	movfp2i	r2,f0
 1411  00001fe8  00021820	add	r3,r0,r2
 1412  00001fec  20620030	addi	r2,r3,#48
 1413  00001ff0  a0220000	sb	(r1),r2
 1414  00001ff4  8fc10000	lw	r1,(r30)
 1415  00001ff8  8fc3fff4	lw	r3,-12(r30)
 1416  00001ffc  00200035	movi2fp	f0,r1
 1417  00002000  00600835	movi2fp	f1,r3
 1418  00002004  0401000f	div	f0,f0,f1
 1419  00002008  00001034	movfp2i	r2,f0
 1420  0000200c  8fc3fff4	lw	r3,-12(r30)
 1421  00002010  00400035	movi2fp	f0,r2
 1422  00002014  00600835	movi2fp	f1,r3
 1423  00002018  0401000e	mult	f0,f0,f1
 1424  0000201c  00001034	movfp2i	r2,f0
 1425  00002020  00220822	sub	r1,r1,r2
 1426  00002024  afc10000	sw	(r30),r1
 1427  00002028          	L70_LF2:
 1428  00002028  8fc1fff4	lw	r1,-12(r30)
 1429  0000202c  6c220001	sgti	r2,r1,#1
 1430  00002030  1440000c	bnez	r2,L71_LF2
 1431  00002034  54000000	nop; delay slot nop
 1432  00002038  0800000c	j	L61_LF2
 1433  0000203c  54000000	nop; delay slot nop
 1434  00002040          	L71_LF2:
 1435  00002040  0bffff64	j	L68_LF2
 1436  00002044  54000000	nop; delay slot nop
 1437  00002048          	L69_LF2:
 1438  00002048          	L63_LF2:
 1439  00002048          	L61_LF2:
 1440  00002048  8fc10004	lw	r1,4(r30)
 1441  0000204c  20020000	addi	r2,r0,(#0x0)&0xff
 1442  00002050  a0220000	sb	(r1),r2
 1443  00002054          	L59_LF2:
 1444  00002054  8fa20000	lw	r2,0(r29)
 1445  00002058  8fa30004	lw	r3,4(r29)
 1446  0000205c  8fdffff8	lw	r31,-8(r30)
 1447  00002060  001ee820	add	r29,r0,r30
 1448  00002064  8fdefffc	lw	r30,-4(r30)
 1449  00002068  4be00000	jr	r31
 1450  0000206c  54000000	nop
 1451  00002070          	.endproc _ditoa
 1452  00002070          	.align 2
 1453  00002070          	.proc _dstrtol
 1454  00002070          	.global _dstrtol
 1455  00002070          	_dstrtol:
 1456                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1457  00002070  afbefffc	sw	-4(r29),r30; push fp
 1458  00002074  001df020	add	r30,r0,r29; fp = sp
 1459  00002078  afbffff8	sw	-8(r29),r31; push ret addr
 1460  0000207c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1461  00002080  afa20000	sw	0(r29),r2
 1462  00002084  20010000	addi	r1,r0,#0
 1463  00002088  afc1fff4	sw	-12(r30),r1
 1464  0000208c          	L73_LF2:
 1465  0000208c  8fc10000	lw	r1,(r30)
 1466  00002090  90220000	lbu	r2,(r1)
 1467  00002094  60410020	seqi	r1,r2,#32
 1468  00002098  14200034	bnez	r1,L75_LF2
 1469  0000209c  54000000	nop; delay slot nop
 1470  000020a0  8fc10000	lw	r1,(r30)
 1471  000020a4  90220000	lbu	r2,(r1)
 1472  000020a8  60410009	seqi	r1,r2,#9
 1473  000020ac  14200020	bnez	r1,L75_LF2
 1474  000020b0  54000000	nop; delay slot nop
 1475  000020b4  8fc10000	lw	r1,(r30)
 1476  000020b8  90220000	lbu	r2,(r1)
 1477  000020bc  6041000a	seqi	r1,r2,#10
 1478  000020c0  1420000c	bnez	r1,L75_LF2
 1479  000020c4  54000000	nop; delay slot nop
 1480  000020c8  0800001c	j	L74_LF2
 1481  000020cc  54000000	nop; delay slot nop
 1482  000020d0          	L75_LF2:
 1483  000020d0  8fc20000	lw	r2,(r30)
 1484  000020d4  20410001	addi	r1,r2,#1
 1485  000020d8  00011020	add	r2,r0,r1
 1486  000020dc  afc20000	sw	(r30),r2
 1487  000020e0  0bffffa8	j	L73_LF2
 1488  000020e4  54000000	nop; delay slot nop
 1489  000020e8          	L74_LF2:
 1490  000020e8  8fc10004	lw	r1,4(r30)
 1491  000020ec  64220000	snei	r2,r1,#0
 1492  000020f0  10400010	beqz	r2,L76_LF2
 1493  000020f4  54000000	nop; delay slot nop
 1494  000020f8  8fc10004	lw	r1,4(r30)
 1495  000020fc  8fc20000	lw	r2,(r30)
 1496  00002100  ac220000	sw	(r1),r2
 1497  00002104          	L76_LF2:
 1498  00002104  8fc10000	lw	r1,(r30)
 1499  00002108  90220000	lbu	r2,(r1)
 1500  0000210c  64410000	snei	r1,r2,#0
 1501  00002110  14200010	bnez	r1,L77_LF2
 1502  00002114  54000000	nop; delay slot nop
 1503  00002118  8fc1fff4	lw	r1,-12(r30)
 1504  0000211c  08000294	j	L72_LF2
 1505  00002120  54000000	nop; delay slot nop
 1506  00002124          	L77_LF2:
 1507  00002124  8fc10000	lw	r1,(r30)
 1508  00002128  90220000	lbu	r2,(r1)
 1509  0000212c  6041002d	seqi	r1,r2,#45
 1510  00002130  10200024	beqz	r1,L78_LF2
 1511  00002134  54000000	nop; delay slot nop
 1512  00002138  2001ffff	addi	r1,r0,#-1
 1513  0000213c  afc1ffec	sw	-20(r30),r1
 1514  00002140  8fc20000	lw	r2,(r30)
 1515  00002144  20410001	addi	r1,r2,#1
 1516  00002148  00011020	add	r2,r0,r1
 1517  0000214c  afc20000	sw	(r30),r2
 1518  00002150  0800000c	j	L79_LF2
 1519  00002154  54000000	nop; delay slot nop
 1520  00002158          	L78_LF2:
 1521  00002158  20010001	addi	r1,r0,#1
 1522  0000215c  afc1ffec	sw	-20(r30),r1
 1523  00002160          	L79_LF2:
 1524  00002160  8fc10008	lw	r1,8(r30)
 1525  00002164  64220000	snei	r2,r1,#0
 1526  00002168  14400090	bnez	r2,L80_LF2
 1527  0000216c  54000000	nop; delay slot nop
 1528  00002170  8fc10000	lw	r1,(r30)
 1529  00002174  90220000	lbu	r2,(r1)
 1530  00002178  60410030	seqi	r1,r2,#48
 1531  0000217c  10200074	beqz	r1,L81_LF2
 1532  00002180  54000000	nop; delay slot nop
 1533  00002184  8fc20000	lw	r2,(r30)
 1534  00002188  20410001	addi	r1,r2,#1
 1535  0000218c  00011020	add	r2,r0,r1
 1536  00002190  afc20000	sw	(r30),r2
 1537  00002194  8fc10000	lw	r1,(r30)
 1538  00002198  90220000	lbu	r2,(r1)
 1539  0000219c  60410078	seqi	r1,r2,#120
 1540  000021a0  14200020	bnez	r1,L83_LF2
 1541  000021a4  54000000	nop; delay slot nop
 1542  000021a8  8fc10000	lw	r1,(r30)
 1543  000021ac  90220000	lbu	r2,(r1)
 1544  000021b0  60410058	seqi	r1,r2,#88
 1545  000021b4  1420000c	bnez	r1,L83_LF2
 1546  000021b8  54000000	nop; delay slot nop
 1547  000021bc  08000024	j	L82_LF2
 1548  000021c0  54000000	nop; delay slot nop
 1549  000021c4          	L83_LF2:
 1550  000021c4  20010010	addi	r1,r0,#16
 1551  000021c8  afc10008	sw	8(r30),r1
 1552  000021cc  8fc20000	lw	r2,(r30)
 1553  000021d0  20410001	addi	r1,r2,#1
 1554  000021d4  00011020	add	r2,r0,r1
 1555  000021d8  afc20000	sw	(r30),r2
 1556  000021dc  0800000c	j	L84_LF2
 1557  000021e0  54000000	nop; delay slot nop
 1558  000021e4          	L82_LF2:
 1559  000021e4  20010008	addi	r1,r0,#8
 1560  000021e8  afc10008	sw	8(r30),r1
 1561  000021ec          	L84_LF2:
 1562  000021ec  0800000c	j	L80_LF2
 1563  000021f0  54000000	nop; delay slot nop
 1564  000021f4          	L81_LF2:
 1565  000021f4  2001000a	addi	r1,r0,#10
 1566  000021f8  afc10008	sw	8(r30),r1
 1567  000021fc          	L85_LF2:
 1568  000021fc          	L80_LF2:
 1569  000021fc  8fc10008	lw	r1,8(r30)
 1570  00002200  70220000	slei	r2,r1,#0
 1571  00002204  1440001c	bnez	r2,L87_LF2
 1572  00002208  54000000	nop; delay slot nop
 1573  0000220c  8fc10008	lw	r1,8(r30)
 1574  00002210  6c220010	sgti	r2,r1,#16
 1575  00002214  1440000c	bnez	r2,L87_LF2
 1576  00002218  54000000	nop; delay slot nop
 1577  0000221c  08000010	j	L86_LF2
 1578  00002220  54000000	nop; delay slot nop
 1579  00002224          	L87_LF2:
 1580  00002224  8fc1fff4	lw	r1,-12(r30)
 1581  00002228  08000188	j	L72_LF2
 1582  0000222c  54000000	nop; delay slot nop
 1583  00002230          	L86_LF2:
 1584  00002230  54000000	nop
 1585  00002234          	L88_LF2:
 1586  00002234  8fc10000	lw	r1,(r30)
 1587  00002238  90220000	lbu	r2,(r1)
 1588  0000223c  6c41002f	sgtui	r1,r2,#47
 1589  00002240  10200030	beqz	r1,L91_LF2
 1590  00002244  54000000	nop; delay slot nop
 1591  00002248  8fc10000	lw	r1,(r30)
 1592  0000224c  90220000	lbu	r2,(r1)
 1593  00002250  70410039	sleui	r1,r2,#57
 1594  00002254  1020001c	beqz	r1,L91_LF2
 1595  00002258  54000000	nop; delay slot nop
 1596  0000225c  8fc10000	lw	r1,(r30)
 1597  00002260  90220000	lbu	r2,(r1)
 1598  00002264  2041ffd0	addi	r1,r2,#-48
 1599  00002268  afc1fff0	sw	-16(r30),r1
 1600  0000226c  0800008c	j	L92_LF2
 1601  00002270  54000000	nop; delay slot nop
 1602  00002274          	L91_LF2:
 1603  00002274  8fc10000	lw	r1,(r30)
 1604  00002278  90220000	lbu	r2,(r1)
 1605  0000227c  6c410060	sgtui	r1,r2,#96
 1606  00002280  10200030	beqz	r1,L93_LF2
 1607  00002284  54000000	nop; delay slot nop
 1608  00002288  8fc10000	lw	r1,(r30)
 1609  0000228c  90220000	lbu	r2,(r1)
 1610  00002290  7041007a	sleui	r1,r2,#122
 1611  00002294  1020001c	beqz	r1,L93_LF2
 1612  00002298  54000000	nop; delay slot nop
 1613  0000229c  8fc10000	lw	r1,(r30)
 1614  000022a0  90220000	lbu	r2,(r1)
 1615  000022a4  2041ffa9	addi	r1,r2,#-87
 1616  000022a8  afc1fff0	sw	-16(r30),r1
 1617  000022ac  0800004c	j	L92_LF2
 1618  000022b0  54000000	nop; delay slot nop
 1619  000022b4          	L93_LF2:
 1620  000022b4  8fc10000	lw	r1,(r30)
 1621  000022b8  90220000	lbu	r2,(r1)
 1622  000022bc  6c410040	sgtui	r1,r2,#64
 1623  000022c0  10200030	beqz	r1,L95_LF2
 1624  000022c4  54000000	nop; delay slot nop
 1625  000022c8  8fc10000	lw	r1,(r30)
 1626  000022cc  90220000	lbu	r2,(r1)
 1627  000022d0  7041005a	sleui	r1,r2,#90
 1628  000022d4  1020001c	beqz	r1,L95_LF2
 1629  000022d8  54000000	nop; delay slot nop
 1630  000022dc  8fc10000	lw	r1,(r30)
 1631  000022e0  90220000	lbu	r2,(r1)
 1632  000022e4  2041ffc9	addi	r1,r2,#-55
 1633  000022e8  afc1fff0	sw	-16(r30),r1
 1634  000022ec  0800000c	j	L92_LF2
 1635  000022f0  54000000	nop; delay slot nop
 1636  000022f4          	L95_LF2:
 1637  000022f4  200103e8	addi	r1,r0,#1000
 1638  000022f8  afc1fff0	sw	-16(r30),r1
 1639  000022fc          	L96_LF2:
 1640  000022fc          	L94_LF2:
 1641  000022fc          	L92_LF2:
 1642  000022fc  8fc1fff0	lw	r1,-16(r30)
 1643  00002300  8fc20008	lw	r2,8(r30)
 1644  00002304  0022082a	slt	r1,r1,r2
 1645  00002308  10200040	beqz	r1,L90_LF2
 1646  0000230c  54000000	nop; delay slot nop
 1647  00002310  8fc1fff4	lw	r1,-12(r30)
 1648  00002314  8fc20008	lw	r2,8(r30)
 1649  00002318  00200035	movi2fp	f0,r1
 1650  0000231c  00400835	movi2fp	f1,r2
 1651  00002320  0401000e	mult	f0,f0,f1
 1652  00002324  00000834	movfp2i	r1,f0
 1653  00002328  afc1fff4	sw	-12(r30),r1
 1654  0000232c  8fc1fff4	lw	r1,-12(r30)
 1655  00002330  8fc2fff0	lw	r2,-16(r30)
 1656  00002334  00220820	add	r1,r1,r2
 1657  00002338  afc1fff4	sw	-12(r30),r1
 1658  0000233c  8fc20000	lw	r2,(r30)
 1659  00002340  20410001	addi	r1,r2,#1
 1660  00002344  00011020	add	r2,r0,r1
 1661  00002348  afc20000	sw	(r30),r2
 1662  0000234c          	L97_LF2:
 1663  0000234c          	L90_LF2:
 1664  0000234c  8fc1fff0	lw	r1,-16(r30)
 1665  00002350  8fc20008	lw	r2,8(r30)
 1666  00002354  0022082a	slt	r1,r1,r2
 1667  00002358  1420000c	bnez	r1,L98_LF2
 1668  0000235c  54000000	nop; delay slot nop
 1669  00002360  0800000c	j	L89_LF2
 1670  00002364  54000000	nop; delay slot nop
 1671  00002368          	L98_LF2:
 1672  00002368  0bfffec8	j	L88_LF2
 1673  0000236c  54000000	nop; delay slot nop
 1674  00002370          	L89_LF2:
 1675  00002370  8fc10004	lw	r1,4(r30)
 1676  00002374  64220000	snei	r2,r1,#0
 1677  00002378  10400010	beqz	r2,L99_LF2
 1678  0000237c  54000000	nop; delay slot nop
 1679  00002380  8fc10004	lw	r1,4(r30)
 1680  00002384  8fc20000	lw	r2,(r30)
 1681  00002388  ac220000	sw	(r1),r2
 1682  0000238c          	L99_LF2:
 1683  0000238c  8fc1fff4	lw	r1,-12(r30)
 1684  00002390  8fc2ffec	lw	r2,-20(r30)
 1685  00002394  00200035	movi2fp	f0,r1
 1686  00002398  00400835	movi2fp	f1,r2
 1687  0000239c  0401000e	mult	f0,f0,f1
 1688  000023a0  00000834	movfp2i	r1,f0
 1689  000023a4  afc1fff4	sw	-12(r30),r1
 1690  000023a8  8fc1fff4	lw	r1,-12(r30)
 1691  000023ac  08000004	j	L72_LF2
 1692  000023b0  54000000	nop; delay slot nop
 1693  000023b4          	L72_LF2:
 1694  000023b4  8fa20000	lw	r2,0(r29)
 1695  000023b8  8fdffff8	lw	r31,-8(r30)
 1696  000023bc  001ee820	add	r29,r0,r30
 1697  000023c0  8fdefffc	lw	r30,-4(r30)
 1698  000023c4  4be00000	jr	r31
 1699  000023c8  54000000	nop
 1700  000023cc          	.endproc _dstrtol
 1701  000023cc          	.align 2
 1702  000023cc          	.proc _bcopy
 1703  000023cc          	.global _bcopy
 1704  000023cc          	_bcopy:
 1705                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1706  000023cc  afbefffc	sw	-4(r29),r30; push fp
 1707  000023d0  001df020	add	r30,r0,r29; fp = sp
 1708  000023d4  afbffff8	sw	-8(r29),r31; push ret addr
 1709  000023d8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1710  000023dc  afa20000	sw	0(r29),r2
 1711  000023e0  afa30004	sw	4(r29),r3
 1712  000023e4  54000000	nop
 1713  000023e8          	L101_LF2:
 1714  000023e8  8fc10008	lw	r1,8(r30)
 1715  000023ec  2022ffff	addi	r2,r1,#-1
 1716  000023f0  afc20008	sw	8(r30),r2
 1717  000023f4  6c210000	sgti	r1,r1,#0
 1718  000023f8  1420000c	bnez	r1,L103_LF2
 1719  000023fc  54000000	nop; delay slot nop
 1720  00002400  0800002c	j	L102_LF2
 1721  00002404  54000000	nop; delay slot nop
 1722  00002408          	L103_LF2:
 1723  00002408  8fc10004	lw	r1,4(r30)
 1724  0000240c  20220001	addi	r2,r1,#1
 1725  00002410  afc20004	sw	4(r30),r2
 1726  00002414  8fc20000	lw	r2,(r30)
 1727  00002418  20430001	addi	r3,r2,#1
 1728  0000241c  afc30000	sw	(r30),r3
 1729  00002420  80420000	lb	r2,(r2)
 1730  00002424  a0220000	sb	(r1),r2
 1731  00002428  0bffffbc	j	L101_LF2
 1732  0000242c  54000000	nop; delay slot nop
 1733  00002430          	L102_LF2:
 1734  00002430          	L100_LF2:
 1735  00002430  8fa20000	lw	r2,0(r29)
 1736  00002434  8fa30004	lw	r3,4(r29)
 1737  00002438  8fdffff8	lw	r31,-8(r30)
 1738  0000243c  001ee820	add	r29,r0,r30
 1739  00002440  8fdefffc	lw	r30,-4(r30)
 1740  00002444  4be00000	jr	r31
 1741  00002448  54000000	nop
 1742  0000244c          	.endproc _bcopy
 1743  0000244c          	.align 2
 1744  0000244c          	.proc _bzero
 1745  0000244c          	.global _bzero
 1746  0000244c          	_bzero:
 1747                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1748  0000244c  afbefffc	sw	-4(r29),r30; push fp
 1749  00002450  001df020	add	r30,r0,r29; fp = sp
 1750  00002454  afbffff8	sw	-8(r29),r31; push ret addr
 1751  00002458  2fbd0010	subui	r29,r29,#16; alloc local storage
 1752  0000245c  afa20000	sw	0(r29),r2
 1753  00002460  54000000	nop
 1754  00002464          	L105_LF2:
 1755  00002464  8fc10004	lw	r1,4(r30)
 1756  00002468  2022ffff	addi	r2,r1,#-1
 1757  0000246c  afc20004	sw	4(r30),r2
 1758  00002470  6c210000	sgti	r1,r1,#0
 1759  00002474  1420000c	bnez	r1,L107_LF2
 1760  00002478  54000000	nop; delay slot nop
 1761  0000247c  08000020	j	L106_LF2
 1762  00002480  54000000	nop; delay slot nop
 1763  00002484          	L107_LF2:
 1764  00002484  8fc10000	lw	r1,(r30)
 1765  00002488  20220001	addi	r2,r1,#1
 1766  0000248c  afc20000	sw	(r30),r2
 1767  00002490  20020000	addi	r2,r0,(#0x0)&0xff
 1768  00002494  a0220000	sb	(r1),r2
 1769  00002498  0bffffc8	j	L105_LF2
 1770  0000249c  54000000	nop; delay slot nop
 1771  000024a0          	L106_LF2:
 1772  000024a0          	L104_LF2:
 1773  000024a0  8fa20000	lw	r2,0(r29)
 1774  000024a4  8fdffff8	lw	r31,-8(r30)
 1775  000024a8  001ee820	add	r29,r0,r30
 1776  000024ac  8fdefffc	lw	r30,-4(r30)
 1777  000024b0  4be00000	jr	r31
 1778  000024b4  54000000	nop
 1779  000024b8          	.endproc _bzero
 1780  000024b8          	.align 2
 1781  000024b8          	.proc _min
 1782  000024b8          	.global _min
 1783  000024b8          	_min:
 1784                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1785  000024b8  afbefffc	sw	-4(r29),r30; push fp
 1786  000024bc  001df020	add	r30,r0,r29; fp = sp
 1787  000024c0  afbffff8	sw	-8(r29),r31; push ret addr
 1788  000024c4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1789  000024c8  afa20000	sw	0(r29),r2
 1790  000024cc  afa30004	sw	4(r29),r3
 1791  000024d0  8fc10000	lw	r1,(r30)
 1792  000024d4  8fc20004	lw	r2,4(r30)
 1793  000024d8  0022182c	sle	r3,r1,r2
 1794  000024dc  14600008	bnez	r3,L109_LF2
 1795  000024e0  54000000	nop; delay slot nop
 1796  000024e4  8fc10004	lw	r1,4(r30)
 1797  000024e8          	L109_LF2:
 1798  000024e8  08000004	j	L108_LF2
 1799  000024ec  54000000	nop; delay slot nop
 1800  000024f0          	L108_LF2:
 1801  000024f0  8fa20000	lw	r2,0(r29)
 1802  000024f4  8fa30004	lw	r3,4(r29)
 1803  000024f8  8fdffff8	lw	r31,-8(r30)
 1804  000024fc  001ee820	add	r29,r0,r30
 1805  00002500  8fdefffc	lw	r30,-4(r30)
 1806  00002504  4be00000	jr	r31
 1807  00002508  54000000	nop
 1808  0000250c          	.endproc _min
 1809                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1810                      ;;;
 1811                      ;;; Most of the traps are called in files from libtraps.
 1814  0000250c          	.align 2
 1815  0000250c          	.proc _exit
 1816  0000250c          	.global _exit
 1817  0000250c          	_exit:
 1818  0000250c  44000300	trap	#0x300
 1819  00002510  4be00000	jr	r31
 1820  00002514  54000000	nop
 1821  00002518          	.endproc _exit
 1823                      ; for the benefit of gcc.
 1824  00002518          	.proc ___main
 1825  00002518          	.global ___main
 1826  00002518          	___main:
 1827  00002518  4be00000	jr	r31
 1828  0000251c  54000000	nop
 1829  00002520          	.endproc ___main
 1830  00002520          	.text
 1831  00002520          	.global _etext
 1832  00002520          	_etext:
 1833  00002520          	.align 3
 1834  00002520          	.data
 1835  0000317e          	.global _edata
 1836  0000317e          	_edata:

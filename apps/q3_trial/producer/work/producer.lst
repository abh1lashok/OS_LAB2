 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 301
    4                      ; Text size: 5660
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _put_item_cb
   81  000010d4          	.global _put_item_cb
   82  000010d4          	_put_item_cb:
   83                      ;  Function 'put_item_cb'; 0 bytes of locals, 3 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   88  000010e4  afa20000	sw	0(r29),r2
   89  000010e8  afa30004	sw	4(r29),r3
   90  000010ec  afa40008	sw	8(r29),r4
   91  000010f0  8fc30004	lw	r3,4(r30)
   92  000010f4  8c610000	lw	r1,(r3)
   93  000010f8  00610820	add	r1,r3,r1
   94  000010fc  83df0003	lb	r31,3(r30)
   95  00001100  a03f0008	sb	8(r1),r31
   96  00001104  8c610000	lw	r1,(r3)
   97  00001108  20240001	addi	r4,r1,#1
   98  0000110c  2001000a	addi	r1,r0,#10
   99  00001110  00800035	movi2fp	f0,r4
  100  00001114  00200835	movi2fp	f1,r1
  101  00001118  0401000f	div	f0,f0,f1
  102  0000111c  00001034	movfp2i	r2,f0
  103  00001120  50410002	slli	r1,r2,#0x2
  104  00001124  00220820	add	r1,r1,r2
  105  00001128  50210001	slli	r1,r1,#0x1
  106  0000112c  00810822	sub	r1,r4,r1
  107  00001130  ac610000	sw	(r3),r1
  108  00001134  20010001	addi	r1,r0,#1
  109  00001138  8fa20000	lw	r2,0(r29)
  110  0000113c  8fa30004	lw	r3,4(r29)
  111  00001140  8fa40008	lw	r4,8(r29)
  112  00001144  8fdffff8	lw	r31,-8(r30)
  113  00001148  001ee820	add	r29,r0,r30
  114  0000114c  8fdefffc	lw	r30,-4(r30)
  115  00001150  4be00000	jr	r31
  116  00001154  54000000	nop
  117  00001158          	.endproc _put_item_cb
  118  00001158          	.align 2
  119  00001158          	.proc _check_item_cb
  120  00001158          	.global _check_item_cb
  121  00001158          	_check_item_cb:
  122                      ;  Function 'check_item_cb'; 0 bytes of locals, 2 regs to save.
  123  00001158  afbefffc	sw	-4(r29),r30; push fp
  124  0000115c  001df020	add	r30,r0,r29; fp = sp
  125  00001160  afbffff8	sw	-8(r29),r31; push ret addr
  126  00001164  2fbd0010	subui	r29,r29,#16; alloc local storage
  127  00001168  afa20000	sw	0(r29),r2
  128  0000116c  afa30004	sw	4(r29),r3
  129  00001170  8fc30000	lw	r3,(r30)
  130  00001174  8fc20004	lw	r2,4(r30)
  131  00001178  8c410004	lw	r1,4(r2)
  132  0000117c  00410820	add	r1,r2,r1
  133  00001180  80210008	lb	r1,8(r1)
  134  00001184  a0610000	sb	(r3),r1
  135  00001188  20010001	addi	r1,r0,#1
  136  0000118c  8fa20000	lw	r2,0(r29)
  137  00001190  8fa30004	lw	r3,4(r29)
  138  00001194  8fdffff8	lw	r31,-8(r30)
  139  00001198  001ee820	add	r29,r0,r30
  140  0000119c  8fdefffc	lw	r30,-4(r30)
  141  000011a0  4be00000	jr	r31
  142  000011a4  54000000	nop
  143  000011a8          	.endproc _check_item_cb
  144  000011a8          	.align 2
  145  000011a8          	.proc _get_item_cb
  146  000011a8          	.global _get_item_cb
  147  000011a8          	_get_item_cb:
  148                      ;  Function 'get_item_cb'; 0 bytes of locals, 3 regs to save.
  149  000011a8  afbefffc	sw	-4(r29),r30; push fp
  150  000011ac  001df020	add	r30,r0,r29; fp = sp
  151  000011b0  afbffff8	sw	-8(r29),r31; push ret addr
  152  000011b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  153  000011b8  afa20000	sw	0(r29),r2
  154  000011bc  afa30004	sw	4(r29),r3
  155  000011c0  afa40008	sw	8(r29),r4
  156  000011c4  8fc20000	lw	r2,(r30)
  157  000011c8  8fc30004	lw	r3,4(r30)
  158  000011cc  8c610004	lw	r1,4(r3)
  159  000011d0  00610820	add	r1,r3,r1
  160  000011d4  80210008	lb	r1,8(r1)
  161  000011d8  a0410000	sb	(r2),r1
  162  000011dc  8c610004	lw	r1,4(r3)
  163  000011e0  20240001	addi	r4,r1,#1
  164  000011e4  2001000a	addi	r1,r0,#10
  165  000011e8  00800035	movi2fp	f0,r4
  166  000011ec  00200835	movi2fp	f1,r1
  167  000011f0  0401000f	div	f0,f0,f1
  168  000011f4  00001034	movfp2i	r2,f0
  169  000011f8  50410002	slli	r1,r2,#0x2
  170  000011fc  00220820	add	r1,r1,r2
  171  00001200  50210001	slli	r1,r1,#0x1
  172  00001204  00810822	sub	r1,r4,r1
  173  00001208  ac610004	sw	4(r3),r1
  174  0000120c  20010001	addi	r1,r0,#1
  175  00001210  8fa20000	lw	r2,0(r29)
  176  00001214  8fa30004	lw	r3,4(r29)
  177  00001218  8fa40008	lw	r4,8(r29)
  178  0000121c  8fdffff8	lw	r31,-8(r30)
  179  00001220  001ee820	add	r29,r0,r30
  180  00001224  8fdefffc	lw	r30,-4(r30)
  181  00001228  4be00000	jr	r31
  182  0000122c  54000000	nop
  183  00001230          	.endproc _get_item_cb
  184  00001230          	.align 2
  185  00001230          	.proc _is_full
  186  00001230          	.global _is_full
  187  00001230          	_is_full:
  188                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  189  00001230  afbefffc	sw	-4(r29),r30; push fp
  190  00001234  001df020	add	r30,r0,r29; fp = sp
  191  00001238  afbffff8	sw	-8(r29),r31; push ret addr
  192  0000123c  2fbd0018	subui	r29,r29,#24; alloc local storage
  193  00001240  afa20000	sw	0(r29),r2
  194  00001244  afa30004	sw	4(r29),r3
  195  00001248  afa40008	sw	8(r29),r4
  196  0000124c  8fc40000	lw	r4,(r30)
  197  00001250  8c810000	lw	r1,(r4)
  198  00001254  20230001	addi	r3,r1,#1
  199  00001258  2001000a	addi	r1,r0,#10
  200  0000125c  00600035	movi2fp	f0,r3
  201  00001260  00200835	movi2fp	f1,r1
  202  00001264  0401000f	div	f0,f0,f1
  203  00001268  00001034	movfp2i	r2,f0
  204  0000126c  50410002	slli	r1,r2,#0x2
  205  00001270  00220820	add	r1,r1,r2
  206  00001274  50210001	slli	r1,r1,#0x1
  207  00001278  00611022	sub	r2,r3,r1
  208  0000127c  8c810004	lw	r1,4(r4)
  209  00001280  00411028	seq	r2,r2,r1
  210  00001284  20010001	addi	r1,r0,#1
  211  00001288  14400008	bnez	r2,L23_LF0
  212  0000128c  54000000	nop; not filled.
  213  00001290  20010000	addi	r1,r0,#0
  214  00001294          	L23_LF0:
  215  00001294  8fa20000	lw	r2,0(r29)
  216  00001298  8fa30004	lw	r3,4(r29)
  217  0000129c  8fa40008	lw	r4,8(r29)
  218  000012a0  8fdffff8	lw	r31,-8(r30)
  219  000012a4  001ee820	add	r29,r0,r30
  220  000012a8  8fdefffc	lw	r30,-4(r30)
  221  000012ac  4be00000	jr	r31
  222  000012b0  54000000	nop
  223  000012b4          	.endproc _is_full
  224  000012b4          	.align 2
  225  000012b4          	.proc _is_empty
  226  000012b4          	.global _is_empty
  227  000012b4          	_is_empty:
  228                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  229  000012b4  afbefffc	sw	-4(r29),r30; push fp
  230  000012b8  001df020	add	r30,r0,r29; fp = sp
  231  000012bc  afbffff8	sw	-8(r29),r31; push ret addr
  232  000012c0  2fbd0010	subui	r29,r29,#16; alloc local storage
  233  000012c4  afa20000	sw	0(r29),r2
  234  000012c8  8fc10000	lw	r1,(r30)
  235  000012cc  8c220000	lw	r2,(r1)
  236  000012d0  8c210004	lw	r1,4(r1)
  237  000012d4  00411028	seq	r2,r2,r1
  238  000012d8  20010001	addi	r1,r0,#1
  239  000012dc  14400008	bnez	r2,L30_LF0
  240  000012e0  54000000	nop; not filled.
  241  000012e4  20010000	addi	r1,r0,#0
  242  000012e8          	L30_LF0:
  243  000012e8  8fa20000	lw	r2,0(r29)
  244  000012ec  8fdffff8	lw	r31,-8(r30)
  245  000012f0  001ee820	add	r29,r0,r30
  246  000012f4  8fdefffc	lw	r30,-4(r30)
  247  000012f8  4be00000	jr	r31
  248  000012fc  54000000	nop
  249  00001300          	.endproc _is_empty
  250  00001300          	.data
  251  00003000          	.align 2
  252  00003000          	LC0_LF0:
  253  00003000  43697263	.ascii "Circular Buffer Initiated\n\000"
  253  00003004  756c6172	
  253  00003008  20427566	
  253  0000300c  66657220	
  253  00003010  496e6974	
  253  00003014  69617465	
  253  00003018  640a00  	
  254  0000301b          	.text
  255  00001300          	.align 2
  256  00001300          	.proc _init_cb
  257  00001300          	.global _init_cb
  258  00001300          	_init_cb:
  259                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  260  00001300  afbefffc	sw	-4(r29),r30; push fp
  261  00001304  001df020	add	r30,r0,r29; fp = sp
  262  00001308  afbffff8	sw	-8(r29),r31; push ret addr
  263  0000130c  2fbd0010	subui	r29,r29,#16; alloc local storage
  264  00001310  afa20000	sw	0(r29),r2
  265  00001314  8fc10000	lw	r1,(r30)
  266  00001318  20020000	addi	r2,r0,#0
  267  0000131c  ac220000	sw	(r1),r2
  268  00001320  ac220004	sw	4(r1),r2
  269  00001324  23bdfff8	addi	r29,r29,#-8
  270  00001328  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
  271  0000132c  24423000	addui	r2,r2,(LC0_LF0)&0xffff
  272  00001330  afa20000	sw	(r29),r2
  273  00001334  0c0004e0	jal	_Printf
  274  00001338  54000000	nop; not filled.
  275  0000133c  23bd0008	addi	r29,r29,#8
  276  00001340  8fa20000	lw	r2,0(r29)
  277  00001344  8fdffff8	lw	r31,-8(r30)
  278  00001348  001ee820	add	r29,r0,r30
  279  0000134c  8fdefffc	lw	r30,-4(r30)
  280  00001350  4be00000	jr	r31
  281  00001354  54000000	nop
  282  00001358          	.endproc _init_cb
  283  00001358          	.data
  284  0000301b          	.align 2
  285  0000301c          	LC1_LF0:
  286  0000301c  20436972	.ascii " Circular Buffer =>  \000"
  286  00003020  63756c61	
  286  00003024  72204275	
  286  00003028  66666572	
  286  0000302c  203d3e20	
  286  00003030  2000    	
  287  00003032          	.align 2
  288  00003034          	LC2_LF0:
  289  00003034  256300  	.ascii "%c\000"
  290  00003037          	.align 2
  291  00003038          	LC3_LF0:
  292  00003038  0a00    	.ascii "\n\000"
  293  0000303a          	.text
  294  00001358          	.align 2
  295  00001358          	.proc _Print_cb
  296  00001358          	.global _Print_cb
  297  00001358          	_Print_cb:
  298                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  299  00001358  afbefffc	sw	-4(r29),r30; push fp
  300  0000135c  001df020	add	r30,r0,r29; fp = sp
  301  00001360  afbffff8	sw	-8(r29),r31; push ret addr
  302  00001364  2fbd0020	subui	r29,r29,#32; alloc local storage
  303  00001368  afa20000	sw	0(r29),r2
  304  0000136c  afa30004	sw	4(r29),r3
  305  00001370  afa40008	sw	8(r29),r4
  306  00001374  afa5000c	sw	12(r29),r5
  307  00001378  afa60010	sw	16(r29),r6
  308  0000137c  afa70014	sw	20(r29),r7
  309  00001380  8fc50000	lw	r5,(r30)
  310  00001384  23bdfff8	addi	r29,r29,#-8
  311  00001388  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  312  0000138c  24e7301c	addui	r7,r7,(LC1_LF0)&0xffff
  313  00001390  afa70000	sw	(r29),r7
  314  00001394  0c000480	jal	_Printf
  315  00001398  54000000	nop; not filled.
  316  0000139c  20040000	addi	r4,r0,#0
  317  000013a0  23bd0008	addi	r29,r29,#8
  318  000013a4  2006000a	addi	r6,r0,#10
  319  000013a8          	L45_LF0:
  320  000013a8  23bdfff8	addi	r29,r29,#-8
  321  000013ac  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  322  000013b0  24e73034	addui	r7,r7,(LC2_LF0)&0xffff
  323  000013b4  afa70000	sw	(r29),r7
  324  000013b8  8ca10004	lw	r1,4(r5)
  325  000013bc  00811820	add	r3,r4,r1
  326  000013c0  00600035	movi2fp	f0,r3
  327  000013c4  00c00835	movi2fp	f1,r6
  328  000013c8  0401000f	div	f0,f0,f1
  329  000013cc  00001034	movfp2i	r2,f0
  330  000013d0  50410002	slli	r1,r2,#0x2
  331  000013d4  00220820	add	r1,r1,r2
  332  000013d8  50210001	slli	r1,r1,#0x1
  333  000013dc  00610822	sub	r1,r3,r1
  334  000013e0  00a10820	add	r1,r5,r1
  335  000013e4  90210008	lbu	r1,8(r1)
  336  000013e8  afa10004	sw	4(r29),r1
  337  000013ec  0c000428	jal	_Printf
  338  000013f0  54000000	nop; not filled.
  339  000013f4  23bd0008	addi	r29,r29,#8
  340  000013f8  20840001	addi	r4,r4,#1
  341  000013fc  70810009	slei	r1,r4,#9
  342  00001400  1420ffa4	bnez	r1,L45_LF0
  343  00001404  54000000	nop; not filled.
  344  00001408  23bdfff8	addi	r29,r29,#-8
  345  0000140c  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  346  00001410  24e73038	addui	r7,r7,(LC3_LF0)&0xffff
  347  00001414  afa70000	sw	(r29),r7
  348  00001418  0c0003fc	jal	_Printf
  349  0000141c  54000000	nop; not filled.
  350  00001420  23bd0008	addi	r29,r29,#8
  351  00001424  8fa20000	lw	r2,0(r29)
  352  00001428  8fa30004	lw	r3,4(r29)
  353  0000142c  8fa40008	lw	r4,8(r29)
  354  00001430  8fa5000c	lw	r5,12(r29)
  355  00001434  8fa60010	lw	r6,16(r29)
  356  00001438  8fa70014	lw	r7,20(r29)
  357  0000143c  8fdffff8	lw	r31,-8(r30)
  358  00001440  001ee820	add	r29,r0,r30
  359  00001444  8fdefffc	lw	r30,-4(r30)
  360  00001448  4be00000	jr	r31
  361  0000144c  54000000	nop
  362  00001450          	.endproc _Print_cb
  363  00001450          	.data
  364  0000303a          	.align 2
  365  0000303c          	LC4_LF0:
  366  0000303c  30313233	.ascii "0123456789\000"
  366  00003040  34353637	
  366  00003044  383900  	
  367  00003047          	.align 2
  368  00003048          	LC5_LF0:
  369  00003048  55736167	.ascii "Usage: \000"
  369  0000304c  653a2000	
  370  00003050          	.align 2
  371  00003050          	LC6_LF0:
  372  00003050  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
  372  00003054  6e646c65	
  372  00003058  5f746f5f	
  372  0000305c  73686172	
  372  00003060  65645f6d	
  372  00003064  656d6f72	
  372  00003068  795f7061	
  372  0000306c  67653e20	
  372  00003070  3c68616e	
  372  00003074  646c655f	
  372  00003078  746f5f70	
  372  0000307c  6167655f	
  372  00003080  6d617070	
  372  00003084  65645f73	
  372  00003088  656d6170	
  372  0000308c  686f7265	
  372  00003090  3e203c68	
  372  00003094  616e    	
  373  00003096  646c6520	.ascii "dle to lock>\n\000"
  373  0000309a  746f206c	
  373  0000309e  6f636b3e	
  373  000030a2  0a00    	
  374  000030a4          	.align 2
  375  000030a4          	LC7_LF0:
  376  000030a4  436f756c	.ascii "Could not map the virtual address to the memory in \000"
  376  000030a8  64206e6f	
  376  000030ac  74206d61	
  376  000030b0  70207468	
  376  000030b4  65207669	
  376  000030b8  72747561	
  376  000030bc  6c206164	
  376  000030c0  64726573	
  376  000030c4  7320746f	
  376  000030c8  20746865	
  376  000030cc  206d656d	
  376  000030d0  6f727920	
  376  000030d4  696e2000	
  377  000030d8          	.align 2
  378  000030d8          	LC8_LF0:
  379  000030d8  2c206578	.ascii ", exiting...\n\000"
  379  000030dc  6974696e	
  379  000030e0  672e2e2e	
  379  000030e4  0a00    	
  380  000030e6          	.align 2
  381  000030e8          	LC9_LF0:
  382  000030e8  50726f64	.ascii "Producer %d inserted: %c\n\000"
  382  000030ec  75636572	
  382  000030f0  20256420	
  382  000030f4  696e7365	
  382  000030f8  72746564	
  382  000030fc  3a202563	
  382  00003100  0a00    	
  383  00003102          	.align 2
  384  00003104          	LC10_LF0:
  385  00003104  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  385  00003108  73656d61	
  385  0000310c  70686f72	
  385  00003110  6520735f	
  385  00003114  70726f63	
  385  00003118  735f636f	
  385  0000311c  6d706c65	
  385  00003120  74656420	
  385  00003124  28256429	
  385  00003128  20696e20	
  385  0000312c  00      	
  386  0000312d          	.text
  387  00001450          	.align 2
  388  00001450          	.proc _main
  389  00001450          	.global _main
  390  00001450          	_main:
  391                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  392  00001450  afbefffc	sw	-4(r29),r30; push fp
  393  00001454  001df020	add	r30,r0,r29; fp = sp
  394  00001458  afbffff8	sw	-8(r29),r31; push ret addr
  395  0000145c  2fbd0018	subui	r29,r29,#24; alloc local storage
  396  00001460  8fc20000	lw	r2,(r30)
  397  00001464  8fc80004	lw	r8,4(r30)
  398  00001468  0c0011a8	jal	___main
  399  0000146c  54000000	nop; not filled.
  400  00001470  3c010000	lhi	r1,((LC4_LF0)>>16)&0xffff
  401  00001474  2421303c	addui	r1,r1,(LC4_LF0)&0xffff
  402  00001478  802d0000	lb	r13,(r1)
  403  0000147c  a3cdffe8	sb	-24(r30),r13
  404  00001480  802d0001	lb	r13,1(r1)
  405  00001484  a3cdffe9	sb	-23(r30),r13
  406  00001488  802d0002	lb	r13,2(r1)
  407  0000148c  a3cdffea	sb	-22(r30),r13
  408  00001490  802d0003	lb	r13,3(r1)
  409  00001494  a3cdffeb	sb	-21(r30),r13
  410  00001498  802d0004	lb	r13,4(r1)
  411  0000149c  a3cdffec	sb	-20(r30),r13
  412  000014a0  802d0005	lb	r13,5(r1)
  413  000014a4  a3cdffed	sb	-19(r30),r13
  414  000014a8  802d0006	lb	r13,6(r1)
  415  000014ac  a3cdffee	sb	-18(r30),r13
  416  000014b0  802d0007	lb	r13,7(r1)
  417  000014b4  a3cdffef	sb	-17(r30),r13
  418  000014b8  802d0008	lb	r13,8(r1)
  419  000014bc  a3cdfff0	sb	-16(r30),r13
  420  000014c0  802d0009	lb	r13,9(r1)
  421  000014c4  a3cdfff1	sb	-15(r30),r13
  422  000014c8  8021000a	lb	r1,10(r1)
  423  000014cc  a3c1fff2	sb	-14(r30),r1
  424  000014d0  64410006	snei	r1,r2,#6
  425  000014d4  1020004c	beqz	r1,L48_LF0
  426  000014d8  54000000	nop; not filled.
  427  000014dc  23bdfff8	addi	r29,r29,#-8
  428  000014e0  3c0d0000	lhi	r13,((LC5_LF0)>>16)&0xffff
  429  000014e4  25ad3048	addui	r13,r13,(LC5_LF0)&0xffff
  430  000014e8  afad0000	sw	(r29),r13
  431  000014ec  0c000328	jal	_Printf
  432  000014f0  54000000	nop; not filled.
  433  000014f4  8d0d0000	lw	r13,(r8)
  434  000014f8  afad0000	sw	(r29),r13
  435  000014fc  0c000318	jal	_Printf
  436  00001500  54000000	nop; not filled.
  437  00001504  3c0d0000	lhi	r13,((LC6_LF0)>>16)&0xffff
  438  00001508  25ad3050	addui	r13,r13,(LC6_LF0)&0xffff
  439  0000150c  afad0000	sw	(r29),r13
  440  00001510  0c000304	jal	_Printf
  441  00001514  54000000	nop; not filled.
  442  00001518  0c0003a4	jal	_Exit
  443  0000151c  54000000	nop; not filled.
  444  00001520  23bd0008	addi	r29,r29,#8
  445  00001524          	L48_LF0:
  446  00001524  23bdfff0	addi	r29,r29,#-16
  447  00001528  8d0d0004	lw	r13,4(r8)
  448  0000152c  afad0000	sw	(r29),r13
  449  00001530  200d0000	addi	r13,r0,#0
  450  00001534  afad0004	sw	4(r29),r13
  451  00001538  200d000a	addi	r13,r0,#10
  452  0000153c  afad0008	sw	8(r29),r13
  453  00001540  0c000c28	jal	_dstrtol
  454  00001544  54000000	nop; not filled.
  455  00001548  00011020	add	r2,r0,r1
  456  0000154c  8d0d0008	lw	r13,8(r8)
  457  00001550  afad0000	sw	(r29),r13
  458  00001554  200d0000	addi	r13,r0,#0
  459  00001558  afad0004	sw	4(r29),r13
  460  0000155c  200d000a	addi	r13,r0,#10
  461  00001560  afad0008	sw	8(r29),r13
  462  00001564  0c000c04	jal	_dstrtol
  463  00001568  54000000	nop; not filled.
  464  0000156c  00016020	add	r12,r0,r1
  465  00001570  8d0d000c	lw	r13,12(r8)
  466  00001574  afad0000	sw	(r29),r13
  467  00001578  200d0000	addi	r13,r0,#0
  468  0000157c  afad0004	sw	4(r29),r13
  469  00001580  200d000a	addi	r13,r0,#10
  470  00001584  afad0008	sw	8(r29),r13
  471  00001588  0c000be0	jal	_dstrtol
  472  0000158c  54000000	nop; not filled.
  473  00001590  00013020	add	r6,r0,r1
  474  00001594  8d0d0010	lw	r13,16(r8)
  475  00001598  afad0000	sw	(r29),r13
  476  0000159c  200d0000	addi	r13,r0,#0
  477  000015a0  afad0004	sw	4(r29),r13
  478  000015a4  200d000a	addi	r13,r0,#10
  479  000015a8  afad0008	sw	8(r29),r13
  480  000015ac  0c000bbc	jal	_dstrtol
  481  000015b0  54000000	nop; not filled.
  482  000015b4  00015820	add	r11,r0,r1
  483  000015b8  8d0d0014	lw	r13,20(r8)
  484  000015bc  afad0000	sw	(r29),r13
  485  000015c0  200d0000	addi	r13,r0,#0
  486  000015c4  afad0004	sw	4(r29),r13
  487  000015c8  200d000a	addi	r13,r0,#10
  488  000015cc  afad0008	sw	8(r29),r13
  489  000015d0  0c000b98	jal	_dstrtol
  490  000015d4  54000000	nop; not filled.
  491  000015d8  00015020	add	r10,r0,r1
  492  000015dc  afa20000	sw	(r29),r2
  493  000015e0  0c000264	jal	_shmat
  494  000015e4  54000000	nop; not filled.
  495  000015e8  00011020	add	r2,r0,r1
  496  000015ec  23bd0010	addi	r29,r29,#16
  497  000015f0  64410000	snei	r1,r2,#0
  498  000015f4  1420004c	bnez	r1,L49_LF0
  499  000015f8  54000000	nop; not filled.
  500  000015fc  23bdfff8	addi	r29,r29,#-8
  501  00001600  3c0d0000	lhi	r13,((LC7_LF0)>>16)&0xffff
  502  00001604  25ad30a4	addui	r13,r13,(LC7_LF0)&0xffff
  503  00001608  afad0000	sw	(r29),r13
  504  0000160c  0c000208	jal	_Printf
  505  00001610  54000000	nop; not filled.
  506  00001614  8d0d0000	lw	r13,(r8)
  507  00001618  afad0000	sw	(r29),r13
  508  0000161c  0c0001f8	jal	_Printf
  509  00001620  54000000	nop; not filled.
  510  00001624  3c0d0000	lhi	r13,((LC8_LF0)>>16)&0xffff
  511  00001628  25ad30d8	addui	r13,r13,(LC8_LF0)&0xffff
  512  0000162c  afad0000	sw	(r29),r13
  513  00001630  0c0001e4	jal	_Printf
  514  00001634  54000000	nop; not filled.
  515  00001638  0c000284	jal	_Exit
  516  0000163c  54000000	nop; not filled.
  517  00001640  23bd0008	addi	r29,r29,#8
  518  00001644          	L49_LF0:
  519  00001644  20440008	addi	r4,r2,#8
  520  00001648  2007000a	addi	r7,r0,#10
  521  0000164c  23c5ffe8	addi	r5,r30,#-24
  522  00001650  23c9fff1	addi	r9,r30,#-15
  523  00001654          	L52_LF0:
  524  00001654  23bdfff8	addi	r29,r29,#-8
  525  00001658  afa60000	sw	(r29),r6
  526  0000165c  0c000224	jal	_lock_acquire
  527  00001660  54000000	nop; not filled.
  528  00001664  23bd0008	addi	r29,r29,#8
  529  00001668  8c810000	lw	r1,(r4)
  530  0000166c  20230001	addi	r3,r1,#1
  531  00001670  00600035	movi2fp	f0,r3
  532  00001674  00e00835	movi2fp	f1,r7
  533  00001678  0401000f	div	f0,f0,f1
  534  0000167c  00001034	movfp2i	r2,f0
  535  00001680  50410002	slli	r1,r2,#0x2
  536  00001684  00220820	add	r1,r1,r2
  537  00001688  50210001	slli	r1,r1,#0x1
  538  0000168c  00611022	sub	r2,r3,r1
  539  00001690  8c810004	lw	r1,4(r4)
  540  00001694  00410828	seq	r1,r2,r1
  541  00001698  20020000	addi	r2,r0,#0
  542  0000169c  10200008	beqz	r1,L55_LF0
  543  000016a0  54000000	nop; not filled.
  544  000016a4  20020001	addi	r2,r0,#1
  545  000016a8          	L55_LF0:
  546  000016a8  64410000	snei	r1,r2,#0
  547  000016ac  10200018	beqz	r1,L53_LF0
  548  000016b0  54000000	nop; not filled.
  549  000016b4  23bdfff8	addi	r29,r29,#-8
  550  000016b8  afab0000	sw	(r29),r11
  551  000016bc  0c0001e8	jal	_cond_wait
  552  000016c0  54000000	nop; not filled.
  553  000016c4  23bd0008	addi	r29,r29,#8
  554  000016c8          	L53_LF0:
  555  000016c8  8c810000	lw	r1,(r4)
  556  000016cc  00810820	add	r1,r4,r1
  557  000016d0  80ad0000	lb	r13,(r5)
  558  000016d4  a02d0008	sb	8(r1),r13
  559  000016d8  8c810000	lw	r1,(r4)
  560  000016dc  20230001	addi	r3,r1,#1
  561  000016e0  00600035	movi2fp	f0,r3
  562  000016e4  00e00835	movi2fp	f1,r7
  563  000016e8  0401000f	div	f0,f0,f1
  564  000016ec  00001034	movfp2i	r2,f0
  565  000016f0  50410002	slli	r1,r2,#0x2
  566  000016f4  00220820	add	r1,r1,r2
  567  000016f8  50210001	slli	r1,r1,#0x1
  568  000016fc  00610822	sub	r1,r3,r1
  569  00001700  ac810000	sw	(r4),r1
  570  00001704  0c00011c	jal	_Getpid
  571  00001708  54000000	nop; not filled.
  572  0000170c  23bdfff0	addi	r29,r29,#-16
  573  00001710  3c0d0000	lhi	r13,((LC9_LF0)>>16)&0xffff
  574  00001714  25ad30e8	addui	r13,r13,(LC9_LF0)&0xffff
  575  00001718  afad0000	sw	(r29),r13
  576  0000171c  afa10004	sw	4(r29),r1
  577  00001720  90a10000	lbu	r1,(r5)
  578  00001724  afa10008	sw	8(r29),r1
  579  00001728  0c0000ec	jal	_Printf
  580  0000172c  54000000	nop; not filled.
  581  00001730  20a50001	addi	r5,r5,#1
  582  00001734  afaa0000	sw	(r29),r10
  583  00001738  0c000178	jal	_cond_signal
  584  0000173c  54000000	nop; not filled.
  585  00001740  afa60000	sw	(r29),r6
  586  00001744  0c000148	jal	_lock_release
  587  00001748  54000000	nop; not filled.
  588  0000174c  23bd0010	addi	r29,r29,#16
  589  00001750  00a9082c	sle	r1,r5,r9
  590  00001754  1420fefc	bnez	r1,L52_LF0
  591  00001758  54000000	nop; not filled.
  592  0000175c  23bdfff8	addi	r29,r29,#-8
  593  00001760  afac0000	sw	(r29),r12
  594  00001764  0c000104	jal	_sem_signal
  595  00001768  54000000	nop; not filled.
  596  0000176c  23bd0008	addi	r29,r29,#8
  597  00001770  64210001	snei	r1,r1,#1
  598  00001774  10200050	beqz	r1,L59_LF0
  599  00001778  54000000	nop; not filled.
  600  0000177c  23bdfff8	addi	r29,r29,#-8
  601  00001780  3c0d0000	lhi	r13,((LC10_LF0)>>16)&0xffff
  602  00001784  25ad3104	addui	r13,r13,(LC10_LF0)&0xffff
  603  00001788  afad0000	sw	(r29),r13
  604  0000178c  afac0004	sw	4(r29),r12
  605  00001790  0c000084	jal	_Printf
  606  00001794  54000000	nop; not filled.
  607  00001798  8d080000	lw	r8,(r8)
  608  0000179c  afa80000	sw	(r29),r8
  609  000017a0  0c000074	jal	_Printf
  610  000017a4  54000000	nop; not filled.
  611  000017a8  3c0d0000	lhi	r13,((LC8_LF0)>>16)&0xffff
  612  000017ac  25ad30d8	addui	r13,r13,(LC8_LF0)&0xffff
  613  000017b0  afad0000	sw	(r29),r13
  614  000017b4  0c000060	jal	_Printf
  615  000017b8  54000000	nop; not filled.
  616  000017bc  0c000100	jal	_Exit
  617  000017c0  54000000	nop; not filled.
  618  000017c4  23bd0008	addi	r29,r29,#8
  619  000017c8          	L59_LF0:
  620  000017c8  0c000e3c	jal	_exit
  621  000017cc  54000000	nop
  622  000017d0          	.endproc _main
  623                      ;;;
  624                      ;;; Stub functions for DLX traps.
  625                      ;;;
  626                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  627                      ;;;
  628                      ;;; The traps such as Open and Close
  629                      ;;; (note the capital letters) are for use by user programs.  The traps
  630                      ;;; with names such as open and close (lower case) are for use by the OS.
  631                      ;;;
  634  000017d0          	.align 2
  636                      ;;; The following are the traps to be used by user-level programs
  637                      ;;;
  639  000017d0          	.align 2
  640  000017d0          	.proc _Open
  641  000017d0          	.global _Open
  642  000017d0          	_Open:
  643                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  644                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  645                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  646  000017d0  44000213	trap	#0x213
  647  000017d4  4be00000	jr	r31
  648  000017d8  54000000	nop
  649  000017dc          	.endproc _Open
  651  000017dc          	.proc _Close
  652  000017dc          	.global _Close
  653  000017dc          	_Close:
  654  000017dc  44000214	trap	#0x214
  655  000017e0  4be00000	jr	r31
  656  000017e4  54000000	nop
  657  000017e8          	.endproc _Close
  659  000017e8          	.proc _Read
  660  000017e8          	.global _Read
  661  000017e8          	_Read:
  662  000017e8  44000210	trap	#0x210
  663  000017ec  4be00000	jr	r31
  664  000017f0  54000000	nop
  665  000017f4          	.endproc _Read
  667  000017f4          	.proc _Write
  668  000017f4          	.global _Write
  669  000017f4          	_Write:
  670  000017f4  44000211	trap	#0x211
  671  000017f8  4be00000	jr	r31
  672  000017fc  54000000	nop
  673  00001800          	.endproc _Write
  675  00001800          	.proc _Lseek
  676  00001800          	.global _Lseek
  677  00001800          	_Lseek:
  678  00001800  44000212	trap	#0x212
  679  00001804  4be00000	jr	r31
  680  00001808  54000000	nop
  681  0000180c          	.endproc _Lseek
  683  0000180c          	.proc _Putchar
  684  0000180c          	.global _Putchar
  685  0000180c          	_Putchar:
  686  0000180c  44000280	trap	#0x280
  687  00001810  4be00000	jr	r31
  688  00001814  54000000	nop
  689  00001818          	.endproc _Putchar
  691  00001818          	.proc _Printf
  692  00001818          	.global _Printf
  693  00001818          	_Printf:
  694  00001818  44000201	trap	#0x201
  695  0000181c  4be00000	jr	r31
  696  00001820  54000000	nop
  697  00001824          	.endproc _Printf
  699  00001824          	.proc _Getpid
  700  00001824          	.global _Getpid
  701  00001824          	_Getpid:
  702  00001824  44000431	trap	#0x431
  703  00001828  4be00000	jr	r31
  704  0000182c  54000000	nop
  705  00001830          	.endproc _Getpid
  707  00001830          	.proc _process_create
  708  00001830          	.global _process_create
  709  00001830          	_process_create:
  710  00001830  44000432	trap	#0x432
  711  00001834  4be00000	jr	r31
  712  00001838  54000000	nop
  713  0000183c          	.endproc _process_create
  715  0000183c          	.proc _shmget
  716  0000183c          	.global _shmget
  717  0000183c          	_shmget:
  718  0000183c  44000440	trap	#0x440
  719  00001840  4be00000	jr	r31
  720  00001844  54000000	nop
  721  00001848          	.endproc _shmget
  723  00001848          	.proc _shmat
  724  00001848          	.global _shmat
  725  00001848          	_shmat:
  726  00001848  44000441	trap	#0x441
  727  0000184c  4be00000	jr	r31
  728  00001850  54000000	nop
  729  00001854          	.endproc _shmat
  731  00001854          	.proc _sem_create
  732  00001854          	.global _sem_create
  733  00001854          	_sem_create:
  734  00001854  44000450	trap	#0x450
  735  00001858  4be00000	jr	r31
  736  0000185c  54000000	nop
  737  00001860          	.endproc _sem_create
  739  00001860          	.proc _sem_wait
  740  00001860          	.global _sem_wait
  741  00001860          	_sem_wait:
  742  00001860  44000451	trap	#0x451
  743  00001864  4be00000	jr	r31
  744  00001868  54000000	nop
  745  0000186c          	.endproc _sem_wait
  747  0000186c          	.proc _sem_signal
  748  0000186c          	.global _sem_signal
  749  0000186c          	_sem_signal:
  750  0000186c  44000452	trap	#0x452
  751  00001870  4be00000	jr	r31
  752  00001874  54000000	nop
  753  00001878          	.endproc _sem_signal
  755  00001878          	.proc _lock_create
  756  00001878          	.global _lock_create
  757  00001878          	_lock_create:
  758  00001878  44000453	trap	#0x453
  759  0000187c  4be00000	jr	r31
  760  00001880  54000000	nop
  761  00001884          	.endproc _lock_create
  763  00001884          	.proc _lock_acquire
  764  00001884          	.global _lock_acquire
  765  00001884          	_lock_acquire:
  766  00001884  44000454	trap	#0x454
  767  00001888  4be00000	jr	r31
  768  0000188c  54000000	nop
  769  00001890          	.endproc _lock_acquire
  771  00001890          	.proc _lock_release
  772  00001890          	.global _lock_release
  773  00001890          	_lock_release:
  774  00001890  44000455	trap	#0x455
  775  00001894  4be00000	jr	r31
  776  00001898  54000000	nop
  777  0000189c          	.endproc _lock_release
  779  0000189c          	.proc _cond_create
  780  0000189c          	.global _cond_create
  781  0000189c          	_cond_create:
  782  0000189c  44000456	trap	#0x456
  783  000018a0  4be00000	jr	r31
  784  000018a4  54000000	nop
  785  000018a8          	.endproc _cond_create
  787  000018a8          	.proc _cond_wait
  788  000018a8          	.global _cond_wait
  789  000018a8          	_cond_wait:
  790  000018a8  44000457	trap	#0x457
  791  000018ac  4be00000	jr	r31
  792  000018b0  54000000	nop
  793  000018b4          	.endproc _cond_wait
  795  000018b4          	.proc _cond_signal
  796  000018b4          	.global _cond_signal
  797  000018b4          	_cond_signal:
  798  000018b4  44000458	trap	#0x458
  799  000018b8  4be00000	jr	r31
  800  000018bc  54000000	nop
  801  000018c0          	.endproc _cond_signal
  803  000018c0          	.proc _Exit
  804  000018c0          	.global _Exit
  805  000018c0          	_Exit:
  806  000018c0  44000500	trap	#0x500
  807  000018c4  4be00000	jr	r31
  808  000018c8  54000000	nop
  809  000018cc          	.endproc _Exit
  810                      ; Compiled by GCC
  812  000018cc          	.align 2
  813  000018cc          	.proc _isspace
  814  000018cc          	.global _isspace
  815  000018cc          	_isspace:
  816                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  817  000018cc  afbefffc	sw	-4(r29),r30; push fp
  818  000018d0  001df020	add	r30,r0,r29; fp = sp
  819  000018d4  afbffff8	sw	-8(r29),r31; push ret addr
  820  000018d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  821  000018dc  afa20000	sw	0(r29),r2
  822  000018e0  afa30004	sw	4(r29),r3
  823  000018e4  afa40008	sw	8(r29),r4
  824  000018e8  83c20003	lb	r2,3(r30)
  825  000018ec  20010000	addi	r1,r0,#0
  826  000018f0  304300ff	andi	r3,r2,#0x00ff
  827  000018f4  60640020	seqi	r4,r3,#32
  828  000018f8  1480002c	bnez	r4,L3_LF2
  829  000018fc  54000000	nop; delay slot nop
  830  00001900  304300ff	andi	r3,r2,#0x00ff
  831  00001904  60640009	seqi	r4,r3,#9
  832  00001908  1480001c	bnez	r4,L3_LF2
  833  0000190c  54000000	nop; delay slot nop
  834  00001910  304300ff	andi	r3,r2,#0x00ff
  835  00001914  6064000a	seqi	r4,r3,#10
  836  00001918  1480000c	bnez	r4,L3_LF2
  837  0000191c  54000000	nop; delay slot nop
  838  00001920  08000008	j	L2_LF2
  839  00001924  54000000	nop; delay slot nop
  840  00001928          	L3_LF2:
  841  00001928  20010001	addi	r1,r0,#1
  842  0000192c          	L2_LF2:
  843  0000192c  08000004	j	L1_LF2
  844  00001930  54000000	nop; delay slot nop
  845  00001934          	L1_LF2:
  846  00001934  8fa20000	lw	r2,0(r29)
  847  00001938  8fa30004	lw	r3,4(r29)
  848  0000193c  8fa40008	lw	r4,8(r29)
  849  00001940  8fdffff8	lw	r31,-8(r30)
  850  00001944  001ee820	add	r29,r0,r30
  851  00001948  8fdefffc	lw	r30,-4(r30)
  852  0000194c  4be00000	jr	r31
  853  00001950  54000000	nop
  854  00001954          	.endproc _isspace
  855  00001954          	.align 2
  856  00001954          	.proc _isxdigit
  857  00001954          	.global _isxdigit
  858  00001954          	_isxdigit:
  859                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  860  00001954  afbefffc	sw	-4(r29),r30; push fp
  861  00001958  001df020	add	r30,r0,r29; fp = sp
  862  0000195c  afbffff8	sw	-8(r29),r31; push ret addr
  863  00001960  2fbd0018	subui	r29,r29,#24; alloc local storage
  864  00001964  afa20000	sw	0(r29),r2
  865  00001968  afa30004	sw	4(r29),r3
  866  0000196c  afa40008	sw	8(r29),r4
  867  00001970  83c20003	lb	r2,3(r30)
  868  00001974  20010000	addi	r1,r0,#0
  869  00001978  304300ff	andi	r3,r2,#0x00ff
  870  0000197c  6c64002f	sgtui	r4,r3,#47
  871  00001980  1080001c	beqz	r4,L7_LF2
  872  00001984  54000000	nop; delay slot nop
  873  00001988  304300ff	andi	r3,r2,#0x00ff
  874  0000198c  70640039	sleui	r4,r3,#57
  875  00001990  1480005c	bnez	r4,L6_LF2
  876  00001994  54000000	nop; delay slot nop
  877  00001998  08000004	j	L7_LF2
  878  0000199c  54000000	nop; delay slot nop
  879  000019a0          	L7_LF2:
  880  000019a0  304300ff	andi	r3,r2,#0x00ff
  881  000019a4  6c640060	sgtui	r4,r3,#96
  882  000019a8  1080001c	beqz	r4,L8_LF2
  883  000019ac  54000000	nop; delay slot nop
  884  000019b0  304300ff	andi	r3,r2,#0x00ff
  885  000019b4  70640066	sleui	r4,r3,#102
  886  000019b8  14800034	bnez	r4,L6_LF2
  887  000019bc  54000000	nop; delay slot nop
  888  000019c0  08000004	j	L8_LF2
  889  000019c4  54000000	nop; delay slot nop
  890  000019c8          	L8_LF2:
  891  000019c8  304300ff	andi	r3,r2,#0x00ff
  892  000019cc  6c640040	sgtui	r4,r3,#64
  893  000019d0  10800020	beqz	r4,L5_LF2
  894  000019d4  54000000	nop; delay slot nop
  895  000019d8  304300ff	andi	r3,r2,#0x00ff
  896  000019dc  70640041	sleui	r4,r3,#65
  897  000019e0  1480000c	bnez	r4,L6_LF2
  898  000019e4  54000000	nop; delay slot nop
  899  000019e8  08000008	j	L5_LF2
  900  000019ec  54000000	nop; delay slot nop
  901  000019f0          	L6_LF2:
  902  000019f0  20010001	addi	r1,r0,#1
  903  000019f4          	L5_LF2:
  904  000019f4  08000004	j	L4_LF2
  905  000019f8  54000000	nop; delay slot nop
  906  000019fc          	L4_LF2:
  907  000019fc  8fa20000	lw	r2,0(r29)
  908  00001a00  8fa30004	lw	r3,4(r29)
  909  00001a04  8fa40008	lw	r4,8(r29)
  910  00001a08  8fdffff8	lw	r31,-8(r30)
  911  00001a0c  001ee820	add	r29,r0,r30
  912  00001a10  8fdefffc	lw	r30,-4(r30)
  913  00001a14  4be00000	jr	r31
  914  00001a18  54000000	nop
  915  00001a1c          	.endproc _isxdigit
  916  00001a1c          	.align 2
  917  00001a1c          	.proc _dstrcpy
  918  00001a1c          	.global _dstrcpy
  919  00001a1c          	_dstrcpy:
  920                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  921  00001a1c  afbefffc	sw	-4(r29),r30; push fp
  922  00001a20  001df020	add	r30,r0,r29; fp = sp
  923  00001a24  afbffff8	sw	-8(r29),r31; push ret addr
  924  00001a28  2fbd0018	subui	r29,r29,#24; alloc local storage
  925  00001a2c  afa20000	sw	0(r29),r2
  926  00001a30  afa30004	sw	4(r29),r3
  927  00001a34  8fc10000	lw	r1,(r30)
  928  00001a38  afc1fff4	sw	-12(r30),r1
  929  00001a3c          	L10_LF2:
  930  00001a3c  8fc10000	lw	r1,(r30)
  931  00001a40  20220001	addi	r2,r1,#1
  932  00001a44  afc20000	sw	(r30),r2
  933  00001a48  8fc20004	lw	r2,4(r30)
  934  00001a4c  20430001	addi	r3,r2,#1
  935  00001a50  afc30004	sw	4(r30),r3
  936  00001a54  80420000	lb	r2,(r2)
  937  00001a58  a0220000	sb	(r1),r2
  938  00001a5c  a3c2fff3	sb	-13(r30),r2
  939  00001a60          	L12_LF2:
  940  00001a60  93c1fff3	lbu	r1,-13(r30)
  941  00001a64  64220000	snei	r2,r1,#0
  942  00001a68  1440000c	bnez	r2,L13_LF2
  943  00001a6c  54000000	nop; delay slot nop
  944  00001a70  0800000c	j	L11_LF2
  945  00001a74  54000000	nop; delay slot nop
  946  00001a78          	L13_LF2:
  947  00001a78  0bffffc0	j	L10_LF2
  948  00001a7c  54000000	nop; delay slot nop
  949  00001a80          	L11_LF2:
  950  00001a80  8fc1fff4	lw	r1,-12(r30)
  951  00001a84  08000004	j	L9_LF2
  952  00001a88  54000000	nop; delay slot nop
  953  00001a8c          	L9_LF2:
  954  00001a8c  8fa20000	lw	r2,0(r29)
  955  00001a90  8fa30004	lw	r3,4(r29)
  956  00001a94  8fdffff8	lw	r31,-8(r30)
  957  00001a98  001ee820	add	r29,r0,r30
  958  00001a9c  8fdefffc	lw	r30,-4(r30)
  959  00001aa0  4be00000	jr	r31
  960  00001aa4  54000000	nop
  961  00001aa8          	.endproc _dstrcpy
  962  00001aa8          	.align 2
  963  00001aa8          	.proc _dstrncpy
  964  00001aa8          	.global _dstrncpy
  965  00001aa8          	_dstrncpy:
  966                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  967  00001aa8  afbefffc	sw	-4(r29),r30; push fp
  968  00001aac  001df020	add	r30,r0,r29; fp = sp
  969  00001ab0  afbffff8	sw	-8(r29),r31; push ret addr
  970  00001ab4  2fbd0018	subui	r29,r29,#24; alloc local storage
  971  00001ab8  afa20000	sw	0(r29),r2
  972  00001abc  afa30004	sw	4(r29),r3
  973  00001ac0  8fc10000	lw	r1,(r30)
  974  00001ac4  afc1fff4	sw	-12(r30),r1
  975  00001ac8          	L15_LF2:
  976  00001ac8  8fc10008	lw	r1,8(r30)
  977  00001acc  2022ffff	addi	r2,r1,#-1
  978  00001ad0  afc20008	sw	8(r30),r2
  979  00001ad4  70210000	slei	r1,r1,#0
  980  00001ad8  1020000c	beqz	r1,L18_LF2
  981  00001adc  54000000	nop; delay slot nop
  982  00001ae0  08000048	j	L16_LF2
  983  00001ae4  54000000	nop; delay slot nop
  984  00001ae8          	L18_LF2:
  985  00001ae8  8fc10000	lw	r1,(r30)
  986  00001aec  20220001	addi	r2,r1,#1
  987  00001af0  afc20000	sw	(r30),r2
  988  00001af4  8fc20004	lw	r2,4(r30)
  989  00001af8  20430001	addi	r3,r2,#1
  990  00001afc  afc30004	sw	4(r30),r3
  991  00001b00  80420000	lb	r2,(r2)
  992  00001b04  a0220000	sb	(r1),r2
  993  00001b08  a3c2fff3	sb	-13(r30),r2
  994  00001b0c          	L17_LF2:
  995  00001b0c  93c1fff3	lbu	r1,-13(r30)
  996  00001b10  64220000	snei	r2,r1,#0
  997  00001b14  1440000c	bnez	r2,L19_LF2
  998  00001b18  54000000	nop; delay slot nop
  999  00001b1c  0800000c	j	L16_LF2
 1000  00001b20  54000000	nop; delay slot nop
 1001  00001b24          	L19_LF2:
 1002  00001b24  0bffffa0	j	L15_LF2
 1003  00001b28  54000000	nop; delay slot nop
 1004  00001b2c          	L16_LF2:
 1005  00001b2c  8fc1fff4	lw	r1,-12(r30)
 1006  00001b30  08000004	j	L14_LF2
 1007  00001b34  54000000	nop; delay slot nop
 1008  00001b38          	L14_LF2:
 1009  00001b38  8fa20000	lw	r2,0(r29)
 1010  00001b3c  8fa30004	lw	r3,4(r29)
 1011  00001b40  8fdffff8	lw	r31,-8(r30)
 1012  00001b44  001ee820	add	r29,r0,r30
 1013  00001b48  8fdefffc	lw	r30,-4(r30)
 1014  00001b4c  4be00000	jr	r31
 1015  00001b50  54000000	nop
 1016  00001b54          	.endproc _dstrncpy
 1017  00001b54          	.align 2
 1018  00001b54          	.proc _dstrcat
 1019  00001b54          	.global _dstrcat
 1020  00001b54          	_dstrcat:
 1021                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1022  00001b54  afbefffc	sw	-4(r29),r30; push fp
 1023  00001b58  001df020	add	r30,r0,r29; fp = sp
 1024  00001b5c  afbffff8	sw	-8(r29),r31; push ret addr
 1025  00001b60  2fbd0018	subui	r29,r29,#24; alloc local storage
 1026  00001b64  afa20000	sw	0(r29),r2
 1027  00001b68  8fc10000	lw	r1,(r30)
 1028  00001b6c  afc1fff4	sw	-12(r30),r1
 1029  00001b70          	L21_LF2:
 1030  00001b70  8fc10000	lw	r1,(r30)
 1031  00001b74  90220000	lbu	r2,(r1)
 1032  00001b78  64410000	snei	r1,r2,#0
 1033  00001b7c  1420000c	bnez	r1,L23_LF2
 1034  00001b80  54000000	nop; delay slot nop
 1035  00001b84  0800001c	j	L22_LF2
 1036  00001b88  54000000	nop; delay slot nop
 1037  00001b8c          	L23_LF2:
 1038  00001b8c  8fc20000	lw	r2,(r30)
 1039  00001b90  20410001	addi	r1,r2,#1
 1040  00001b94  00011020	add	r2,r0,r1
 1041  00001b98  afc20000	sw	(r30),r2
 1042  00001b9c  0bffffd0	j	L21_LF2
 1043  00001ba0  54000000	nop; delay slot nop
 1044  00001ba4          	L22_LF2:
 1045  00001ba4  23bdfff8	addi	r29,r29,#-8
 1046  00001ba8  001d0820	add	r1,r0,r29
 1047  00001bac  8fc20000	lw	r2,(r30)
 1048  00001bb0  ac220000	sw	(r1),r2
 1049  00001bb4  8fc20004	lw	r2,4(r30)
 1050  00001bb8  ac220004	sw	4(r1),r2
 1051  00001bbc  0ffffe5c	jal	_dstrcpy
 1052  00001bc0  54000000	nop; delay slot nop
 1053  00001bc4  23bd0008	addi	r29,r29,#8
 1054  00001bc8  8fc1fff4	lw	r1,-12(r30)
 1055  00001bcc  08000004	j	L20_LF2
 1056  00001bd0  54000000	nop; delay slot nop
 1057  00001bd4          	L20_LF2:
 1058  00001bd4  8fa20000	lw	r2,0(r29)
 1059  00001bd8  8fdffff8	lw	r31,-8(r30)
 1060  00001bdc  001ee820	add	r29,r0,r30
 1061  00001be0  8fdefffc	lw	r30,-4(r30)
 1062  00001be4  4be00000	jr	r31
 1063  00001be8  54000000	nop
 1064  00001bec          	.endproc _dstrcat
 1065  00001bec          	.align 2
 1066  00001bec          	.proc _dstrncmp
 1067  00001bec          	.global _dstrncmp
 1068  00001bec          	_dstrncmp:
 1069                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1070  00001bec  afbefffc	sw	-4(r29),r30; push fp
 1071  00001bf0  001df020	add	r30,r0,r29; fp = sp
 1072  00001bf4  afbffff8	sw	-8(r29),r31; push ret addr
 1073  00001bf8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1074  00001bfc  afa20000	sw	0(r29),r2
 1075  00001c00  afa30004	sw	4(r29),r3
 1076  00001c04  54000000	nop
 1077  00001c08  20010000	addi	r1,r0,#0
 1078  00001c0c  afc1fff4	sw	-12(r30),r1
 1079  00001c10          	L25_LF2:
 1080  00001c10  8fc1fff4	lw	r1,-12(r30)
 1081  00001c14  8fc20008	lw	r2,8(r30)
 1082  00001c18  0022082a	slt	r1,r1,r2
 1083  00001c1c  1420000c	bnez	r1,L28_LF2
 1084  00001c20  54000000	nop; delay slot nop
 1085  00001c24  08000088	j	L26_LF2
 1086  00001c28  54000000	nop; delay slot nop
 1087  00001c2c          	L28_LF2:
 1088  00001c2c  8fc10004	lw	r1,4(r30)
 1089  00001c30  90220000	lbu	r2,(r1)
 1090  00001c34  64410000	snei	r1,r2,#0
 1091  00001c38  14200018	bnez	r1,L29_LF2
 1092  00001c3c  54000000	nop; delay slot nop
 1093  00001c40  20010000	addi	r1,r0,#0
 1094  00001c44  080000d8	j	L24_LF2
 1095  00001c48  54000000	nop; delay slot nop
 1096  00001c4c  08000028	j	L30_LF2
 1097  00001c50  54000000	nop; delay slot nop
 1098  00001c54          	L29_LF2:
 1099  00001c54  8fc10000	lw	r1,(r30)
 1100  00001c58  8fc20004	lw	r2,4(r30)
 1101  00001c5c  90210000	lbu	r1,(r1)
 1102  00001c60  90420000	lbu	r2,(r2)
 1103  00001c64  00220829	sne	r1,r1,r2
 1104  00001c68  1020000c	beqz	r1,L30_LF2
 1105  00001c6c  54000000	nop; delay slot nop
 1106  00001c70  0800003c	j	L26_LF2
 1107  00001c74  54000000	nop; delay slot nop
 1108  00001c78          	L31_LF2:
 1109  00001c78          	L30_LF2:
 1110  00001c78  8fc20000	lw	r2,(r30)
 1111  00001c7c  20410001	addi	r1,r2,#1
 1112  00001c80  00011020	add	r2,r0,r1
 1113  00001c84  afc20000	sw	(r30),r2
 1114  00001c88  8fc20004	lw	r2,4(r30)
 1115  00001c8c  20410001	addi	r1,r2,#1
 1116  00001c90  00011020	add	r2,r0,r1
 1117  00001c94  afc20004	sw	4(r30),r2
 1118  00001c98          	L27_LF2:
 1119  00001c98  8fc2fff4	lw	r2,-12(r30)
 1120  00001c9c  20410001	addi	r1,r2,#1
 1121  00001ca0  00011020	add	r2,r0,r1
 1122  00001ca4  afc2fff4	sw	-12(r30),r2
 1123  00001ca8  0bffff64	j	L25_LF2
 1124  00001cac  54000000	nop; delay slot nop
 1125  00001cb0          	L26_LF2:
 1126  00001cb0  8fc1fff4	lw	r1,-12(r30)
 1127  00001cb4  8fc20008	lw	r2,8(r30)
 1128  00001cb8  00220828	seq	r1,r1,r2
 1129  00001cbc  10200018	beqz	r1,L32_LF2
 1130  00001cc0  54000000	nop; delay slot nop
 1131  00001cc4  20010000	addi	r1,r0,#0
 1132  00001cc8  08000054	j	L24_LF2
 1133  00001ccc  54000000	nop; delay slot nop
 1134  00001cd0  0800004c	j	L33_LF2
 1135  00001cd4  54000000	nop; delay slot nop
 1136  00001cd8          	L32_LF2:
 1137  00001cd8  8fc20000	lw	r2,(r30)
 1138  00001cdc  90410000	lbu	r1,(r2)
 1139  00001ce0  8fc20004	lw	r2,4(r30)
 1140  00001ce4  90430000	lbu	r3,(r2)
 1141  00001ce8  00230822	sub	r1,r1,r3
 1142  00001cec  74220000	sgei	r2,r1,#0
 1143  00001cf0  10400020	beqz	r2,L34_LF2
 1144  00001cf4  54000000	nop; delay slot nop
 1145  00001cf8  8fc10000	lw	r1,(r30)
 1146  00001cfc  8fc20004	lw	r2,4(r30)
 1147  00001d00  90210000	lbu	r1,(r1)
 1148  00001d04  90420000	lbu	r2,(r2)
 1149  00001d08  00220829	sne	r1,r1,r2
 1150  00001d0c  08000008	j	L35_LF2
 1151  00001d10  54000000	nop; delay slot nop
 1152  00001d14          	L34_LF2:
 1153  00001d14  2001ffff	addi	r1,r0,#-1
 1154  00001d18          	L35_LF2:
 1155  00001d18  08000004	j	L24_LF2
 1156  00001d1c  54000000	nop; delay slot nop
 1157  00001d20          	L33_LF2:
 1158  00001d20          	L24_LF2:
 1159  00001d20  8fa20000	lw	r2,0(r29)
 1160  00001d24  8fa30004	lw	r3,4(r29)
 1161  00001d28  8fdffff8	lw	r31,-8(r30)
 1162  00001d2c  001ee820	add	r29,r0,r30
 1163  00001d30  8fdefffc	lw	r30,-4(r30)
 1164  00001d34  4be00000	jr	r31
 1165  00001d38  54000000	nop
 1166  00001d3c          	.endproc _dstrncmp
 1167  00001d3c          	.align 2
 1168  00001d3c          	.proc _dstrlen
 1169  00001d3c          	.global _dstrlen
 1170  00001d3c          	_dstrlen:
 1171                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1172  00001d3c  afbefffc	sw	-4(r29),r30; push fp
 1173  00001d40  001df020	add	r30,r0,r29; fp = sp
 1174  00001d44  afbffff8	sw	-8(r29),r31; push ret addr
 1175  00001d48  2fbd0018	subui	r29,r29,#24; alloc local storage
 1176  00001d4c  afa20000	sw	0(r29),r2
 1177  00001d50  20010000	addi	r1,r0,#0
 1178  00001d54  afc1fff4	sw	-12(r30),r1
 1179  00001d58          	L37_LF2:
 1180  00001d58  8fc10000	lw	r1,(r30)
 1181  00001d5c  20220001	addi	r2,r1,#1
 1182  00001d60  afc20000	sw	(r30),r2
 1183  00001d64  90210000	lbu	r1,(r1)
 1184  00001d68  64220000	snei	r2,r1,#0
 1185  00001d6c  1440000c	bnez	r2,L39_LF2
 1186  00001d70  54000000	nop; delay slot nop
 1187  00001d74  0800001c	j	L38_LF2
 1188  00001d78  54000000	nop; delay slot nop
 1189  00001d7c          	L39_LF2:
 1190  00001d7c  8fc2fff4	lw	r2,-12(r30)
 1191  00001d80  20410001	addi	r1,r2,#1
 1192  00001d84  00011020	add	r2,r0,r1
 1193  00001d88  afc2fff4	sw	-12(r30),r2
 1194  00001d8c  0bffffc8	j	L37_LF2
 1195  00001d90  54000000	nop; delay slot nop
 1196  00001d94          	L38_LF2:
 1197  00001d94  8fc1fff4	lw	r1,-12(r30)
 1198  00001d98  08000004	j	L36_LF2
 1199  00001d9c  54000000	nop; delay slot nop
 1200  00001da0          	L36_LF2:
 1201  00001da0  8fa20000	lw	r2,0(r29)
 1202  00001da4  8fdffff8	lw	r31,-8(r30)
 1203  00001da8  001ee820	add	r29,r0,r30
 1204  00001dac  8fdefffc	lw	r30,-4(r30)
 1205  00001db0  4be00000	jr	r31
 1206  00001db4  54000000	nop
 1207  00001db8          	.endproc _dstrlen
 1208  00001db8          	.align 2
 1209  00001db8          	.proc _dstrstr
 1210  00001db8          	.global _dstrstr
 1211  00001db8          	_dstrstr:
 1212                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1213  00001db8  afbefffc	sw	-4(r29),r30; push fp
 1214  00001dbc  001df020	add	r30,r0,r29; fp = sp
 1215  00001dc0  afbffff8	sw	-8(r29),r31; push ret addr
 1216  00001dc4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1217  00001dc8  afa20000	sw	0(r29),r2
 1218  00001dcc  23bdfff8	addi	r29,r29,#-8
 1219  00001dd0  001d0820	add	r1,r0,r29
 1220  00001dd4  8fc20004	lw	r2,4(r30)
 1221  00001dd8  ac220000	sw	(r1),r2
 1222  00001ddc  0fffff5c	jal	_dstrlen
 1223  00001de0  54000000	nop; delay slot nop
 1224  00001de4  23bd0008	addi	r29,r29,#8
 1225  00001de8  afc1fff4	sw	-12(r30),r1
 1226  00001dec          	L41_LF2:
 1227  00001dec  8fc10000	lw	r1,(r30)
 1228  00001df0  90220000	lbu	r2,(r1)
 1229  00001df4  64410000	snei	r1,r2,#0
 1230  00001df8  1420000c	bnez	r1,L43_LF2
 1231  00001dfc  54000000	nop; delay slot nop
 1232  00001e00  08000060	j	L42_LF2
 1233  00001e04  54000000	nop; delay slot nop
 1234  00001e08          	L43_LF2:
 1235  00001e08  23bdfff0	addi	r29,r29,#-16
 1236  00001e0c  001d0820	add	r1,r0,r29
 1237  00001e10  8fc20000	lw	r2,(r30)
 1238  00001e14  ac220000	sw	(r1),r2
 1239  00001e18  8fc20004	lw	r2,4(r30)
 1240  00001e1c  ac220004	sw	4(r1),r2
 1241  00001e20  8fc2fff4	lw	r2,-12(r30)
 1242  00001e24  ac220008	sw	8(r1),r2
 1243  00001e28  0ffffdc0	jal	_dstrncmp
 1244  00001e2c  54000000	nop; delay slot nop
 1245  00001e30  23bd0010	addi	r29,r29,#16
 1246  00001e34  64220000	snei	r2,r1,#0
 1247  00001e38  14400010	bnez	r2,L44_LF2
 1248  00001e3c  54000000	nop; delay slot nop
 1249  00001e40  8fc10000	lw	r1,(r30)
 1250  00001e44  08000028	j	L40_LF2
 1251  00001e48  54000000	nop; delay slot nop
 1252  00001e4c          	L44_LF2:
 1253  00001e4c  8fc20000	lw	r2,(r30)
 1254  00001e50  20410001	addi	r1,r2,#1
 1255  00001e54  00011020	add	r2,r0,r1
 1256  00001e58  afc20000	sw	(r30),r2
 1257  00001e5c  0bffff8c	j	L41_LF2
 1258  00001e60  54000000	nop; delay slot nop
 1259  00001e64          	L42_LF2:
 1260  00001e64  20010000	addi	r1,r0,#0
 1261  00001e68  08000004	j	L40_LF2
 1262  00001e6c  54000000	nop; delay slot nop
 1263  00001e70          	L40_LF2:
 1264  00001e70  8fa20000	lw	r2,0(r29)
 1265  00001e74  8fdffff8	lw	r31,-8(r30)
 1266  00001e78  001ee820	add	r29,r0,r30
 1267  00001e7c  8fdefffc	lw	r30,-4(r30)
 1268  00001e80  4be00000	jr	r31
 1269  00001e84  54000000	nop
 1270  00001e88          	.endproc _dstrstr
 1271  00001e88          	.align 2
 1272  00001e88          	.proc _dmindex
 1273  00001e88          	.global _dmindex
 1274  00001e88          	_dmindex:
 1275                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1276  00001e88  afbefffc	sw	-4(r29),r30; push fp
 1277  00001e8c  001df020	add	r30,r0,r29; fp = sp
 1278  00001e90  afbffff8	sw	-8(r29),r31; push ret addr
 1279  00001e94  2fbd0018	subui	r29,r29,#24; alloc local storage
 1280  00001e98  afa20000	sw	0(r29),r2
 1281  00001e9c  54000000	nop
 1282  00001ea0          	L46_LF2:
 1283  00001ea0  8fc10000	lw	r1,(r30)
 1284  00001ea4  90220000	lbu	r2,(r1)
 1285  00001ea8  64410000	snei	r1,r2,#0
 1286  00001eac  1420000c	bnez	r1,L48_LF2
 1287  00001eb0  54000000	nop; delay slot nop
 1288  00001eb4  08000070	j	L47_LF2
 1289  00001eb8  54000000	nop; delay slot nop
 1290  00001ebc          	L48_LF2:
 1291  00001ebc  8fc10004	lw	r1,4(r30)
 1292  00001ec0  afc1fff4	sw	-12(r30),r1
 1293  00001ec4          	L49_LF2:
 1294  00001ec4  8fc1fff4	lw	r1,-12(r30)
 1295  00001ec8  90220000	lbu	r2,(r1)
 1296  00001ecc  64410000	snei	r1,r2,#0
 1297  00001ed0  1420000c	bnez	r1,L52_LF2
 1298  00001ed4  54000000	nop; delay slot nop
 1299  00001ed8  08000044	j	L50_LF2
 1300  00001edc  54000000	nop; delay slot nop
 1301  00001ee0          	L52_LF2:
 1302  00001ee0  8fc10000	lw	r1,(r30)
 1303  00001ee4  8fc2fff4	lw	r2,-12(r30)
 1304  00001ee8  90210000	lbu	r1,(r1)
 1305  00001eec  90420000	lbu	r2,(r2)
 1306  00001ef0  00220828	seq	r1,r1,r2
 1307  00001ef4  10200010	beqz	r1,L51_LF2
 1308  00001ef8  54000000	nop; delay slot nop
 1309  00001efc  8fc10000	lw	r1,(r30)
 1310  00001f00  08000030	j	L45_LF2
 1311  00001f04  54000000	nop; delay slot nop
 1312  00001f08          	L53_LF2:
 1313  00001f08          	L51_LF2:
 1314  00001f08  8fc2fff4	lw	r2,-12(r30)
 1315  00001f0c  20410001	addi	r1,r2,#1
 1316  00001f10  00011020	add	r2,r0,r1
 1317  00001f14  afc2fff4	sw	-12(r30),r2
 1318  00001f18  0bffffa8	j	L49_LF2
 1319  00001f1c  54000000	nop; delay slot nop
 1320  00001f20          	L50_LF2:
 1321  00001f20  0bffff7c	j	L46_LF2
 1322  00001f24  54000000	nop; delay slot nop
 1323  00001f28          	L47_LF2:
 1324  00001f28  20010000	addi	r1,r0,#0
 1325  00001f2c  08000004	j	L45_LF2
 1326  00001f30  54000000	nop; delay slot nop
 1327  00001f34          	L45_LF2:
 1328  00001f34  8fa20000	lw	r2,0(r29)
 1329  00001f38  8fdffff8	lw	r31,-8(r30)
 1330  00001f3c  001ee820	add	r29,r0,r30
 1331  00001f40  8fdefffc	lw	r30,-4(r30)
 1332  00001f44  4be00000	jr	r31
 1333  00001f48  54000000	nop
 1334  00001f4c          	.endproc _dmindex
 1335  00001f4c          	.align 2
 1336  00001f4c          	.proc _dindex
 1337  00001f4c          	.global _dindex
 1338  00001f4c          	_dindex:
 1339                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1340  00001f4c  afbefffc	sw	-4(r29),r30; push fp
 1341  00001f50  001df020	add	r30,r0,r29; fp = sp
 1342  00001f54  afbffff8	sw	-8(r29),r31; push ret addr
 1343  00001f58  2fbd0010	subui	r29,r29,#16; alloc local storage
 1344  00001f5c  afa20000	sw	0(r29),r2
 1345  00001f60  54000000	nop
 1346  00001f64          	L55_LF2:
 1347  00001f64  8fc10000	lw	r1,(r30)
 1348  00001f68  90220000	lbu	r2,(r1)
 1349  00001f6c  64410000	snei	r1,r2,#0
 1350  00001f70  1420000c	bnez	r1,L57_LF2
 1351  00001f74  54000000	nop; delay slot nop
 1352  00001f78  08000040	j	L56_LF2
 1353  00001f7c  54000000	nop; delay slot nop
 1354  00001f80          	L57_LF2:
 1355  00001f80  8fc10000	lw	r1,(r30)
 1356  00001f84  90220000	lbu	r2,(r1)
 1357  00001f88  8fc10004	lw	r1,4(r30)
 1358  00001f8c  00411028	seq	r2,r2,r1
 1359  00001f90  10400010	beqz	r2,L58_LF2
 1360  00001f94  54000000	nop; delay slot nop
 1361  00001f98  8fc10000	lw	r1,(r30)
 1362  00001f9c  08000028	j	L54_LF2
 1363  00001fa0  54000000	nop; delay slot nop
 1364  00001fa4          	L58_LF2:
 1365  00001fa4  8fc20000	lw	r2,(r30)
 1366  00001fa8  20410001	addi	r1,r2,#1
 1367  00001fac  00011020	add	r2,r0,r1
 1368  00001fb0  afc20000	sw	(r30),r2
 1369  00001fb4  0bffffac	j	L55_LF2
 1370  00001fb8  54000000	nop; delay slot nop
 1371  00001fbc          	L56_LF2:
 1372  00001fbc  20010000	addi	r1,r0,#0
 1373  00001fc0  08000004	j	L54_LF2
 1374  00001fc4  54000000	nop; delay slot nop
 1375  00001fc8          	L54_LF2:
 1376  00001fc8  8fa20000	lw	r2,0(r29)
 1377  00001fcc  8fdffff8	lw	r31,-8(r30)
 1378  00001fd0  001ee820	add	r29,r0,r30
 1379  00001fd4  8fdefffc	lw	r30,-4(r30)
 1380  00001fd8  4be00000	jr	r31
 1381  00001fdc  54000000	nop
 1382  00001fe0          	.endproc _dindex
 1383  00001fe0          	.align 2
 1384  00001fe0          	.proc _ditoa
 1385  00001fe0          	.global _ditoa
 1386  00001fe0          	_ditoa:
 1387                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1388  00001fe0  afbefffc	sw	-4(r29),r30; push fp
 1389  00001fe4  001df020	add	r30,r0,r29; fp = sp
 1390  00001fe8  afbffff8	sw	-8(r29),r31; push ret addr
 1391  00001fec  2fbd0018	subui	r29,r29,#24; alloc local storage
 1392  00001ff0  afa20000	sw	0(r29),r2
 1393  00001ff4  afa30004	sw	4(r29),r3
 1394  00001ff8  8fc10000	lw	r1,(r30)
 1395  00001ffc  68220000	slti	r2,r1,#0
 1396  00002000  1040002c	beqz	r2,L60_LF2
 1397  00002004  54000000	nop; delay slot nop
 1398  00002008  8fc10004	lw	r1,4(r30)
 1399  0000200c  20220001	addi	r2,r1,#1
 1400  00002010  afc20004	sw	4(r30),r2
 1401  00002014  2002002d	addi	r2,r0,(#0x2d)&0xff
 1402  00002018  a0220000	sb	(r1),r2
 1403  0000201c  8fc10000	lw	r1,(r30)
 1404  00002020  00011022	sub	r2,r0,r1
 1405  00002024  afc20000	sw	(r30),r2
 1406  00002028  08000118	j	L61_LF2
 1407  0000202c  54000000	nop; delay slot nop
 1408  00002030          	L60_LF2:
 1409  00002030  8fc10000	lw	r1,(r30)
 1410  00002034  64220000	snei	r2,r1,#0
 1411  00002038  14400020	bnez	r2,L62_LF2
 1412  0000203c  54000000	nop; delay slot nop
 1413  00002040  8fc10004	lw	r1,4(r30)
 1414  00002044  20220001	addi	r2,r1,#1
 1415  00002048  afc20004	sw	4(r30),r2
 1416  0000204c  20020030	addi	r2,r0,(#0x30)&0xff
 1417  00002050  a0220000	sb	(r1),r2
 1418  00002054  080000ec	j	L61_LF2
 1419  00002058  54000000	nop; delay slot nop
 1420  0000205c          	L62_LF2:
 1421  0000205c  20010001	addi	r1,r0,#1
 1422  00002060  afc1fff4	sw	-12(r30),r1
 1423  00002064          	L64_LF2:
 1424  00002064  8fc1fff4	lw	r1,-12(r30)
 1425  00002068  8fc20000	lw	r2,(r30)
 1426  0000206c  0022082c	sle	r1,r1,r2
 1427  00002070  1420000c	bnez	r1,L66_LF2
 1428  00002074  54000000	nop; delay slot nop
 1429  00002078  08000024	j	L65_LF2
 1430  0000207c  54000000	nop; delay slot nop
 1431  00002080          	L67_LF2:
 1432  00002080          	L66_LF2:
 1433  00002080  8fc1fff4	lw	r1,-12(r30)
 1434  00002084  00011820	add	r3,r0,r1
 1435  00002088  50620002	slli	r2,r3,#0x2
 1436  0000208c  00411020	add	r2,r2,r1
 1437  00002090  50410001	slli	r1,r2,#0x1
 1438  00002094  afc1fff4	sw	-12(r30),r1
 1439  00002098  0bffffc8	j	L64_LF2
 1440  0000209c  54000000	nop; delay slot nop
 1441  000020a0          	L65_LF2:
 1442  000020a0  54000000	nop
 1443  000020a4          	L68_LF2:
 1444  000020a4  8fc1fff4	lw	r1,-12(r30)
 1445  000020a8  2002000a	addi	r2,r0,#10
 1446  000020ac  00200035	movi2fp	f0,r1
 1447  000020b0  00400835	movi2fp	f1,r2
 1448  000020b4  0401000f	div	f0,f0,f1
 1449  000020b8  00000834	movfp2i	r1,f0
 1450  000020bc  afc1fff4	sw	-12(r30),r1
 1451  000020c0  8fc10004	lw	r1,4(r30)
 1452  000020c4  20220001	addi	r2,r1,#1
 1453  000020c8  afc20004	sw	4(r30),r2
 1454  000020cc  8fc20000	lw	r2,(r30)
 1455  000020d0  8fc3fff4	lw	r3,-12(r30)
 1456  000020d4  00400035	movi2fp	f0,r2
 1457  000020d8  00600835	movi2fp	f1,r3
 1458  000020dc  0401000f	div	f0,f0,f1
 1459  000020e0  00001034	movfp2i	r2,f0
 1460  000020e4  00021820	add	r3,r0,r2
 1461  000020e8  20620030	addi	r2,r3,#48
 1462  000020ec  a0220000	sb	(r1),r2
 1463  000020f0  8fc10000	lw	r1,(r30)
 1464  000020f4  8fc3fff4	lw	r3,-12(r30)
 1465  000020f8  00200035	movi2fp	f0,r1
 1466  000020fc  00600835	movi2fp	f1,r3
 1467  00002100  0401000f	div	f0,f0,f1
 1468  00002104  00001034	movfp2i	r2,f0
 1469  00002108  8fc3fff4	lw	r3,-12(r30)
 1470  0000210c  00400035	movi2fp	f0,r2
 1471  00002110  00600835	movi2fp	f1,r3
 1472  00002114  0401000e	mult	f0,f0,f1
 1473  00002118  00001034	movfp2i	r2,f0
 1474  0000211c  00220822	sub	r1,r1,r2
 1475  00002120  afc10000	sw	(r30),r1
 1476  00002124          	L70_LF2:
 1477  00002124  8fc1fff4	lw	r1,-12(r30)
 1478  00002128  6c220001	sgti	r2,r1,#1
 1479  0000212c  1440000c	bnez	r2,L71_LF2
 1480  00002130  54000000	nop; delay slot nop
 1481  00002134  0800000c	j	L61_LF2
 1482  00002138  54000000	nop; delay slot nop
 1483  0000213c          	L71_LF2:
 1484  0000213c  0bffff64	j	L68_LF2
 1485  00002140  54000000	nop; delay slot nop
 1486  00002144          	L69_LF2:
 1487  00002144          	L63_LF2:
 1488  00002144          	L61_LF2:
 1489  00002144  8fc10004	lw	r1,4(r30)
 1490  00002148  20020000	addi	r2,r0,(#0x0)&0xff
 1491  0000214c  a0220000	sb	(r1),r2
 1492  00002150          	L59_LF2:
 1493  00002150  8fa20000	lw	r2,0(r29)
 1494  00002154  8fa30004	lw	r3,4(r29)
 1495  00002158  8fdffff8	lw	r31,-8(r30)
 1496  0000215c  001ee820	add	r29,r0,r30
 1497  00002160  8fdefffc	lw	r30,-4(r30)
 1498  00002164  4be00000	jr	r31
 1499  00002168  54000000	nop
 1500  0000216c          	.endproc _ditoa
 1501  0000216c          	.align 2
 1502  0000216c          	.proc _dstrtol
 1503  0000216c          	.global _dstrtol
 1504  0000216c          	_dstrtol:
 1505                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1506  0000216c  afbefffc	sw	-4(r29),r30; push fp
 1507  00002170  001df020	add	r30,r0,r29; fp = sp
 1508  00002174  afbffff8	sw	-8(r29),r31; push ret addr
 1509  00002178  2fbd0020	subui	r29,r29,#32; alloc local storage
 1510  0000217c  afa20000	sw	0(r29),r2
 1511  00002180  20010000	addi	r1,r0,#0
 1512  00002184  afc1fff4	sw	-12(r30),r1
 1513  00002188          	L73_LF2:
 1514  00002188  8fc10000	lw	r1,(r30)
 1515  0000218c  90220000	lbu	r2,(r1)
 1516  00002190  60410020	seqi	r1,r2,#32
 1517  00002194  14200034	bnez	r1,L75_LF2
 1518  00002198  54000000	nop; delay slot nop
 1519  0000219c  8fc10000	lw	r1,(r30)
 1520  000021a0  90220000	lbu	r2,(r1)
 1521  000021a4  60410009	seqi	r1,r2,#9
 1522  000021a8  14200020	bnez	r1,L75_LF2
 1523  000021ac  54000000	nop; delay slot nop
 1524  000021b0  8fc10000	lw	r1,(r30)
 1525  000021b4  90220000	lbu	r2,(r1)
 1526  000021b8  6041000a	seqi	r1,r2,#10
 1527  000021bc  1420000c	bnez	r1,L75_LF2
 1528  000021c0  54000000	nop; delay slot nop
 1529  000021c4  0800001c	j	L74_LF2
 1530  000021c8  54000000	nop; delay slot nop
 1531  000021cc          	L75_LF2:
 1532  000021cc  8fc20000	lw	r2,(r30)
 1533  000021d0  20410001	addi	r1,r2,#1
 1534  000021d4  00011020	add	r2,r0,r1
 1535  000021d8  afc20000	sw	(r30),r2
 1536  000021dc  0bffffa8	j	L73_LF2
 1537  000021e0  54000000	nop; delay slot nop
 1538  000021e4          	L74_LF2:
 1539  000021e4  8fc10004	lw	r1,4(r30)
 1540  000021e8  64220000	snei	r2,r1,#0
 1541  000021ec  10400010	beqz	r2,L76_LF2
 1542  000021f0  54000000	nop; delay slot nop
 1543  000021f4  8fc10004	lw	r1,4(r30)
 1544  000021f8  8fc20000	lw	r2,(r30)
 1545  000021fc  ac220000	sw	(r1),r2
 1546  00002200          	L76_LF2:
 1547  00002200  8fc10000	lw	r1,(r30)
 1548  00002204  90220000	lbu	r2,(r1)
 1549  00002208  64410000	snei	r1,r2,#0
 1550  0000220c  14200010	bnez	r1,L77_LF2
 1551  00002210  54000000	nop; delay slot nop
 1552  00002214  8fc1fff4	lw	r1,-12(r30)
 1553  00002218  08000294	j	L72_LF2
 1554  0000221c  54000000	nop; delay slot nop
 1555  00002220          	L77_LF2:
 1556  00002220  8fc10000	lw	r1,(r30)
 1557  00002224  90220000	lbu	r2,(r1)
 1558  00002228  6041002d	seqi	r1,r2,#45
 1559  0000222c  10200024	beqz	r1,L78_LF2
 1560  00002230  54000000	nop; delay slot nop
 1561  00002234  2001ffff	addi	r1,r0,#-1
 1562  00002238  afc1ffec	sw	-20(r30),r1
 1563  0000223c  8fc20000	lw	r2,(r30)
 1564  00002240  20410001	addi	r1,r2,#1
 1565  00002244  00011020	add	r2,r0,r1
 1566  00002248  afc20000	sw	(r30),r2
 1567  0000224c  0800000c	j	L79_LF2
 1568  00002250  54000000	nop; delay slot nop
 1569  00002254          	L78_LF2:
 1570  00002254  20010001	addi	r1,r0,#1
 1571  00002258  afc1ffec	sw	-20(r30),r1
 1572  0000225c          	L79_LF2:
 1573  0000225c  8fc10008	lw	r1,8(r30)
 1574  00002260  64220000	snei	r2,r1,#0
 1575  00002264  14400090	bnez	r2,L80_LF2
 1576  00002268  54000000	nop; delay slot nop
 1577  0000226c  8fc10000	lw	r1,(r30)
 1578  00002270  90220000	lbu	r2,(r1)
 1579  00002274  60410030	seqi	r1,r2,#48
 1580  00002278  10200074	beqz	r1,L81_LF2
 1581  0000227c  54000000	nop; delay slot nop
 1582  00002280  8fc20000	lw	r2,(r30)
 1583  00002284  20410001	addi	r1,r2,#1
 1584  00002288  00011020	add	r2,r0,r1
 1585  0000228c  afc20000	sw	(r30),r2
 1586  00002290  8fc10000	lw	r1,(r30)
 1587  00002294  90220000	lbu	r2,(r1)
 1588  00002298  60410078	seqi	r1,r2,#120
 1589  0000229c  14200020	bnez	r1,L83_LF2
 1590  000022a0  54000000	nop; delay slot nop
 1591  000022a4  8fc10000	lw	r1,(r30)
 1592  000022a8  90220000	lbu	r2,(r1)
 1593  000022ac  60410058	seqi	r1,r2,#88
 1594  000022b0  1420000c	bnez	r1,L83_LF2
 1595  000022b4  54000000	nop; delay slot nop
 1596  000022b8  08000024	j	L82_LF2
 1597  000022bc  54000000	nop; delay slot nop
 1598  000022c0          	L83_LF2:
 1599  000022c0  20010010	addi	r1,r0,#16
 1600  000022c4  afc10008	sw	8(r30),r1
 1601  000022c8  8fc20000	lw	r2,(r30)
 1602  000022cc  20410001	addi	r1,r2,#1
 1603  000022d0  00011020	add	r2,r0,r1
 1604  000022d4  afc20000	sw	(r30),r2
 1605  000022d8  0800000c	j	L84_LF2
 1606  000022dc  54000000	nop; delay slot nop
 1607  000022e0          	L82_LF2:
 1608  000022e0  20010008	addi	r1,r0,#8
 1609  000022e4  afc10008	sw	8(r30),r1
 1610  000022e8          	L84_LF2:
 1611  000022e8  0800000c	j	L80_LF2
 1612  000022ec  54000000	nop; delay slot nop
 1613  000022f0          	L81_LF2:
 1614  000022f0  2001000a	addi	r1,r0,#10
 1615  000022f4  afc10008	sw	8(r30),r1
 1616  000022f8          	L85_LF2:
 1617  000022f8          	L80_LF2:
 1618  000022f8  8fc10008	lw	r1,8(r30)
 1619  000022fc  70220000	slei	r2,r1,#0
 1620  00002300  1440001c	bnez	r2,L87_LF2
 1621  00002304  54000000	nop; delay slot nop
 1622  00002308  8fc10008	lw	r1,8(r30)
 1623  0000230c  6c220010	sgti	r2,r1,#16
 1624  00002310  1440000c	bnez	r2,L87_LF2
 1625  00002314  54000000	nop; delay slot nop
 1626  00002318  08000010	j	L86_LF2
 1627  0000231c  54000000	nop; delay slot nop
 1628  00002320          	L87_LF2:
 1629  00002320  8fc1fff4	lw	r1,-12(r30)
 1630  00002324  08000188	j	L72_LF2
 1631  00002328  54000000	nop; delay slot nop
 1632  0000232c          	L86_LF2:
 1633  0000232c  54000000	nop
 1634  00002330          	L88_LF2:
 1635  00002330  8fc10000	lw	r1,(r30)
 1636  00002334  90220000	lbu	r2,(r1)
 1637  00002338  6c41002f	sgtui	r1,r2,#47
 1638  0000233c  10200030	beqz	r1,L91_LF2
 1639  00002340  54000000	nop; delay slot nop
 1640  00002344  8fc10000	lw	r1,(r30)
 1641  00002348  90220000	lbu	r2,(r1)
 1642  0000234c  70410039	sleui	r1,r2,#57
 1643  00002350  1020001c	beqz	r1,L91_LF2
 1644  00002354  54000000	nop; delay slot nop
 1645  00002358  8fc10000	lw	r1,(r30)
 1646  0000235c  90220000	lbu	r2,(r1)
 1647  00002360  2041ffd0	addi	r1,r2,#-48
 1648  00002364  afc1fff0	sw	-16(r30),r1
 1649  00002368  0800008c	j	L92_LF2
 1650  0000236c  54000000	nop; delay slot nop
 1651  00002370          	L91_LF2:
 1652  00002370  8fc10000	lw	r1,(r30)
 1653  00002374  90220000	lbu	r2,(r1)
 1654  00002378  6c410060	sgtui	r1,r2,#96
 1655  0000237c  10200030	beqz	r1,L93_LF2
 1656  00002380  54000000	nop; delay slot nop
 1657  00002384  8fc10000	lw	r1,(r30)
 1658  00002388  90220000	lbu	r2,(r1)
 1659  0000238c  7041007a	sleui	r1,r2,#122
 1660  00002390  1020001c	beqz	r1,L93_LF2
 1661  00002394  54000000	nop; delay slot nop
 1662  00002398  8fc10000	lw	r1,(r30)
 1663  0000239c  90220000	lbu	r2,(r1)
 1664  000023a0  2041ffa9	addi	r1,r2,#-87
 1665  000023a4  afc1fff0	sw	-16(r30),r1
 1666  000023a8  0800004c	j	L92_LF2
 1667  000023ac  54000000	nop; delay slot nop
 1668  000023b0          	L93_LF2:
 1669  000023b0  8fc10000	lw	r1,(r30)
 1670  000023b4  90220000	lbu	r2,(r1)
 1671  000023b8  6c410040	sgtui	r1,r2,#64
 1672  000023bc  10200030	beqz	r1,L95_LF2
 1673  000023c0  54000000	nop; delay slot nop
 1674  000023c4  8fc10000	lw	r1,(r30)
 1675  000023c8  90220000	lbu	r2,(r1)
 1676  000023cc  7041005a	sleui	r1,r2,#90
 1677  000023d0  1020001c	beqz	r1,L95_LF2
 1678  000023d4  54000000	nop; delay slot nop
 1679  000023d8  8fc10000	lw	r1,(r30)
 1680  000023dc  90220000	lbu	r2,(r1)
 1681  000023e0  2041ffc9	addi	r1,r2,#-55
 1682  000023e4  afc1fff0	sw	-16(r30),r1
 1683  000023e8  0800000c	j	L92_LF2
 1684  000023ec  54000000	nop; delay slot nop
 1685  000023f0          	L95_LF2:
 1686  000023f0  200103e8	addi	r1,r0,#1000
 1687  000023f4  afc1fff0	sw	-16(r30),r1
 1688  000023f8          	L96_LF2:
 1689  000023f8          	L94_LF2:
 1690  000023f8          	L92_LF2:
 1691  000023f8  8fc1fff0	lw	r1,-16(r30)
 1692  000023fc  8fc20008	lw	r2,8(r30)
 1693  00002400  0022082a	slt	r1,r1,r2
 1694  00002404  10200040	beqz	r1,L90_LF2
 1695  00002408  54000000	nop; delay slot nop
 1696  0000240c  8fc1fff4	lw	r1,-12(r30)
 1697  00002410  8fc20008	lw	r2,8(r30)
 1698  00002414  00200035	movi2fp	f0,r1
 1699  00002418  00400835	movi2fp	f1,r2
 1700  0000241c  0401000e	mult	f0,f0,f1
 1701  00002420  00000834	movfp2i	r1,f0
 1702  00002424  afc1fff4	sw	-12(r30),r1
 1703  00002428  8fc1fff4	lw	r1,-12(r30)
 1704  0000242c  8fc2fff0	lw	r2,-16(r30)
 1705  00002430  00220820	add	r1,r1,r2
 1706  00002434  afc1fff4	sw	-12(r30),r1
 1707  00002438  8fc20000	lw	r2,(r30)
 1708  0000243c  20410001	addi	r1,r2,#1
 1709  00002440  00011020	add	r2,r0,r1
 1710  00002444  afc20000	sw	(r30),r2
 1711  00002448          	L97_LF2:
 1712  00002448          	L90_LF2:
 1713  00002448  8fc1fff0	lw	r1,-16(r30)
 1714  0000244c  8fc20008	lw	r2,8(r30)
 1715  00002450  0022082a	slt	r1,r1,r2
 1716  00002454  1420000c	bnez	r1,L98_LF2
 1717  00002458  54000000	nop; delay slot nop
 1718  0000245c  0800000c	j	L89_LF2
 1719  00002460  54000000	nop; delay slot nop
 1720  00002464          	L98_LF2:
 1721  00002464  0bfffec8	j	L88_LF2
 1722  00002468  54000000	nop; delay slot nop
 1723  0000246c          	L89_LF2:
 1724  0000246c  8fc10004	lw	r1,4(r30)
 1725  00002470  64220000	snei	r2,r1,#0
 1726  00002474  10400010	beqz	r2,L99_LF2
 1727  00002478  54000000	nop; delay slot nop
 1728  0000247c  8fc10004	lw	r1,4(r30)
 1729  00002480  8fc20000	lw	r2,(r30)
 1730  00002484  ac220000	sw	(r1),r2
 1731  00002488          	L99_LF2:
 1732  00002488  8fc1fff4	lw	r1,-12(r30)
 1733  0000248c  8fc2ffec	lw	r2,-20(r30)
 1734  00002490  00200035	movi2fp	f0,r1
 1735  00002494  00400835	movi2fp	f1,r2
 1736  00002498  0401000e	mult	f0,f0,f1
 1737  0000249c  00000834	movfp2i	r1,f0
 1738  000024a0  afc1fff4	sw	-12(r30),r1
 1739  000024a4  8fc1fff4	lw	r1,-12(r30)
 1740  000024a8  08000004	j	L72_LF2
 1741  000024ac  54000000	nop; delay slot nop
 1742  000024b0          	L72_LF2:
 1743  000024b0  8fa20000	lw	r2,0(r29)
 1744  000024b4  8fdffff8	lw	r31,-8(r30)
 1745  000024b8  001ee820	add	r29,r0,r30
 1746  000024bc  8fdefffc	lw	r30,-4(r30)
 1747  000024c0  4be00000	jr	r31
 1748  000024c4  54000000	nop
 1749  000024c8          	.endproc _dstrtol
 1750  000024c8          	.align 2
 1751  000024c8          	.proc _bcopy
 1752  000024c8          	.global _bcopy
 1753  000024c8          	_bcopy:
 1754                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1755  000024c8  afbefffc	sw	-4(r29),r30; push fp
 1756  000024cc  001df020	add	r30,r0,r29; fp = sp
 1757  000024d0  afbffff8	sw	-8(r29),r31; push ret addr
 1758  000024d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1759  000024d8  afa20000	sw	0(r29),r2
 1760  000024dc  afa30004	sw	4(r29),r3
 1761  000024e0  54000000	nop
 1762  000024e4          	L101_LF2:
 1763  000024e4  8fc10008	lw	r1,8(r30)
 1764  000024e8  2022ffff	addi	r2,r1,#-1
 1765  000024ec  afc20008	sw	8(r30),r2
 1766  000024f0  6c210000	sgti	r1,r1,#0
 1767  000024f4  1420000c	bnez	r1,L103_LF2
 1768  000024f8  54000000	nop; delay slot nop
 1769  000024fc  0800002c	j	L102_LF2
 1770  00002500  54000000	nop; delay slot nop
 1771  00002504          	L103_LF2:
 1772  00002504  8fc10004	lw	r1,4(r30)
 1773  00002508  20220001	addi	r2,r1,#1
 1774  0000250c  afc20004	sw	4(r30),r2
 1775  00002510  8fc20000	lw	r2,(r30)
 1776  00002514  20430001	addi	r3,r2,#1
 1777  00002518  afc30000	sw	(r30),r3
 1778  0000251c  80420000	lb	r2,(r2)
 1779  00002520  a0220000	sb	(r1),r2
 1780  00002524  0bffffbc	j	L101_LF2
 1781  00002528  54000000	nop; delay slot nop
 1782  0000252c          	L102_LF2:
 1783  0000252c          	L100_LF2:
 1784  0000252c  8fa20000	lw	r2,0(r29)
 1785  00002530  8fa30004	lw	r3,4(r29)
 1786  00002534  8fdffff8	lw	r31,-8(r30)
 1787  00002538  001ee820	add	r29,r0,r30
 1788  0000253c  8fdefffc	lw	r30,-4(r30)
 1789  00002540  4be00000	jr	r31
 1790  00002544  54000000	nop
 1791  00002548          	.endproc _bcopy
 1792  00002548          	.align 2
 1793  00002548          	.proc _bzero
 1794  00002548          	.global _bzero
 1795  00002548          	_bzero:
 1796                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1797  00002548  afbefffc	sw	-4(r29),r30; push fp
 1798  0000254c  001df020	add	r30,r0,r29; fp = sp
 1799  00002550  afbffff8	sw	-8(r29),r31; push ret addr
 1800  00002554  2fbd0010	subui	r29,r29,#16; alloc local storage
 1801  00002558  afa20000	sw	0(r29),r2
 1802  0000255c  54000000	nop
 1803  00002560          	L105_LF2:
 1804  00002560  8fc10004	lw	r1,4(r30)
 1805  00002564  2022ffff	addi	r2,r1,#-1
 1806  00002568  afc20004	sw	4(r30),r2
 1807  0000256c  6c210000	sgti	r1,r1,#0
 1808  00002570  1420000c	bnez	r1,L107_LF2
 1809  00002574  54000000	nop; delay slot nop
 1810  00002578  08000020	j	L106_LF2
 1811  0000257c  54000000	nop; delay slot nop
 1812  00002580          	L107_LF2:
 1813  00002580  8fc10000	lw	r1,(r30)
 1814  00002584  20220001	addi	r2,r1,#1
 1815  00002588  afc20000	sw	(r30),r2
 1816  0000258c  20020000	addi	r2,r0,(#0x0)&0xff
 1817  00002590  a0220000	sb	(r1),r2
 1818  00002594  0bffffc8	j	L105_LF2
 1819  00002598  54000000	nop; delay slot nop
 1820  0000259c          	L106_LF2:
 1821  0000259c          	L104_LF2:
 1822  0000259c  8fa20000	lw	r2,0(r29)
 1823  000025a0  8fdffff8	lw	r31,-8(r30)
 1824  000025a4  001ee820	add	r29,r0,r30
 1825  000025a8  8fdefffc	lw	r30,-4(r30)
 1826  000025ac  4be00000	jr	r31
 1827  000025b0  54000000	nop
 1828  000025b4          	.endproc _bzero
 1829  000025b4          	.align 2
 1830  000025b4          	.proc _min
 1831  000025b4          	.global _min
 1832  000025b4          	_min:
 1833                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1834  000025b4  afbefffc	sw	-4(r29),r30; push fp
 1835  000025b8  001df020	add	r30,r0,r29; fp = sp
 1836  000025bc  afbffff8	sw	-8(r29),r31; push ret addr
 1837  000025c0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1838  000025c4  afa20000	sw	0(r29),r2
 1839  000025c8  afa30004	sw	4(r29),r3
 1840  000025cc  8fc10000	lw	r1,(r30)
 1841  000025d0  8fc20004	lw	r2,4(r30)
 1842  000025d4  0022182c	sle	r3,r1,r2
 1843  000025d8  14600008	bnez	r3,L109_LF2
 1844  000025dc  54000000	nop; delay slot nop
 1845  000025e0  8fc10004	lw	r1,4(r30)
 1846  000025e4          	L109_LF2:
 1847  000025e4  08000004	j	L108_LF2
 1848  000025e8  54000000	nop; delay slot nop
 1849  000025ec          	L108_LF2:
 1850  000025ec  8fa20000	lw	r2,0(r29)
 1851  000025f0  8fa30004	lw	r3,4(r29)
 1852  000025f4  8fdffff8	lw	r31,-8(r30)
 1853  000025f8  001ee820	add	r29,r0,r30
 1854  000025fc  8fdefffc	lw	r30,-4(r30)
 1855  00002600  4be00000	jr	r31
 1856  00002604  54000000	nop
 1857  00002608          	.endproc _min
 1858                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1859                      ;;;
 1860                      ;;; Most of the traps are called in files from libtraps.
 1863  00002608          	.align 2
 1864  00002608          	.proc _exit
 1865  00002608          	.global _exit
 1866  00002608          	_exit:
 1867  00002608  44000300	trap	#0x300
 1868  0000260c  4be00000	jr	r31
 1869  00002610  54000000	nop
 1870  00002614          	.endproc _exit
 1872                      ; for the benefit of gcc.
 1873  00002614          	.proc ___main
 1874  00002614          	.global ___main
 1875  00002614          	___main:
 1876  00002614  4be00000	jr	r31
 1877  00002618  54000000	nop
 1878  0000261c          	.endproc ___main
 1879  0000261c          	.text
 1880  0000261c          	.global _etext
 1881  0000261c          	_etext:
 1882  0000261c          	.align 3
 1883  00002620          	.data
 1884  0000312d          	.global _edata
 1885  0000312d          	_edata:

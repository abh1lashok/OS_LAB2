 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 649
    4                      ; Text size: 6188
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  4342202d	.ascii "CB ---- Put %c in %d\n\000"
   82  00003004  2d2d2d20	
   82  00003008  50757420	
   82  0000300c  25632069	
   82  00003010  6e202564	
   82  00003014  0a00    	
   83  00003016          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _put_item_cb
   86  000010d4          	.global _put_item_cb
   87  000010d4          	_put_item_cb:
   88                      ;  Function 'put_item_cb'; 0 bytes of locals, 4 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  afa40008	sw	8(r29),r4
   96  000010f0  afa5000c	sw	12(r29),r5
   97  000010f4  83c20003	lb	r2,3(r30)
   98  000010f8  8fc30004	lw	r3,4(r30)
   99  000010fc  8c610000	lw	r1,(r3)
  100  00001100  00610820	add	r1,r3,r1
  101  00001104  a0220008	sb	8(r1),r2
  102  00001108  23bdfff0	addi	r29,r29,#-16
  103  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  104  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  105  00001114  afa50000	sw	(r29),r5
  106  00001118  304100ff	andi	r1,r2,#0x00ff
  107  0000111c  afa10004	sw	4(r29),r1
  108  00001120  8c650000	lw	r5,(r3)
  109  00001124  afa50008	sw	8(r29),r5
  110  00001128  0c0008fc	jal	_Printf
  111  0000112c  54000000	nop; not filled.
  112  00001130  8c610000	lw	r1,(r3)
  113  00001134  20240001	addi	r4,r1,#1
  114  00001138  2001000a	addi	r1,r0,#10
  115  0000113c  00800035	movi2fp	f0,r4
  116  00001140  00200835	movi2fp	f1,r1
  117  00001144  0401000f	div	f0,f0,f1
  118  00001148  00001034	movfp2i	r2,f0
  119  0000114c  50410002	slli	r1,r2,#0x2
  120  00001150  00220820	add	r1,r1,r2
  121  00001154  50210001	slli	r1,r1,#0x1
  122  00001158  00810822	sub	r1,r4,r1
  123  0000115c  ac610000	sw	(r3),r1
  124  00001160  20010001	addi	r1,r0,#1
  125  00001164  23bd0010	addi	r29,r29,#16
  126  00001168  8fa20000	lw	r2,0(r29)
  127  0000116c  8fa30004	lw	r3,4(r29)
  128  00001170  8fa40008	lw	r4,8(r29)
  129  00001174  8fa5000c	lw	r5,12(r29)
  130  00001178  8fdffff8	lw	r31,-8(r30)
  131  0000117c  001ee820	add	r29,r0,r30
  132  00001180  8fdefffc	lw	r30,-4(r30)
  133  00001184  4be00000	jr	r31
  134  00001188  54000000	nop
  135  0000118c          	.endproc _put_item_cb
  136  0000118c          	.data
  137  00003016          	.align 2
  138  00003018          	LC1_LF0:
  139  00003018  4342202d	.ascii "CB ----  checking %c from %d\n\000"
  139  0000301c  2d2d2d20	
  139  00003020  20636865	
  139  00003024  636b696e	
  139  00003028  67202563	
  139  0000302c  2066726f	
  139  00003030  6d202564	
  139  00003034  0a00    	
  140  00003036          	.text
  141  0000118c          	.align 2
  142  0000118c          	.proc _check_item_cb
  143  0000118c          	.global _check_item_cb
  144  0000118c          	_check_item_cb:
  145                      ;  Function 'check_item_cb'; 0 bytes of locals, 3 regs to save.
  146  0000118c  afbefffc	sw	-4(r29),r30; push fp
  147  00001190  001df020	add	r30,r0,r29; fp = sp
  148  00001194  afbffff8	sw	-8(r29),r31; push ret addr
  149  00001198  2fbd0018	subui	r29,r29,#24; alloc local storage
  150  0000119c  afa20000	sw	0(r29),r2
  151  000011a0  afa30004	sw	4(r29),r3
  152  000011a4  afa40008	sw	8(r29),r4
  153  000011a8  8fc30000	lw	r3,(r30)
  154  000011ac  8fc20004	lw	r2,4(r30)
  155  000011b0  8c410004	lw	r1,4(r2)
  156  000011b4  00410820	add	r1,r2,r1
  157  000011b8  80210008	lb	r1,8(r1)
  158  000011bc  a0610000	sb	(r3),r1
  159  000011c0  23bdfff0	addi	r29,r29,#-16
  160  000011c4  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  161  000011c8  24843018	addui	r4,r4,(LC1_LF0)&0xffff
  162  000011cc  afa40000	sw	(r29),r4
  163  000011d0  90610000	lbu	r1,(r3)
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  8c420004	lw	r2,4(r2)
  166  000011dc  afa20008	sw	8(r29),r2
  167  000011e0  0c000844	jal	_Printf
  168  000011e4  54000000	nop; not filled.
  169  000011e8  20010001	addi	r1,r0,#1
  170  000011ec  23bd0010	addi	r29,r29,#16
  171  000011f0  8fa20000	lw	r2,0(r29)
  172  000011f4  8fa30004	lw	r3,4(r29)
  173  000011f8  8fa40008	lw	r4,8(r29)
  174  000011fc  8fdffff8	lw	r31,-8(r30)
  175  00001200  001ee820	add	r29,r0,r30
  176  00001204  8fdefffc	lw	r30,-4(r30)
  177  00001208  4be00000	jr	r31
  178  0000120c  54000000	nop
  179  00001210          	.endproc _check_item_cb
  180  00001210          	.data
  181  00003036          	.align 2
  182  00003038          	LC2_LF0:
  183  00003038  4342202d	.ascii "CB ----  Got %c from %d\n\000"
  183  0000303c  2d2d2d20	
  183  00003040  20476f74	
  183  00003044  20256320	
  183  00003048  66726f6d	
  183  0000304c  2025640a	
  183  00003050  00      	
  184  00003051          	.text
  185  00001210          	.align 2
  186  00001210          	.proc _get_item_cb
  187  00001210          	.global _get_item_cb
  188  00001210          	_get_item_cb:
  189                      ;  Function 'get_item_cb'; 0 bytes of locals, 4 regs to save.
  190  00001210  afbefffc	sw	-4(r29),r30; push fp
  191  00001214  001df020	add	r30,r0,r29; fp = sp
  192  00001218  afbffff8	sw	-8(r29),r31; push ret addr
  193  0000121c  2fbd0018	subui	r29,r29,#24; alloc local storage
  194  00001220  afa20000	sw	0(r29),r2
  195  00001224  afa30004	sw	4(r29),r3
  196  00001228  afa40008	sw	8(r29),r4
  197  0000122c  afa5000c	sw	12(r29),r5
  198  00001230  8fc20000	lw	r2,(r30)
  199  00001234  8fc30004	lw	r3,4(r30)
  200  00001238  8c610004	lw	r1,4(r3)
  201  0000123c  00610820	add	r1,r3,r1
  202  00001240  80210008	lb	r1,8(r1)
  203  00001244  a0410000	sb	(r2),r1
  204  00001248  23bdfff0	addi	r29,r29,#-16
  205  0000124c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  206  00001250  24a53038	addui	r5,r5,(LC2_LF0)&0xffff
  207  00001254  afa50000	sw	(r29),r5
  208  00001258  90410000	lbu	r1,(r2)
  209  0000125c  afa10004	sw	4(r29),r1
  210  00001260  8c650004	lw	r5,4(r3)
  211  00001264  afa50008	sw	8(r29),r5
  212  00001268  0c0007bc	jal	_Printf
  213  0000126c  54000000	nop; not filled.
  214  00001270  8c610004	lw	r1,4(r3)
  215  00001274  20240001	addi	r4,r1,#1
  216  00001278  2001000a	addi	r1,r0,#10
  217  0000127c  00800035	movi2fp	f0,r4
  218  00001280  00200835	movi2fp	f1,r1
  219  00001284  0401000f	div	f0,f0,f1
  220  00001288  00001034	movfp2i	r2,f0
  221  0000128c  50410002	slli	r1,r2,#0x2
  222  00001290  00220820	add	r1,r1,r2
  223  00001294  50210001	slli	r1,r1,#0x1
  224  00001298  00810822	sub	r1,r4,r1
  225  0000129c  ac610004	sw	4(r3),r1
  226  000012a0  20010001	addi	r1,r0,#1
  227  000012a4  23bd0010	addi	r29,r29,#16
  228  000012a8  8fa20000	lw	r2,0(r29)
  229  000012ac  8fa30004	lw	r3,4(r29)
  230  000012b0  8fa40008	lw	r4,8(r29)
  231  000012b4  8fa5000c	lw	r5,12(r29)
  232  000012b8  8fdffff8	lw	r31,-8(r30)
  233  000012bc  001ee820	add	r29,r0,r30
  234  000012c0  8fdefffc	lw	r30,-4(r30)
  235  000012c4  4be00000	jr	r31
  236  000012c8  54000000	nop
  237  000012cc          	.endproc _get_item_cb
  238  000012cc          	.align 2
  239  000012cc          	.proc _is_full
  240  000012cc          	.global _is_full
  241  000012cc          	_is_full:
  242                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  243  000012cc  afbefffc	sw	-4(r29),r30; push fp
  244  000012d0  001df020	add	r30,r0,r29; fp = sp
  245  000012d4  afbffff8	sw	-8(r29),r31; push ret addr
  246  000012d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  247  000012dc  afa20000	sw	0(r29),r2
  248  000012e0  afa30004	sw	4(r29),r3
  249  000012e4  afa40008	sw	8(r29),r4
  250  000012e8  8fc40000	lw	r4,(r30)
  251  000012ec  8c810000	lw	r1,(r4)
  252  000012f0  20230001	addi	r3,r1,#1
  253  000012f4  2001000a	addi	r1,r0,#10
  254  000012f8  00600035	movi2fp	f0,r3
  255  000012fc  00200835	movi2fp	f1,r1
  256  00001300  0401000f	div	f0,f0,f1
  257  00001304  00001034	movfp2i	r2,f0
  258  00001308  50410002	slli	r1,r2,#0x2
  259  0000130c  00220820	add	r1,r1,r2
  260  00001310  50210001	slli	r1,r1,#0x1
  261  00001314  00611022	sub	r2,r3,r1
  262  00001318  8c810004	lw	r1,4(r4)
  263  0000131c  00411028	seq	r2,r2,r1
  264  00001320  20010001	addi	r1,r0,#1
  265  00001324  14400008	bnez	r2,L23_LF0
  266  00001328  54000000	nop; not filled.
  267  0000132c  20010000	addi	r1,r0,#0
  268  00001330          	L23_LF0:
  269  00001330  8fa20000	lw	r2,0(r29)
  270  00001334  8fa30004	lw	r3,4(r29)
  271  00001338  8fa40008	lw	r4,8(r29)
  272  0000133c  8fdffff8	lw	r31,-8(r30)
  273  00001340  001ee820	add	r29,r0,r30
  274  00001344  8fdefffc	lw	r30,-4(r30)
  275  00001348  4be00000	jr	r31
  276  0000134c  54000000	nop
  277  00001350          	.endproc _is_full
  278  00001350          	.align 2
  279  00001350          	.proc _is_empty
  280  00001350          	.global _is_empty
  281  00001350          	_is_empty:
  282                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  283  00001350  afbefffc	sw	-4(r29),r30; push fp
  284  00001354  001df020	add	r30,r0,r29; fp = sp
  285  00001358  afbffff8	sw	-8(r29),r31; push ret addr
  286  0000135c  2fbd0010	subui	r29,r29,#16; alloc local storage
  287  00001360  afa20000	sw	0(r29),r2
  288  00001364  8fc10000	lw	r1,(r30)
  289  00001368  8c220000	lw	r2,(r1)
  290  0000136c  8c210004	lw	r1,4(r1)
  291  00001370  00411028	seq	r2,r2,r1
  292  00001374  20010001	addi	r1,r0,#1
  293  00001378  14400008	bnez	r2,L30_LF0
  294  0000137c  54000000	nop; not filled.
  295  00001380  20010000	addi	r1,r0,#0
  296  00001384          	L30_LF0:
  297  00001384  8fa20000	lw	r2,0(r29)
  298  00001388  8fdffff8	lw	r31,-8(r30)
  299  0000138c  001ee820	add	r29,r0,r30
  300  00001390  8fdefffc	lw	r30,-4(r30)
  301  00001394  4be00000	jr	r31
  302  00001398  54000000	nop
  303  0000139c          	.endproc _is_empty
  304  0000139c          	.data
  305  00003051          	.align 2
  306  00003054          	LC3_LF0:
  307  00003054  43697263	.ascii "Circular Buffer Initiated\n\000"
  307  00003058  756c6172	
  307  0000305c  20427566	
  307  00003060  66657220	
  307  00003064  496e6974	
  307  00003068  69617465	
  307  0000306c  640a00  	
  308  0000306f          	.text
  309  0000139c          	.align 2
  310  0000139c          	.proc _init_cb
  311  0000139c          	.global _init_cb
  312  0000139c          	_init_cb:
  313                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  314  0000139c  afbefffc	sw	-4(r29),r30; push fp
  315  000013a0  001df020	add	r30,r0,r29; fp = sp
  316  000013a4  afbffff8	sw	-8(r29),r31; push ret addr
  317  000013a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  318  000013ac  afa20000	sw	0(r29),r2
  319  000013b0  8fc10000	lw	r1,(r30)
  320  000013b4  20020000	addi	r2,r0,#0
  321  000013b8  ac220000	sw	(r1),r2
  322  000013bc  ac220004	sw	4(r1),r2
  323  000013c0  23bdfff8	addi	r29,r29,#-8
  324  000013c4  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
  325  000013c8  24423054	addui	r2,r2,(LC3_LF0)&0xffff
  326  000013cc  afa20000	sw	(r29),r2
  327  000013d0  0c000654	jal	_Printf
  328  000013d4  54000000	nop; not filled.
  329  000013d8  23bd0008	addi	r29,r29,#8
  330  000013dc  8fa20000	lw	r2,0(r29)
  331  000013e0  8fdffff8	lw	r31,-8(r30)
  332  000013e4  001ee820	add	r29,r0,r30
  333  000013e8  8fdefffc	lw	r30,-4(r30)
  334  000013ec  4be00000	jr	r31
  335  000013f0  54000000	nop
  336  000013f4          	.endproc _init_cb
  337  000013f4          	.data
  338  0000306f          	.align 2
  339  00003070          	LC4_LF0:
  340  00003070  20436972	.ascii " Circular Buffer =>  \000"
  340  00003074  63756c61	
  340  00003078  72204275	
  340  0000307c  66666572	
  340  00003080  203d3e20	
  340  00003084  2000    	
  341  00003086          	.align 2
  342  00003088          	LC5_LF0:
  343  00003088  256300  	.ascii "%c\000"
  344  0000308b          	.align 2
  345  0000308c          	LC6_LF0:
  346  0000308c  0a00    	.ascii "\n\000"
  347  0000308e          	.text
  348  000013f4          	.align 2
  349  000013f4          	.proc _Print_cb
  350  000013f4          	.global _Print_cb
  351  000013f4          	_Print_cb:
  352                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  353  000013f4  afbefffc	sw	-4(r29),r30; push fp
  354  000013f8  001df020	add	r30,r0,r29; fp = sp
  355  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  356  00001400  2fbd0020	subui	r29,r29,#32; alloc local storage
  357  00001404  afa20000	sw	0(r29),r2
  358  00001408  afa30004	sw	4(r29),r3
  359  0000140c  afa40008	sw	8(r29),r4
  360  00001410  afa5000c	sw	12(r29),r5
  361  00001414  afa60010	sw	16(r29),r6
  362  00001418  afa70014	sw	20(r29),r7
  363  0000141c  8fc50000	lw	r5,(r30)
  364  00001420  23bdfff8	addi	r29,r29,#-8
  365  00001424  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  366  00001428  24e73070	addui	r7,r7,(LC4_LF0)&0xffff
  367  0000142c  afa70000	sw	(r29),r7
  368  00001430  0c0005f4	jal	_Printf
  369  00001434  54000000	nop; not filled.
  370  00001438  20040000	addi	r4,r0,#0
  371  0000143c  23bd0008	addi	r29,r29,#8
  372  00001440  2006000a	addi	r6,r0,#10
  373  00001444          	L45_LF0:
  374  00001444  23bdfff8	addi	r29,r29,#-8
  375  00001448  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  376  0000144c  24e73088	addui	r7,r7,(LC5_LF0)&0xffff
  377  00001450  afa70000	sw	(r29),r7
  378  00001454  8ca10004	lw	r1,4(r5)
  379  00001458  00811820	add	r3,r4,r1
  380  0000145c  00600035	movi2fp	f0,r3
  381  00001460  00c00835	movi2fp	f1,r6
  382  00001464  0401000f	div	f0,f0,f1
  383  00001468  00001034	movfp2i	r2,f0
  384  0000146c  50410002	slli	r1,r2,#0x2
  385  00001470  00220820	add	r1,r1,r2
  386  00001474  50210001	slli	r1,r1,#0x1
  387  00001478  00610822	sub	r1,r3,r1
  388  0000147c  00a10820	add	r1,r5,r1
  389  00001480  90210008	lbu	r1,8(r1)
  390  00001484  afa10004	sw	4(r29),r1
  391  00001488  0c00059c	jal	_Printf
  392  0000148c  54000000	nop; not filled.
  393  00001490  23bd0008	addi	r29,r29,#8
  394  00001494  20840001	addi	r4,r4,#1
  395  00001498  70810009	slei	r1,r4,#9
  396  0000149c  1420ffa4	bnez	r1,L45_LF0
  397  000014a0  54000000	nop; not filled.
  398  000014a4  23bdfff8	addi	r29,r29,#-8
  399  000014a8  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  400  000014ac  24e7308c	addui	r7,r7,(LC6_LF0)&0xffff
  401  000014b0  afa70000	sw	(r29),r7
  402  000014b4  0c000570	jal	_Printf
  403  000014b8  54000000	nop; not filled.
  404  000014bc  23bd0008	addi	r29,r29,#8
  405  000014c0  8fa20000	lw	r2,0(r29)
  406  000014c4  8fa30004	lw	r3,4(r29)
  407  000014c8  8fa40008	lw	r4,8(r29)
  408  000014cc  8fa5000c	lw	r5,12(r29)
  409  000014d0  8fa60010	lw	r6,16(r29)
  410  000014d4  8fa70014	lw	r7,20(r29)
  411  000014d8  8fdffff8	lw	r31,-8(r30)
  412  000014dc  001ee820	add	r29,r0,r30
  413  000014e0  8fdefffc	lw	r30,-4(r30)
  414  000014e4  4be00000	jr	r31
  415  000014e8  54000000	nop
  416  000014ec          	.endproc _Print_cb
  417  000014ec          	.data
  418  0000308e          	.align 2
  419  00003090          	LC7_LF0:
  420  00003090  30313233	.ascii "0123456789\000"
  420  00003094  34353637	
  420  00003098  383900  	
  421  0000309b          	.align 2
  422  0000309c          	LC8_LF0:
  423  0000309c  44415441	.ascii "DATA[11] = %d\n\000"
  423  000030a0  5b31315d	
  423  000030a4  203d2025	
  423  000030a8  640a00  	
  424  000030ab          	.align 2
  425  000030ac          	LC9_LF0:
  426  000030ac  55736167	.ascii "Usage: \000"
  426  000030b0  653a2000	
  427  000030b4          	.align 2
  428  000030b4          	LC10_LF0:
  429  000030b4  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
  429  000030b8  6e646c65	
  429  000030bc  5f746f5f	
  429  000030c0  73686172	
  429  000030c4  65645f6d	
  429  000030c8  656d6f72	
  429  000030cc  795f7061	
  429  000030d0  67653e20	
  429  000030d4  3c68616e	
  429  000030d8  646c655f	
  429  000030dc  746f5f70	
  429  000030e0  6167655f	
  429  000030e4  6d617070	
  429  000030e8  65645f73	
  429  000030ec  656d6170	
  429  000030f0  686f7265	
  429  000030f4  3e203c68	
  429  000030f8  616e    	
  430  000030fa  646c6520	.ascii "dle to lock>\n\000"
  430  000030fe  746f206c	
  430  00003102  6f636b3e	
  430  00003106  0a00    	
  431  00003108          	.align 2
  432  00003108          	LC11_LF0:
  433  00003108  436f756c	.ascii "Could not map the virtual address to the memory in \000"
  433  0000310c  64206e6f	
  433  00003110  74206d61	
  433  00003114  70207468	
  433  00003118  65207669	
  433  0000311c  72747561	
  433  00003120  6c206164	
  433  00003124  64726573	
  433  00003128  7320746f	
  433  0000312c  20746865	
  433  00003130  206d656d	
  433  00003134  6f727920	
  433  00003138  696e2000	
  434  0000313c          	.align 2
  435  0000313c          	LC12_LF0:
  436  0000313c  2c206578	.ascii ", exiting...\n\000"
  436  00003140  6974696e	
  436  00003144  672e2e2e	
  436  00003148  0a00    	
  437  0000314a          	.align 2
  438  0000314c          	LC13_LF0:
  439  0000314c  50524f44	.ascii "PROD - PID %d ---- Succesful Wait for j =  %d \n\000"
  439  00003150  202d2050	
  439  00003154  49442025	
  439  00003158  64202d2d	
  439  0000315c  2d2d2053	
  439  00003160  75636365	
  439  00003164  7366756c	
  439  00003168  20576169	
  439  0000316c  7420666f	
  439  00003170  72206a20	
  439  00003174  3d202025	
  439  00003178  64200a00	
  440  0000317c          	.align 2
  441  0000317c          	LC14_LF0:
  442  0000317c  0a50524f	.ascii "\nPROD - PID %d ---- ACQUIRED LOCK \n\000"
  442  00003180  44202d20	
  442  00003184  50494420	
  442  00003188  2564202d	
  442  0000318c  2d2d2d20	
  442  00003190  41435155	
  442  00003194  49524544	
  442  00003198  204c4f43	
  442  0000319c  4b200a00	
  443  000031a0          	.align 2
  444  000031a0          	LC15_LF0:
  445  000031a0  50524f44	.ascii "PROD - PID %d ---- Put %c in cb \n\000"
  445  000031a4  202d2050	
  445  000031a8  49442025	
  445  000031ac  64202d2d	
  445  000031b0  2d2d2050	
  445  000031b4  75742025	
  445  000031b8  6320696e	
  445  000031bc  20636220	
  445  000031c0  0a00    	
  446  000031c2          	.align 2
  447  000031c4          	LC16_LF0:
  448  000031c4  50524f44	.ascii "PROD - PID %d ---- Successful Signal For j =  %d \n\000"
  448  000031c8  202d2050	
  448  000031cc  49442025	
  448  000031d0  64202d2d	
  448  000031d4  2d2d2053	
  448  000031d8  75636365	
  448  000031dc  73736675	
  448  000031e0  6c205369	
  448  000031e4  676e616c	
  448  000031e8  20466f72	
  448  000031ec  206a203d	
  448  000031f0  20202564	
  448  000031f4  200a00  	
  449  000031f7          	.align 2
  450  000031f8          	LC17_LF0:
  451  000031f8  0a50524f	.ascii "\nPROD - PID %d ---- RELEASED LOCK \n\000"
  451  000031fc  44202d20	
  451  00003200  50494420	
  451  00003204  2564202d	
  451  00003208  2d2d2d20	
  451  0000320c  52454c45	
  451  00003210  41534544	
  451  00003214  204c4f43	
  451  00003218  4b200a00	
  452  0000321c          	.align 2
  453  0000321c          	LC18_LF0:
  454  0000321c  50524f44	.ascii "PROD - PID ---- %d Sent Everything \n\000"
  454  00003220  202d2050	
  454  00003224  4944202d	
  454  00003228  2d2d2d20	
  454  0000322c  25642053	
  454  00003230  656e7420	
  454  00003234  45766572	
  454  00003238  79746869	
  454  0000323c  6e67200a	
  454  00003240  00      	
  455  00003241          	.align 2
  456  00003244          	LC19_LF0:
  457  00003244  50524f44	.ascii "PROD - PID %d is complete.\n\000"
  457  00003248  202d2050	
  457  0000324c  49442025	
  457  00003250  64206973	
  457  00003254  20636f6d	
  457  00003258  706c6574	
  457  0000325c  652e0a00	
  458  00003260          	.align 2
  459  00003260          	LC20_LF0:
  460  00003260  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  460  00003264  73656d61	
  460  00003268  70686f72	
  460  0000326c  6520735f	
  460  00003270  70726f63	
  460  00003274  735f636f	
  460  00003278  6d706c65	
  460  0000327c  74656420	
  460  00003280  28256429	
  460  00003284  20696e20	
  460  00003288  00      	
  461  00003289          	.text
  462  000014ec          	.align 2
  463  000014ec          	.proc _main
  464  000014ec          	.global _main
  465  000014ec          	_main:
  466                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  467  000014ec  afbefffc	sw	-4(r29),r30; push fp
  468  000014f0  001df020	add	r30,r0,r29; fp = sp
  469  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  470  000014f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  471  000014fc  8fc20000	lw	r2,(r30)
  472  00001500  8fc70004	lw	r7,4(r30)
  473  00001504  0c00131c	jal	___main
  474  00001508  54000000	nop; not filled.
  475  0000150c  3c010000	lhi	r1,((LC7_LF0)>>16)&0xffff
  476  00001510  24213090	addui	r1,r1,(LC7_LF0)&0xffff
  477  00001514  802b0000	lb	r11,(r1)
  478  00001518  a3cbffe8	sb	-24(r30),r11
  479  0000151c  802b0001	lb	r11,1(r1)
  480  00001520  a3cbffe9	sb	-23(r30),r11
  481  00001524  802b0002	lb	r11,2(r1)
  482  00001528  a3cbffea	sb	-22(r30),r11
  483  0000152c  802b0003	lb	r11,3(r1)
  484  00001530  a3cbffeb	sb	-21(r30),r11
  485  00001534  802b0004	lb	r11,4(r1)
  486  00001538  a3cbffec	sb	-20(r30),r11
  487  0000153c  802b0005	lb	r11,5(r1)
  488  00001540  a3cbffed	sb	-19(r30),r11
  489  00001544  802b0006	lb	r11,6(r1)
  490  00001548  a3cbffee	sb	-18(r30),r11
  491  0000154c  802b0007	lb	r11,7(r1)
  492  00001550  a3cbffef	sb	-17(r30),r11
  493  00001554  802b0008	lb	r11,8(r1)
  494  00001558  a3cbfff0	sb	-16(r30),r11
  495  0000155c  802b0009	lb	r11,9(r1)
  496  00001560  a3cbfff1	sb	-15(r30),r11
  497  00001564  8021000a	lb	r1,10(r1)
  498  00001568  a3c1fff2	sb	-14(r30),r1
  499  0000156c  23bdfff8	addi	r29,r29,#-8
  500  00001570  3c0b0000	lhi	r11,((LC8_LF0)>>16)&0xffff
  501  00001574  256b309c	addui	r11,r11,(LC8_LF0)&0xffff
  502  00001578  afab0000	sw	(r29),r11
  503  0000157c  93c1fff3	lbu	r1,-13(r30)
  504  00001580  afa10004	sw	4(r29),r1
  505  00001584  0c0004a0	jal	_Printf
  506  00001588  54000000	nop; not filled.
  507  0000158c  23bd0008	addi	r29,r29,#8
  508  00001590  64410006	snei	r1,r2,#6
  509  00001594  1020004c	beqz	r1,L48_LF0
  510  00001598  54000000	nop; not filled.
  511  0000159c  23bdfff8	addi	r29,r29,#-8
  512  000015a0  3c0b0000	lhi	r11,((LC9_LF0)>>16)&0xffff
  513  000015a4  256b30ac	addui	r11,r11,(LC9_LF0)&0xffff
  514  000015a8  afab0000	sw	(r29),r11
  515  000015ac  0c000478	jal	_Printf
  516  000015b0  54000000	nop; not filled.
  517  000015b4  8ceb0000	lw	r11,(r7)
  518  000015b8  afab0000	sw	(r29),r11
  519  000015bc  0c000468	jal	_Printf
  520  000015c0  54000000	nop; not filled.
  521  000015c4  3c0b0000	lhi	r11,((LC10_LF0)>>16)&0xffff
  522  000015c8  256b30b4	addui	r11,r11,(LC10_LF0)&0xffff
  523  000015cc  afab0000	sw	(r29),r11
  524  000015d0  0c000454	jal	_Printf
  525  000015d4  54000000	nop; not filled.
  526  000015d8  0c0004f4	jal	_Exit
  527  000015dc  54000000	nop; not filled.
  528  000015e0  23bd0008	addi	r29,r29,#8
  529  000015e4          	L48_LF0:
  530  000015e4  23bdfff0	addi	r29,r29,#-16
  531  000015e8  8ceb0004	lw	r11,4(r7)
  532  000015ec  afab0000	sw	(r29),r11
  533  000015f0  200b0000	addi	r11,r0,#0
  534  000015f4  afab0004	sw	4(r29),r11
  535  000015f8  200b000a	addi	r11,r0,#10
  536  000015fc  afab0008	sw	8(r29),r11
  537  00001600  0c000d78	jal	_dstrtol
  538  00001604  54000000	nop; not filled.
  539  00001608  00011020	add	r2,r0,r1
  540  0000160c  8ceb0008	lw	r11,8(r7)
  541  00001610  afab0000	sw	(r29),r11
  542  00001614  200b0000	addi	r11,r0,#0
  543  00001618  afab0004	sw	4(r29),r11
  544  0000161c  200b000a	addi	r11,r0,#10
  545  00001620  afab0008	sw	8(r29),r11
  546  00001624  0c000d54	jal	_dstrtol
  547  00001628  54000000	nop; not filled.
  548  0000162c  00015020	add	r10,r0,r1
  549  00001630  8ceb000c	lw	r11,12(r7)
  550  00001634  afab0000	sw	(r29),r11
  551  00001638  200b0000	addi	r11,r0,#0
  552  0000163c  afab0004	sw	4(r29),r11
  553  00001640  200b000a	addi	r11,r0,#10
  554  00001644  afab0008	sw	8(r29),r11
  555  00001648  0c000d30	jal	_dstrtol
  556  0000164c  54000000	nop; not filled.
  557  00001650  00013020	add	r6,r0,r1
  558  00001654  8ceb0010	lw	r11,16(r7)
  559  00001658  afab0000	sw	(r29),r11
  560  0000165c  200b0000	addi	r11,r0,#0
  561  00001660  afab0004	sw	4(r29),r11
  562  00001664  200b000a	addi	r11,r0,#10
  563  00001668  afab0008	sw	8(r29),r11
  564  0000166c  0c000d0c	jal	_dstrtol
  565  00001670  54000000	nop; not filled.
  566  00001674  00014820	add	r9,r0,r1
  567  00001678  8ceb0014	lw	r11,20(r7)
  568  0000167c  afab0000	sw	(r29),r11
  569  00001680  200b0000	addi	r11,r0,#0
  570  00001684  afab0004	sw	4(r29),r11
  571  00001688  200b000a	addi	r11,r0,#10
  572  0000168c  afab0008	sw	8(r29),r11
  573  00001690  0c000ce8	jal	_dstrtol
  574  00001694  54000000	nop; not filled.
  575  00001698  00014020	add	r8,r0,r1
  576  0000169c  afa20000	sw	(r29),r2
  577  000016a0  0c0003b4	jal	_shmat
  578  000016a4  54000000	nop; not filled.
  579  000016a8  00011020	add	r2,r0,r1
  580  000016ac  23bd0010	addi	r29,r29,#16
  581  000016b0  64410000	snei	r1,r2,#0
  582  000016b4  1420004c	bnez	r1,L49_LF0
  583  000016b8  54000000	nop; not filled.
  584  000016bc  23bdfff8	addi	r29,r29,#-8
  585  000016c0  3c0b0000	lhi	r11,((LC11_LF0)>>16)&0xffff
  586  000016c4  256b3108	addui	r11,r11,(LC11_LF0)&0xffff
  587  000016c8  afab0000	sw	(r29),r11
  588  000016cc  0c000358	jal	_Printf
  589  000016d0  54000000	nop; not filled.
  590  000016d4  8ceb0000	lw	r11,(r7)
  591  000016d8  afab0000	sw	(r29),r11
  592  000016dc  0c000348	jal	_Printf
  593  000016e0  54000000	nop; not filled.
  594  000016e4  3c0b0000	lhi	r11,((LC12_LF0)>>16)&0xffff
  595  000016e8  256b313c	addui	r11,r11,(LC12_LF0)&0xffff
  596  000016ec  afab0000	sw	(r29),r11
  597  000016f0  0c000334	jal	_Printf
  598  000016f4  54000000	nop; not filled.
  599  000016f8  0c0003d4	jal	_Exit
  600  000016fc  54000000	nop; not filled.
  601  00001700  23bd0008	addi	r29,r29,#8
  602  00001704          	L49_LF0:
  603  00001704  20450008	addi	r5,r2,#8
  604  00001708  20040000	addi	r4,r0,#0
  605  0000170c          	L52_LF0:
  606  0000170c  23bdfff8	addi	r29,r29,#-8
  607  00001710  afa80000	sw	(r29),r8
  608  00001714  0c000358	jal	_sem_wait
  609  00001718  54000000	nop; not filled.
  610  0000171c  23bd0008	addi	r29,r29,#8
  611  00001720  64210000	snei	r1,r1,#0
  612  00001724  10200030	beqz	r1,L53_LF0
  613  00001728  54000000	nop; not filled.
  614  0000172c  0c000304	jal	_Getpid
  615  00001730  54000000	nop; not filled.
  616  00001734  23bdfff0	addi	r29,r29,#-16
  617  00001738  3c0b0000	lhi	r11,((LC13_LF0)>>16)&0xffff
  618  0000173c  256b314c	addui	r11,r11,(LC13_LF0)&0xffff
  619  00001740  afab0000	sw	(r29),r11
  620  00001744  afa10004	sw	4(r29),r1
  621  00001748  afa40008	sw	8(r29),r4
  622  0000174c  0c0002d8	jal	_Printf
  623  00001750  54000000	nop; not filled.
  624  00001754  23bd0010	addi	r29,r29,#16
  625  00001758          	L53_LF0:
  626  00001758  23bdfff8	addi	r29,r29,#-8
  627  0000175c  afa60000	sw	(r29),r6
  628  00001760  0c000330	jal	_lock_acquire
  629  00001764  54000000	nop; not filled.
  630  00001768  23bd0008	addi	r29,r29,#8
  631  0000176c  64210000	snei	r1,r1,#0
  632  00001770  1020002c	beqz	r1,L54_LF0
  633  00001774  54000000	nop; not filled.
  634  00001778  0c0002b8	jal	_Getpid
  635  0000177c  54000000	nop; not filled.
  636  00001780  23bdfff8	addi	r29,r29,#-8
  637  00001784  3c0b0000	lhi	r11,((LC14_LF0)>>16)&0xffff
  638  00001788  256b317c	addui	r11,r11,(LC14_LF0)&0xffff
  639  0000178c  afab0000	sw	(r29),r11
  640  00001790  afa10004	sw	4(r29),r1
  641  00001794  0c000290	jal	_Printf
  642  00001798  54000000	nop; not filled.
  643  0000179c  23bd0008	addi	r29,r29,#8
  644  000017a0          	L54_LF0:
  645  000017a0  0c000290	jal	_Getpid
  646  000017a4  54000000	nop; not filled.
  647  000017a8  23bdfff0	addi	r29,r29,#-16
  648  000017ac  3c0b0000	lhi	r11,((LC15_LF0)>>16)&0xffff
  649  000017b0  256b31a0	addui	r11,r11,(LC15_LF0)&0xffff
  650  000017b4  afab0000	sw	(r29),r11
  651  000017b8  afa10004	sw	4(r29),r1
  652  000017bc  23c1ffe8	addi	r1,r30,#-24
  653  000017c0  00241020	add	r2,r1,r4
  654  000017c4  90410000	lbu	r1,(r2)
  655  000017c8  afa10008	sw	8(r29),r1
  656  000017cc  0c000258	jal	_Printf
  657  000017d0  54000000	nop; not filled.
  658  000017d4  80420000	lb	r2,(r2)
  659  000017d8  23bd0010	addi	r29,r29,#16
  660  000017dc  8ca10000	lw	r1,(r5)
  661  000017e0  00a10820	add	r1,r5,r1
  662  000017e4  a0220008	sb	8(r1),r2
  663  000017e8  23bdfff0	addi	r29,r29,#-16
  664  000017ec  3c0b0000	lhi	r11,((LC0_LF0)>>16)&0xffff
  665  000017f0  256b3000	addui	r11,r11,(LC0_LF0)&0xffff
  666  000017f4  afab0000	sw	(r29),r11
  667  000017f8  304100ff	andi	r1,r2,#0x00ff
  668  000017fc  afa10004	sw	4(r29),r1
  669  00001800  8cab0000	lw	r11,(r5)
  670  00001804  afab0008	sw	8(r29),r11
  671  00001808  0c00021c	jal	_Printf
  672  0000180c  54000000	nop; not filled.
  673  00001810  8ca10000	lw	r1,(r5)
  674  00001814  20230001	addi	r3,r1,#1
  675  00001818  2001000a	addi	r1,r0,#10
  676  0000181c  00600035	movi2fp	f0,r3
  677  00001820  00200835	movi2fp	f1,r1
  678  00001824  0401000f	div	f0,f0,f1
  679  00001828  00001034	movfp2i	r2,f0
  680  0000182c  50410002	slli	r1,r2,#0x2
  681  00001830  00220820	add	r1,r1,r2
  682  00001834  50210001	slli	r1,r1,#0x1
  683  00001838  00610822	sub	r1,r3,r1
  684  0000183c  aca10000	sw	(r5),r1
  685  00001840  23bd0010	addi	r29,r29,#16
  686  00001844  20840001	addi	r4,r4,#1
  687  00001848  23bdfff8	addi	r29,r29,#-8
  688  0000184c  3c0b0000	lhi	r11,((LC6_LF0)>>16)&0xffff
  689  00001850  256b308c	addui	r11,r11,(LC6_LF0)&0xffff
  690  00001854  afab0000	sw	(r29),r11
  691  00001858  0c0001cc	jal	_Printf
  692  0000185c  54000000	nop; not filled.
  693  00001860  afa90000	sw	(r29),r9
  694  00001864  0c000214	jal	_sem_signal
  695  00001868  54000000	nop; not filled.
  696  0000186c  23bd0008	addi	r29,r29,#8
  697  00001870  64210000	snei	r1,r1,#0
  698  00001874  10200034	beqz	r1,L56_LF0
  699  00001878  54000000	nop; not filled.
  700  0000187c  0c0001b4	jal	_Getpid
  701  00001880  54000000	nop; not filled.
  702  00001884  23bdfff0	addi	r29,r29,#-16
  703  00001888  3c0b0000	lhi	r11,((LC16_LF0)>>16)&0xffff
  704  0000188c  256b31c4	addui	r11,r11,(LC16_LF0)&0xffff
  705  00001890  afab0000	sw	(r29),r11
  706  00001894  afa10004	sw	4(r29),r1
  707  00001898  2081ffff	addi	r1,r4,#-1
  708  0000189c  afa10008	sw	8(r29),r1
  709  000018a0  0c000184	jal	_Printf
  710  000018a4  54000000	nop; not filled.
  711  000018a8  23bd0010	addi	r29,r29,#16
  712  000018ac          	L56_LF0:
  713  000018ac  23bdfff8	addi	r29,r29,#-8
  714  000018b0  afa60000	sw	(r29),r6
  715  000018b4  0c0001e8	jal	_lock_release
  716  000018b8  54000000	nop; not filled.
  717  000018bc  23bd0008	addi	r29,r29,#8
  718  000018c0  64210000	snei	r1,r1,#0
  719  000018c4  1020002c	beqz	r1,L50_LF0
  720  000018c8  54000000	nop; not filled.
  721  000018cc  0c000164	jal	_Getpid
  722  000018d0  54000000	nop; not filled.
  723  000018d4  23bdfff8	addi	r29,r29,#-8
  724  000018d8  3c0b0000	lhi	r11,((LC17_LF0)>>16)&0xffff
  725  000018dc  256b31f8	addui	r11,r11,(LC17_LF0)&0xffff
  726  000018e0  afab0000	sw	(r29),r11
  727  000018e4  afa10004	sw	4(r29),r1
  728  000018e8  0c00013c	jal	_Printf
  729  000018ec  54000000	nop; not filled.
  730  000018f0  23bd0008	addi	r29,r29,#8
  731  000018f4          	L50_LF0:
  732  000018f4  03c40820	add	r1,r30,r4
  733  000018f8  9021ffe7	lbu	r1,-25(r1)
  734  000018fc  64210000	snei	r1,r1,#0
  735  00001900  1420fe08	bnez	r1,L52_LF0
  736  00001904  54000000	nop; not filled.
  737  00001908  64810000	snei	r1,r4,#0
  738  0000190c  1020fdfc	beqz	r1,L52_LF0
  739  00001910  54000000	nop; not filled.
  740  00001914  23bdfff8	addi	r29,r29,#-8
  741  00001918  afa60000	sw	(r29),r6
  742  0000191c  0c000174	jal	_lock_acquire
  743  00001920  54000000	nop; not filled.
  744  00001924  0c00010c	jal	_Getpid
  745  00001928  54000000	nop; not filled.
  746  0000192c  3c0b0000	lhi	r11,((LC18_LF0)>>16)&0xffff
  747  00001930  256b321c	addui	r11,r11,(LC18_LF0)&0xffff
  748  00001934  afab0000	sw	(r29),r11
  749  00001938  afa10004	sw	4(r29),r1
  750  0000193c  0c0000e8	jal	_Printf
  751  00001940  54000000	nop; not filled.
  752  00001944  afa60000	sw	(r29),r6
  753  00001948  0c000154	jal	_lock_release
  754  0000194c  54000000	nop; not filled.
  755  00001950  0c0000e0	jal	_Getpid
  756  00001954  54000000	nop; not filled.
  757  00001958  3c0b0000	lhi	r11,((LC19_LF0)>>16)&0xffff
  758  0000195c  256b3244	addui	r11,r11,(LC19_LF0)&0xffff
  759  00001960  afab0000	sw	(r29),r11
  760  00001964  afa10004	sw	4(r29),r1
  761  00001968  0c0000bc	jal	_Printf
  762  0000196c  54000000	nop; not filled.
  763  00001970  afaa0000	sw	(r29),r10
  764  00001974  0c000104	jal	_sem_signal
  765  00001978  54000000	nop; not filled.
  766  0000197c  23bd0008	addi	r29,r29,#8
  767  00001980  64210001	snei	r1,r1,#1
  768  00001984  10200050	beqz	r1,L59_LF0
  769  00001988  54000000	nop; not filled.
  770  0000198c  23bdfff8	addi	r29,r29,#-8
  771  00001990  3c0b0000	lhi	r11,((LC20_LF0)>>16)&0xffff
  772  00001994  256b3260	addui	r11,r11,(LC20_LF0)&0xffff
  773  00001998  afab0000	sw	(r29),r11
  774  0000199c  afaa0004	sw	4(r29),r10
  775  000019a0  0c000084	jal	_Printf
  776  000019a4  54000000	nop; not filled.
  777  000019a8  8ce70000	lw	r7,(r7)
  778  000019ac  afa70000	sw	(r29),r7
  779  000019b0  0c000074	jal	_Printf
  780  000019b4  54000000	nop; not filled.
  781  000019b8  3c0b0000	lhi	r11,((LC12_LF0)>>16)&0xffff
  782  000019bc  256b313c	addui	r11,r11,(LC12_LF0)&0xffff
  783  000019c0  afab0000	sw	(r29),r11
  784  000019c4  0c000060	jal	_Printf
  785  000019c8  54000000	nop; not filled.
  786  000019cc  0c000100	jal	_Exit
  787  000019d0  54000000	nop; not filled.
  788  000019d4  23bd0008	addi	r29,r29,#8
  789  000019d8          	L59_LF0:
  790  000019d8  0c000e3c	jal	_exit
  791  000019dc  54000000	nop
  792  000019e0          	.endproc _main
  793                      ;;;
  794                      ;;; Stub functions for DLX traps.
  795                      ;;;
  796                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  797                      ;;;
  798                      ;;; The traps such as Open and Close
  799                      ;;; (note the capital letters) are for use by user programs.  The traps
  800                      ;;; with names such as open and close (lower case) are for use by the OS.
  801                      ;;;
  804  000019e0          	.align 2
  806                      ;;; The following are the traps to be used by user-level programs
  807                      ;;;
  809  000019e0          	.align 2
  810  000019e0          	.proc _Open
  811  000019e0          	.global _Open
  812  000019e0          	_Open:
  813                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  814                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  815                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  816  000019e0  44000213	trap	#0x213
  817  000019e4  4be00000	jr	r31
  818  000019e8  54000000	nop
  819  000019ec          	.endproc _Open
  821  000019ec          	.proc _Close
  822  000019ec          	.global _Close
  823  000019ec          	_Close:
  824  000019ec  44000214	trap	#0x214
  825  000019f0  4be00000	jr	r31
  826  000019f4  54000000	nop
  827  000019f8          	.endproc _Close
  829  000019f8          	.proc _Read
  830  000019f8          	.global _Read
  831  000019f8          	_Read:
  832  000019f8  44000210	trap	#0x210
  833  000019fc  4be00000	jr	r31
  834  00001a00  54000000	nop
  835  00001a04          	.endproc _Read
  837  00001a04          	.proc _Write
  838  00001a04          	.global _Write
  839  00001a04          	_Write:
  840  00001a04  44000211	trap	#0x211
  841  00001a08  4be00000	jr	r31
  842  00001a0c  54000000	nop
  843  00001a10          	.endproc _Write
  845  00001a10          	.proc _Lseek
  846  00001a10          	.global _Lseek
  847  00001a10          	_Lseek:
  848  00001a10  44000212	trap	#0x212
  849  00001a14  4be00000	jr	r31
  850  00001a18  54000000	nop
  851  00001a1c          	.endproc _Lseek
  853  00001a1c          	.proc _Putchar
  854  00001a1c          	.global _Putchar
  855  00001a1c          	_Putchar:
  856  00001a1c  44000280	trap	#0x280
  857  00001a20  4be00000	jr	r31
  858  00001a24  54000000	nop
  859  00001a28          	.endproc _Putchar
  861  00001a28          	.proc _Printf
  862  00001a28          	.global _Printf
  863  00001a28          	_Printf:
  864  00001a28  44000201	trap	#0x201
  865  00001a2c  4be00000	jr	r31
  866  00001a30  54000000	nop
  867  00001a34          	.endproc _Printf
  869  00001a34          	.proc _Getpid
  870  00001a34          	.global _Getpid
  871  00001a34          	_Getpid:
  872  00001a34  44000431	trap	#0x431
  873  00001a38  4be00000	jr	r31
  874  00001a3c  54000000	nop
  875  00001a40          	.endproc _Getpid
  877  00001a40          	.proc _process_create
  878  00001a40          	.global _process_create
  879  00001a40          	_process_create:
  880  00001a40  44000432	trap	#0x432
  881  00001a44  4be00000	jr	r31
  882  00001a48  54000000	nop
  883  00001a4c          	.endproc _process_create
  885  00001a4c          	.proc _shmget
  886  00001a4c          	.global _shmget
  887  00001a4c          	_shmget:
  888  00001a4c  44000440	trap	#0x440
  889  00001a50  4be00000	jr	r31
  890  00001a54  54000000	nop
  891  00001a58          	.endproc _shmget
  893  00001a58          	.proc _shmat
  894  00001a58          	.global _shmat
  895  00001a58          	_shmat:
  896  00001a58  44000441	trap	#0x441
  897  00001a5c  4be00000	jr	r31
  898  00001a60  54000000	nop
  899  00001a64          	.endproc _shmat
  901  00001a64          	.proc _sem_create
  902  00001a64          	.global _sem_create
  903  00001a64          	_sem_create:
  904  00001a64  44000450	trap	#0x450
  905  00001a68  4be00000	jr	r31
  906  00001a6c  54000000	nop
  907  00001a70          	.endproc _sem_create
  909  00001a70          	.proc _sem_wait
  910  00001a70          	.global _sem_wait
  911  00001a70          	_sem_wait:
  912  00001a70  44000451	trap	#0x451
  913  00001a74  4be00000	jr	r31
  914  00001a78  54000000	nop
  915  00001a7c          	.endproc _sem_wait
  917  00001a7c          	.proc _sem_signal
  918  00001a7c          	.global _sem_signal
  919  00001a7c          	_sem_signal:
  920  00001a7c  44000452	trap	#0x452
  921  00001a80  4be00000	jr	r31
  922  00001a84  54000000	nop
  923  00001a88          	.endproc _sem_signal
  925  00001a88          	.proc _lock_create
  926  00001a88          	.global _lock_create
  927  00001a88          	_lock_create:
  928  00001a88  44000453	trap	#0x453
  929  00001a8c  4be00000	jr	r31
  930  00001a90  54000000	nop
  931  00001a94          	.endproc _lock_create
  933  00001a94          	.proc _lock_acquire
  934  00001a94          	.global _lock_acquire
  935  00001a94          	_lock_acquire:
  936  00001a94  44000454	trap	#0x454
  937  00001a98  4be00000	jr	r31
  938  00001a9c  54000000	nop
  939  00001aa0          	.endproc _lock_acquire
  941  00001aa0          	.proc _lock_release
  942  00001aa0          	.global _lock_release
  943  00001aa0          	_lock_release:
  944  00001aa0  44000455	trap	#0x455
  945  00001aa4  4be00000	jr	r31
  946  00001aa8  54000000	nop
  947  00001aac          	.endproc _lock_release
  949  00001aac          	.proc _cond_create
  950  00001aac          	.global _cond_create
  951  00001aac          	_cond_create:
  952  00001aac  44000456	trap	#0x456
  953  00001ab0  4be00000	jr	r31
  954  00001ab4  54000000	nop
  955  00001ab8          	.endproc _cond_create
  957  00001ab8          	.proc _cond_wait
  958  00001ab8          	.global _cond_wait
  959  00001ab8          	_cond_wait:
  960  00001ab8  44000457	trap	#0x457
  961  00001abc  4be00000	jr	r31
  962  00001ac0  54000000	nop
  963  00001ac4          	.endproc _cond_wait
  965  00001ac4          	.proc _cond_signal
  966  00001ac4          	.global _cond_signal
  967  00001ac4          	_cond_signal:
  968  00001ac4  44000458	trap	#0x458
  969  00001ac8  4be00000	jr	r31
  970  00001acc  54000000	nop
  971  00001ad0          	.endproc _cond_signal
  973  00001ad0          	.proc _Exit
  974  00001ad0          	.global _Exit
  975  00001ad0          	_Exit:
  976  00001ad0  44000500	trap	#0x500
  977  00001ad4  4be00000	jr	r31
  978  00001ad8  54000000	nop
  979  00001adc          	.endproc _Exit
  980                      ; Compiled by GCC
  982  00001adc          	.align 2
  983  00001adc          	.proc _isspace
  984  00001adc          	.global _isspace
  985  00001adc          	_isspace:
  986                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  987  00001adc  afbefffc	sw	-4(r29),r30; push fp
  988  00001ae0  001df020	add	r30,r0,r29; fp = sp
  989  00001ae4  afbffff8	sw	-8(r29),r31; push ret addr
  990  00001ae8  2fbd0018	subui	r29,r29,#24; alloc local storage
  991  00001aec  afa20000	sw	0(r29),r2
  992  00001af0  afa30004	sw	4(r29),r3
  993  00001af4  afa40008	sw	8(r29),r4
  994  00001af8  83c20003	lb	r2,3(r30)
  995  00001afc  20010000	addi	r1,r0,#0
  996  00001b00  304300ff	andi	r3,r2,#0x00ff
  997  00001b04  60640020	seqi	r4,r3,#32
  998  00001b08  1480002c	bnez	r4,L3_LF2
  999  00001b0c  54000000	nop; delay slot nop
 1000  00001b10  304300ff	andi	r3,r2,#0x00ff
 1001  00001b14  60640009	seqi	r4,r3,#9
 1002  00001b18  1480001c	bnez	r4,L3_LF2
 1003  00001b1c  54000000	nop; delay slot nop
 1004  00001b20  304300ff	andi	r3,r2,#0x00ff
 1005  00001b24  6064000a	seqi	r4,r3,#10
 1006  00001b28  1480000c	bnez	r4,L3_LF2
 1007  00001b2c  54000000	nop; delay slot nop
 1008  00001b30  08000008	j	L2_LF2
 1009  00001b34  54000000	nop; delay slot nop
 1010  00001b38          	L3_LF2:
 1011  00001b38  20010001	addi	r1,r0,#1
 1012  00001b3c          	L2_LF2:
 1013  00001b3c  08000004	j	L1_LF2
 1014  00001b40  54000000	nop; delay slot nop
 1015  00001b44          	L1_LF2:
 1016  00001b44  8fa20000	lw	r2,0(r29)
 1017  00001b48  8fa30004	lw	r3,4(r29)
 1018  00001b4c  8fa40008	lw	r4,8(r29)
 1019  00001b50  8fdffff8	lw	r31,-8(r30)
 1020  00001b54  001ee820	add	r29,r0,r30
 1021  00001b58  8fdefffc	lw	r30,-4(r30)
 1022  00001b5c  4be00000	jr	r31
 1023  00001b60  54000000	nop
 1024  00001b64          	.endproc _isspace
 1025  00001b64          	.align 2
 1026  00001b64          	.proc _isxdigit
 1027  00001b64          	.global _isxdigit
 1028  00001b64          	_isxdigit:
 1029                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
 1030  00001b64  afbefffc	sw	-4(r29),r30; push fp
 1031  00001b68  001df020	add	r30,r0,r29; fp = sp
 1032  00001b6c  afbffff8	sw	-8(r29),r31; push ret addr
 1033  00001b70  2fbd0018	subui	r29,r29,#24; alloc local storage
 1034  00001b74  afa20000	sw	0(r29),r2
 1035  00001b78  afa30004	sw	4(r29),r3
 1036  00001b7c  afa40008	sw	8(r29),r4
 1037  00001b80  83c20003	lb	r2,3(r30)
 1038  00001b84  20010000	addi	r1,r0,#0
 1039  00001b88  304300ff	andi	r3,r2,#0x00ff
 1040  00001b8c  6c64002f	sgtui	r4,r3,#47
 1041  00001b90  1080001c	beqz	r4,L7_LF2
 1042  00001b94  54000000	nop; delay slot nop
 1043  00001b98  304300ff	andi	r3,r2,#0x00ff
 1044  00001b9c  70640039	sleui	r4,r3,#57
 1045  00001ba0  1480005c	bnez	r4,L6_LF2
 1046  00001ba4  54000000	nop; delay slot nop
 1047  00001ba8  08000004	j	L7_LF2
 1048  00001bac  54000000	nop; delay slot nop
 1049  00001bb0          	L7_LF2:
 1050  00001bb0  304300ff	andi	r3,r2,#0x00ff
 1051  00001bb4  6c640060	sgtui	r4,r3,#96
 1052  00001bb8  1080001c	beqz	r4,L8_LF2
 1053  00001bbc  54000000	nop; delay slot nop
 1054  00001bc0  304300ff	andi	r3,r2,#0x00ff
 1055  00001bc4  70640066	sleui	r4,r3,#102
 1056  00001bc8  14800034	bnez	r4,L6_LF2
 1057  00001bcc  54000000	nop; delay slot nop
 1058  00001bd0  08000004	j	L8_LF2
 1059  00001bd4  54000000	nop; delay slot nop
 1060  00001bd8          	L8_LF2:
 1061  00001bd8  304300ff	andi	r3,r2,#0x00ff
 1062  00001bdc  6c640040	sgtui	r4,r3,#64
 1063  00001be0  10800020	beqz	r4,L5_LF2
 1064  00001be4  54000000	nop; delay slot nop
 1065  00001be8  304300ff	andi	r3,r2,#0x00ff
 1066  00001bec  70640041	sleui	r4,r3,#65
 1067  00001bf0  1480000c	bnez	r4,L6_LF2
 1068  00001bf4  54000000	nop; delay slot nop
 1069  00001bf8  08000008	j	L5_LF2
 1070  00001bfc  54000000	nop; delay slot nop
 1071  00001c00          	L6_LF2:
 1072  00001c00  20010001	addi	r1,r0,#1
 1073  00001c04          	L5_LF2:
 1074  00001c04  08000004	j	L4_LF2
 1075  00001c08  54000000	nop; delay slot nop
 1076  00001c0c          	L4_LF2:
 1077  00001c0c  8fa20000	lw	r2,0(r29)
 1078  00001c10  8fa30004	lw	r3,4(r29)
 1079  00001c14  8fa40008	lw	r4,8(r29)
 1080  00001c18  8fdffff8	lw	r31,-8(r30)
 1081  00001c1c  001ee820	add	r29,r0,r30
 1082  00001c20  8fdefffc	lw	r30,-4(r30)
 1083  00001c24  4be00000	jr	r31
 1084  00001c28  54000000	nop
 1085  00001c2c          	.endproc _isxdigit
 1086  00001c2c          	.align 2
 1087  00001c2c          	.proc _dstrcpy
 1088  00001c2c          	.global _dstrcpy
 1089  00001c2c          	_dstrcpy:
 1090                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
 1091  00001c2c  afbefffc	sw	-4(r29),r30; push fp
 1092  00001c30  001df020	add	r30,r0,r29; fp = sp
 1093  00001c34  afbffff8	sw	-8(r29),r31; push ret addr
 1094  00001c38  2fbd0018	subui	r29,r29,#24; alloc local storage
 1095  00001c3c  afa20000	sw	0(r29),r2
 1096  00001c40  afa30004	sw	4(r29),r3
 1097  00001c44  8fc10000	lw	r1,(r30)
 1098  00001c48  afc1fff4	sw	-12(r30),r1
 1099  00001c4c          	L10_LF2:
 1100  00001c4c  8fc10000	lw	r1,(r30)
 1101  00001c50  20220001	addi	r2,r1,#1
 1102  00001c54  afc20000	sw	(r30),r2
 1103  00001c58  8fc20004	lw	r2,4(r30)
 1104  00001c5c  20430001	addi	r3,r2,#1
 1105  00001c60  afc30004	sw	4(r30),r3
 1106  00001c64  80420000	lb	r2,(r2)
 1107  00001c68  a0220000	sb	(r1),r2
 1108  00001c6c  a3c2fff3	sb	-13(r30),r2
 1109  00001c70          	L12_LF2:
 1110  00001c70  93c1fff3	lbu	r1,-13(r30)
 1111  00001c74  64220000	snei	r2,r1,#0
 1112  00001c78  1440000c	bnez	r2,L13_LF2
 1113  00001c7c  54000000	nop; delay slot nop
 1114  00001c80  0800000c	j	L11_LF2
 1115  00001c84  54000000	nop; delay slot nop
 1116  00001c88          	L13_LF2:
 1117  00001c88  0bffffc0	j	L10_LF2
 1118  00001c8c  54000000	nop; delay slot nop
 1119  00001c90          	L11_LF2:
 1120  00001c90  8fc1fff4	lw	r1,-12(r30)
 1121  00001c94  08000004	j	L9_LF2
 1122  00001c98  54000000	nop; delay slot nop
 1123  00001c9c          	L9_LF2:
 1124  00001c9c  8fa20000	lw	r2,0(r29)
 1125  00001ca0  8fa30004	lw	r3,4(r29)
 1126  00001ca4  8fdffff8	lw	r31,-8(r30)
 1127  00001ca8  001ee820	add	r29,r0,r30
 1128  00001cac  8fdefffc	lw	r30,-4(r30)
 1129  00001cb0  4be00000	jr	r31
 1130  00001cb4  54000000	nop
 1131  00001cb8          	.endproc _dstrcpy
 1132  00001cb8          	.align 2
 1133  00001cb8          	.proc _dstrncpy
 1134  00001cb8          	.global _dstrncpy
 1135  00001cb8          	_dstrncpy:
 1136                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
 1137  00001cb8  afbefffc	sw	-4(r29),r30; push fp
 1138  00001cbc  001df020	add	r30,r0,r29; fp = sp
 1139  00001cc0  afbffff8	sw	-8(r29),r31; push ret addr
 1140  00001cc4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1141  00001cc8  afa20000	sw	0(r29),r2
 1142  00001ccc  afa30004	sw	4(r29),r3
 1143  00001cd0  8fc10000	lw	r1,(r30)
 1144  00001cd4  afc1fff4	sw	-12(r30),r1
 1145  00001cd8          	L15_LF2:
 1146  00001cd8  8fc10008	lw	r1,8(r30)
 1147  00001cdc  2022ffff	addi	r2,r1,#-1
 1148  00001ce0  afc20008	sw	8(r30),r2
 1149  00001ce4  70210000	slei	r1,r1,#0
 1150  00001ce8  1020000c	beqz	r1,L18_LF2
 1151  00001cec  54000000	nop; delay slot nop
 1152  00001cf0  08000048	j	L16_LF2
 1153  00001cf4  54000000	nop; delay slot nop
 1154  00001cf8          	L18_LF2:
 1155  00001cf8  8fc10000	lw	r1,(r30)
 1156  00001cfc  20220001	addi	r2,r1,#1
 1157  00001d00  afc20000	sw	(r30),r2
 1158  00001d04  8fc20004	lw	r2,4(r30)
 1159  00001d08  20430001	addi	r3,r2,#1
 1160  00001d0c  afc30004	sw	4(r30),r3
 1161  00001d10  80420000	lb	r2,(r2)
 1162  00001d14  a0220000	sb	(r1),r2
 1163  00001d18  a3c2fff3	sb	-13(r30),r2
 1164  00001d1c          	L17_LF2:
 1165  00001d1c  93c1fff3	lbu	r1,-13(r30)
 1166  00001d20  64220000	snei	r2,r1,#0
 1167  00001d24  1440000c	bnez	r2,L19_LF2
 1168  00001d28  54000000	nop; delay slot nop
 1169  00001d2c  0800000c	j	L16_LF2
 1170  00001d30  54000000	nop; delay slot nop
 1171  00001d34          	L19_LF2:
 1172  00001d34  0bffffa0	j	L15_LF2
 1173  00001d38  54000000	nop; delay slot nop
 1174  00001d3c          	L16_LF2:
 1175  00001d3c  8fc1fff4	lw	r1,-12(r30)
 1176  00001d40  08000004	j	L14_LF2
 1177  00001d44  54000000	nop; delay slot nop
 1178  00001d48          	L14_LF2:
 1179  00001d48  8fa20000	lw	r2,0(r29)
 1180  00001d4c  8fa30004	lw	r3,4(r29)
 1181  00001d50  8fdffff8	lw	r31,-8(r30)
 1182  00001d54  001ee820	add	r29,r0,r30
 1183  00001d58  8fdefffc	lw	r30,-4(r30)
 1184  00001d5c  4be00000	jr	r31
 1185  00001d60  54000000	nop
 1186  00001d64          	.endproc _dstrncpy
 1187  00001d64          	.align 2
 1188  00001d64          	.proc _dstrcat
 1189  00001d64          	.global _dstrcat
 1190  00001d64          	_dstrcat:
 1191                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1192  00001d64  afbefffc	sw	-4(r29),r30; push fp
 1193  00001d68  001df020	add	r30,r0,r29; fp = sp
 1194  00001d6c  afbffff8	sw	-8(r29),r31; push ret addr
 1195  00001d70  2fbd0018	subui	r29,r29,#24; alloc local storage
 1196  00001d74  afa20000	sw	0(r29),r2
 1197  00001d78  8fc10000	lw	r1,(r30)
 1198  00001d7c  afc1fff4	sw	-12(r30),r1
 1199  00001d80          	L21_LF2:
 1200  00001d80  8fc10000	lw	r1,(r30)
 1201  00001d84  90220000	lbu	r2,(r1)
 1202  00001d88  64410000	snei	r1,r2,#0
 1203  00001d8c  1420000c	bnez	r1,L23_LF2
 1204  00001d90  54000000	nop; delay slot nop
 1205  00001d94  0800001c	j	L22_LF2
 1206  00001d98  54000000	nop; delay slot nop
 1207  00001d9c          	L23_LF2:
 1208  00001d9c  8fc20000	lw	r2,(r30)
 1209  00001da0  20410001	addi	r1,r2,#1
 1210  00001da4  00011020	add	r2,r0,r1
 1211  00001da8  afc20000	sw	(r30),r2
 1212  00001dac  0bffffd0	j	L21_LF2
 1213  00001db0  54000000	nop; delay slot nop
 1214  00001db4          	L22_LF2:
 1215  00001db4  23bdfff8	addi	r29,r29,#-8
 1216  00001db8  001d0820	add	r1,r0,r29
 1217  00001dbc  8fc20000	lw	r2,(r30)
 1218  00001dc0  ac220000	sw	(r1),r2
 1219  00001dc4  8fc20004	lw	r2,4(r30)
 1220  00001dc8  ac220004	sw	4(r1),r2
 1221  00001dcc  0ffffe5c	jal	_dstrcpy
 1222  00001dd0  54000000	nop; delay slot nop
 1223  00001dd4  23bd0008	addi	r29,r29,#8
 1224  00001dd8  8fc1fff4	lw	r1,-12(r30)
 1225  00001ddc  08000004	j	L20_LF2
 1226  00001de0  54000000	nop; delay slot nop
 1227  00001de4          	L20_LF2:
 1228  00001de4  8fa20000	lw	r2,0(r29)
 1229  00001de8  8fdffff8	lw	r31,-8(r30)
 1230  00001dec  001ee820	add	r29,r0,r30
 1231  00001df0  8fdefffc	lw	r30,-4(r30)
 1232  00001df4  4be00000	jr	r31
 1233  00001df8  54000000	nop
 1234  00001dfc          	.endproc _dstrcat
 1235  00001dfc          	.align 2
 1236  00001dfc          	.proc _dstrncmp
 1237  00001dfc          	.global _dstrncmp
 1238  00001dfc          	_dstrncmp:
 1239                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1240  00001dfc  afbefffc	sw	-4(r29),r30; push fp
 1241  00001e00  001df020	add	r30,r0,r29; fp = sp
 1242  00001e04  afbffff8	sw	-8(r29),r31; push ret addr
 1243  00001e08  2fbd0018	subui	r29,r29,#24; alloc local storage
 1244  00001e0c  afa20000	sw	0(r29),r2
 1245  00001e10  afa30004	sw	4(r29),r3
 1246  00001e14  54000000	nop
 1247  00001e18  20010000	addi	r1,r0,#0
 1248  00001e1c  afc1fff4	sw	-12(r30),r1
 1249  00001e20          	L25_LF2:
 1250  00001e20  8fc1fff4	lw	r1,-12(r30)
 1251  00001e24  8fc20008	lw	r2,8(r30)
 1252  00001e28  0022082a	slt	r1,r1,r2
 1253  00001e2c  1420000c	bnez	r1,L28_LF2
 1254  00001e30  54000000	nop; delay slot nop
 1255  00001e34  08000088	j	L26_LF2
 1256  00001e38  54000000	nop; delay slot nop
 1257  00001e3c          	L28_LF2:
 1258  00001e3c  8fc10004	lw	r1,4(r30)
 1259  00001e40  90220000	lbu	r2,(r1)
 1260  00001e44  64410000	snei	r1,r2,#0
 1261  00001e48  14200018	bnez	r1,L29_LF2
 1262  00001e4c  54000000	nop; delay slot nop
 1263  00001e50  20010000	addi	r1,r0,#0
 1264  00001e54  080000d8	j	L24_LF2
 1265  00001e58  54000000	nop; delay slot nop
 1266  00001e5c  08000028	j	L30_LF2
 1267  00001e60  54000000	nop; delay slot nop
 1268  00001e64          	L29_LF2:
 1269  00001e64  8fc10000	lw	r1,(r30)
 1270  00001e68  8fc20004	lw	r2,4(r30)
 1271  00001e6c  90210000	lbu	r1,(r1)
 1272  00001e70  90420000	lbu	r2,(r2)
 1273  00001e74  00220829	sne	r1,r1,r2
 1274  00001e78  1020000c	beqz	r1,L30_LF2
 1275  00001e7c  54000000	nop; delay slot nop
 1276  00001e80  0800003c	j	L26_LF2
 1277  00001e84  54000000	nop; delay slot nop
 1278  00001e88          	L31_LF2:
 1279  00001e88          	L30_LF2:
 1280  00001e88  8fc20000	lw	r2,(r30)
 1281  00001e8c  20410001	addi	r1,r2,#1
 1282  00001e90  00011020	add	r2,r0,r1
 1283  00001e94  afc20000	sw	(r30),r2
 1284  00001e98  8fc20004	lw	r2,4(r30)
 1285  00001e9c  20410001	addi	r1,r2,#1
 1286  00001ea0  00011020	add	r2,r0,r1
 1287  00001ea4  afc20004	sw	4(r30),r2
 1288  00001ea8          	L27_LF2:
 1289  00001ea8  8fc2fff4	lw	r2,-12(r30)
 1290  00001eac  20410001	addi	r1,r2,#1
 1291  00001eb0  00011020	add	r2,r0,r1
 1292  00001eb4  afc2fff4	sw	-12(r30),r2
 1293  00001eb8  0bffff64	j	L25_LF2
 1294  00001ebc  54000000	nop; delay slot nop
 1295  00001ec0          	L26_LF2:
 1296  00001ec0  8fc1fff4	lw	r1,-12(r30)
 1297  00001ec4  8fc20008	lw	r2,8(r30)
 1298  00001ec8  00220828	seq	r1,r1,r2
 1299  00001ecc  10200018	beqz	r1,L32_LF2
 1300  00001ed0  54000000	nop; delay slot nop
 1301  00001ed4  20010000	addi	r1,r0,#0
 1302  00001ed8  08000054	j	L24_LF2
 1303  00001edc  54000000	nop; delay slot nop
 1304  00001ee0  0800004c	j	L33_LF2
 1305  00001ee4  54000000	nop; delay slot nop
 1306  00001ee8          	L32_LF2:
 1307  00001ee8  8fc20000	lw	r2,(r30)
 1308  00001eec  90410000	lbu	r1,(r2)
 1309  00001ef0  8fc20004	lw	r2,4(r30)
 1310  00001ef4  90430000	lbu	r3,(r2)
 1311  00001ef8  00230822	sub	r1,r1,r3
 1312  00001efc  74220000	sgei	r2,r1,#0
 1313  00001f00  10400020	beqz	r2,L34_LF2
 1314  00001f04  54000000	nop; delay slot nop
 1315  00001f08  8fc10000	lw	r1,(r30)
 1316  00001f0c  8fc20004	lw	r2,4(r30)
 1317  00001f10  90210000	lbu	r1,(r1)
 1318  00001f14  90420000	lbu	r2,(r2)
 1319  00001f18  00220829	sne	r1,r1,r2
 1320  00001f1c  08000008	j	L35_LF2
 1321  00001f20  54000000	nop; delay slot nop
 1322  00001f24          	L34_LF2:
 1323  00001f24  2001ffff	addi	r1,r0,#-1
 1324  00001f28          	L35_LF2:
 1325  00001f28  08000004	j	L24_LF2
 1326  00001f2c  54000000	nop; delay slot nop
 1327  00001f30          	L33_LF2:
 1328  00001f30          	L24_LF2:
 1329  00001f30  8fa20000	lw	r2,0(r29)
 1330  00001f34  8fa30004	lw	r3,4(r29)
 1331  00001f38  8fdffff8	lw	r31,-8(r30)
 1332  00001f3c  001ee820	add	r29,r0,r30
 1333  00001f40  8fdefffc	lw	r30,-4(r30)
 1334  00001f44  4be00000	jr	r31
 1335  00001f48  54000000	nop
 1336  00001f4c          	.endproc _dstrncmp
 1337  00001f4c          	.align 2
 1338  00001f4c          	.proc _dstrlen
 1339  00001f4c          	.global _dstrlen
 1340  00001f4c          	_dstrlen:
 1341                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1342  00001f4c  afbefffc	sw	-4(r29),r30; push fp
 1343  00001f50  001df020	add	r30,r0,r29; fp = sp
 1344  00001f54  afbffff8	sw	-8(r29),r31; push ret addr
 1345  00001f58  2fbd0018	subui	r29,r29,#24; alloc local storage
 1346  00001f5c  afa20000	sw	0(r29),r2
 1347  00001f60  20010000	addi	r1,r0,#0
 1348  00001f64  afc1fff4	sw	-12(r30),r1
 1349  00001f68          	L37_LF2:
 1350  00001f68  8fc10000	lw	r1,(r30)
 1351  00001f6c  20220001	addi	r2,r1,#1
 1352  00001f70  afc20000	sw	(r30),r2
 1353  00001f74  90210000	lbu	r1,(r1)
 1354  00001f78  64220000	snei	r2,r1,#0
 1355  00001f7c  1440000c	bnez	r2,L39_LF2
 1356  00001f80  54000000	nop; delay slot nop
 1357  00001f84  0800001c	j	L38_LF2
 1358  00001f88  54000000	nop; delay slot nop
 1359  00001f8c          	L39_LF2:
 1360  00001f8c  8fc2fff4	lw	r2,-12(r30)
 1361  00001f90  20410001	addi	r1,r2,#1
 1362  00001f94  00011020	add	r2,r0,r1
 1363  00001f98  afc2fff4	sw	-12(r30),r2
 1364  00001f9c  0bffffc8	j	L37_LF2
 1365  00001fa0  54000000	nop; delay slot nop
 1366  00001fa4          	L38_LF2:
 1367  00001fa4  8fc1fff4	lw	r1,-12(r30)
 1368  00001fa8  08000004	j	L36_LF2
 1369  00001fac  54000000	nop; delay slot nop
 1370  00001fb0          	L36_LF2:
 1371  00001fb0  8fa20000	lw	r2,0(r29)
 1372  00001fb4  8fdffff8	lw	r31,-8(r30)
 1373  00001fb8  001ee820	add	r29,r0,r30
 1374  00001fbc  8fdefffc	lw	r30,-4(r30)
 1375  00001fc0  4be00000	jr	r31
 1376  00001fc4  54000000	nop
 1377  00001fc8          	.endproc _dstrlen
 1378  00001fc8          	.align 2
 1379  00001fc8          	.proc _dstrstr
 1380  00001fc8          	.global _dstrstr
 1381  00001fc8          	_dstrstr:
 1382                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1383  00001fc8  afbefffc	sw	-4(r29),r30; push fp
 1384  00001fcc  001df020	add	r30,r0,r29; fp = sp
 1385  00001fd0  afbffff8	sw	-8(r29),r31; push ret addr
 1386  00001fd4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1387  00001fd8  afa20000	sw	0(r29),r2
 1388  00001fdc  23bdfff8	addi	r29,r29,#-8
 1389  00001fe0  001d0820	add	r1,r0,r29
 1390  00001fe4  8fc20004	lw	r2,4(r30)
 1391  00001fe8  ac220000	sw	(r1),r2
 1392  00001fec  0fffff5c	jal	_dstrlen
 1393  00001ff0  54000000	nop; delay slot nop
 1394  00001ff4  23bd0008	addi	r29,r29,#8
 1395  00001ff8  afc1fff4	sw	-12(r30),r1
 1396  00001ffc          	L41_LF2:
 1397  00001ffc  8fc10000	lw	r1,(r30)
 1398  00002000  90220000	lbu	r2,(r1)
 1399  00002004  64410000	snei	r1,r2,#0
 1400  00002008  1420000c	bnez	r1,L43_LF2
 1401  0000200c  54000000	nop; delay slot nop
 1402  00002010  08000060	j	L42_LF2
 1403  00002014  54000000	nop; delay slot nop
 1404  00002018          	L43_LF2:
 1405  00002018  23bdfff0	addi	r29,r29,#-16
 1406  0000201c  001d0820	add	r1,r0,r29
 1407  00002020  8fc20000	lw	r2,(r30)
 1408  00002024  ac220000	sw	(r1),r2
 1409  00002028  8fc20004	lw	r2,4(r30)
 1410  0000202c  ac220004	sw	4(r1),r2
 1411  00002030  8fc2fff4	lw	r2,-12(r30)
 1412  00002034  ac220008	sw	8(r1),r2
 1413  00002038  0ffffdc0	jal	_dstrncmp
 1414  0000203c  54000000	nop; delay slot nop
 1415  00002040  23bd0010	addi	r29,r29,#16
 1416  00002044  64220000	snei	r2,r1,#0
 1417  00002048  14400010	bnez	r2,L44_LF2
 1418  0000204c  54000000	nop; delay slot nop
 1419  00002050  8fc10000	lw	r1,(r30)
 1420  00002054  08000028	j	L40_LF2
 1421  00002058  54000000	nop; delay slot nop
 1422  0000205c          	L44_LF2:
 1423  0000205c  8fc20000	lw	r2,(r30)
 1424  00002060  20410001	addi	r1,r2,#1
 1425  00002064  00011020	add	r2,r0,r1
 1426  00002068  afc20000	sw	(r30),r2
 1427  0000206c  0bffff8c	j	L41_LF2
 1428  00002070  54000000	nop; delay slot nop
 1429  00002074          	L42_LF2:
 1430  00002074  20010000	addi	r1,r0,#0
 1431  00002078  08000004	j	L40_LF2
 1432  0000207c  54000000	nop; delay slot nop
 1433  00002080          	L40_LF2:
 1434  00002080  8fa20000	lw	r2,0(r29)
 1435  00002084  8fdffff8	lw	r31,-8(r30)
 1436  00002088  001ee820	add	r29,r0,r30
 1437  0000208c  8fdefffc	lw	r30,-4(r30)
 1438  00002090  4be00000	jr	r31
 1439  00002094  54000000	nop
 1440  00002098          	.endproc _dstrstr
 1441  00002098          	.align 2
 1442  00002098          	.proc _dmindex
 1443  00002098          	.global _dmindex
 1444  00002098          	_dmindex:
 1445                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1446  00002098  afbefffc	sw	-4(r29),r30; push fp
 1447  0000209c  001df020	add	r30,r0,r29; fp = sp
 1448  000020a0  afbffff8	sw	-8(r29),r31; push ret addr
 1449  000020a4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1450  000020a8  afa20000	sw	0(r29),r2
 1451  000020ac  54000000	nop
 1452  000020b0          	L46_LF2:
 1453  000020b0  8fc10000	lw	r1,(r30)
 1454  000020b4  90220000	lbu	r2,(r1)
 1455  000020b8  64410000	snei	r1,r2,#0
 1456  000020bc  1420000c	bnez	r1,L48_LF2
 1457  000020c0  54000000	nop; delay slot nop
 1458  000020c4  08000070	j	L47_LF2
 1459  000020c8  54000000	nop; delay slot nop
 1460  000020cc          	L48_LF2:
 1461  000020cc  8fc10004	lw	r1,4(r30)
 1462  000020d0  afc1fff4	sw	-12(r30),r1
 1463  000020d4          	L49_LF2:
 1464  000020d4  8fc1fff4	lw	r1,-12(r30)
 1465  000020d8  90220000	lbu	r2,(r1)
 1466  000020dc  64410000	snei	r1,r2,#0
 1467  000020e0  1420000c	bnez	r1,L52_LF2
 1468  000020e4  54000000	nop; delay slot nop
 1469  000020e8  08000044	j	L50_LF2
 1470  000020ec  54000000	nop; delay slot nop
 1471  000020f0          	L52_LF2:
 1472  000020f0  8fc10000	lw	r1,(r30)
 1473  000020f4  8fc2fff4	lw	r2,-12(r30)
 1474  000020f8  90210000	lbu	r1,(r1)
 1475  000020fc  90420000	lbu	r2,(r2)
 1476  00002100  00220828	seq	r1,r1,r2
 1477  00002104  10200010	beqz	r1,L51_LF2
 1478  00002108  54000000	nop; delay slot nop
 1479  0000210c  8fc10000	lw	r1,(r30)
 1480  00002110  08000030	j	L45_LF2
 1481  00002114  54000000	nop; delay slot nop
 1482  00002118          	L53_LF2:
 1483  00002118          	L51_LF2:
 1484  00002118  8fc2fff4	lw	r2,-12(r30)
 1485  0000211c  20410001	addi	r1,r2,#1
 1486  00002120  00011020	add	r2,r0,r1
 1487  00002124  afc2fff4	sw	-12(r30),r2
 1488  00002128  0bffffa8	j	L49_LF2
 1489  0000212c  54000000	nop; delay slot nop
 1490  00002130          	L50_LF2:
 1491  00002130  0bffff7c	j	L46_LF2
 1492  00002134  54000000	nop; delay slot nop
 1493  00002138          	L47_LF2:
 1494  00002138  20010000	addi	r1,r0,#0
 1495  0000213c  08000004	j	L45_LF2
 1496  00002140  54000000	nop; delay slot nop
 1497  00002144          	L45_LF2:
 1498  00002144  8fa20000	lw	r2,0(r29)
 1499  00002148  8fdffff8	lw	r31,-8(r30)
 1500  0000214c  001ee820	add	r29,r0,r30
 1501  00002150  8fdefffc	lw	r30,-4(r30)
 1502  00002154  4be00000	jr	r31
 1503  00002158  54000000	nop
 1504  0000215c          	.endproc _dmindex
 1505  0000215c          	.align 2
 1506  0000215c          	.proc _dindex
 1507  0000215c          	.global _dindex
 1508  0000215c          	_dindex:
 1509                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1510  0000215c  afbefffc	sw	-4(r29),r30; push fp
 1511  00002160  001df020	add	r30,r0,r29; fp = sp
 1512  00002164  afbffff8	sw	-8(r29),r31; push ret addr
 1513  00002168  2fbd0010	subui	r29,r29,#16; alloc local storage
 1514  0000216c  afa20000	sw	0(r29),r2
 1515  00002170  54000000	nop
 1516  00002174          	L55_LF2:
 1517  00002174  8fc10000	lw	r1,(r30)
 1518  00002178  90220000	lbu	r2,(r1)
 1519  0000217c  64410000	snei	r1,r2,#0
 1520  00002180  1420000c	bnez	r1,L57_LF2
 1521  00002184  54000000	nop; delay slot nop
 1522  00002188  08000040	j	L56_LF2
 1523  0000218c  54000000	nop; delay slot nop
 1524  00002190          	L57_LF2:
 1525  00002190  8fc10000	lw	r1,(r30)
 1526  00002194  90220000	lbu	r2,(r1)
 1527  00002198  8fc10004	lw	r1,4(r30)
 1528  0000219c  00411028	seq	r2,r2,r1
 1529  000021a0  10400010	beqz	r2,L58_LF2
 1530  000021a4  54000000	nop; delay slot nop
 1531  000021a8  8fc10000	lw	r1,(r30)
 1532  000021ac  08000028	j	L54_LF2
 1533  000021b0  54000000	nop; delay slot nop
 1534  000021b4          	L58_LF2:
 1535  000021b4  8fc20000	lw	r2,(r30)
 1536  000021b8  20410001	addi	r1,r2,#1
 1537  000021bc  00011020	add	r2,r0,r1
 1538  000021c0  afc20000	sw	(r30),r2
 1539  000021c4  0bffffac	j	L55_LF2
 1540  000021c8  54000000	nop; delay slot nop
 1541  000021cc          	L56_LF2:
 1542  000021cc  20010000	addi	r1,r0,#0
 1543  000021d0  08000004	j	L54_LF2
 1544  000021d4  54000000	nop; delay slot nop
 1545  000021d8          	L54_LF2:
 1546  000021d8  8fa20000	lw	r2,0(r29)
 1547  000021dc  8fdffff8	lw	r31,-8(r30)
 1548  000021e0  001ee820	add	r29,r0,r30
 1549  000021e4  8fdefffc	lw	r30,-4(r30)
 1550  000021e8  4be00000	jr	r31
 1551  000021ec  54000000	nop
 1552  000021f0          	.endproc _dindex
 1553  000021f0          	.align 2
 1554  000021f0          	.proc _ditoa
 1555  000021f0          	.global _ditoa
 1556  000021f0          	_ditoa:
 1557                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1558  000021f0  afbefffc	sw	-4(r29),r30; push fp
 1559  000021f4  001df020	add	r30,r0,r29; fp = sp
 1560  000021f8  afbffff8	sw	-8(r29),r31; push ret addr
 1561  000021fc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1562  00002200  afa20000	sw	0(r29),r2
 1563  00002204  afa30004	sw	4(r29),r3
 1564  00002208  8fc10000	lw	r1,(r30)
 1565  0000220c  68220000	slti	r2,r1,#0
 1566  00002210  1040002c	beqz	r2,L60_LF2
 1567  00002214  54000000	nop; delay slot nop
 1568  00002218  8fc10004	lw	r1,4(r30)
 1569  0000221c  20220001	addi	r2,r1,#1
 1570  00002220  afc20004	sw	4(r30),r2
 1571  00002224  2002002d	addi	r2,r0,(#0x2d)&0xff
 1572  00002228  a0220000	sb	(r1),r2
 1573  0000222c  8fc10000	lw	r1,(r30)
 1574  00002230  00011022	sub	r2,r0,r1
 1575  00002234  afc20000	sw	(r30),r2
 1576  00002238  08000118	j	L61_LF2
 1577  0000223c  54000000	nop; delay slot nop
 1578  00002240          	L60_LF2:
 1579  00002240  8fc10000	lw	r1,(r30)
 1580  00002244  64220000	snei	r2,r1,#0
 1581  00002248  14400020	bnez	r2,L62_LF2
 1582  0000224c  54000000	nop; delay slot nop
 1583  00002250  8fc10004	lw	r1,4(r30)
 1584  00002254  20220001	addi	r2,r1,#1
 1585  00002258  afc20004	sw	4(r30),r2
 1586  0000225c  20020030	addi	r2,r0,(#0x30)&0xff
 1587  00002260  a0220000	sb	(r1),r2
 1588  00002264  080000ec	j	L61_LF2
 1589  00002268  54000000	nop; delay slot nop
 1590  0000226c          	L62_LF2:
 1591  0000226c  20010001	addi	r1,r0,#1
 1592  00002270  afc1fff4	sw	-12(r30),r1
 1593  00002274          	L64_LF2:
 1594  00002274  8fc1fff4	lw	r1,-12(r30)
 1595  00002278  8fc20000	lw	r2,(r30)
 1596  0000227c  0022082c	sle	r1,r1,r2
 1597  00002280  1420000c	bnez	r1,L66_LF2
 1598  00002284  54000000	nop; delay slot nop
 1599  00002288  08000024	j	L65_LF2
 1600  0000228c  54000000	nop; delay slot nop
 1601  00002290          	L67_LF2:
 1602  00002290          	L66_LF2:
 1603  00002290  8fc1fff4	lw	r1,-12(r30)
 1604  00002294  00011820	add	r3,r0,r1
 1605  00002298  50620002	slli	r2,r3,#0x2
 1606  0000229c  00411020	add	r2,r2,r1
 1607  000022a0  50410001	slli	r1,r2,#0x1
 1608  000022a4  afc1fff4	sw	-12(r30),r1
 1609  000022a8  0bffffc8	j	L64_LF2
 1610  000022ac  54000000	nop; delay slot nop
 1611  000022b0          	L65_LF2:
 1612  000022b0  54000000	nop
 1613  000022b4          	L68_LF2:
 1614  000022b4  8fc1fff4	lw	r1,-12(r30)
 1615  000022b8  2002000a	addi	r2,r0,#10
 1616  000022bc  00200035	movi2fp	f0,r1
 1617  000022c0  00400835	movi2fp	f1,r2
 1618  000022c4  0401000f	div	f0,f0,f1
 1619  000022c8  00000834	movfp2i	r1,f0
 1620  000022cc  afc1fff4	sw	-12(r30),r1
 1621  000022d0  8fc10004	lw	r1,4(r30)
 1622  000022d4  20220001	addi	r2,r1,#1
 1623  000022d8  afc20004	sw	4(r30),r2
 1624  000022dc  8fc20000	lw	r2,(r30)
 1625  000022e0  8fc3fff4	lw	r3,-12(r30)
 1626  000022e4  00400035	movi2fp	f0,r2
 1627  000022e8  00600835	movi2fp	f1,r3
 1628  000022ec  0401000f	div	f0,f0,f1
 1629  000022f0  00001034	movfp2i	r2,f0
 1630  000022f4  00021820	add	r3,r0,r2
 1631  000022f8  20620030	addi	r2,r3,#48
 1632  000022fc  a0220000	sb	(r1),r2
 1633  00002300  8fc10000	lw	r1,(r30)
 1634  00002304  8fc3fff4	lw	r3,-12(r30)
 1635  00002308  00200035	movi2fp	f0,r1
 1636  0000230c  00600835	movi2fp	f1,r3
 1637  00002310  0401000f	div	f0,f0,f1
 1638  00002314  00001034	movfp2i	r2,f0
 1639  00002318  8fc3fff4	lw	r3,-12(r30)
 1640  0000231c  00400035	movi2fp	f0,r2
 1641  00002320  00600835	movi2fp	f1,r3
 1642  00002324  0401000e	mult	f0,f0,f1
 1643  00002328  00001034	movfp2i	r2,f0
 1644  0000232c  00220822	sub	r1,r1,r2
 1645  00002330  afc10000	sw	(r30),r1
 1646  00002334          	L70_LF2:
 1647  00002334  8fc1fff4	lw	r1,-12(r30)
 1648  00002338  6c220001	sgti	r2,r1,#1
 1649  0000233c  1440000c	bnez	r2,L71_LF2
 1650  00002340  54000000	nop; delay slot nop
 1651  00002344  0800000c	j	L61_LF2
 1652  00002348  54000000	nop; delay slot nop
 1653  0000234c          	L71_LF2:
 1654  0000234c  0bffff64	j	L68_LF2
 1655  00002350  54000000	nop; delay slot nop
 1656  00002354          	L69_LF2:
 1657  00002354          	L63_LF2:
 1658  00002354          	L61_LF2:
 1659  00002354  8fc10004	lw	r1,4(r30)
 1660  00002358  20020000	addi	r2,r0,(#0x0)&0xff
 1661  0000235c  a0220000	sb	(r1),r2
 1662  00002360          	L59_LF2:
 1663  00002360  8fa20000	lw	r2,0(r29)
 1664  00002364  8fa30004	lw	r3,4(r29)
 1665  00002368  8fdffff8	lw	r31,-8(r30)
 1666  0000236c  001ee820	add	r29,r0,r30
 1667  00002370  8fdefffc	lw	r30,-4(r30)
 1668  00002374  4be00000	jr	r31
 1669  00002378  54000000	nop
 1670  0000237c          	.endproc _ditoa
 1671  0000237c          	.align 2
 1672  0000237c          	.proc _dstrtol
 1673  0000237c          	.global _dstrtol
 1674  0000237c          	_dstrtol:
 1675                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1676  0000237c  afbefffc	sw	-4(r29),r30; push fp
 1677  00002380  001df020	add	r30,r0,r29; fp = sp
 1678  00002384  afbffff8	sw	-8(r29),r31; push ret addr
 1679  00002388  2fbd0020	subui	r29,r29,#32; alloc local storage
 1680  0000238c  afa20000	sw	0(r29),r2
 1681  00002390  20010000	addi	r1,r0,#0
 1682  00002394  afc1fff4	sw	-12(r30),r1
 1683  00002398          	L73_LF2:
 1684  00002398  8fc10000	lw	r1,(r30)
 1685  0000239c  90220000	lbu	r2,(r1)
 1686  000023a0  60410020	seqi	r1,r2,#32
 1687  000023a4  14200034	bnez	r1,L75_LF2
 1688  000023a8  54000000	nop; delay slot nop
 1689  000023ac  8fc10000	lw	r1,(r30)
 1690  000023b0  90220000	lbu	r2,(r1)
 1691  000023b4  60410009	seqi	r1,r2,#9
 1692  000023b8  14200020	bnez	r1,L75_LF2
 1693  000023bc  54000000	nop; delay slot nop
 1694  000023c0  8fc10000	lw	r1,(r30)
 1695  000023c4  90220000	lbu	r2,(r1)
 1696  000023c8  6041000a	seqi	r1,r2,#10
 1697  000023cc  1420000c	bnez	r1,L75_LF2
 1698  000023d0  54000000	nop; delay slot nop
 1699  000023d4  0800001c	j	L74_LF2
 1700  000023d8  54000000	nop; delay slot nop
 1701  000023dc          	L75_LF2:
 1702  000023dc  8fc20000	lw	r2,(r30)
 1703  000023e0  20410001	addi	r1,r2,#1
 1704  000023e4  00011020	add	r2,r0,r1
 1705  000023e8  afc20000	sw	(r30),r2
 1706  000023ec  0bffffa8	j	L73_LF2
 1707  000023f0  54000000	nop; delay slot nop
 1708  000023f4          	L74_LF2:
 1709  000023f4  8fc10004	lw	r1,4(r30)
 1710  000023f8  64220000	snei	r2,r1,#0
 1711  000023fc  10400010	beqz	r2,L76_LF2
 1712  00002400  54000000	nop; delay slot nop
 1713  00002404  8fc10004	lw	r1,4(r30)
 1714  00002408  8fc20000	lw	r2,(r30)
 1715  0000240c  ac220000	sw	(r1),r2
 1716  00002410          	L76_LF2:
 1717  00002410  8fc10000	lw	r1,(r30)
 1718  00002414  90220000	lbu	r2,(r1)
 1719  00002418  64410000	snei	r1,r2,#0
 1720  0000241c  14200010	bnez	r1,L77_LF2
 1721  00002420  54000000	nop; delay slot nop
 1722  00002424  8fc1fff4	lw	r1,-12(r30)
 1723  00002428  08000294	j	L72_LF2
 1724  0000242c  54000000	nop; delay slot nop
 1725  00002430          	L77_LF2:
 1726  00002430  8fc10000	lw	r1,(r30)
 1727  00002434  90220000	lbu	r2,(r1)
 1728  00002438  6041002d	seqi	r1,r2,#45
 1729  0000243c  10200024	beqz	r1,L78_LF2
 1730  00002440  54000000	nop; delay slot nop
 1731  00002444  2001ffff	addi	r1,r0,#-1
 1732  00002448  afc1ffec	sw	-20(r30),r1
 1733  0000244c  8fc20000	lw	r2,(r30)
 1734  00002450  20410001	addi	r1,r2,#1
 1735  00002454  00011020	add	r2,r0,r1
 1736  00002458  afc20000	sw	(r30),r2
 1737  0000245c  0800000c	j	L79_LF2
 1738  00002460  54000000	nop; delay slot nop
 1739  00002464          	L78_LF2:
 1740  00002464  20010001	addi	r1,r0,#1
 1741  00002468  afc1ffec	sw	-20(r30),r1
 1742  0000246c          	L79_LF2:
 1743  0000246c  8fc10008	lw	r1,8(r30)
 1744  00002470  64220000	snei	r2,r1,#0
 1745  00002474  14400090	bnez	r2,L80_LF2
 1746  00002478  54000000	nop; delay slot nop
 1747  0000247c  8fc10000	lw	r1,(r30)
 1748  00002480  90220000	lbu	r2,(r1)
 1749  00002484  60410030	seqi	r1,r2,#48
 1750  00002488  10200074	beqz	r1,L81_LF2
 1751  0000248c  54000000	nop; delay slot nop
 1752  00002490  8fc20000	lw	r2,(r30)
 1753  00002494  20410001	addi	r1,r2,#1
 1754  00002498  00011020	add	r2,r0,r1
 1755  0000249c  afc20000	sw	(r30),r2
 1756  000024a0  8fc10000	lw	r1,(r30)
 1757  000024a4  90220000	lbu	r2,(r1)
 1758  000024a8  60410078	seqi	r1,r2,#120
 1759  000024ac  14200020	bnez	r1,L83_LF2
 1760  000024b0  54000000	nop; delay slot nop
 1761  000024b4  8fc10000	lw	r1,(r30)
 1762  000024b8  90220000	lbu	r2,(r1)
 1763  000024bc  60410058	seqi	r1,r2,#88
 1764  000024c0  1420000c	bnez	r1,L83_LF2
 1765  000024c4  54000000	nop; delay slot nop
 1766  000024c8  08000024	j	L82_LF2
 1767  000024cc  54000000	nop; delay slot nop
 1768  000024d0          	L83_LF2:
 1769  000024d0  20010010	addi	r1,r0,#16
 1770  000024d4  afc10008	sw	8(r30),r1
 1771  000024d8  8fc20000	lw	r2,(r30)
 1772  000024dc  20410001	addi	r1,r2,#1
 1773  000024e0  00011020	add	r2,r0,r1
 1774  000024e4  afc20000	sw	(r30),r2
 1775  000024e8  0800000c	j	L84_LF2
 1776  000024ec  54000000	nop; delay slot nop
 1777  000024f0          	L82_LF2:
 1778  000024f0  20010008	addi	r1,r0,#8
 1779  000024f4  afc10008	sw	8(r30),r1
 1780  000024f8          	L84_LF2:
 1781  000024f8  0800000c	j	L80_LF2
 1782  000024fc  54000000	nop; delay slot nop
 1783  00002500          	L81_LF2:
 1784  00002500  2001000a	addi	r1,r0,#10
 1785  00002504  afc10008	sw	8(r30),r1
 1786  00002508          	L85_LF2:
 1787  00002508          	L80_LF2:
 1788  00002508  8fc10008	lw	r1,8(r30)
 1789  0000250c  70220000	slei	r2,r1,#0
 1790  00002510  1440001c	bnez	r2,L87_LF2
 1791  00002514  54000000	nop; delay slot nop
 1792  00002518  8fc10008	lw	r1,8(r30)
 1793  0000251c  6c220010	sgti	r2,r1,#16
 1794  00002520  1440000c	bnez	r2,L87_LF2
 1795  00002524  54000000	nop; delay slot nop
 1796  00002528  08000010	j	L86_LF2
 1797  0000252c  54000000	nop; delay slot nop
 1798  00002530          	L87_LF2:
 1799  00002530  8fc1fff4	lw	r1,-12(r30)
 1800  00002534  08000188	j	L72_LF2
 1801  00002538  54000000	nop; delay slot nop
 1802  0000253c          	L86_LF2:
 1803  0000253c  54000000	nop
 1804  00002540          	L88_LF2:
 1805  00002540  8fc10000	lw	r1,(r30)
 1806  00002544  90220000	lbu	r2,(r1)
 1807  00002548  6c41002f	sgtui	r1,r2,#47
 1808  0000254c  10200030	beqz	r1,L91_LF2
 1809  00002550  54000000	nop; delay slot nop
 1810  00002554  8fc10000	lw	r1,(r30)
 1811  00002558  90220000	lbu	r2,(r1)
 1812  0000255c  70410039	sleui	r1,r2,#57
 1813  00002560  1020001c	beqz	r1,L91_LF2
 1814  00002564  54000000	nop; delay slot nop
 1815  00002568  8fc10000	lw	r1,(r30)
 1816  0000256c  90220000	lbu	r2,(r1)
 1817  00002570  2041ffd0	addi	r1,r2,#-48
 1818  00002574  afc1fff0	sw	-16(r30),r1
 1819  00002578  0800008c	j	L92_LF2
 1820  0000257c  54000000	nop; delay slot nop
 1821  00002580          	L91_LF2:
 1822  00002580  8fc10000	lw	r1,(r30)
 1823  00002584  90220000	lbu	r2,(r1)
 1824  00002588  6c410060	sgtui	r1,r2,#96
 1825  0000258c  10200030	beqz	r1,L93_LF2
 1826  00002590  54000000	nop; delay slot nop
 1827  00002594  8fc10000	lw	r1,(r30)
 1828  00002598  90220000	lbu	r2,(r1)
 1829  0000259c  7041007a	sleui	r1,r2,#122
 1830  000025a0  1020001c	beqz	r1,L93_LF2
 1831  000025a4  54000000	nop; delay slot nop
 1832  000025a8  8fc10000	lw	r1,(r30)
 1833  000025ac  90220000	lbu	r2,(r1)
 1834  000025b0  2041ffa9	addi	r1,r2,#-87
 1835  000025b4  afc1fff0	sw	-16(r30),r1
 1836  000025b8  0800004c	j	L92_LF2
 1837  000025bc  54000000	nop; delay slot nop
 1838  000025c0          	L93_LF2:
 1839  000025c0  8fc10000	lw	r1,(r30)
 1840  000025c4  90220000	lbu	r2,(r1)
 1841  000025c8  6c410040	sgtui	r1,r2,#64
 1842  000025cc  10200030	beqz	r1,L95_LF2
 1843  000025d0  54000000	nop; delay slot nop
 1844  000025d4  8fc10000	lw	r1,(r30)
 1845  000025d8  90220000	lbu	r2,(r1)
 1846  000025dc  7041005a	sleui	r1,r2,#90
 1847  000025e0  1020001c	beqz	r1,L95_LF2
 1848  000025e4  54000000	nop; delay slot nop
 1849  000025e8  8fc10000	lw	r1,(r30)
 1850  000025ec  90220000	lbu	r2,(r1)
 1851  000025f0  2041ffc9	addi	r1,r2,#-55
 1852  000025f4  afc1fff0	sw	-16(r30),r1
 1853  000025f8  0800000c	j	L92_LF2
 1854  000025fc  54000000	nop; delay slot nop
 1855  00002600          	L95_LF2:
 1856  00002600  200103e8	addi	r1,r0,#1000
 1857  00002604  afc1fff0	sw	-16(r30),r1
 1858  00002608          	L96_LF2:
 1859  00002608          	L94_LF2:
 1860  00002608          	L92_LF2:
 1861  00002608  8fc1fff0	lw	r1,-16(r30)
 1862  0000260c  8fc20008	lw	r2,8(r30)
 1863  00002610  0022082a	slt	r1,r1,r2
 1864  00002614  10200040	beqz	r1,L90_LF2
 1865  00002618  54000000	nop; delay slot nop
 1866  0000261c  8fc1fff4	lw	r1,-12(r30)
 1867  00002620  8fc20008	lw	r2,8(r30)
 1868  00002624  00200035	movi2fp	f0,r1
 1869  00002628  00400835	movi2fp	f1,r2
 1870  0000262c  0401000e	mult	f0,f0,f1
 1871  00002630  00000834	movfp2i	r1,f0
 1872  00002634  afc1fff4	sw	-12(r30),r1
 1873  00002638  8fc1fff4	lw	r1,-12(r30)
 1874  0000263c  8fc2fff0	lw	r2,-16(r30)
 1875  00002640  00220820	add	r1,r1,r2
 1876  00002644  afc1fff4	sw	-12(r30),r1
 1877  00002648  8fc20000	lw	r2,(r30)
 1878  0000264c  20410001	addi	r1,r2,#1
 1879  00002650  00011020	add	r2,r0,r1
 1880  00002654  afc20000	sw	(r30),r2
 1881  00002658          	L97_LF2:
 1882  00002658          	L90_LF2:
 1883  00002658  8fc1fff0	lw	r1,-16(r30)
 1884  0000265c  8fc20008	lw	r2,8(r30)
 1885  00002660  0022082a	slt	r1,r1,r2
 1886  00002664  1420000c	bnez	r1,L98_LF2
 1887  00002668  54000000	nop; delay slot nop
 1888  0000266c  0800000c	j	L89_LF2
 1889  00002670  54000000	nop; delay slot nop
 1890  00002674          	L98_LF2:
 1891  00002674  0bfffec8	j	L88_LF2
 1892  00002678  54000000	nop; delay slot nop
 1893  0000267c          	L89_LF2:
 1894  0000267c  8fc10004	lw	r1,4(r30)
 1895  00002680  64220000	snei	r2,r1,#0
 1896  00002684  10400010	beqz	r2,L99_LF2
 1897  00002688  54000000	nop; delay slot nop
 1898  0000268c  8fc10004	lw	r1,4(r30)
 1899  00002690  8fc20000	lw	r2,(r30)
 1900  00002694  ac220000	sw	(r1),r2
 1901  00002698          	L99_LF2:
 1902  00002698  8fc1fff4	lw	r1,-12(r30)
 1903  0000269c  8fc2ffec	lw	r2,-20(r30)
 1904  000026a0  00200035	movi2fp	f0,r1
 1905  000026a4  00400835	movi2fp	f1,r2
 1906  000026a8  0401000e	mult	f0,f0,f1
 1907  000026ac  00000834	movfp2i	r1,f0
 1908  000026b0  afc1fff4	sw	-12(r30),r1
 1909  000026b4  8fc1fff4	lw	r1,-12(r30)
 1910  000026b8  08000004	j	L72_LF2
 1911  000026bc  54000000	nop; delay slot nop
 1912  000026c0          	L72_LF2:
 1913  000026c0  8fa20000	lw	r2,0(r29)
 1914  000026c4  8fdffff8	lw	r31,-8(r30)
 1915  000026c8  001ee820	add	r29,r0,r30
 1916  000026cc  8fdefffc	lw	r30,-4(r30)
 1917  000026d0  4be00000	jr	r31
 1918  000026d4  54000000	nop
 1919  000026d8          	.endproc _dstrtol
 1920  000026d8          	.align 2
 1921  000026d8          	.proc _bcopy
 1922  000026d8          	.global _bcopy
 1923  000026d8          	_bcopy:
 1924                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1925  000026d8  afbefffc	sw	-4(r29),r30; push fp
 1926  000026dc  001df020	add	r30,r0,r29; fp = sp
 1927  000026e0  afbffff8	sw	-8(r29),r31; push ret addr
 1928  000026e4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1929  000026e8  afa20000	sw	0(r29),r2
 1930  000026ec  afa30004	sw	4(r29),r3
 1931  000026f0  54000000	nop
 1932  000026f4          	L101_LF2:
 1933  000026f4  8fc10008	lw	r1,8(r30)
 1934  000026f8  2022ffff	addi	r2,r1,#-1
 1935  000026fc  afc20008	sw	8(r30),r2
 1936  00002700  6c210000	sgti	r1,r1,#0
 1937  00002704  1420000c	bnez	r1,L103_LF2
 1938  00002708  54000000	nop; delay slot nop
 1939  0000270c  0800002c	j	L102_LF2
 1940  00002710  54000000	nop; delay slot nop
 1941  00002714          	L103_LF2:
 1942  00002714  8fc10004	lw	r1,4(r30)
 1943  00002718  20220001	addi	r2,r1,#1
 1944  0000271c  afc20004	sw	4(r30),r2
 1945  00002720  8fc20000	lw	r2,(r30)
 1946  00002724  20430001	addi	r3,r2,#1
 1947  00002728  afc30000	sw	(r30),r3
 1948  0000272c  80420000	lb	r2,(r2)
 1949  00002730  a0220000	sb	(r1),r2
 1950  00002734  0bffffbc	j	L101_LF2
 1951  00002738  54000000	nop; delay slot nop
 1952  0000273c          	L102_LF2:
 1953  0000273c          	L100_LF2:
 1954  0000273c  8fa20000	lw	r2,0(r29)
 1955  00002740  8fa30004	lw	r3,4(r29)
 1956  00002744  8fdffff8	lw	r31,-8(r30)
 1957  00002748  001ee820	add	r29,r0,r30
 1958  0000274c  8fdefffc	lw	r30,-4(r30)
 1959  00002750  4be00000	jr	r31
 1960  00002754  54000000	nop
 1961  00002758          	.endproc _bcopy
 1962  00002758          	.align 2
 1963  00002758          	.proc _bzero
 1964  00002758          	.global _bzero
 1965  00002758          	_bzero:
 1966                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1967  00002758  afbefffc	sw	-4(r29),r30; push fp
 1968  0000275c  001df020	add	r30,r0,r29; fp = sp
 1969  00002760  afbffff8	sw	-8(r29),r31; push ret addr
 1970  00002764  2fbd0010	subui	r29,r29,#16; alloc local storage
 1971  00002768  afa20000	sw	0(r29),r2
 1972  0000276c  54000000	nop
 1973  00002770          	L105_LF2:
 1974  00002770  8fc10004	lw	r1,4(r30)
 1975  00002774  2022ffff	addi	r2,r1,#-1
 1976  00002778  afc20004	sw	4(r30),r2
 1977  0000277c  6c210000	sgti	r1,r1,#0
 1978  00002780  1420000c	bnez	r1,L107_LF2
 1979  00002784  54000000	nop; delay slot nop
 1980  00002788  08000020	j	L106_LF2
 1981  0000278c  54000000	nop; delay slot nop
 1982  00002790          	L107_LF2:
 1983  00002790  8fc10000	lw	r1,(r30)
 1984  00002794  20220001	addi	r2,r1,#1
 1985  00002798  afc20000	sw	(r30),r2
 1986  0000279c  20020000	addi	r2,r0,(#0x0)&0xff
 1987  000027a0  a0220000	sb	(r1),r2
 1988  000027a4  0bffffc8	j	L105_LF2
 1989  000027a8  54000000	nop; delay slot nop
 1990  000027ac          	L106_LF2:
 1991  000027ac          	L104_LF2:
 1992  000027ac  8fa20000	lw	r2,0(r29)
 1993  000027b0  8fdffff8	lw	r31,-8(r30)
 1994  000027b4  001ee820	add	r29,r0,r30
 1995  000027b8  8fdefffc	lw	r30,-4(r30)
 1996  000027bc  4be00000	jr	r31
 1997  000027c0  54000000	nop
 1998  000027c4          	.endproc _bzero
 1999  000027c4          	.align 2
 2000  000027c4          	.proc _min
 2001  000027c4          	.global _min
 2002  000027c4          	_min:
 2003                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 2004  000027c4  afbefffc	sw	-4(r29),r30; push fp
 2005  000027c8  001df020	add	r30,r0,r29; fp = sp
 2006  000027cc  afbffff8	sw	-8(r29),r31; push ret addr
 2007  000027d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 2008  000027d4  afa20000	sw	0(r29),r2
 2009  000027d8  afa30004	sw	4(r29),r3
 2010  000027dc  8fc10000	lw	r1,(r30)
 2011  000027e0  8fc20004	lw	r2,4(r30)
 2012  000027e4  0022182c	sle	r3,r1,r2
 2013  000027e8  14600008	bnez	r3,L109_LF2
 2014  000027ec  54000000	nop; delay slot nop
 2015  000027f0  8fc10004	lw	r1,4(r30)
 2016  000027f4          	L109_LF2:
 2017  000027f4  08000004	j	L108_LF2
 2018  000027f8  54000000	nop; delay slot nop
 2019  000027fc          	L108_LF2:
 2020  000027fc  8fa20000	lw	r2,0(r29)
 2021  00002800  8fa30004	lw	r3,4(r29)
 2022  00002804  8fdffff8	lw	r31,-8(r30)
 2023  00002808  001ee820	add	r29,r0,r30
 2024  0000280c  8fdefffc	lw	r30,-4(r30)
 2025  00002810  4be00000	jr	r31
 2026  00002814  54000000	nop
 2027  00002818          	.endproc _min
 2028                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 2029                      ;;;
 2030                      ;;; Most of the traps are called in files from libtraps.
 2033  00002818          	.align 2
 2034  00002818          	.proc _exit
 2035  00002818          	.global _exit
 2036  00002818          	_exit:
 2037  00002818  44000300	trap	#0x300
 2038  0000281c  4be00000	jr	r31
 2039  00002820  54000000	nop
 2040  00002824          	.endproc _exit
 2042                      ; for the benefit of gcc.
 2043  00002824          	.proc ___main
 2044  00002824          	.global ___main
 2045  00002824          	___main:
 2046  00002824  4be00000	jr	r31
 2047  00002828  54000000	nop
 2048  0000282c          	.endproc ___main
 2049  0000282c          	.text
 2050  0000282c          	.global _etext
 2051  0000282c          	_etext:
 2052  0000282c          	.align 3
 2053  00002830          	.data
 2054  00003289          	.global _edata
 2055  00003289          	_edata:

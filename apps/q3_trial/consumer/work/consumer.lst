 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 289
    4                      ; Text size: 5836
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _put_item_cb
   81  000010d4          	.global _put_item_cb
   82  000010d4          	_put_item_cb:
   83                      ;  Function 'put_item_cb'; 0 bytes of locals, 3 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   88  000010e4  afa20000	sw	0(r29),r2
   89  000010e8  afa30004	sw	4(r29),r3
   90  000010ec  afa40008	sw	8(r29),r4
   91  000010f0  8fc30004	lw	r3,4(r30)
   92  000010f4  8c610000	lw	r1,(r3)
   93  000010f8  00610820	add	r1,r3,r1
   94  000010fc  83df0003	lb	r31,3(r30)
   95  00001100  a03f0008	sb	8(r1),r31
   96  00001104  8c610000	lw	r1,(r3)
   97  00001108  20240001	addi	r4,r1,#1
   98  0000110c  2001000a	addi	r1,r0,#10
   99  00001110  00800035	movi2fp	f0,r4
  100  00001114  00200835	movi2fp	f1,r1
  101  00001118  0401000f	div	f0,f0,f1
  102  0000111c  00001034	movfp2i	r2,f0
  103  00001120  50410002	slli	r1,r2,#0x2
  104  00001124  00220820	add	r1,r1,r2
  105  00001128  50210001	slli	r1,r1,#0x1
  106  0000112c  00810822	sub	r1,r4,r1
  107  00001130  ac610000	sw	(r3),r1
  108  00001134  20010001	addi	r1,r0,#1
  109  00001138  8fa20000	lw	r2,0(r29)
  110  0000113c  8fa30004	lw	r3,4(r29)
  111  00001140  8fa40008	lw	r4,8(r29)
  112  00001144  8fdffff8	lw	r31,-8(r30)
  113  00001148  001ee820	add	r29,r0,r30
  114  0000114c  8fdefffc	lw	r30,-4(r30)
  115  00001150  4be00000	jr	r31
  116  00001154  54000000	nop
  117  00001158          	.endproc _put_item_cb
  118  00001158          	.align 2
  119  00001158          	.proc _check_item_cb
  120  00001158          	.global _check_item_cb
  121  00001158          	_check_item_cb:
  122                      ;  Function 'check_item_cb'; 0 bytes of locals, 2 regs to save.
  123  00001158  afbefffc	sw	-4(r29),r30; push fp
  124  0000115c  001df020	add	r30,r0,r29; fp = sp
  125  00001160  afbffff8	sw	-8(r29),r31; push ret addr
  126  00001164  2fbd0010	subui	r29,r29,#16; alloc local storage
  127  00001168  afa20000	sw	0(r29),r2
  128  0000116c  afa30004	sw	4(r29),r3
  129  00001170  8fc30000	lw	r3,(r30)
  130  00001174  8fc20004	lw	r2,4(r30)
  131  00001178  8c410004	lw	r1,4(r2)
  132  0000117c  00410820	add	r1,r2,r1
  133  00001180  80210008	lb	r1,8(r1)
  134  00001184  a0610000	sb	(r3),r1
  135  00001188  20010001	addi	r1,r0,#1
  136  0000118c  8fa20000	lw	r2,0(r29)
  137  00001190  8fa30004	lw	r3,4(r29)
  138  00001194  8fdffff8	lw	r31,-8(r30)
  139  00001198  001ee820	add	r29,r0,r30
  140  0000119c  8fdefffc	lw	r30,-4(r30)
  141  000011a0  4be00000	jr	r31
  142  000011a4  54000000	nop
  143  000011a8          	.endproc _check_item_cb
  144  000011a8          	.align 2
  145  000011a8          	.proc _get_item_cb
  146  000011a8          	.global _get_item_cb
  147  000011a8          	_get_item_cb:
  148                      ;  Function 'get_item_cb'; 0 bytes of locals, 3 regs to save.
  149  000011a8  afbefffc	sw	-4(r29),r30; push fp
  150  000011ac  001df020	add	r30,r0,r29; fp = sp
  151  000011b0  afbffff8	sw	-8(r29),r31; push ret addr
  152  000011b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  153  000011b8  afa20000	sw	0(r29),r2
  154  000011bc  afa30004	sw	4(r29),r3
  155  000011c0  afa40008	sw	8(r29),r4
  156  000011c4  8fc20000	lw	r2,(r30)
  157  000011c8  8fc30004	lw	r3,4(r30)
  158  000011cc  8c610004	lw	r1,4(r3)
  159  000011d0  00610820	add	r1,r3,r1
  160  000011d4  80210008	lb	r1,8(r1)
  161  000011d8  a0410000	sb	(r2),r1
  162  000011dc  8c610004	lw	r1,4(r3)
  163  000011e0  20240001	addi	r4,r1,#1
  164  000011e4  2001000a	addi	r1,r0,#10
  165  000011e8  00800035	movi2fp	f0,r4
  166  000011ec  00200835	movi2fp	f1,r1
  167  000011f0  0401000f	div	f0,f0,f1
  168  000011f4  00001034	movfp2i	r2,f0
  169  000011f8  50410002	slli	r1,r2,#0x2
  170  000011fc  00220820	add	r1,r1,r2
  171  00001200  50210001	slli	r1,r1,#0x1
  172  00001204  00810822	sub	r1,r4,r1
  173  00001208  ac610004	sw	4(r3),r1
  174  0000120c  20010001	addi	r1,r0,#1
  175  00001210  8fa20000	lw	r2,0(r29)
  176  00001214  8fa30004	lw	r3,4(r29)
  177  00001218  8fa40008	lw	r4,8(r29)
  178  0000121c  8fdffff8	lw	r31,-8(r30)
  179  00001220  001ee820	add	r29,r0,r30
  180  00001224  8fdefffc	lw	r30,-4(r30)
  181  00001228  4be00000	jr	r31
  182  0000122c  54000000	nop
  183  00001230          	.endproc _get_item_cb
  184  00001230          	.align 2
  185  00001230          	.proc _is_full
  186  00001230          	.global _is_full
  187  00001230          	_is_full:
  188                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  189  00001230  afbefffc	sw	-4(r29),r30; push fp
  190  00001234  001df020	add	r30,r0,r29; fp = sp
  191  00001238  afbffff8	sw	-8(r29),r31; push ret addr
  192  0000123c  2fbd0018	subui	r29,r29,#24; alloc local storage
  193  00001240  afa20000	sw	0(r29),r2
  194  00001244  afa30004	sw	4(r29),r3
  195  00001248  afa40008	sw	8(r29),r4
  196  0000124c  8fc40000	lw	r4,(r30)
  197  00001250  8c810000	lw	r1,(r4)
  198  00001254  20230001	addi	r3,r1,#1
  199  00001258  2001000a	addi	r1,r0,#10
  200  0000125c  00600035	movi2fp	f0,r3
  201  00001260  00200835	movi2fp	f1,r1
  202  00001264  0401000f	div	f0,f0,f1
  203  00001268  00001034	movfp2i	r2,f0
  204  0000126c  50410002	slli	r1,r2,#0x2
  205  00001270  00220820	add	r1,r1,r2
  206  00001274  50210001	slli	r1,r1,#0x1
  207  00001278  00611022	sub	r2,r3,r1
  208  0000127c  8c810004	lw	r1,4(r4)
  209  00001280  00411028	seq	r2,r2,r1
  210  00001284  20010001	addi	r1,r0,#1
  211  00001288  14400008	bnez	r2,L23_LF0
  212  0000128c  54000000	nop; not filled.
  213  00001290  20010000	addi	r1,r0,#0
  214  00001294          	L23_LF0:
  215  00001294  8fa20000	lw	r2,0(r29)
  216  00001298  8fa30004	lw	r3,4(r29)
  217  0000129c  8fa40008	lw	r4,8(r29)
  218  000012a0  8fdffff8	lw	r31,-8(r30)
  219  000012a4  001ee820	add	r29,r0,r30
  220  000012a8  8fdefffc	lw	r30,-4(r30)
  221  000012ac  4be00000	jr	r31
  222  000012b0  54000000	nop
  223  000012b4          	.endproc _is_full
  224  000012b4          	.align 2
  225  000012b4          	.proc _is_empty
  226  000012b4          	.global _is_empty
  227  000012b4          	_is_empty:
  228                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  229  000012b4  afbefffc	sw	-4(r29),r30; push fp
  230  000012b8  001df020	add	r30,r0,r29; fp = sp
  231  000012bc  afbffff8	sw	-8(r29),r31; push ret addr
  232  000012c0  2fbd0010	subui	r29,r29,#16; alloc local storage
  233  000012c4  afa20000	sw	0(r29),r2
  234  000012c8  8fc10000	lw	r1,(r30)
  235  000012cc  8c220000	lw	r2,(r1)
  236  000012d0  8c210004	lw	r1,4(r1)
  237  000012d4  00411028	seq	r2,r2,r1
  238  000012d8  20010001	addi	r1,r0,#1
  239  000012dc  14400008	bnez	r2,L30_LF0
  240  000012e0  54000000	nop; not filled.
  241  000012e4  20010000	addi	r1,r0,#0
  242  000012e8          	L30_LF0:
  243  000012e8  8fa20000	lw	r2,0(r29)
  244  000012ec  8fdffff8	lw	r31,-8(r30)
  245  000012f0  001ee820	add	r29,r0,r30
  246  000012f4  8fdefffc	lw	r30,-4(r30)
  247  000012f8  4be00000	jr	r31
  248  000012fc  54000000	nop
  249  00001300          	.endproc _is_empty
  250  00001300          	.data
  251  00003000          	.align 2
  252  00003000          	LC0_LF0:
  253  00003000  43697263	.ascii "Circular Buffer Initiated\n\000"
  253  00003004  756c6172	
  253  00003008  20427566	
  253  0000300c  66657220	
  253  00003010  496e6974	
  253  00003014  69617465	
  253  00003018  640a00  	
  254  0000301b          	.text
  255  00001300          	.align 2
  256  00001300          	.proc _init_cb
  257  00001300          	.global _init_cb
  258  00001300          	_init_cb:
  259                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  260  00001300  afbefffc	sw	-4(r29),r30; push fp
  261  00001304  001df020	add	r30,r0,r29; fp = sp
  262  00001308  afbffff8	sw	-8(r29),r31; push ret addr
  263  0000130c  2fbd0010	subui	r29,r29,#16; alloc local storage
  264  00001310  afa20000	sw	0(r29),r2
  265  00001314  8fc10000	lw	r1,(r30)
  266  00001318  20020000	addi	r2,r0,#0
  267  0000131c  ac220000	sw	(r1),r2
  268  00001320  ac220004	sw	4(r1),r2
  269  00001324  23bdfff8	addi	r29,r29,#-8
  270  00001328  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
  271  0000132c  24423000	addui	r2,r2,(LC0_LF0)&0xffff
  272  00001330  afa20000	sw	(r29),r2
  273  00001334  0c000590	jal	_Printf
  274  00001338  54000000	nop; not filled.
  275  0000133c  23bd0008	addi	r29,r29,#8
  276  00001340  8fa20000	lw	r2,0(r29)
  277  00001344  8fdffff8	lw	r31,-8(r30)
  278  00001348  001ee820	add	r29,r0,r30
  279  0000134c  8fdefffc	lw	r30,-4(r30)
  280  00001350  4be00000	jr	r31
  281  00001354  54000000	nop
  282  00001358          	.endproc _init_cb
  283  00001358          	.data
  284  0000301b          	.align 2
  285  0000301c          	LC1_LF0:
  286  0000301c  20436972	.ascii " Circular Buffer =>  \000"
  286  00003020  63756c61	
  286  00003024  72204275	
  286  00003028  66666572	
  286  0000302c  203d3e20	
  286  00003030  2000    	
  287  00003032          	.align 2
  288  00003034          	LC2_LF0:
  289  00003034  256300  	.ascii "%c\000"
  290  00003037          	.align 2
  291  00003038          	LC3_LF0:
  292  00003038  0a00    	.ascii "\n\000"
  293  0000303a          	.text
  294  00001358          	.align 2
  295  00001358          	.proc _Print_cb
  296  00001358          	.global _Print_cb
  297  00001358          	_Print_cb:
  298                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  299  00001358  afbefffc	sw	-4(r29),r30; push fp
  300  0000135c  001df020	add	r30,r0,r29; fp = sp
  301  00001360  afbffff8	sw	-8(r29),r31; push ret addr
  302  00001364  2fbd0020	subui	r29,r29,#32; alloc local storage
  303  00001368  afa20000	sw	0(r29),r2
  304  0000136c  afa30004	sw	4(r29),r3
  305  00001370  afa40008	sw	8(r29),r4
  306  00001374  afa5000c	sw	12(r29),r5
  307  00001378  afa60010	sw	16(r29),r6
  308  0000137c  afa70014	sw	20(r29),r7
  309  00001380  8fc50000	lw	r5,(r30)
  310  00001384  23bdfff8	addi	r29,r29,#-8
  311  00001388  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  312  0000138c  24e7301c	addui	r7,r7,(LC1_LF0)&0xffff
  313  00001390  afa70000	sw	(r29),r7
  314  00001394  0c000530	jal	_Printf
  315  00001398  54000000	nop; not filled.
  316  0000139c  20040000	addi	r4,r0,#0
  317  000013a0  23bd0008	addi	r29,r29,#8
  318  000013a4  2006000a	addi	r6,r0,#10
  319  000013a8          	L45_LF0:
  320  000013a8  23bdfff8	addi	r29,r29,#-8
  321  000013ac  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  322  000013b0  24e73034	addui	r7,r7,(LC2_LF0)&0xffff
  323  000013b4  afa70000	sw	(r29),r7
  324  000013b8  8ca10004	lw	r1,4(r5)
  325  000013bc  00811820	add	r3,r4,r1
  326  000013c0  00600035	movi2fp	f0,r3
  327  000013c4  00c00835	movi2fp	f1,r6
  328  000013c8  0401000f	div	f0,f0,f1
  329  000013cc  00001034	movfp2i	r2,f0
  330  000013d0  50410002	slli	r1,r2,#0x2
  331  000013d4  00220820	add	r1,r1,r2
  332  000013d8  50210001	slli	r1,r1,#0x1
  333  000013dc  00610822	sub	r1,r3,r1
  334  000013e0  00a10820	add	r1,r5,r1
  335  000013e4  90210008	lbu	r1,8(r1)
  336  000013e8  afa10004	sw	4(r29),r1
  337  000013ec  0c0004d8	jal	_Printf
  338  000013f0  54000000	nop; not filled.
  339  000013f4  23bd0008	addi	r29,r29,#8
  340  000013f8  20840001	addi	r4,r4,#1
  341  000013fc  70810009	slei	r1,r4,#9
  342  00001400  1420ffa4	bnez	r1,L45_LF0
  343  00001404  54000000	nop; not filled.
  344  00001408  23bdfff8	addi	r29,r29,#-8
  345  0000140c  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  346  00001410  24e73038	addui	r7,r7,(LC3_LF0)&0xffff
  347  00001414  afa70000	sw	(r29),r7
  348  00001418  0c0004ac	jal	_Printf
  349  0000141c  54000000	nop; not filled.
  350  00001420  23bd0008	addi	r29,r29,#8
  351  00001424  8fa20000	lw	r2,0(r29)
  352  00001428  8fa30004	lw	r3,4(r29)
  353  0000142c  8fa40008	lw	r4,8(r29)
  354  00001430  8fa5000c	lw	r5,12(r29)
  355  00001434  8fa60010	lw	r6,16(r29)
  356  00001438  8fa70014	lw	r7,20(r29)
  357  0000143c  8fdffff8	lw	r31,-8(r30)
  358  00001440  001ee820	add	r29,r0,r30
  359  00001444  8fdefffc	lw	r30,-4(r30)
  360  00001448  4be00000	jr	r31
  361  0000144c  54000000	nop
  362  00001450          	.endproc _Print_cb
  363  00001450          	.data
  364  0000303a          	.align 2
  365  0000303c          	LC4_LF0:
  366  0000303c  55736167	.ascii "Usage: \000"
  366  00003040  653a2000	
  367  00003044          	.align 2
  368  00003044          	LC5_LF0:
  369  00003044  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
  369  00003048  6e646c65	
  369  0000304c  5f746f5f	
  369  00003050  73686172	
  369  00003054  65645f6d	
  369  00003058  656d6f72	
  369  0000305c  795f7061	
  369  00003060  67653e20	
  369  00003064  3c68616e	
  369  00003068  646c655f	
  369  0000306c  746f5f70	
  369  00003070  6167655f	
  369  00003074  6d617070	
  369  00003078  65645f73	
  369  0000307c  656d6170	
  369  00003080  686f7265	
  369  00003084  3e203c68	
  369  00003088  616e    	
  370  0000308a  646c6520	.ascii "dle to lock>\n\000"
  370  0000308e  746f206c	
  370  00003092  6f636b3e	
  370  00003096  0a00    	
  371  00003098          	.align 2
  372  00003098          	LC6_LF0:
  373  00003098  436f756c	.ascii "Could not map the virtual address to the memory in \000"
  373  0000309c  64206e6f	
  373  000030a0  74206d61	
  373  000030a4  70207468	
  373  000030a8  65207669	
  373  000030ac  72747561	
  373  000030b0  6c206164	
  373  000030b4  64726573	
  373  000030b8  7320746f	
  373  000030bc  20746865	
  373  000030c0  206d656d	
  373  000030c4  6f727920	
  373  000030c8  696e2000	
  374  000030cc          	.align 2
  375  000030cc          	LC7_LF0:
  376  000030cc  2c206578	.ascii ", exiting...\n\000"
  376  000030d0  6974696e	
  376  000030d4  672e2e2e	
  376  000030d8  0a00    	
  377  000030da          	.align 2
  378  000030dc          	LC8_LF0:
  379  000030dc  436f6e73	.ascii "Consumer %d removed: %c\n\000"
  379  000030e0  756d6572	
  379  000030e4  20256420	
  379  000030e8  72656d6f	
  379  000030ec  7665643a	
  379  000030f0  2025630a	
  379  000030f4  00      	
  380  000030f5          	.align 2
  381  000030f8          	LC9_LF0:
  382  000030f8  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  382  000030fc  73656d61	
  382  00003100  70686f72	
  382  00003104  6520735f	
  382  00003108  70726f63	
  382  0000310c  735f636f	
  382  00003110  6d706c65	
  382  00003114  74656420	
  382  00003118  28256429	
  382  0000311c  20696e20	
  382  00003120  00      	
  383  00003121          	.text
  384  00001450          	.align 2
  385  00001450          	.proc _main
  386  00001450          	.global _main
  387  00001450          	_main:
  388                      ;  Function 'main'; 1000 bytes of locals, 0 regs to save.
  389  00001450  afbefffc	sw	-4(r29),r30; push fp
  390  00001454  001df020	add	r30,r0,r29; fp = sp
  391  00001458  afbffff8	sw	-8(r29),r31; push ret addr
  392  0000145c  2fbd03f0	subui	r29,r29,#1008; alloc local storage
  393  00001460  8fc20000	lw	r2,(r30)
  394  00001464  8fc80004	lw	r8,4(r30)
  395  00001468  0c001258	jal	___main
  396  0000146c  54000000	nop; not filled.
  397  00001470  20050000	addi	r5,r0,#0
  398  00001474  64410006	snei	r1,r2,#6
  399  00001478  1020004c	beqz	r1,L48_LF0
  400  0000147c  54000000	nop; not filled.
  401  00001480  23bdfff8	addi	r29,r29,#-8
  402  00001484  3c0c0000	lhi	r12,((LC4_LF0)>>16)&0xffff
  403  00001488  258c303c	addui	r12,r12,(LC4_LF0)&0xffff
  404  0000148c  afac0000	sw	(r29),r12
  405  00001490  0c000434	jal	_Printf
  406  00001494  54000000	nop; not filled.
  407  00001498  8d0c0000	lw	r12,(r8)
  408  0000149c  afac0000	sw	(r29),r12
  409  000014a0  0c000424	jal	_Printf
  410  000014a4  54000000	nop; not filled.
  411  000014a8  3c0c0000	lhi	r12,((LC5_LF0)>>16)&0xffff
  412  000014ac  258c3044	addui	r12,r12,(LC5_LF0)&0xffff
  413  000014b0  afac0000	sw	(r29),r12
  414  000014b4  0c000410	jal	_Printf
  415  000014b8  54000000	nop; not filled.
  416  000014bc  0c0004b0	jal	_Exit
  417  000014c0  54000000	nop; not filled.
  418  000014c4  23bd0008	addi	r29,r29,#8
  419  000014c8          	L48_LF0:
  420  000014c8  23bdfff0	addi	r29,r29,#-16
  421  000014cc  8d0c0004	lw	r12,4(r8)
  422  000014d0  afac0000	sw	(r29),r12
  423  000014d4  200c0000	addi	r12,r0,#0
  424  000014d8  afac0004	sw	4(r29),r12
  425  000014dc  200c000a	addi	r12,r0,#10
  426  000014e0  afac0008	sw	8(r29),r12
  427  000014e4  0c000d34	jal	_dstrtol
  428  000014e8  54000000	nop; not filled.
  429  000014ec  00011020	add	r2,r0,r1
  430  000014f0  8d0c0008	lw	r12,8(r8)
  431  000014f4  afac0000	sw	(r29),r12
  432  000014f8  200c0000	addi	r12,r0,#0
  433  000014fc  afac0004	sw	4(r29),r12
  434  00001500  200c000a	addi	r12,r0,#10
  435  00001504  afac0008	sw	8(r29),r12
  436  00001508  0c000d10	jal	_dstrtol
  437  0000150c  54000000	nop; not filled.
  438  00001510  00015820	add	r11,r0,r1
  439  00001514  8d0c000c	lw	r12,12(r8)
  440  00001518  afac0000	sw	(r29),r12
  441  0000151c  200c0000	addi	r12,r0,#0
  442  00001520  afac0004	sw	4(r29),r12
  443  00001524  200c000a	addi	r12,r0,#10
  444  00001528  afac0008	sw	8(r29),r12
  445  0000152c  0c000cec	jal	_dstrtol
  446  00001530  54000000	nop; not filled.
  447  00001534  00013820	add	r7,r0,r1
  448  00001538  8d0c0010	lw	r12,16(r8)
  449  0000153c  afac0000	sw	(r29),r12
  450  00001540  200c0000	addi	r12,r0,#0
  451  00001544  afac0004	sw	4(r29),r12
  452  00001548  200c000a	addi	r12,r0,#10
  453  0000154c  afac0008	sw	8(r29),r12
  454  00001550  0c000cc8	jal	_dstrtol
  455  00001554  54000000	nop; not filled.
  456  00001558  00015020	add	r10,r0,r1
  457  0000155c  8d0c0014	lw	r12,20(r8)
  458  00001560  afac0000	sw	(r29),r12
  459  00001564  200c0000	addi	r12,r0,#0
  460  00001568  afac0004	sw	4(r29),r12
  461  0000156c  200c000a	addi	r12,r0,#10
  462  00001570  afac0008	sw	8(r29),r12
  463  00001574  0c000ca4	jal	_dstrtol
  464  00001578  54000000	nop; not filled.
  465  0000157c  00014820	add	r9,r0,r1
  466  00001580  afa20000	sw	(r29),r2
  467  00001584  0c000370	jal	_shmat
  468  00001588  54000000	nop; not filled.
  469  0000158c  00011020	add	r2,r0,r1
  470  00001590  23bd0010	addi	r29,r29,#16
  471  00001594  64410000	snei	r1,r2,#0
  472  00001598  1420004c	bnez	r1,L49_LF0
  473  0000159c  54000000	nop; not filled.
  474  000015a0  23bdfff8	addi	r29,r29,#-8
  475  000015a4  3c0c0000	lhi	r12,((LC6_LF0)>>16)&0xffff
  476  000015a8  258c3098	addui	r12,r12,(LC6_LF0)&0xffff
  477  000015ac  afac0000	sw	(r29),r12
  478  000015b0  0c000314	jal	_Printf
  479  000015b4  54000000	nop; not filled.
  480  000015b8  8d0c0000	lw	r12,(r8)
  481  000015bc  afac0000	sw	(r29),r12
  482  000015c0  0c000304	jal	_Printf
  483  000015c4  54000000	nop; not filled.
  484  000015c8  3c0c0000	lhi	r12,((LC7_LF0)>>16)&0xffff
  485  000015cc  258c30cc	addui	r12,r12,(LC7_LF0)&0xffff
  486  000015d0  afac0000	sw	(r29),r12
  487  000015d4  0c0002f0	jal	_Printf
  488  000015d8  54000000	nop; not filled.
  489  000015dc  0c000390	jal	_Exit
  490  000015e0  54000000	nop; not filled.
  491  000015e4  23bd0008	addi	r29,r29,#8
  492  000015e8          	L49_LF0:
  493  000015e8  20440008	addi	r4,r2,#8
  494  000015ec  23c6fc10	addi	r6,r30,#-1008
  495  000015f0          	L52_LF0:
  496  000015f0  23bdfff8	addi	r29,r29,#-8
  497  000015f4  afa70000	sw	(r29),r7
  498  000015f8  0c000338	jal	_lock_acquire
  499  000015fc  54000000	nop; not filled.
  500  00001600  23bd0008	addi	r29,r29,#8
  501  00001604  8c810000	lw	r1,(r4)
  502  00001608  8c820004	lw	r2,4(r4)
  503  0000160c  00220828	seq	r1,r1,r2
  504  00001610  20020000	addi	r2,r0,#0
  505  00001614  10200008	beqz	r1,L55_LF0
  506  00001618  54000000	nop; not filled.
  507  0000161c  20020001	addi	r2,r0,#1
  508  00001620          	L55_LF0:
  509  00001620  64410000	snei	r1,r2,#0
  510  00001624  10200018	beqz	r1,L53_LF0
  511  00001628  54000000	nop; not filled.
  512  0000162c  23bdfff8	addi	r29,r29,#-8
  513  00001630  afa90000	sw	(r29),r9
  514  00001634  0c000320	jal	_cond_wait
  515  00001638  54000000	nop; not filled.
  516  0000163c  23bd0008	addi	r29,r29,#8
  517  00001640          	L53_LF0:
  518  00001640  23c2fc10	addi	r2,r30,#-1008
  519  00001644  00451020	add	r2,r2,r5
  520  00001648  8c810004	lw	r1,4(r4)
  521  0000164c  00810820	add	r1,r4,r1
  522  00001650  80210008	lb	r1,8(r1)
  523  00001654  a0410000	sb	(r2),r1
  524  00001658  64a10000	snei	r1,r5,#0
  525  0000165c  1420001c	bnez	r1,L72_LF0
  526  00001660  54000000	nop; not filled.
  527  00001664  90c10000	lbu	r1,(r6)
  528  00001668  60210030	seqi	r1,r1,#48
  529  0000166c  1020010c	beqz	r1,L58_LF0
  530  00001670  54000000	nop; not filled.
  531  00001674  08000078	j	L59_LF0
  532  00001678  54000000	nop; not filled.
  533  0000167c          	L72_LF0:
  534  0000167c  80c20000	lb	r2,(r6)
  535  00001680  305f00ff	andi	r31,r2,#0x00ff
  536  00001684  03c50820	add	r1,r30,r5
  537  00001688  9021fc0f	lbu	r1,-1009(r1)
  538  0000168c  20210001	addi	r1,r1,#1
  539  00001690  03e10828	seq	r1,r31,r1
  540  00001694  14200058	bnez	r1,L59_LF0
  541  00001698  54000000	nop; not filled.
  542  0000169c  20030000	addi	r3,r0,#0
  543  000016a0  2041ffd0	addi	r1,r2,#-48
  544  000016a4  302100ff	andi	r1,r1,#0x00ff
  545  000016a8  70210009	sleui	r1,r1,#9
  546  000016ac  14200024	bnez	r1,L63_LF0
  547  000016b0  54000000	nop; not filled.
  548  000016b4  2041ff9f	addi	r1,r2,#-97
  549  000016b8  302100ff	andi	r1,r1,#0x00ff
  550  000016bc  70210005	sleui	r1,r1,#5
  551  000016c0  14200010	bnez	r1,L63_LF0
  552  000016c4  54000000	nop; not filled.
  553  000016c8  67e10041	snei	r1,r31,#65
  554  000016cc  14200008	bnez	r1,L62_LF0
  555  000016d0  54000000	nop; not filled.
  556  000016d4          	L63_LF0:
  557  000016d4  20030001	addi	r3,r0,#1
  558  000016d8          	L62_LF0:
  559  000016d8  64610000	snei	r1,r3,#0
  560  000016dc  1420009c	bnez	r1,L58_LF0
  561  000016e0  54000000	nop; not filled.
  562  000016e4  60a1000a	seqi	r1,r5,#10
  563  000016e8  10200090	beqz	r1,L58_LF0
  564  000016ec  54000000	nop; not filled.
  565  000016f0          	L59_LF0:
  566  000016f0  23c2fc10	addi	r2,r30,#-1008
  567  000016f4  00451020	add	r2,r2,r5
  568  000016f8  8c810004	lw	r1,4(r4)
  569  000016fc  00810820	add	r1,r4,r1
  570  00001700  80210008	lb	r1,8(r1)
  571  00001704  a0410000	sb	(r2),r1
  572  00001708  8c810004	lw	r1,4(r4)
  573  0000170c  20230001	addi	r3,r1,#1
  574  00001710  2001000a	addi	r1,r0,#10
  575  00001714  00600035	movi2fp	f0,r3
  576  00001718  00200835	movi2fp	f1,r1
  577  0000171c  0401000f	div	f0,f0,f1
  578  00001720  00001034	movfp2i	r2,f0
  579  00001724  50410002	slli	r1,r2,#0x2
  580  00001728  00220820	add	r1,r1,r2
  581  0000172c  50210001	slli	r1,r1,#0x1
  582  00001730  00610822	sub	r1,r3,r1
  583  00001734  ac810004	sw	4(r4),r1
  584  00001738  0c000198	jal	_Getpid
  585  0000173c  54000000	nop; not filled.
  586  00001740  23bdfff0	addi	r29,r29,#-16
  587  00001744  3c0c0000	lhi	r12,((LC8_LF0)>>16)&0xffff
  588  00001748  258c30dc	addui	r12,r12,(LC8_LF0)&0xffff
  589  0000174c  afac0000	sw	(r29),r12
  590  00001750  afa10004	sw	4(r29),r1
  591  00001754  90c10000	lbu	r1,(r6)
  592  00001758  afa10008	sw	8(r29),r1
  593  0000175c  0c000168	jal	_Printf
  594  00001760  54000000	nop; not filled.
  595  00001764  20c60001	addi	r6,r6,#1
  596  00001768  20a50001	addi	r5,r5,#1
  597  0000176c  afaa0000	sw	(r29),r10
  598  00001770  0c0001f0	jal	_cond_signal
  599  00001774  54000000	nop; not filled.
  600  00001778  23bd0010	addi	r29,r29,#16
  601  0000177c          	L58_LF0:
  602  0000177c  23bdfff8	addi	r29,r29,#-8
  603  00001780  afa70000	sw	(r29),r7
  604  00001784  0c0001b8	jal	_lock_release
  605  00001788  54000000	nop; not filled.
  606  0000178c  23bd0008	addi	r29,r29,#8
  607  00001790  70a10009	slei	r1,r5,#9
  608  00001794  1420fe58	bnez	r1,L52_LF0
  609  00001798  54000000	nop; not filled.
  610  0000179c  23bdfff8	addi	r29,r29,#-8
  611  000017a0  afa70000	sw	(r29),r7
  612  000017a4  0c00018c	jal	_lock_acquire
  613  000017a8  54000000	nop; not filled.
  614  000017ac  23bd0008	addi	r29,r29,#8
  615  000017b0  23c2fc10	addi	r2,r30,#-1008
  616  000017b4  23c3fc19	addi	r3,r30,#-999
  617  000017b8          	L69_LF0:
  618  000017b8  23bdfff8	addi	r29,r29,#-8
  619  000017bc  3c0c0000	lhi	r12,((LC2_LF0)>>16)&0xffff
  620  000017c0  258c3034	addui	r12,r12,(LC2_LF0)&0xffff
  621  000017c4  afac0000	sw	(r29),r12
  622  000017c8  90410000	lbu	r1,(r2)
  623  000017cc  afa10004	sw	4(r29),r1
  624  000017d0  0c0000f4	jal	_Printf
  625  000017d4  54000000	nop; not filled.
  626  000017d8  23bd0008	addi	r29,r29,#8
  627  000017dc  20420001	addi	r2,r2,#1
  628  000017e0  0043082c	sle	r1,r2,r3
  629  000017e4  1420ffd0	bnez	r1,L69_LF0
  630  000017e8  54000000	nop; not filled.
  631  000017ec  23bdfff8	addi	r29,r29,#-8
  632  000017f0  3c0c0000	lhi	r12,((LC3_LF0)>>16)&0xffff
  633  000017f4  258c3038	addui	r12,r12,(LC3_LF0)&0xffff
  634  000017f8  afac0000	sw	(r29),r12
  635  000017fc  0c0000c8	jal	_Printf
  636  00001800  54000000	nop; not filled.
  637  00001804  afa70000	sw	(r29),r7
  638  00001808  0c000134	jal	_lock_release
  639  0000180c  54000000	nop; not filled.
  640  00001810  afab0000	sw	(r29),r11
  641  00001814  0c000104	jal	_sem_signal
  642  00001818  54000000	nop; not filled.
  643  0000181c  23bd0008	addi	r29,r29,#8
  644  00001820  64210001	snei	r1,r1,#1
  645  00001824  10200050	beqz	r1,L71_LF0
  646  00001828  54000000	nop; not filled.
  647  0000182c  23bdfff8	addi	r29,r29,#-8
  648  00001830  3c0c0000	lhi	r12,((LC9_LF0)>>16)&0xffff
  649  00001834  258c30f8	addui	r12,r12,(LC9_LF0)&0xffff
  650  00001838  afac0000	sw	(r29),r12
  651  0000183c  afab0004	sw	4(r29),r11
  652  00001840  0c000084	jal	_Printf
  653  00001844  54000000	nop; not filled.
  654  00001848  8d080000	lw	r8,(r8)
  655  0000184c  afa80000	sw	(r29),r8
  656  00001850  0c000074	jal	_Printf
  657  00001854  54000000	nop; not filled.
  658  00001858  3c0c0000	lhi	r12,((LC7_LF0)>>16)&0xffff
  659  0000185c  258c30cc	addui	r12,r12,(LC7_LF0)&0xffff
  660  00001860  afac0000	sw	(r29),r12
  661  00001864  0c000060	jal	_Printf
  662  00001868  54000000	nop; not filled.
  663  0000186c  0c000100	jal	_Exit
  664  00001870  54000000	nop; not filled.
  665  00001874  23bd0008	addi	r29,r29,#8
  666  00001878          	L71_LF0:
  667  00001878  0c000e3c	jal	_exit
  668  0000187c  54000000	nop
  669  00001880          	.endproc _main
  670                      ;;;
  671                      ;;; Stub functions for DLX traps.
  672                      ;;;
  673                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  674                      ;;;
  675                      ;;; The traps such as Open and Close
  676                      ;;; (note the capital letters) are for use by user programs.  The traps
  677                      ;;; with names such as open and close (lower case) are for use by the OS.
  678                      ;;;
  681  00001880          	.align 2
  683                      ;;; The following are the traps to be used by user-level programs
  684                      ;;;
  686  00001880          	.align 2
  687  00001880          	.proc _Open
  688  00001880          	.global _Open
  689  00001880          	_Open:
  690                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  691                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  692                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  693  00001880  44000213	trap	#0x213
  694  00001884  4be00000	jr	r31
  695  00001888  54000000	nop
  696  0000188c          	.endproc _Open
  698  0000188c          	.proc _Close
  699  0000188c          	.global _Close
  700  0000188c          	_Close:
  701  0000188c  44000214	trap	#0x214
  702  00001890  4be00000	jr	r31
  703  00001894  54000000	nop
  704  00001898          	.endproc _Close
  706  00001898          	.proc _Read
  707  00001898          	.global _Read
  708  00001898          	_Read:
  709  00001898  44000210	trap	#0x210
  710  0000189c  4be00000	jr	r31
  711  000018a0  54000000	nop
  712  000018a4          	.endproc _Read
  714  000018a4          	.proc _Write
  715  000018a4          	.global _Write
  716  000018a4          	_Write:
  717  000018a4  44000211	trap	#0x211
  718  000018a8  4be00000	jr	r31
  719  000018ac  54000000	nop
  720  000018b0          	.endproc _Write
  722  000018b0          	.proc _Lseek
  723  000018b0          	.global _Lseek
  724  000018b0          	_Lseek:
  725  000018b0  44000212	trap	#0x212
  726  000018b4  4be00000	jr	r31
  727  000018b8  54000000	nop
  728  000018bc          	.endproc _Lseek
  730  000018bc          	.proc _Putchar
  731  000018bc          	.global _Putchar
  732  000018bc          	_Putchar:
  733  000018bc  44000280	trap	#0x280
  734  000018c0  4be00000	jr	r31
  735  000018c4  54000000	nop
  736  000018c8          	.endproc _Putchar
  738  000018c8          	.proc _Printf
  739  000018c8          	.global _Printf
  740  000018c8          	_Printf:
  741  000018c8  44000201	trap	#0x201
  742  000018cc  4be00000	jr	r31
  743  000018d0  54000000	nop
  744  000018d4          	.endproc _Printf
  746  000018d4          	.proc _Getpid
  747  000018d4          	.global _Getpid
  748  000018d4          	_Getpid:
  749  000018d4  44000431	trap	#0x431
  750  000018d8  4be00000	jr	r31
  751  000018dc  54000000	nop
  752  000018e0          	.endproc _Getpid
  754  000018e0          	.proc _process_create
  755  000018e0          	.global _process_create
  756  000018e0          	_process_create:
  757  000018e0  44000432	trap	#0x432
  758  000018e4  4be00000	jr	r31
  759  000018e8  54000000	nop
  760  000018ec          	.endproc _process_create
  762  000018ec          	.proc _shmget
  763  000018ec          	.global _shmget
  764  000018ec          	_shmget:
  765  000018ec  44000440	trap	#0x440
  766  000018f0  4be00000	jr	r31
  767  000018f4  54000000	nop
  768  000018f8          	.endproc _shmget
  770  000018f8          	.proc _shmat
  771  000018f8          	.global _shmat
  772  000018f8          	_shmat:
  773  000018f8  44000441	trap	#0x441
  774  000018fc  4be00000	jr	r31
  775  00001900  54000000	nop
  776  00001904          	.endproc _shmat
  778  00001904          	.proc _sem_create
  779  00001904          	.global _sem_create
  780  00001904          	_sem_create:
  781  00001904  44000450	trap	#0x450
  782  00001908  4be00000	jr	r31
  783  0000190c  54000000	nop
  784  00001910          	.endproc _sem_create
  786  00001910          	.proc _sem_wait
  787  00001910          	.global _sem_wait
  788  00001910          	_sem_wait:
  789  00001910  44000451	trap	#0x451
  790  00001914  4be00000	jr	r31
  791  00001918  54000000	nop
  792  0000191c          	.endproc _sem_wait
  794  0000191c          	.proc _sem_signal
  795  0000191c          	.global _sem_signal
  796  0000191c          	_sem_signal:
  797  0000191c  44000452	trap	#0x452
  798  00001920  4be00000	jr	r31
  799  00001924  54000000	nop
  800  00001928          	.endproc _sem_signal
  802  00001928          	.proc _lock_create
  803  00001928          	.global _lock_create
  804  00001928          	_lock_create:
  805  00001928  44000453	trap	#0x453
  806  0000192c  4be00000	jr	r31
  807  00001930  54000000	nop
  808  00001934          	.endproc _lock_create
  810  00001934          	.proc _lock_acquire
  811  00001934          	.global _lock_acquire
  812  00001934          	_lock_acquire:
  813  00001934  44000454	trap	#0x454
  814  00001938  4be00000	jr	r31
  815  0000193c  54000000	nop
  816  00001940          	.endproc _lock_acquire
  818  00001940          	.proc _lock_release
  819  00001940          	.global _lock_release
  820  00001940          	_lock_release:
  821  00001940  44000455	trap	#0x455
  822  00001944  4be00000	jr	r31
  823  00001948  54000000	nop
  824  0000194c          	.endproc _lock_release
  826  0000194c          	.proc _cond_create
  827  0000194c          	.global _cond_create
  828  0000194c          	_cond_create:
  829  0000194c  44000456	trap	#0x456
  830  00001950  4be00000	jr	r31
  831  00001954  54000000	nop
  832  00001958          	.endproc _cond_create
  834  00001958          	.proc _cond_wait
  835  00001958          	.global _cond_wait
  836  00001958          	_cond_wait:
  837  00001958  44000457	trap	#0x457
  838  0000195c  4be00000	jr	r31
  839  00001960  54000000	nop
  840  00001964          	.endproc _cond_wait
  842  00001964          	.proc _cond_signal
  843  00001964          	.global _cond_signal
  844  00001964          	_cond_signal:
  845  00001964  44000458	trap	#0x458
  846  00001968  4be00000	jr	r31
  847  0000196c  54000000	nop
  848  00001970          	.endproc _cond_signal
  850  00001970          	.proc _Exit
  851  00001970          	.global _Exit
  852  00001970          	_Exit:
  853  00001970  44000500	trap	#0x500
  854  00001974  4be00000	jr	r31
  855  00001978  54000000	nop
  856  0000197c          	.endproc _Exit
  857                      ; Compiled by GCC
  859  0000197c          	.align 2
  860  0000197c          	.proc _isspace
  861  0000197c          	.global _isspace
  862  0000197c          	_isspace:
  863                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  864  0000197c  afbefffc	sw	-4(r29),r30; push fp
  865  00001980  001df020	add	r30,r0,r29; fp = sp
  866  00001984  afbffff8	sw	-8(r29),r31; push ret addr
  867  00001988  2fbd0018	subui	r29,r29,#24; alloc local storage
  868  0000198c  afa20000	sw	0(r29),r2
  869  00001990  afa30004	sw	4(r29),r3
  870  00001994  afa40008	sw	8(r29),r4
  871  00001998  83c20003	lb	r2,3(r30)
  872  0000199c  20010000	addi	r1,r0,#0
  873  000019a0  304300ff	andi	r3,r2,#0x00ff
  874  000019a4  60640020	seqi	r4,r3,#32
  875  000019a8  1480002c	bnez	r4,L3_LF2
  876  000019ac  54000000	nop; delay slot nop
  877  000019b0  304300ff	andi	r3,r2,#0x00ff
  878  000019b4  60640009	seqi	r4,r3,#9
  879  000019b8  1480001c	bnez	r4,L3_LF2
  880  000019bc  54000000	nop; delay slot nop
  881  000019c0  304300ff	andi	r3,r2,#0x00ff
  882  000019c4  6064000a	seqi	r4,r3,#10
  883  000019c8  1480000c	bnez	r4,L3_LF2
  884  000019cc  54000000	nop; delay slot nop
  885  000019d0  08000008	j	L2_LF2
  886  000019d4  54000000	nop; delay slot nop
  887  000019d8          	L3_LF2:
  888  000019d8  20010001	addi	r1,r0,#1
  889  000019dc          	L2_LF2:
  890  000019dc  08000004	j	L1_LF2
  891  000019e0  54000000	nop; delay slot nop
  892  000019e4          	L1_LF2:
  893  000019e4  8fa20000	lw	r2,0(r29)
  894  000019e8  8fa30004	lw	r3,4(r29)
  895  000019ec  8fa40008	lw	r4,8(r29)
  896  000019f0  8fdffff8	lw	r31,-8(r30)
  897  000019f4  001ee820	add	r29,r0,r30
  898  000019f8  8fdefffc	lw	r30,-4(r30)
  899  000019fc  4be00000	jr	r31
  900  00001a00  54000000	nop
  901  00001a04          	.endproc _isspace
  902  00001a04          	.align 2
  903  00001a04          	.proc _isxdigit
  904  00001a04          	.global _isxdigit
  905  00001a04          	_isxdigit:
  906                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  907  00001a04  afbefffc	sw	-4(r29),r30; push fp
  908  00001a08  001df020	add	r30,r0,r29; fp = sp
  909  00001a0c  afbffff8	sw	-8(r29),r31; push ret addr
  910  00001a10  2fbd0018	subui	r29,r29,#24; alloc local storage
  911  00001a14  afa20000	sw	0(r29),r2
  912  00001a18  afa30004	sw	4(r29),r3
  913  00001a1c  afa40008	sw	8(r29),r4
  914  00001a20  83c20003	lb	r2,3(r30)
  915  00001a24  20010000	addi	r1,r0,#0
  916  00001a28  304300ff	andi	r3,r2,#0x00ff
  917  00001a2c  6c64002f	sgtui	r4,r3,#47
  918  00001a30  1080001c	beqz	r4,L7_LF2
  919  00001a34  54000000	nop; delay slot nop
  920  00001a38  304300ff	andi	r3,r2,#0x00ff
  921  00001a3c  70640039	sleui	r4,r3,#57
  922  00001a40  1480005c	bnez	r4,L6_LF2
  923  00001a44  54000000	nop; delay slot nop
  924  00001a48  08000004	j	L7_LF2
  925  00001a4c  54000000	nop; delay slot nop
  926  00001a50          	L7_LF2:
  927  00001a50  304300ff	andi	r3,r2,#0x00ff
  928  00001a54  6c640060	sgtui	r4,r3,#96
  929  00001a58  1080001c	beqz	r4,L8_LF2
  930  00001a5c  54000000	nop; delay slot nop
  931  00001a60  304300ff	andi	r3,r2,#0x00ff
  932  00001a64  70640066	sleui	r4,r3,#102
  933  00001a68  14800034	bnez	r4,L6_LF2
  934  00001a6c  54000000	nop; delay slot nop
  935  00001a70  08000004	j	L8_LF2
  936  00001a74  54000000	nop; delay slot nop
  937  00001a78          	L8_LF2:
  938  00001a78  304300ff	andi	r3,r2,#0x00ff
  939  00001a7c  6c640040	sgtui	r4,r3,#64
  940  00001a80  10800020	beqz	r4,L5_LF2
  941  00001a84  54000000	nop; delay slot nop
  942  00001a88  304300ff	andi	r3,r2,#0x00ff
  943  00001a8c  70640041	sleui	r4,r3,#65
  944  00001a90  1480000c	bnez	r4,L6_LF2
  945  00001a94  54000000	nop; delay slot nop
  946  00001a98  08000008	j	L5_LF2
  947  00001a9c  54000000	nop; delay slot nop
  948  00001aa0          	L6_LF2:
  949  00001aa0  20010001	addi	r1,r0,#1
  950  00001aa4          	L5_LF2:
  951  00001aa4  08000004	j	L4_LF2
  952  00001aa8  54000000	nop; delay slot nop
  953  00001aac          	L4_LF2:
  954  00001aac  8fa20000	lw	r2,0(r29)
  955  00001ab0  8fa30004	lw	r3,4(r29)
  956  00001ab4  8fa40008	lw	r4,8(r29)
  957  00001ab8  8fdffff8	lw	r31,-8(r30)
  958  00001abc  001ee820	add	r29,r0,r30
  959  00001ac0  8fdefffc	lw	r30,-4(r30)
  960  00001ac4  4be00000	jr	r31
  961  00001ac8  54000000	nop
  962  00001acc          	.endproc _isxdigit
  963  00001acc          	.align 2
  964  00001acc          	.proc _dstrcpy
  965  00001acc          	.global _dstrcpy
  966  00001acc          	_dstrcpy:
  967                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  968  00001acc  afbefffc	sw	-4(r29),r30; push fp
  969  00001ad0  001df020	add	r30,r0,r29; fp = sp
  970  00001ad4  afbffff8	sw	-8(r29),r31; push ret addr
  971  00001ad8  2fbd0018	subui	r29,r29,#24; alloc local storage
  972  00001adc  afa20000	sw	0(r29),r2
  973  00001ae0  afa30004	sw	4(r29),r3
  974  00001ae4  8fc10000	lw	r1,(r30)
  975  00001ae8  afc1fff4	sw	-12(r30),r1
  976  00001aec          	L10_LF2:
  977  00001aec  8fc10000	lw	r1,(r30)
  978  00001af0  20220001	addi	r2,r1,#1
  979  00001af4  afc20000	sw	(r30),r2
  980  00001af8  8fc20004	lw	r2,4(r30)
  981  00001afc  20430001	addi	r3,r2,#1
  982  00001b00  afc30004	sw	4(r30),r3
  983  00001b04  80420000	lb	r2,(r2)
  984  00001b08  a0220000	sb	(r1),r2
  985  00001b0c  a3c2fff3	sb	-13(r30),r2
  986  00001b10          	L12_LF2:
  987  00001b10  93c1fff3	lbu	r1,-13(r30)
  988  00001b14  64220000	snei	r2,r1,#0
  989  00001b18  1440000c	bnez	r2,L13_LF2
  990  00001b1c  54000000	nop; delay slot nop
  991  00001b20  0800000c	j	L11_LF2
  992  00001b24  54000000	nop; delay slot nop
  993  00001b28          	L13_LF2:
  994  00001b28  0bffffc0	j	L10_LF2
  995  00001b2c  54000000	nop; delay slot nop
  996  00001b30          	L11_LF2:
  997  00001b30  8fc1fff4	lw	r1,-12(r30)
  998  00001b34  08000004	j	L9_LF2
  999  00001b38  54000000	nop; delay slot nop
 1000  00001b3c          	L9_LF2:
 1001  00001b3c  8fa20000	lw	r2,0(r29)
 1002  00001b40  8fa30004	lw	r3,4(r29)
 1003  00001b44  8fdffff8	lw	r31,-8(r30)
 1004  00001b48  001ee820	add	r29,r0,r30
 1005  00001b4c  8fdefffc	lw	r30,-4(r30)
 1006  00001b50  4be00000	jr	r31
 1007  00001b54  54000000	nop
 1008  00001b58          	.endproc _dstrcpy
 1009  00001b58          	.align 2
 1010  00001b58          	.proc _dstrncpy
 1011  00001b58          	.global _dstrncpy
 1012  00001b58          	_dstrncpy:
 1013                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
 1014  00001b58  afbefffc	sw	-4(r29),r30; push fp
 1015  00001b5c  001df020	add	r30,r0,r29; fp = sp
 1016  00001b60  afbffff8	sw	-8(r29),r31; push ret addr
 1017  00001b64  2fbd0018	subui	r29,r29,#24; alloc local storage
 1018  00001b68  afa20000	sw	0(r29),r2
 1019  00001b6c  afa30004	sw	4(r29),r3
 1020  00001b70  8fc10000	lw	r1,(r30)
 1021  00001b74  afc1fff4	sw	-12(r30),r1
 1022  00001b78          	L15_LF2:
 1023  00001b78  8fc10008	lw	r1,8(r30)
 1024  00001b7c  2022ffff	addi	r2,r1,#-1
 1025  00001b80  afc20008	sw	8(r30),r2
 1026  00001b84  70210000	slei	r1,r1,#0
 1027  00001b88  1020000c	beqz	r1,L18_LF2
 1028  00001b8c  54000000	nop; delay slot nop
 1029  00001b90  08000048	j	L16_LF2
 1030  00001b94  54000000	nop; delay slot nop
 1031  00001b98          	L18_LF2:
 1032  00001b98  8fc10000	lw	r1,(r30)
 1033  00001b9c  20220001	addi	r2,r1,#1
 1034  00001ba0  afc20000	sw	(r30),r2
 1035  00001ba4  8fc20004	lw	r2,4(r30)
 1036  00001ba8  20430001	addi	r3,r2,#1
 1037  00001bac  afc30004	sw	4(r30),r3
 1038  00001bb0  80420000	lb	r2,(r2)
 1039  00001bb4  a0220000	sb	(r1),r2
 1040  00001bb8  a3c2fff3	sb	-13(r30),r2
 1041  00001bbc          	L17_LF2:
 1042  00001bbc  93c1fff3	lbu	r1,-13(r30)
 1043  00001bc0  64220000	snei	r2,r1,#0
 1044  00001bc4  1440000c	bnez	r2,L19_LF2
 1045  00001bc8  54000000	nop; delay slot nop
 1046  00001bcc  0800000c	j	L16_LF2
 1047  00001bd0  54000000	nop; delay slot nop
 1048  00001bd4          	L19_LF2:
 1049  00001bd4  0bffffa0	j	L15_LF2
 1050  00001bd8  54000000	nop; delay slot nop
 1051  00001bdc          	L16_LF2:
 1052  00001bdc  8fc1fff4	lw	r1,-12(r30)
 1053  00001be0  08000004	j	L14_LF2
 1054  00001be4  54000000	nop; delay slot nop
 1055  00001be8          	L14_LF2:
 1056  00001be8  8fa20000	lw	r2,0(r29)
 1057  00001bec  8fa30004	lw	r3,4(r29)
 1058  00001bf0  8fdffff8	lw	r31,-8(r30)
 1059  00001bf4  001ee820	add	r29,r0,r30
 1060  00001bf8  8fdefffc	lw	r30,-4(r30)
 1061  00001bfc  4be00000	jr	r31
 1062  00001c00  54000000	nop
 1063  00001c04          	.endproc _dstrncpy
 1064  00001c04          	.align 2
 1065  00001c04          	.proc _dstrcat
 1066  00001c04          	.global _dstrcat
 1067  00001c04          	_dstrcat:
 1068                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1069  00001c04  afbefffc	sw	-4(r29),r30; push fp
 1070  00001c08  001df020	add	r30,r0,r29; fp = sp
 1071  00001c0c  afbffff8	sw	-8(r29),r31; push ret addr
 1072  00001c10  2fbd0018	subui	r29,r29,#24; alloc local storage
 1073  00001c14  afa20000	sw	0(r29),r2
 1074  00001c18  8fc10000	lw	r1,(r30)
 1075  00001c1c  afc1fff4	sw	-12(r30),r1
 1076  00001c20          	L21_LF2:
 1077  00001c20  8fc10000	lw	r1,(r30)
 1078  00001c24  90220000	lbu	r2,(r1)
 1079  00001c28  64410000	snei	r1,r2,#0
 1080  00001c2c  1420000c	bnez	r1,L23_LF2
 1081  00001c30  54000000	nop; delay slot nop
 1082  00001c34  0800001c	j	L22_LF2
 1083  00001c38  54000000	nop; delay slot nop
 1084  00001c3c          	L23_LF2:
 1085  00001c3c  8fc20000	lw	r2,(r30)
 1086  00001c40  20410001	addi	r1,r2,#1
 1087  00001c44  00011020	add	r2,r0,r1
 1088  00001c48  afc20000	sw	(r30),r2
 1089  00001c4c  0bffffd0	j	L21_LF2
 1090  00001c50  54000000	nop; delay slot nop
 1091  00001c54          	L22_LF2:
 1092  00001c54  23bdfff8	addi	r29,r29,#-8
 1093  00001c58  001d0820	add	r1,r0,r29
 1094  00001c5c  8fc20000	lw	r2,(r30)
 1095  00001c60  ac220000	sw	(r1),r2
 1096  00001c64  8fc20004	lw	r2,4(r30)
 1097  00001c68  ac220004	sw	4(r1),r2
 1098  00001c6c  0ffffe5c	jal	_dstrcpy
 1099  00001c70  54000000	nop; delay slot nop
 1100  00001c74  23bd0008	addi	r29,r29,#8
 1101  00001c78  8fc1fff4	lw	r1,-12(r30)
 1102  00001c7c  08000004	j	L20_LF2
 1103  00001c80  54000000	nop; delay slot nop
 1104  00001c84          	L20_LF2:
 1105  00001c84  8fa20000	lw	r2,0(r29)
 1106  00001c88  8fdffff8	lw	r31,-8(r30)
 1107  00001c8c  001ee820	add	r29,r0,r30
 1108  00001c90  8fdefffc	lw	r30,-4(r30)
 1109  00001c94  4be00000	jr	r31
 1110  00001c98  54000000	nop
 1111  00001c9c          	.endproc _dstrcat
 1112  00001c9c          	.align 2
 1113  00001c9c          	.proc _dstrncmp
 1114  00001c9c          	.global _dstrncmp
 1115  00001c9c          	_dstrncmp:
 1116                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1117  00001c9c  afbefffc	sw	-4(r29),r30; push fp
 1118  00001ca0  001df020	add	r30,r0,r29; fp = sp
 1119  00001ca4  afbffff8	sw	-8(r29),r31; push ret addr
 1120  00001ca8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1121  00001cac  afa20000	sw	0(r29),r2
 1122  00001cb0  afa30004	sw	4(r29),r3
 1123  00001cb4  54000000	nop
 1124  00001cb8  20010000	addi	r1,r0,#0
 1125  00001cbc  afc1fff4	sw	-12(r30),r1
 1126  00001cc0          	L25_LF2:
 1127  00001cc0  8fc1fff4	lw	r1,-12(r30)
 1128  00001cc4  8fc20008	lw	r2,8(r30)
 1129  00001cc8  0022082a	slt	r1,r1,r2
 1130  00001ccc  1420000c	bnez	r1,L28_LF2
 1131  00001cd0  54000000	nop; delay slot nop
 1132  00001cd4  08000088	j	L26_LF2
 1133  00001cd8  54000000	nop; delay slot nop
 1134  00001cdc          	L28_LF2:
 1135  00001cdc  8fc10004	lw	r1,4(r30)
 1136  00001ce0  90220000	lbu	r2,(r1)
 1137  00001ce4  64410000	snei	r1,r2,#0
 1138  00001ce8  14200018	bnez	r1,L29_LF2
 1139  00001cec  54000000	nop; delay slot nop
 1140  00001cf0  20010000	addi	r1,r0,#0
 1141  00001cf4  080000d8	j	L24_LF2
 1142  00001cf8  54000000	nop; delay slot nop
 1143  00001cfc  08000028	j	L30_LF2
 1144  00001d00  54000000	nop; delay slot nop
 1145  00001d04          	L29_LF2:
 1146  00001d04  8fc10000	lw	r1,(r30)
 1147  00001d08  8fc20004	lw	r2,4(r30)
 1148  00001d0c  90210000	lbu	r1,(r1)
 1149  00001d10  90420000	lbu	r2,(r2)
 1150  00001d14  00220829	sne	r1,r1,r2
 1151  00001d18  1020000c	beqz	r1,L30_LF2
 1152  00001d1c  54000000	nop; delay slot nop
 1153  00001d20  0800003c	j	L26_LF2
 1154  00001d24  54000000	nop; delay slot nop
 1155  00001d28          	L31_LF2:
 1156  00001d28          	L30_LF2:
 1157  00001d28  8fc20000	lw	r2,(r30)
 1158  00001d2c  20410001	addi	r1,r2,#1
 1159  00001d30  00011020	add	r2,r0,r1
 1160  00001d34  afc20000	sw	(r30),r2
 1161  00001d38  8fc20004	lw	r2,4(r30)
 1162  00001d3c  20410001	addi	r1,r2,#1
 1163  00001d40  00011020	add	r2,r0,r1
 1164  00001d44  afc20004	sw	4(r30),r2
 1165  00001d48          	L27_LF2:
 1166  00001d48  8fc2fff4	lw	r2,-12(r30)
 1167  00001d4c  20410001	addi	r1,r2,#1
 1168  00001d50  00011020	add	r2,r0,r1
 1169  00001d54  afc2fff4	sw	-12(r30),r2
 1170  00001d58  0bffff64	j	L25_LF2
 1171  00001d5c  54000000	nop; delay slot nop
 1172  00001d60          	L26_LF2:
 1173  00001d60  8fc1fff4	lw	r1,-12(r30)
 1174  00001d64  8fc20008	lw	r2,8(r30)
 1175  00001d68  00220828	seq	r1,r1,r2
 1176  00001d6c  10200018	beqz	r1,L32_LF2
 1177  00001d70  54000000	nop; delay slot nop
 1178  00001d74  20010000	addi	r1,r0,#0
 1179  00001d78  08000054	j	L24_LF2
 1180  00001d7c  54000000	nop; delay slot nop
 1181  00001d80  0800004c	j	L33_LF2
 1182  00001d84  54000000	nop; delay slot nop
 1183  00001d88          	L32_LF2:
 1184  00001d88  8fc20000	lw	r2,(r30)
 1185  00001d8c  90410000	lbu	r1,(r2)
 1186  00001d90  8fc20004	lw	r2,4(r30)
 1187  00001d94  90430000	lbu	r3,(r2)
 1188  00001d98  00230822	sub	r1,r1,r3
 1189  00001d9c  74220000	sgei	r2,r1,#0
 1190  00001da0  10400020	beqz	r2,L34_LF2
 1191  00001da4  54000000	nop; delay slot nop
 1192  00001da8  8fc10000	lw	r1,(r30)
 1193  00001dac  8fc20004	lw	r2,4(r30)
 1194  00001db0  90210000	lbu	r1,(r1)
 1195  00001db4  90420000	lbu	r2,(r2)
 1196  00001db8  00220829	sne	r1,r1,r2
 1197  00001dbc  08000008	j	L35_LF2
 1198  00001dc0  54000000	nop; delay slot nop
 1199  00001dc4          	L34_LF2:
 1200  00001dc4  2001ffff	addi	r1,r0,#-1
 1201  00001dc8          	L35_LF2:
 1202  00001dc8  08000004	j	L24_LF2
 1203  00001dcc  54000000	nop; delay slot nop
 1204  00001dd0          	L33_LF2:
 1205  00001dd0          	L24_LF2:
 1206  00001dd0  8fa20000	lw	r2,0(r29)
 1207  00001dd4  8fa30004	lw	r3,4(r29)
 1208  00001dd8  8fdffff8	lw	r31,-8(r30)
 1209  00001ddc  001ee820	add	r29,r0,r30
 1210  00001de0  8fdefffc	lw	r30,-4(r30)
 1211  00001de4  4be00000	jr	r31
 1212  00001de8  54000000	nop
 1213  00001dec          	.endproc _dstrncmp
 1214  00001dec          	.align 2
 1215  00001dec          	.proc _dstrlen
 1216  00001dec          	.global _dstrlen
 1217  00001dec          	_dstrlen:
 1218                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1219  00001dec  afbefffc	sw	-4(r29),r30; push fp
 1220  00001df0  001df020	add	r30,r0,r29; fp = sp
 1221  00001df4  afbffff8	sw	-8(r29),r31; push ret addr
 1222  00001df8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1223  00001dfc  afa20000	sw	0(r29),r2
 1224  00001e00  20010000	addi	r1,r0,#0
 1225  00001e04  afc1fff4	sw	-12(r30),r1
 1226  00001e08          	L37_LF2:
 1227  00001e08  8fc10000	lw	r1,(r30)
 1228  00001e0c  20220001	addi	r2,r1,#1
 1229  00001e10  afc20000	sw	(r30),r2
 1230  00001e14  90210000	lbu	r1,(r1)
 1231  00001e18  64220000	snei	r2,r1,#0
 1232  00001e1c  1440000c	bnez	r2,L39_LF2
 1233  00001e20  54000000	nop; delay slot nop
 1234  00001e24  0800001c	j	L38_LF2
 1235  00001e28  54000000	nop; delay slot nop
 1236  00001e2c          	L39_LF2:
 1237  00001e2c  8fc2fff4	lw	r2,-12(r30)
 1238  00001e30  20410001	addi	r1,r2,#1
 1239  00001e34  00011020	add	r2,r0,r1
 1240  00001e38  afc2fff4	sw	-12(r30),r2
 1241  00001e3c  0bffffc8	j	L37_LF2
 1242  00001e40  54000000	nop; delay slot nop
 1243  00001e44          	L38_LF2:
 1244  00001e44  8fc1fff4	lw	r1,-12(r30)
 1245  00001e48  08000004	j	L36_LF2
 1246  00001e4c  54000000	nop; delay slot nop
 1247  00001e50          	L36_LF2:
 1248  00001e50  8fa20000	lw	r2,0(r29)
 1249  00001e54  8fdffff8	lw	r31,-8(r30)
 1250  00001e58  001ee820	add	r29,r0,r30
 1251  00001e5c  8fdefffc	lw	r30,-4(r30)
 1252  00001e60  4be00000	jr	r31
 1253  00001e64  54000000	nop
 1254  00001e68          	.endproc _dstrlen
 1255  00001e68          	.align 2
 1256  00001e68          	.proc _dstrstr
 1257  00001e68          	.global _dstrstr
 1258  00001e68          	_dstrstr:
 1259                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1260  00001e68  afbefffc	sw	-4(r29),r30; push fp
 1261  00001e6c  001df020	add	r30,r0,r29; fp = sp
 1262  00001e70  afbffff8	sw	-8(r29),r31; push ret addr
 1263  00001e74  2fbd0018	subui	r29,r29,#24; alloc local storage
 1264  00001e78  afa20000	sw	0(r29),r2
 1265  00001e7c  23bdfff8	addi	r29,r29,#-8
 1266  00001e80  001d0820	add	r1,r0,r29
 1267  00001e84  8fc20004	lw	r2,4(r30)
 1268  00001e88  ac220000	sw	(r1),r2
 1269  00001e8c  0fffff5c	jal	_dstrlen
 1270  00001e90  54000000	nop; delay slot nop
 1271  00001e94  23bd0008	addi	r29,r29,#8
 1272  00001e98  afc1fff4	sw	-12(r30),r1
 1273  00001e9c          	L41_LF2:
 1274  00001e9c  8fc10000	lw	r1,(r30)
 1275  00001ea0  90220000	lbu	r2,(r1)
 1276  00001ea4  64410000	snei	r1,r2,#0
 1277  00001ea8  1420000c	bnez	r1,L43_LF2
 1278  00001eac  54000000	nop; delay slot nop
 1279  00001eb0  08000060	j	L42_LF2
 1280  00001eb4  54000000	nop; delay slot nop
 1281  00001eb8          	L43_LF2:
 1282  00001eb8  23bdfff0	addi	r29,r29,#-16
 1283  00001ebc  001d0820	add	r1,r0,r29
 1284  00001ec0  8fc20000	lw	r2,(r30)
 1285  00001ec4  ac220000	sw	(r1),r2
 1286  00001ec8  8fc20004	lw	r2,4(r30)
 1287  00001ecc  ac220004	sw	4(r1),r2
 1288  00001ed0  8fc2fff4	lw	r2,-12(r30)
 1289  00001ed4  ac220008	sw	8(r1),r2
 1290  00001ed8  0ffffdc0	jal	_dstrncmp
 1291  00001edc  54000000	nop; delay slot nop
 1292  00001ee0  23bd0010	addi	r29,r29,#16
 1293  00001ee4  64220000	snei	r2,r1,#0
 1294  00001ee8  14400010	bnez	r2,L44_LF2
 1295  00001eec  54000000	nop; delay slot nop
 1296  00001ef0  8fc10000	lw	r1,(r30)
 1297  00001ef4  08000028	j	L40_LF2
 1298  00001ef8  54000000	nop; delay slot nop
 1299  00001efc          	L44_LF2:
 1300  00001efc  8fc20000	lw	r2,(r30)
 1301  00001f00  20410001	addi	r1,r2,#1
 1302  00001f04  00011020	add	r2,r0,r1
 1303  00001f08  afc20000	sw	(r30),r2
 1304  00001f0c  0bffff8c	j	L41_LF2
 1305  00001f10  54000000	nop; delay slot nop
 1306  00001f14          	L42_LF2:
 1307  00001f14  20010000	addi	r1,r0,#0
 1308  00001f18  08000004	j	L40_LF2
 1309  00001f1c  54000000	nop; delay slot nop
 1310  00001f20          	L40_LF2:
 1311  00001f20  8fa20000	lw	r2,0(r29)
 1312  00001f24  8fdffff8	lw	r31,-8(r30)
 1313  00001f28  001ee820	add	r29,r0,r30
 1314  00001f2c  8fdefffc	lw	r30,-4(r30)
 1315  00001f30  4be00000	jr	r31
 1316  00001f34  54000000	nop
 1317  00001f38          	.endproc _dstrstr
 1318  00001f38          	.align 2
 1319  00001f38          	.proc _dmindex
 1320  00001f38          	.global _dmindex
 1321  00001f38          	_dmindex:
 1322                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1323  00001f38  afbefffc	sw	-4(r29),r30; push fp
 1324  00001f3c  001df020	add	r30,r0,r29; fp = sp
 1325  00001f40  afbffff8	sw	-8(r29),r31; push ret addr
 1326  00001f44  2fbd0018	subui	r29,r29,#24; alloc local storage
 1327  00001f48  afa20000	sw	0(r29),r2
 1328  00001f4c  54000000	nop
 1329  00001f50          	L46_LF2:
 1330  00001f50  8fc10000	lw	r1,(r30)
 1331  00001f54  90220000	lbu	r2,(r1)
 1332  00001f58  64410000	snei	r1,r2,#0
 1333  00001f5c  1420000c	bnez	r1,L48_LF2
 1334  00001f60  54000000	nop; delay slot nop
 1335  00001f64  08000070	j	L47_LF2
 1336  00001f68  54000000	nop; delay slot nop
 1337  00001f6c          	L48_LF2:
 1338  00001f6c  8fc10004	lw	r1,4(r30)
 1339  00001f70  afc1fff4	sw	-12(r30),r1
 1340  00001f74          	L49_LF2:
 1341  00001f74  8fc1fff4	lw	r1,-12(r30)
 1342  00001f78  90220000	lbu	r2,(r1)
 1343  00001f7c  64410000	snei	r1,r2,#0
 1344  00001f80  1420000c	bnez	r1,L52_LF2
 1345  00001f84  54000000	nop; delay slot nop
 1346  00001f88  08000044	j	L50_LF2
 1347  00001f8c  54000000	nop; delay slot nop
 1348  00001f90          	L52_LF2:
 1349  00001f90  8fc10000	lw	r1,(r30)
 1350  00001f94  8fc2fff4	lw	r2,-12(r30)
 1351  00001f98  90210000	lbu	r1,(r1)
 1352  00001f9c  90420000	lbu	r2,(r2)
 1353  00001fa0  00220828	seq	r1,r1,r2
 1354  00001fa4  10200010	beqz	r1,L51_LF2
 1355  00001fa8  54000000	nop; delay slot nop
 1356  00001fac  8fc10000	lw	r1,(r30)
 1357  00001fb0  08000030	j	L45_LF2
 1358  00001fb4  54000000	nop; delay slot nop
 1359  00001fb8          	L53_LF2:
 1360  00001fb8          	L51_LF2:
 1361  00001fb8  8fc2fff4	lw	r2,-12(r30)
 1362  00001fbc  20410001	addi	r1,r2,#1
 1363  00001fc0  00011020	add	r2,r0,r1
 1364  00001fc4  afc2fff4	sw	-12(r30),r2
 1365  00001fc8  0bffffa8	j	L49_LF2
 1366  00001fcc  54000000	nop; delay slot nop
 1367  00001fd0          	L50_LF2:
 1368  00001fd0  0bffff7c	j	L46_LF2
 1369  00001fd4  54000000	nop; delay slot nop
 1370  00001fd8          	L47_LF2:
 1371  00001fd8  20010000	addi	r1,r0,#0
 1372  00001fdc  08000004	j	L45_LF2
 1373  00001fe0  54000000	nop; delay slot nop
 1374  00001fe4          	L45_LF2:
 1375  00001fe4  8fa20000	lw	r2,0(r29)
 1376  00001fe8  8fdffff8	lw	r31,-8(r30)
 1377  00001fec  001ee820	add	r29,r0,r30
 1378  00001ff0  8fdefffc	lw	r30,-4(r30)
 1379  00001ff4  4be00000	jr	r31
 1380  00001ff8  54000000	nop
 1381  00001ffc          	.endproc _dmindex
 1382  00001ffc          	.align 2
 1383  00001ffc          	.proc _dindex
 1384  00001ffc          	.global _dindex
 1385  00001ffc          	_dindex:
 1386                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1387  00001ffc  afbefffc	sw	-4(r29),r30; push fp
 1388  00002000  001df020	add	r30,r0,r29; fp = sp
 1389  00002004  afbffff8	sw	-8(r29),r31; push ret addr
 1390  00002008  2fbd0010	subui	r29,r29,#16; alloc local storage
 1391  0000200c  afa20000	sw	0(r29),r2
 1392  00002010  54000000	nop
 1393  00002014          	L55_LF2:
 1394  00002014  8fc10000	lw	r1,(r30)
 1395  00002018  90220000	lbu	r2,(r1)
 1396  0000201c  64410000	snei	r1,r2,#0
 1397  00002020  1420000c	bnez	r1,L57_LF2
 1398  00002024  54000000	nop; delay slot nop
 1399  00002028  08000040	j	L56_LF2
 1400  0000202c  54000000	nop; delay slot nop
 1401  00002030          	L57_LF2:
 1402  00002030  8fc10000	lw	r1,(r30)
 1403  00002034  90220000	lbu	r2,(r1)
 1404  00002038  8fc10004	lw	r1,4(r30)
 1405  0000203c  00411028	seq	r2,r2,r1
 1406  00002040  10400010	beqz	r2,L58_LF2
 1407  00002044  54000000	nop; delay slot nop
 1408  00002048  8fc10000	lw	r1,(r30)
 1409  0000204c  08000028	j	L54_LF2
 1410  00002050  54000000	nop; delay slot nop
 1411  00002054          	L58_LF2:
 1412  00002054  8fc20000	lw	r2,(r30)
 1413  00002058  20410001	addi	r1,r2,#1
 1414  0000205c  00011020	add	r2,r0,r1
 1415  00002060  afc20000	sw	(r30),r2
 1416  00002064  0bffffac	j	L55_LF2
 1417  00002068  54000000	nop; delay slot nop
 1418  0000206c          	L56_LF2:
 1419  0000206c  20010000	addi	r1,r0,#0
 1420  00002070  08000004	j	L54_LF2
 1421  00002074  54000000	nop; delay slot nop
 1422  00002078          	L54_LF2:
 1423  00002078  8fa20000	lw	r2,0(r29)
 1424  0000207c  8fdffff8	lw	r31,-8(r30)
 1425  00002080  001ee820	add	r29,r0,r30
 1426  00002084  8fdefffc	lw	r30,-4(r30)
 1427  00002088  4be00000	jr	r31
 1428  0000208c  54000000	nop
 1429  00002090          	.endproc _dindex
 1430  00002090          	.align 2
 1431  00002090          	.proc _ditoa
 1432  00002090          	.global _ditoa
 1433  00002090          	_ditoa:
 1434                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1435  00002090  afbefffc	sw	-4(r29),r30; push fp
 1436  00002094  001df020	add	r30,r0,r29; fp = sp
 1437  00002098  afbffff8	sw	-8(r29),r31; push ret addr
 1438  0000209c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1439  000020a0  afa20000	sw	0(r29),r2
 1440  000020a4  afa30004	sw	4(r29),r3
 1441  000020a8  8fc10000	lw	r1,(r30)
 1442  000020ac  68220000	slti	r2,r1,#0
 1443  000020b0  1040002c	beqz	r2,L60_LF2
 1444  000020b4  54000000	nop; delay slot nop
 1445  000020b8  8fc10004	lw	r1,4(r30)
 1446  000020bc  20220001	addi	r2,r1,#1
 1447  000020c0  afc20004	sw	4(r30),r2
 1448  000020c4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1449  000020c8  a0220000	sb	(r1),r2
 1450  000020cc  8fc10000	lw	r1,(r30)
 1451  000020d0  00011022	sub	r2,r0,r1
 1452  000020d4  afc20000	sw	(r30),r2
 1453  000020d8  08000118	j	L61_LF2
 1454  000020dc  54000000	nop; delay slot nop
 1455  000020e0          	L60_LF2:
 1456  000020e0  8fc10000	lw	r1,(r30)
 1457  000020e4  64220000	snei	r2,r1,#0
 1458  000020e8  14400020	bnez	r2,L62_LF2
 1459  000020ec  54000000	nop; delay slot nop
 1460  000020f0  8fc10004	lw	r1,4(r30)
 1461  000020f4  20220001	addi	r2,r1,#1
 1462  000020f8  afc20004	sw	4(r30),r2
 1463  000020fc  20020030	addi	r2,r0,(#0x30)&0xff
 1464  00002100  a0220000	sb	(r1),r2
 1465  00002104  080000ec	j	L61_LF2
 1466  00002108  54000000	nop; delay slot nop
 1467  0000210c          	L62_LF2:
 1468  0000210c  20010001	addi	r1,r0,#1
 1469  00002110  afc1fff4	sw	-12(r30),r1
 1470  00002114          	L64_LF2:
 1471  00002114  8fc1fff4	lw	r1,-12(r30)
 1472  00002118  8fc20000	lw	r2,(r30)
 1473  0000211c  0022082c	sle	r1,r1,r2
 1474  00002120  1420000c	bnez	r1,L66_LF2
 1475  00002124  54000000	nop; delay slot nop
 1476  00002128  08000024	j	L65_LF2
 1477  0000212c  54000000	nop; delay slot nop
 1478  00002130          	L67_LF2:
 1479  00002130          	L66_LF2:
 1480  00002130  8fc1fff4	lw	r1,-12(r30)
 1481  00002134  00011820	add	r3,r0,r1
 1482  00002138  50620002	slli	r2,r3,#0x2
 1483  0000213c  00411020	add	r2,r2,r1
 1484  00002140  50410001	slli	r1,r2,#0x1
 1485  00002144  afc1fff4	sw	-12(r30),r1
 1486  00002148  0bffffc8	j	L64_LF2
 1487  0000214c  54000000	nop; delay slot nop
 1488  00002150          	L65_LF2:
 1489  00002150  54000000	nop
 1490  00002154          	L68_LF2:
 1491  00002154  8fc1fff4	lw	r1,-12(r30)
 1492  00002158  2002000a	addi	r2,r0,#10
 1493  0000215c  00200035	movi2fp	f0,r1
 1494  00002160  00400835	movi2fp	f1,r2
 1495  00002164  0401000f	div	f0,f0,f1
 1496  00002168  00000834	movfp2i	r1,f0
 1497  0000216c  afc1fff4	sw	-12(r30),r1
 1498  00002170  8fc10004	lw	r1,4(r30)
 1499  00002174  20220001	addi	r2,r1,#1
 1500  00002178  afc20004	sw	4(r30),r2
 1501  0000217c  8fc20000	lw	r2,(r30)
 1502  00002180  8fc3fff4	lw	r3,-12(r30)
 1503  00002184  00400035	movi2fp	f0,r2
 1504  00002188  00600835	movi2fp	f1,r3
 1505  0000218c  0401000f	div	f0,f0,f1
 1506  00002190  00001034	movfp2i	r2,f0
 1507  00002194  00021820	add	r3,r0,r2
 1508  00002198  20620030	addi	r2,r3,#48
 1509  0000219c  a0220000	sb	(r1),r2
 1510  000021a0  8fc10000	lw	r1,(r30)
 1511  000021a4  8fc3fff4	lw	r3,-12(r30)
 1512  000021a8  00200035	movi2fp	f0,r1
 1513  000021ac  00600835	movi2fp	f1,r3
 1514  000021b0  0401000f	div	f0,f0,f1
 1515  000021b4  00001034	movfp2i	r2,f0
 1516  000021b8  8fc3fff4	lw	r3,-12(r30)
 1517  000021bc  00400035	movi2fp	f0,r2
 1518  000021c0  00600835	movi2fp	f1,r3
 1519  000021c4  0401000e	mult	f0,f0,f1
 1520  000021c8  00001034	movfp2i	r2,f0
 1521  000021cc  00220822	sub	r1,r1,r2
 1522  000021d0  afc10000	sw	(r30),r1
 1523  000021d4          	L70_LF2:
 1524  000021d4  8fc1fff4	lw	r1,-12(r30)
 1525  000021d8  6c220001	sgti	r2,r1,#1
 1526  000021dc  1440000c	bnez	r2,L71_LF2
 1527  000021e0  54000000	nop; delay slot nop
 1528  000021e4  0800000c	j	L61_LF2
 1529  000021e8  54000000	nop; delay slot nop
 1530  000021ec          	L71_LF2:
 1531  000021ec  0bffff64	j	L68_LF2
 1532  000021f0  54000000	nop; delay slot nop
 1533  000021f4          	L69_LF2:
 1534  000021f4          	L63_LF2:
 1535  000021f4          	L61_LF2:
 1536  000021f4  8fc10004	lw	r1,4(r30)
 1537  000021f8  20020000	addi	r2,r0,(#0x0)&0xff
 1538  000021fc  a0220000	sb	(r1),r2
 1539  00002200          	L59_LF2:
 1540  00002200  8fa20000	lw	r2,0(r29)
 1541  00002204  8fa30004	lw	r3,4(r29)
 1542  00002208  8fdffff8	lw	r31,-8(r30)
 1543  0000220c  001ee820	add	r29,r0,r30
 1544  00002210  8fdefffc	lw	r30,-4(r30)
 1545  00002214  4be00000	jr	r31
 1546  00002218  54000000	nop
 1547  0000221c          	.endproc _ditoa
 1548  0000221c          	.align 2
 1549  0000221c          	.proc _dstrtol
 1550  0000221c          	.global _dstrtol
 1551  0000221c          	_dstrtol:
 1552                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1553  0000221c  afbefffc	sw	-4(r29),r30; push fp
 1554  00002220  001df020	add	r30,r0,r29; fp = sp
 1555  00002224  afbffff8	sw	-8(r29),r31; push ret addr
 1556  00002228  2fbd0020	subui	r29,r29,#32; alloc local storage
 1557  0000222c  afa20000	sw	0(r29),r2
 1558  00002230  20010000	addi	r1,r0,#0
 1559  00002234  afc1fff4	sw	-12(r30),r1
 1560  00002238          	L73_LF2:
 1561  00002238  8fc10000	lw	r1,(r30)
 1562  0000223c  90220000	lbu	r2,(r1)
 1563  00002240  60410020	seqi	r1,r2,#32
 1564  00002244  14200034	bnez	r1,L75_LF2
 1565  00002248  54000000	nop; delay slot nop
 1566  0000224c  8fc10000	lw	r1,(r30)
 1567  00002250  90220000	lbu	r2,(r1)
 1568  00002254  60410009	seqi	r1,r2,#9
 1569  00002258  14200020	bnez	r1,L75_LF2
 1570  0000225c  54000000	nop; delay slot nop
 1571  00002260  8fc10000	lw	r1,(r30)
 1572  00002264  90220000	lbu	r2,(r1)
 1573  00002268  6041000a	seqi	r1,r2,#10
 1574  0000226c  1420000c	bnez	r1,L75_LF2
 1575  00002270  54000000	nop; delay slot nop
 1576  00002274  0800001c	j	L74_LF2
 1577  00002278  54000000	nop; delay slot nop
 1578  0000227c          	L75_LF2:
 1579  0000227c  8fc20000	lw	r2,(r30)
 1580  00002280  20410001	addi	r1,r2,#1
 1581  00002284  00011020	add	r2,r0,r1
 1582  00002288  afc20000	sw	(r30),r2
 1583  0000228c  0bffffa8	j	L73_LF2
 1584  00002290  54000000	nop; delay slot nop
 1585  00002294          	L74_LF2:
 1586  00002294  8fc10004	lw	r1,4(r30)
 1587  00002298  64220000	snei	r2,r1,#0
 1588  0000229c  10400010	beqz	r2,L76_LF2
 1589  000022a0  54000000	nop; delay slot nop
 1590  000022a4  8fc10004	lw	r1,4(r30)
 1591  000022a8  8fc20000	lw	r2,(r30)
 1592  000022ac  ac220000	sw	(r1),r2
 1593  000022b0          	L76_LF2:
 1594  000022b0  8fc10000	lw	r1,(r30)
 1595  000022b4  90220000	lbu	r2,(r1)
 1596  000022b8  64410000	snei	r1,r2,#0
 1597  000022bc  14200010	bnez	r1,L77_LF2
 1598  000022c0  54000000	nop; delay slot nop
 1599  000022c4  8fc1fff4	lw	r1,-12(r30)
 1600  000022c8  08000294	j	L72_LF2
 1601  000022cc  54000000	nop; delay slot nop
 1602  000022d0          	L77_LF2:
 1603  000022d0  8fc10000	lw	r1,(r30)
 1604  000022d4  90220000	lbu	r2,(r1)
 1605  000022d8  6041002d	seqi	r1,r2,#45
 1606  000022dc  10200024	beqz	r1,L78_LF2
 1607  000022e0  54000000	nop; delay slot nop
 1608  000022e4  2001ffff	addi	r1,r0,#-1
 1609  000022e8  afc1ffec	sw	-20(r30),r1
 1610  000022ec  8fc20000	lw	r2,(r30)
 1611  000022f0  20410001	addi	r1,r2,#1
 1612  000022f4  00011020	add	r2,r0,r1
 1613  000022f8  afc20000	sw	(r30),r2
 1614  000022fc  0800000c	j	L79_LF2
 1615  00002300  54000000	nop; delay slot nop
 1616  00002304          	L78_LF2:
 1617  00002304  20010001	addi	r1,r0,#1
 1618  00002308  afc1ffec	sw	-20(r30),r1
 1619  0000230c          	L79_LF2:
 1620  0000230c  8fc10008	lw	r1,8(r30)
 1621  00002310  64220000	snei	r2,r1,#0
 1622  00002314  14400090	bnez	r2,L80_LF2
 1623  00002318  54000000	nop; delay slot nop
 1624  0000231c  8fc10000	lw	r1,(r30)
 1625  00002320  90220000	lbu	r2,(r1)
 1626  00002324  60410030	seqi	r1,r2,#48
 1627  00002328  10200074	beqz	r1,L81_LF2
 1628  0000232c  54000000	nop; delay slot nop
 1629  00002330  8fc20000	lw	r2,(r30)
 1630  00002334  20410001	addi	r1,r2,#1
 1631  00002338  00011020	add	r2,r0,r1
 1632  0000233c  afc20000	sw	(r30),r2
 1633  00002340  8fc10000	lw	r1,(r30)
 1634  00002344  90220000	lbu	r2,(r1)
 1635  00002348  60410078	seqi	r1,r2,#120
 1636  0000234c  14200020	bnez	r1,L83_LF2
 1637  00002350  54000000	nop; delay slot nop
 1638  00002354  8fc10000	lw	r1,(r30)
 1639  00002358  90220000	lbu	r2,(r1)
 1640  0000235c  60410058	seqi	r1,r2,#88
 1641  00002360  1420000c	bnez	r1,L83_LF2
 1642  00002364  54000000	nop; delay slot nop
 1643  00002368  08000024	j	L82_LF2
 1644  0000236c  54000000	nop; delay slot nop
 1645  00002370          	L83_LF2:
 1646  00002370  20010010	addi	r1,r0,#16
 1647  00002374  afc10008	sw	8(r30),r1
 1648  00002378  8fc20000	lw	r2,(r30)
 1649  0000237c  20410001	addi	r1,r2,#1
 1650  00002380  00011020	add	r2,r0,r1
 1651  00002384  afc20000	sw	(r30),r2
 1652  00002388  0800000c	j	L84_LF2
 1653  0000238c  54000000	nop; delay slot nop
 1654  00002390          	L82_LF2:
 1655  00002390  20010008	addi	r1,r0,#8
 1656  00002394  afc10008	sw	8(r30),r1
 1657  00002398          	L84_LF2:
 1658  00002398  0800000c	j	L80_LF2
 1659  0000239c  54000000	nop; delay slot nop
 1660  000023a0          	L81_LF2:
 1661  000023a0  2001000a	addi	r1,r0,#10
 1662  000023a4  afc10008	sw	8(r30),r1
 1663  000023a8          	L85_LF2:
 1664  000023a8          	L80_LF2:
 1665  000023a8  8fc10008	lw	r1,8(r30)
 1666  000023ac  70220000	slei	r2,r1,#0
 1667  000023b0  1440001c	bnez	r2,L87_LF2
 1668  000023b4  54000000	nop; delay slot nop
 1669  000023b8  8fc10008	lw	r1,8(r30)
 1670  000023bc  6c220010	sgti	r2,r1,#16
 1671  000023c0  1440000c	bnez	r2,L87_LF2
 1672  000023c4  54000000	nop; delay slot nop
 1673  000023c8  08000010	j	L86_LF2
 1674  000023cc  54000000	nop; delay slot nop
 1675  000023d0          	L87_LF2:
 1676  000023d0  8fc1fff4	lw	r1,-12(r30)
 1677  000023d4  08000188	j	L72_LF2
 1678  000023d8  54000000	nop; delay slot nop
 1679  000023dc          	L86_LF2:
 1680  000023dc  54000000	nop
 1681  000023e0          	L88_LF2:
 1682  000023e0  8fc10000	lw	r1,(r30)
 1683  000023e4  90220000	lbu	r2,(r1)
 1684  000023e8  6c41002f	sgtui	r1,r2,#47
 1685  000023ec  10200030	beqz	r1,L91_LF2
 1686  000023f0  54000000	nop; delay slot nop
 1687  000023f4  8fc10000	lw	r1,(r30)
 1688  000023f8  90220000	lbu	r2,(r1)
 1689  000023fc  70410039	sleui	r1,r2,#57
 1690  00002400  1020001c	beqz	r1,L91_LF2
 1691  00002404  54000000	nop; delay slot nop
 1692  00002408  8fc10000	lw	r1,(r30)
 1693  0000240c  90220000	lbu	r2,(r1)
 1694  00002410  2041ffd0	addi	r1,r2,#-48
 1695  00002414  afc1fff0	sw	-16(r30),r1
 1696  00002418  0800008c	j	L92_LF2
 1697  0000241c  54000000	nop; delay slot nop
 1698  00002420          	L91_LF2:
 1699  00002420  8fc10000	lw	r1,(r30)
 1700  00002424  90220000	lbu	r2,(r1)
 1701  00002428  6c410060	sgtui	r1,r2,#96
 1702  0000242c  10200030	beqz	r1,L93_LF2
 1703  00002430  54000000	nop; delay slot nop
 1704  00002434  8fc10000	lw	r1,(r30)
 1705  00002438  90220000	lbu	r2,(r1)
 1706  0000243c  7041007a	sleui	r1,r2,#122
 1707  00002440  1020001c	beqz	r1,L93_LF2
 1708  00002444  54000000	nop; delay slot nop
 1709  00002448  8fc10000	lw	r1,(r30)
 1710  0000244c  90220000	lbu	r2,(r1)
 1711  00002450  2041ffa9	addi	r1,r2,#-87
 1712  00002454  afc1fff0	sw	-16(r30),r1
 1713  00002458  0800004c	j	L92_LF2
 1714  0000245c  54000000	nop; delay slot nop
 1715  00002460          	L93_LF2:
 1716  00002460  8fc10000	lw	r1,(r30)
 1717  00002464  90220000	lbu	r2,(r1)
 1718  00002468  6c410040	sgtui	r1,r2,#64
 1719  0000246c  10200030	beqz	r1,L95_LF2
 1720  00002470  54000000	nop; delay slot nop
 1721  00002474  8fc10000	lw	r1,(r30)
 1722  00002478  90220000	lbu	r2,(r1)
 1723  0000247c  7041005a	sleui	r1,r2,#90
 1724  00002480  1020001c	beqz	r1,L95_LF2
 1725  00002484  54000000	nop; delay slot nop
 1726  00002488  8fc10000	lw	r1,(r30)
 1727  0000248c  90220000	lbu	r2,(r1)
 1728  00002490  2041ffc9	addi	r1,r2,#-55
 1729  00002494  afc1fff0	sw	-16(r30),r1
 1730  00002498  0800000c	j	L92_LF2
 1731  0000249c  54000000	nop; delay slot nop
 1732  000024a0          	L95_LF2:
 1733  000024a0  200103e8	addi	r1,r0,#1000
 1734  000024a4  afc1fff0	sw	-16(r30),r1
 1735  000024a8          	L96_LF2:
 1736  000024a8          	L94_LF2:
 1737  000024a8          	L92_LF2:
 1738  000024a8  8fc1fff0	lw	r1,-16(r30)
 1739  000024ac  8fc20008	lw	r2,8(r30)
 1740  000024b0  0022082a	slt	r1,r1,r2
 1741  000024b4  10200040	beqz	r1,L90_LF2
 1742  000024b8  54000000	nop; delay slot nop
 1743  000024bc  8fc1fff4	lw	r1,-12(r30)
 1744  000024c0  8fc20008	lw	r2,8(r30)
 1745  000024c4  00200035	movi2fp	f0,r1
 1746  000024c8  00400835	movi2fp	f1,r2
 1747  000024cc  0401000e	mult	f0,f0,f1
 1748  000024d0  00000834	movfp2i	r1,f0
 1749  000024d4  afc1fff4	sw	-12(r30),r1
 1750  000024d8  8fc1fff4	lw	r1,-12(r30)
 1751  000024dc  8fc2fff0	lw	r2,-16(r30)
 1752  000024e0  00220820	add	r1,r1,r2
 1753  000024e4  afc1fff4	sw	-12(r30),r1
 1754  000024e8  8fc20000	lw	r2,(r30)
 1755  000024ec  20410001	addi	r1,r2,#1
 1756  000024f0  00011020	add	r2,r0,r1
 1757  000024f4  afc20000	sw	(r30),r2
 1758  000024f8          	L97_LF2:
 1759  000024f8          	L90_LF2:
 1760  000024f8  8fc1fff0	lw	r1,-16(r30)
 1761  000024fc  8fc20008	lw	r2,8(r30)
 1762  00002500  0022082a	slt	r1,r1,r2
 1763  00002504  1420000c	bnez	r1,L98_LF2
 1764  00002508  54000000	nop; delay slot nop
 1765  0000250c  0800000c	j	L89_LF2
 1766  00002510  54000000	nop; delay slot nop
 1767  00002514          	L98_LF2:
 1768  00002514  0bfffec8	j	L88_LF2
 1769  00002518  54000000	nop; delay slot nop
 1770  0000251c          	L89_LF2:
 1771  0000251c  8fc10004	lw	r1,4(r30)
 1772  00002520  64220000	snei	r2,r1,#0
 1773  00002524  10400010	beqz	r2,L99_LF2
 1774  00002528  54000000	nop; delay slot nop
 1775  0000252c  8fc10004	lw	r1,4(r30)
 1776  00002530  8fc20000	lw	r2,(r30)
 1777  00002534  ac220000	sw	(r1),r2
 1778  00002538          	L99_LF2:
 1779  00002538  8fc1fff4	lw	r1,-12(r30)
 1780  0000253c  8fc2ffec	lw	r2,-20(r30)
 1781  00002540  00200035	movi2fp	f0,r1
 1782  00002544  00400835	movi2fp	f1,r2
 1783  00002548  0401000e	mult	f0,f0,f1
 1784  0000254c  00000834	movfp2i	r1,f0
 1785  00002550  afc1fff4	sw	-12(r30),r1
 1786  00002554  8fc1fff4	lw	r1,-12(r30)
 1787  00002558  08000004	j	L72_LF2
 1788  0000255c  54000000	nop; delay slot nop
 1789  00002560          	L72_LF2:
 1790  00002560  8fa20000	lw	r2,0(r29)
 1791  00002564  8fdffff8	lw	r31,-8(r30)
 1792  00002568  001ee820	add	r29,r0,r30
 1793  0000256c  8fdefffc	lw	r30,-4(r30)
 1794  00002570  4be00000	jr	r31
 1795  00002574  54000000	nop
 1796  00002578          	.endproc _dstrtol
 1797  00002578          	.align 2
 1798  00002578          	.proc _bcopy
 1799  00002578          	.global _bcopy
 1800  00002578          	_bcopy:
 1801                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1802  00002578  afbefffc	sw	-4(r29),r30; push fp
 1803  0000257c  001df020	add	r30,r0,r29; fp = sp
 1804  00002580  afbffff8	sw	-8(r29),r31; push ret addr
 1805  00002584  2fbd0010	subui	r29,r29,#16; alloc local storage
 1806  00002588  afa20000	sw	0(r29),r2
 1807  0000258c  afa30004	sw	4(r29),r3
 1808  00002590  54000000	nop
 1809  00002594          	L101_LF2:
 1810  00002594  8fc10008	lw	r1,8(r30)
 1811  00002598  2022ffff	addi	r2,r1,#-1
 1812  0000259c  afc20008	sw	8(r30),r2
 1813  000025a0  6c210000	sgti	r1,r1,#0
 1814  000025a4  1420000c	bnez	r1,L103_LF2
 1815  000025a8  54000000	nop; delay slot nop
 1816  000025ac  0800002c	j	L102_LF2
 1817  000025b0  54000000	nop; delay slot nop
 1818  000025b4          	L103_LF2:
 1819  000025b4  8fc10004	lw	r1,4(r30)
 1820  000025b8  20220001	addi	r2,r1,#1
 1821  000025bc  afc20004	sw	4(r30),r2
 1822  000025c0  8fc20000	lw	r2,(r30)
 1823  000025c4  20430001	addi	r3,r2,#1
 1824  000025c8  afc30000	sw	(r30),r3
 1825  000025cc  80420000	lb	r2,(r2)
 1826  000025d0  a0220000	sb	(r1),r2
 1827  000025d4  0bffffbc	j	L101_LF2
 1828  000025d8  54000000	nop; delay slot nop
 1829  000025dc          	L102_LF2:
 1830  000025dc          	L100_LF2:
 1831  000025dc  8fa20000	lw	r2,0(r29)
 1832  000025e0  8fa30004	lw	r3,4(r29)
 1833  000025e4  8fdffff8	lw	r31,-8(r30)
 1834  000025e8  001ee820	add	r29,r0,r30
 1835  000025ec  8fdefffc	lw	r30,-4(r30)
 1836  000025f0  4be00000	jr	r31
 1837  000025f4  54000000	nop
 1838  000025f8          	.endproc _bcopy
 1839  000025f8          	.align 2
 1840  000025f8          	.proc _bzero
 1841  000025f8          	.global _bzero
 1842  000025f8          	_bzero:
 1843                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1844  000025f8  afbefffc	sw	-4(r29),r30; push fp
 1845  000025fc  001df020	add	r30,r0,r29; fp = sp
 1846  00002600  afbffff8	sw	-8(r29),r31; push ret addr
 1847  00002604  2fbd0010	subui	r29,r29,#16; alloc local storage
 1848  00002608  afa20000	sw	0(r29),r2
 1849  0000260c  54000000	nop
 1850  00002610          	L105_LF2:
 1851  00002610  8fc10004	lw	r1,4(r30)
 1852  00002614  2022ffff	addi	r2,r1,#-1
 1853  00002618  afc20004	sw	4(r30),r2
 1854  0000261c  6c210000	sgti	r1,r1,#0
 1855  00002620  1420000c	bnez	r1,L107_LF2
 1856  00002624  54000000	nop; delay slot nop
 1857  00002628  08000020	j	L106_LF2
 1858  0000262c  54000000	nop; delay slot nop
 1859  00002630          	L107_LF2:
 1860  00002630  8fc10000	lw	r1,(r30)
 1861  00002634  20220001	addi	r2,r1,#1
 1862  00002638  afc20000	sw	(r30),r2
 1863  0000263c  20020000	addi	r2,r0,(#0x0)&0xff
 1864  00002640  a0220000	sb	(r1),r2
 1865  00002644  0bffffc8	j	L105_LF2
 1866  00002648  54000000	nop; delay slot nop
 1867  0000264c          	L106_LF2:
 1868  0000264c          	L104_LF2:
 1869  0000264c  8fa20000	lw	r2,0(r29)
 1870  00002650  8fdffff8	lw	r31,-8(r30)
 1871  00002654  001ee820	add	r29,r0,r30
 1872  00002658  8fdefffc	lw	r30,-4(r30)
 1873  0000265c  4be00000	jr	r31
 1874  00002660  54000000	nop
 1875  00002664          	.endproc _bzero
 1876  00002664          	.align 2
 1877  00002664          	.proc _min
 1878  00002664          	.global _min
 1879  00002664          	_min:
 1880                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1881  00002664  afbefffc	sw	-4(r29),r30; push fp
 1882  00002668  001df020	add	r30,r0,r29; fp = sp
 1883  0000266c  afbffff8	sw	-8(r29),r31; push ret addr
 1884  00002670  2fbd0010	subui	r29,r29,#16; alloc local storage
 1885  00002674  afa20000	sw	0(r29),r2
 1886  00002678  afa30004	sw	4(r29),r3
 1887  0000267c  8fc10000	lw	r1,(r30)
 1888  00002680  8fc20004	lw	r2,4(r30)
 1889  00002684  0022182c	sle	r3,r1,r2
 1890  00002688  14600008	bnez	r3,L109_LF2
 1891  0000268c  54000000	nop; delay slot nop
 1892  00002690  8fc10004	lw	r1,4(r30)
 1893  00002694          	L109_LF2:
 1894  00002694  08000004	j	L108_LF2
 1895  00002698  54000000	nop; delay slot nop
 1896  0000269c          	L108_LF2:
 1897  0000269c  8fa20000	lw	r2,0(r29)
 1898  000026a0  8fa30004	lw	r3,4(r29)
 1899  000026a4  8fdffff8	lw	r31,-8(r30)
 1900  000026a8  001ee820	add	r29,r0,r30
 1901  000026ac  8fdefffc	lw	r30,-4(r30)
 1902  000026b0  4be00000	jr	r31
 1903  000026b4  54000000	nop
 1904  000026b8          	.endproc _min
 1905                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1906                      ;;;
 1907                      ;;; Most of the traps are called in files from libtraps.
 1910  000026b8          	.align 2
 1911  000026b8          	.proc _exit
 1912  000026b8          	.global _exit
 1913  000026b8          	_exit:
 1914  000026b8  44000300	trap	#0x300
 1915  000026bc  4be00000	jr	r31
 1916  000026c0  54000000	nop
 1917  000026c4          	.endproc _exit
 1919                      ; for the benefit of gcc.
 1920  000026c4          	.proc ___main
 1921  000026c4          	.global ___main
 1922  000026c4          	___main:
 1923  000026c4  4be00000	jr	r31
 1924  000026c8  54000000	nop
 1925  000026cc          	.endproc ___main
 1926  000026cc          	.text
 1927  000026cc          	.global _etext
 1928  000026cc          	_etext:
 1929  000026cc          	.align 3
 1930  000026d0          	.data
 1931  00003121          	.global _edata
 1932  00003121          	_edata:

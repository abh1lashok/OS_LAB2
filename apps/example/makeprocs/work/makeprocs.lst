 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 398
    4                      ; Text size: 4728
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6e75	.ascii " <number of processes to create>\n\000"
   85  0000300c  6d626572	
   85  00003010  206f6620	
   85  00003014  70726f63	
   85  00003018  65737365	
   85  0000301c  7320746f	
   85  00003020  20637265	
   85  00003024  6174653e	
   85  00003028  0a00    	
   86  0000302a          	.align 2
   87  0000302c          	LC2_LF0:
   88  0000302c  43726561	.ascii "Creating %d processes\n\000"
   88  00003030  74696e67	
   88  00003034  20256420	
   88  00003038  70726f63	
   88  0000303c  65737365	
   88  00003040  730a00  	
   89  00003043          	.align 2
   90  00003044          	LC3_LF0:
   91  00003044  4552524f	.ascii "ERROR: could not allocate shared memory page in \000"
   91  00003048  523a2063	
   91  0000304c  6f756c64	
   91  00003050  206e6f74	
   91  00003054  20616c6c	
   91  00003058  6f636174	
   91  0000305c  65207368	
   91  00003060  61726564	
   91  00003064  206d656d	
   91  00003068  6f727920	
   91  0000306c  70616765	
   91  00003070  20696e20	
   91  00003074  00      	
   92  00003075          	.align 2
   93  00003078          	LC4_LF0:
   94  00003078  2c206578	.ascii ", exiting...\n\000"
   94  0000307c  6974696e	
   94  00003080  672e2e2e	
   94  00003084  0a00    	
   95  00003086          	.align 2
   96  00003088          	LC5_LF0:
   97  00003088  436f756c	.ascii "Could not map the shared page to virtual address in \000"
   97  0000308c  64206e6f	
   97  00003090  74206d61	
   97  00003094  70207468	
   97  00003098  65207368	
   97  0000309c  61726564	
   97  000030a0  20706167	
   97  000030a4  6520746f	
   97  000030a8  20766972	
   97  000030ac  7475616c	
   97  000030b0  20616464	
   97  000030b4  72657373	
   97  000030b8  20696e20	
   97  000030bc  00      	
   98  000030bd          	.align 2
   99  000030c0          	LC6_LF0:
  100  000030c0  2c206578	.ascii ", exiting..\n\000"
  100  000030c4  6974696e	
  100  000030c8  672e2e0a	
  100  000030cc  00      	
  101  000030cd          	.align 2
  102  000030d0          	LC7_LF0:
  103  000030d0  685f6d65	.ascii "h_mem = %p \n\000"
  103  000030d4  6d203d20	
  103  000030d8  2570200a	
  103  000030dc  00      	
  104  000030dd          	.align 2
  105  000030e0          	LC8_LF0:
  106  000030e0  6d63203d	.ascii "mc = %p \n\000"
  106  000030e4  20257020	
  106  000030e8  0a00    	
  107  000030ea          	.align 2
  108  000030ec          	LC9_LF0:
  109  000030ec  42616420	.ascii "Bad sem_create in \000"
  109  000030f0  73656d5f	
  109  000030f4  63726561	
  109  000030f8  74652069	
  109  000030fc  6e2000  	
  110  000030ff          	.align 2
  111  00003100          	LC10_LF0:
  112  00003100  0a00    	.ascii "\n\000"
  113  00003102          	.align 2
  114  00003104          	LC11_LF0:
  115  00003104  73706177	.ascii "spawn_me.dlx.obj\000"
  115  00003108  6e5f6d65	
  115  0000310c  2e646c78	
  115  00003110  2e6f626a	
  115  00003114  00      	
  116  00003115          	.align 2
  117  00003118          	LC12_LF0:
  118  00003118  50726f63	.ascii "Process %d created\n\000"
  118  0000311c  65737320	
  118  00003120  25642063	
  118  00003124  72656174	
  118  00003128  65640a00	
  119  0000312c          	.align 2
  120  0000312c          	LC13_LF0:
  121  0000312c  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  121  00003130  73656d61	
  121  00003134  70686f72	
  121  00003138  6520735f	
  121  0000313c  70726f63	
  121  00003140  735f636f	
  121  00003144  6d706c65	
  121  00003148  74656420	
  121  0000314c  28256429	
  121  00003150  20696e20	
  121  00003154  00      	
  122  00003155          	.align 2
  123  00003158          	LC14_LF0:
  124  00003158  416c6c20	.ascii "All other processes completed, exiting main process.\n\000"
  124  0000315c  6f746865	
  124  00003160  72207072	
  124  00003164  6f636573	
  124  00003168  73657320	
  124  0000316c  636f6d70	
  124  00003170  6c657465	
  124  00003174  642c2065	
  124  00003178  78697469	
  124  0000317c  6e67206d	
  124  00003180  61696e20	
  124  00003184  70726f63	
  124  00003188  6573732e	
  124  0000318c  0a00    	
  125  0000318e          	.text
  126  000010d4          	.align 2
  127  000010d4          	.proc _main
  128  000010d4          	.global _main
  129  000010d4          	_main:
  130                      ;  Function 'main'; 32 bytes of locals, 0 regs to save.
  131  000010d4  afbefffc	sw	-4(r29),r30; push fp
  132  000010d8  001df020	add	r30,r0,r29; fp = sp
  133  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  134  000010e0  2fbd0028	subui	r29,r29,#40; alloc local storage
  135  000010e4  8fc20000	lw	r2,(r30)
  136  000010e8  8fc70004	lw	r7,4(r30)
  137  000010ec  0c001180	jal	___main
  138  000010f0  54000000	nop; not filled.
  139  000010f4  64410002	snei	r1,r2,#2
  140  000010f8  1020004c	beqz	r1,L14_LF0
  141  000010fc  54000000	nop; not filled.
  142  00001100  23bdfff8	addi	r29,r29,#-8
  143  00001104  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  144  00001108  25083000	addui	r8,r8,(LC0_LF0)&0xffff
  145  0000110c  afa80000	sw	(r29),r8
  146  00001110  0c000360	jal	_Printf
  147  00001114  54000000	nop; not filled.
  148  00001118  8ce80000	lw	r8,(r7)
  149  0000111c  afa80000	sw	(r29),r8
  150  00001120  0c000350	jal	_Printf
  151  00001124  54000000	nop; not filled.
  152  00001128  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  153  0000112c  25083008	addui	r8,r8,(LC1_LF0)&0xffff
  154  00001130  afa80000	sw	(r29),r8
  155  00001134  0c00033c	jal	_Printf
  156  00001138  54000000	nop; not filled.
  157  0000113c  0c0003dc	jal	_Exit
  158  00001140  54000000	nop; not filled.
  159  00001144  23bd0008	addi	r29,r29,#8
  160  00001148          	L14_LF0:
  161  00001148  23bdfff0	addi	r29,r29,#-16
  162  0000114c  8ce80004	lw	r8,4(r7)
  163  00001150  afa80000	sw	(r29),r8
  164  00001154  20080000	addi	r8,r0,#0
  165  00001158  afa80004	sw	4(r29),r8
  166  0000115c  2008000a	addi	r8,r0,#10
  167  00001160  afa80008	sw	8(r29),r8
  168  00001164  0c000c60	jal	_dstrtol
  169  00001168  54000000	nop; not filled.
  170  0000116c  00013020	add	r6,r0,r1
  171  00001170  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  172  00001174  2508302c	addui	r8,r8,(LC2_LF0)&0xffff
  173  00001178  afa80000	sw	(r29),r8
  174  0000117c  afa60004	sw	4(r29),r6
  175  00001180  0c0002f0	jal	_Printf
  176  00001184  54000000	nop; not filled.
  177  00001188  0c00030c	jal	_shmget
  178  0000118c  54000000	nop; not filled.
  179  00001190  00011820	add	r3,r0,r1
  180  00001194  23bd0010	addi	r29,r29,#16
  181  00001198  64610000	snei	r1,r3,#0
  182  0000119c  1420004c	bnez	r1,L15_LF0
  183  000011a0  54000000	nop; not filled.
  184  000011a4  23bdfff8	addi	r29,r29,#-8
  185  000011a8  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  186  000011ac  25083044	addui	r8,r8,(LC3_LF0)&0xffff
  187  000011b0  afa80000	sw	(r29),r8
  188  000011b4  0c0002bc	jal	_Printf
  189  000011b8  54000000	nop; not filled.
  190  000011bc  8ce80000	lw	r8,(r7)
  191  000011c0  afa80000	sw	(r29),r8
  192  000011c4  0c0002ac	jal	_Printf
  193  000011c8  54000000	nop; not filled.
  194  000011cc  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  195  000011d0  25083078	addui	r8,r8,(LC4_LF0)&0xffff
  196  000011d4  afa80000	sw	(r29),r8
  197  000011d8  0c000298	jal	_Printf
  198  000011dc  54000000	nop; not filled.
  199  000011e0  0c000338	jal	_Exit
  200  000011e4  54000000	nop; not filled.
  201  000011e8  23bd0008	addi	r29,r29,#8
  202  000011ec          	L15_LF0:
  203  000011ec  23bdfff8	addi	r29,r29,#-8
  204  000011f0  afa30000	sw	(r29),r3
  205  000011f4  0c0002ac	jal	_shmat
  206  000011f8  54000000	nop; not filled.
  207  000011fc  00011020	add	r2,r0,r1
  208  00001200  23bd0008	addi	r29,r29,#8
  209  00001204  64410000	snei	r1,r2,#0
  210  00001208  1420004c	bnez	r1,L16_LF0
  211  0000120c  54000000	nop; not filled.
  212  00001210  23bdfff8	addi	r29,r29,#-8
  213  00001214  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  214  00001218  25083088	addui	r8,r8,(LC5_LF0)&0xffff
  215  0000121c  afa80000	sw	(r29),r8
  216  00001220  0c000250	jal	_Printf
  217  00001224  54000000	nop; not filled.
  218  00001228  8ce80000	lw	r8,(r7)
  219  0000122c  afa80000	sw	(r29),r8
  220  00001230  0c000240	jal	_Printf
  221  00001234  54000000	nop; not filled.
  222  00001238  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  223  0000123c  250830c0	addui	r8,r8,(LC6_LF0)&0xffff
  224  00001240  afa80000	sw	(r29),r8
  225  00001244  0c00022c	jal	_Printf
  226  00001248  54000000	nop; not filled.
  227  0000124c  0c0002cc	jal	_Exit
  228  00001250  54000000	nop; not filled.
  229  00001254  23bd0008	addi	r29,r29,#8
  230  00001258          	L16_LF0:
  231  00001258  23bdfff8	addi	r29,r29,#-8
  232  0000125c  3c080000	lhi	r8,((LC7_LF0)>>16)&0xffff
  233  00001260  250830d0	addui	r8,r8,(LC7_LF0)&0xffff
  234  00001264  afa80000	sw	(r29),r8
  235  00001268  afa30004	sw	4(r29),r3
  236  0000126c  0c000204	jal	_Printf
  237  00001270  54000000	nop; not filled.
  238  00001274  3c080000	lhi	r8,((LC8_LF0)>>16)&0xffff
  239  00001278  250830e0	addui	r8,r8,(LC8_LF0)&0xffff
  240  0000127c  afa80000	sw	(r29),r8
  241  00001280  afa20004	sw	4(r29),r2
  242  00001284  0c0001ec	jal	_Printf
  243  00001288  54000000	nop; not filled.
  244  0000128c  ac460000	sw	(r2),r6
  245  00001290  20080041	addi	r8,r0,(#0x41)&0xff
  246  00001294  a0480004	sb	4(r2),r8
  247  00001298  20010001	addi	r1,r0,#1
  248  0000129c  00260822	sub	r1,r1,r6
  249  000012a0  afa10000	sw	(r29),r1
  250  000012a4  0c000208	jal	_sem_create
  251  000012a8  54000000	nop; not filled.
  252  000012ac  00012820	add	r5,r0,r1
  253  000012b0  23bd0008	addi	r29,r29,#8
  254  000012b4  60a1ffff	seqi	r1,r5,#-1
  255  000012b8  1020004c	beqz	r1,L17_LF0
  256  000012bc  54000000	nop; not filled.
  257  000012c0  23bdfff8	addi	r29,r29,#-8
  258  000012c4  3c080000	lhi	r8,((LC9_LF0)>>16)&0xffff
  259  000012c8  250830ec	addui	r8,r8,(LC9_LF0)&0xffff
  260  000012cc  afa80000	sw	(r29),r8
  261  000012d0  0c0001a0	jal	_Printf
  262  000012d4  54000000	nop; not filled.
  263  000012d8  8ce80000	lw	r8,(r7)
  264  000012dc  afa80000	sw	(r29),r8
  265  000012e0  0c000190	jal	_Printf
  266  000012e4  54000000	nop; not filled.
  267  000012e8  3c080000	lhi	r8,((LC10_LF0)>>16)&0xffff
  268  000012ec  25083100	addui	r8,r8,(LC10_LF0)&0xffff
  269  000012f0  afa80000	sw	(r29),r8
  270  000012f4  0c00017c	jal	_Printf
  271  000012f8  54000000	nop; not filled.
  272  000012fc  0c00021c	jal	_Exit
  273  00001300  54000000	nop; not filled.
  274  00001304  23bd0008	addi	r29,r29,#8
  275  00001308          	L17_LF0:
  276  00001308  23bdfff8	addi	r29,r29,#-8
  277  0000130c  afa30000	sw	(r29),r3
  278  00001310  23c4ffe8	addi	r4,r30,#-24
  279  00001314  afa40004	sw	4(r29),r4
  280  00001318  0c000920	jal	_ditoa
  281  0000131c  54000000	nop; not filled.
  282  00001320  afa50000	sw	(r29),r5
  283  00001324  23c3ffd8	addi	r3,r30,#-40
  284  00001328  afa30004	sw	4(r29),r3
  285  0000132c  0c00090c	jal	_ditoa
  286  00001330  54000000	nop; not filled.
  287  00001334  20020000	addi	r2,r0,#0
  288  00001338  23bd0008	addi	r29,r29,#8
  289  0000133c  0046082a	slt	r1,r2,r6
  290  00001340  10200058	beqz	r1,L19_LF0
  291  00001344  54000000	nop; not filled.
  292  00001348          	L21_LF0:
  293  00001348  23bdfff0	addi	r29,r29,#-16
  294  0000134c  3c080000	lhi	r8,((LC11_LF0)>>16)&0xffff
  295  00001350  25083104	addui	r8,r8,(LC11_LF0)&0xffff
  296  00001354  afa80000	sw	(r29),r8
  297  00001358  afa40004	sw	4(r29),r4
  298  0000135c  afa30008	sw	8(r29),r3
  299  00001360  20080000	addi	r8,r0,#0
  300  00001364  afa8000c	sw	12(r29),r8
  301  00001368  0c000120	jal	_process_create
  302  0000136c  54000000	nop; not filled.
  303  00001370  3c080000	lhi	r8,((LC12_LF0)>>16)&0xffff
  304  00001374  25083118	addui	r8,r8,(LC12_LF0)&0xffff
  305  00001378  afa80000	sw	(r29),r8
  306  0000137c  afa20004	sw	4(r29),r2
  307  00001380  0c0000f0	jal	_Printf
  308  00001384  54000000	nop; not filled.
  309  00001388  23bd0010	addi	r29,r29,#16
  310  0000138c  20420001	addi	r2,r2,#1
  311  00001390  0046082a	slt	r1,r2,r6
  312  00001394  1420ffb0	bnez	r1,L21_LF0
  313  00001398  54000000	nop; not filled.
  314  0000139c          	L19_LF0:
  315  0000139c  23bdfff8	addi	r29,r29,#-8
  316  000013a0  afa50000	sw	(r29),r5
  317  000013a4  0c000114	jal	_sem_wait
  318  000013a8  54000000	nop; not filled.
  319  000013ac  23bd0008	addi	r29,r29,#8
  320  000013b0  64210001	snei	r1,r1,#1
  321  000013b4  10200050	beqz	r1,L23_LF0
  322  000013b8  54000000	nop; not filled.
  323  000013bc  23bdfff8	addi	r29,r29,#-8
  324  000013c0  3c080000	lhi	r8,((LC13_LF0)>>16)&0xffff
  325  000013c4  2508312c	addui	r8,r8,(LC13_LF0)&0xffff
  326  000013c8  afa80000	sw	(r29),r8
  327  000013cc  afa50004	sw	4(r29),r5
  328  000013d0  0c0000a0	jal	_Printf
  329  000013d4  54000000	nop; not filled.
  330  000013d8  8ce70000	lw	r7,(r7)
  331  000013dc  afa70000	sw	(r29),r7
  332  000013e0  0c000090	jal	_Printf
  333  000013e4  54000000	nop; not filled.
  334  000013e8  3c080000	lhi	r8,((LC10_LF0)>>16)&0xffff
  335  000013ec  25083100	addui	r8,r8,(LC10_LF0)&0xffff
  336  000013f0  afa80000	sw	(r29),r8
  337  000013f4  0c00007c	jal	_Printf
  338  000013f8  54000000	nop; not filled.
  339  000013fc  0c00011c	jal	_Exit
  340  00001400  54000000	nop; not filled.
  341  00001404  23bd0008	addi	r29,r29,#8
  342  00001408          	L23_LF0:
  343  00001408  23bdfff8	addi	r29,r29,#-8
  344  0000140c  3c080000	lhi	r8,((LC14_LF0)>>16)&0xffff
  345  00001410  25083158	addui	r8,r8,(LC14_LF0)&0xffff
  346  00001414  afa80000	sw	(r29),r8
  347  00001418  0c000058	jal	_Printf
  348  0000141c  54000000	nop; not filled.
  349  00001420  23bd0008	addi	r29,r29,#8
  350  00001424  0c000e3c	jal	_exit
  351  00001428  54000000	nop
  352  0000142c          	.endproc _main
  353                      ;;;
  354                      ;;; Stub functions for DLX traps.
  355                      ;;;
  356                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  357                      ;;;
  358                      ;;; The traps such as Open and Close
  359                      ;;; (note the capital letters) are for use by user programs.  The traps
  360                      ;;; with names such as open and close (lower case) are for use by the OS.
  361                      ;;;
  364  0000142c          	.align 2
  366                      ;;; The following are the traps to be used by user-level programs
  367                      ;;;
  369  0000142c          	.align 2
  370  0000142c          	.proc _Open
  371  0000142c          	.global _Open
  372  0000142c          	_Open:
  373                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  374                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  375                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  376  0000142c  44000213	trap	#0x213
  377  00001430  4be00000	jr	r31
  378  00001434  54000000	nop
  379  00001438          	.endproc _Open
  381  00001438          	.proc _Close
  382  00001438          	.global _Close
  383  00001438          	_Close:
  384  00001438  44000214	trap	#0x214
  385  0000143c  4be00000	jr	r31
  386  00001440  54000000	nop
  387  00001444          	.endproc _Close
  389  00001444          	.proc _Read
  390  00001444          	.global _Read
  391  00001444          	_Read:
  392  00001444  44000210	trap	#0x210
  393  00001448  4be00000	jr	r31
  394  0000144c  54000000	nop
  395  00001450          	.endproc _Read
  397  00001450          	.proc _Write
  398  00001450          	.global _Write
  399  00001450          	_Write:
  400  00001450  44000211	trap	#0x211
  401  00001454  4be00000	jr	r31
  402  00001458  54000000	nop
  403  0000145c          	.endproc _Write
  405  0000145c          	.proc _Lseek
  406  0000145c          	.global _Lseek
  407  0000145c          	_Lseek:
  408  0000145c  44000212	trap	#0x212
  409  00001460  4be00000	jr	r31
  410  00001464  54000000	nop
  411  00001468          	.endproc _Lseek
  413  00001468          	.proc _Putchar
  414  00001468          	.global _Putchar
  415  00001468          	_Putchar:
  416  00001468  44000280	trap	#0x280
  417  0000146c  4be00000	jr	r31
  418  00001470  54000000	nop
  419  00001474          	.endproc _Putchar
  421  00001474          	.proc _Printf
  422  00001474          	.global _Printf
  423  00001474          	_Printf:
  424  00001474  44000201	trap	#0x201
  425  00001478  4be00000	jr	r31
  426  0000147c  54000000	nop
  427  00001480          	.endproc _Printf
  429  00001480          	.proc _Getpid
  430  00001480          	.global _Getpid
  431  00001480          	_Getpid:
  432  00001480  44000431	trap	#0x431
  433  00001484  4be00000	jr	r31
  434  00001488  54000000	nop
  435  0000148c          	.endproc _Getpid
  437  0000148c          	.proc _process_create
  438  0000148c          	.global _process_create
  439  0000148c          	_process_create:
  440  0000148c  44000432	trap	#0x432
  441  00001490  4be00000	jr	r31
  442  00001494  54000000	nop
  443  00001498          	.endproc _process_create
  445  00001498          	.proc _shmget
  446  00001498          	.global _shmget
  447  00001498          	_shmget:
  448  00001498  44000440	trap	#0x440
  449  0000149c  4be00000	jr	r31
  450  000014a0  54000000	nop
  451  000014a4          	.endproc _shmget
  453  000014a4          	.proc _shmat
  454  000014a4          	.global _shmat
  455  000014a4          	_shmat:
  456  000014a4  44000441	trap	#0x441
  457  000014a8  4be00000	jr	r31
  458  000014ac  54000000	nop
  459  000014b0          	.endproc _shmat
  461  000014b0          	.proc _sem_create
  462  000014b0          	.global _sem_create
  463  000014b0          	_sem_create:
  464  000014b0  44000450	trap	#0x450
  465  000014b4  4be00000	jr	r31
  466  000014b8  54000000	nop
  467  000014bc          	.endproc _sem_create
  469  000014bc          	.proc _sem_wait
  470  000014bc          	.global _sem_wait
  471  000014bc          	_sem_wait:
  472  000014bc  44000451	trap	#0x451
  473  000014c0  4be00000	jr	r31
  474  000014c4  54000000	nop
  475  000014c8          	.endproc _sem_wait
  477  000014c8          	.proc _sem_signal
  478  000014c8          	.global _sem_signal
  479  000014c8          	_sem_signal:
  480  000014c8  44000452	trap	#0x452
  481  000014cc  4be00000	jr	r31
  482  000014d0  54000000	nop
  483  000014d4          	.endproc _sem_signal
  485  000014d4          	.proc _lock_create
  486  000014d4          	.global _lock_create
  487  000014d4          	_lock_create:
  488  000014d4  44000453	trap	#0x453
  489  000014d8  4be00000	jr	r31
  490  000014dc  54000000	nop
  491  000014e0          	.endproc _lock_create
  493  000014e0          	.proc _lock_acquire
  494  000014e0          	.global _lock_acquire
  495  000014e0          	_lock_acquire:
  496  000014e0  44000454	trap	#0x454
  497  000014e4  4be00000	jr	r31
  498  000014e8  54000000	nop
  499  000014ec          	.endproc _lock_acquire
  501  000014ec          	.proc _lock_release
  502  000014ec          	.global _lock_release
  503  000014ec          	_lock_release:
  504  000014ec  44000455	trap	#0x455
  505  000014f0  4be00000	jr	r31
  506  000014f4  54000000	nop
  507  000014f8          	.endproc _lock_release
  509  000014f8          	.proc _cond_create
  510  000014f8          	.global _cond_create
  511  000014f8          	_cond_create:
  512  000014f8  44000456	trap	#0x456
  513  000014fc  4be00000	jr	r31
  514  00001500  54000000	nop
  515  00001504          	.endproc _cond_create
  517  00001504          	.proc _cond_wait
  518  00001504          	.global _cond_wait
  519  00001504          	_cond_wait:
  520  00001504  44000457	trap	#0x457
  521  00001508  4be00000	jr	r31
  522  0000150c  54000000	nop
  523  00001510          	.endproc _cond_wait
  525  00001510          	.proc _cond_signal
  526  00001510          	.global _cond_signal
  527  00001510          	_cond_signal:
  528  00001510  44000458	trap	#0x458
  529  00001514  4be00000	jr	r31
  530  00001518  54000000	nop
  531  0000151c          	.endproc _cond_signal
  533  0000151c          	.proc _Exit
  534  0000151c          	.global _Exit
  535  0000151c          	_Exit:
  536  0000151c  44000500	trap	#0x500
  537  00001520  4be00000	jr	r31
  538  00001524  54000000	nop
  539  00001528          	.endproc _Exit
  540                      ; Compiled by GCC
  542  00001528          	.align 2
  543  00001528          	.proc _isspace
  544  00001528          	.global _isspace
  545  00001528          	_isspace:
  546                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  547  00001528  afbefffc	sw	-4(r29),r30; push fp
  548  0000152c  001df020	add	r30,r0,r29; fp = sp
  549  00001530  afbffff8	sw	-8(r29),r31; push ret addr
  550  00001534  2fbd0018	subui	r29,r29,#24; alloc local storage
  551  00001538  afa20000	sw	0(r29),r2
  552  0000153c  afa30004	sw	4(r29),r3
  553  00001540  afa40008	sw	8(r29),r4
  554  00001544  83c20003	lb	r2,3(r30)
  555  00001548  20010000	addi	r1,r0,#0
  556  0000154c  304300ff	andi	r3,r2,#0x00ff
  557  00001550  60640020	seqi	r4,r3,#32
  558  00001554  1480002c	bnez	r4,L3_LF2
  559  00001558  54000000	nop; delay slot nop
  560  0000155c  304300ff	andi	r3,r2,#0x00ff
  561  00001560  60640009	seqi	r4,r3,#9
  562  00001564  1480001c	bnez	r4,L3_LF2
  563  00001568  54000000	nop; delay slot nop
  564  0000156c  304300ff	andi	r3,r2,#0x00ff
  565  00001570  6064000a	seqi	r4,r3,#10
  566  00001574  1480000c	bnez	r4,L3_LF2
  567  00001578  54000000	nop; delay slot nop
  568  0000157c  08000008	j	L2_LF2
  569  00001580  54000000	nop; delay slot nop
  570  00001584          	L3_LF2:
  571  00001584  20010001	addi	r1,r0,#1
  572  00001588          	L2_LF2:
  573  00001588  08000004	j	L1_LF2
  574  0000158c  54000000	nop; delay slot nop
  575  00001590          	L1_LF2:
  576  00001590  8fa20000	lw	r2,0(r29)
  577  00001594  8fa30004	lw	r3,4(r29)
  578  00001598  8fa40008	lw	r4,8(r29)
  579  0000159c  8fdffff8	lw	r31,-8(r30)
  580  000015a0  001ee820	add	r29,r0,r30
  581  000015a4  8fdefffc	lw	r30,-4(r30)
  582  000015a8  4be00000	jr	r31
  583  000015ac  54000000	nop
  584  000015b0          	.endproc _isspace
  585  000015b0          	.align 2
  586  000015b0          	.proc _isxdigit
  587  000015b0          	.global _isxdigit
  588  000015b0          	_isxdigit:
  589                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  590  000015b0  afbefffc	sw	-4(r29),r30; push fp
  591  000015b4  001df020	add	r30,r0,r29; fp = sp
  592  000015b8  afbffff8	sw	-8(r29),r31; push ret addr
  593  000015bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  594  000015c0  afa20000	sw	0(r29),r2
  595  000015c4  afa30004	sw	4(r29),r3
  596  000015c8  afa40008	sw	8(r29),r4
  597  000015cc  83c20003	lb	r2,3(r30)
  598  000015d0  20010000	addi	r1,r0,#0
  599  000015d4  304300ff	andi	r3,r2,#0x00ff
  600  000015d8  6c64002f	sgtui	r4,r3,#47
  601  000015dc  1080001c	beqz	r4,L7_LF2
  602  000015e0  54000000	nop; delay slot nop
  603  000015e4  304300ff	andi	r3,r2,#0x00ff
  604  000015e8  70640039	sleui	r4,r3,#57
  605  000015ec  1480005c	bnez	r4,L6_LF2
  606  000015f0  54000000	nop; delay slot nop
  607  000015f4  08000004	j	L7_LF2
  608  000015f8  54000000	nop; delay slot nop
  609  000015fc          	L7_LF2:
  610  000015fc  304300ff	andi	r3,r2,#0x00ff
  611  00001600  6c640060	sgtui	r4,r3,#96
  612  00001604  1080001c	beqz	r4,L8_LF2
  613  00001608  54000000	nop; delay slot nop
  614  0000160c  304300ff	andi	r3,r2,#0x00ff
  615  00001610  70640066	sleui	r4,r3,#102
  616  00001614  14800034	bnez	r4,L6_LF2
  617  00001618  54000000	nop; delay slot nop
  618  0000161c  08000004	j	L8_LF2
  619  00001620  54000000	nop; delay slot nop
  620  00001624          	L8_LF2:
  621  00001624  304300ff	andi	r3,r2,#0x00ff
  622  00001628  6c640040	sgtui	r4,r3,#64
  623  0000162c  10800020	beqz	r4,L5_LF2
  624  00001630  54000000	nop; delay slot nop
  625  00001634  304300ff	andi	r3,r2,#0x00ff
  626  00001638  70640041	sleui	r4,r3,#65
  627  0000163c  1480000c	bnez	r4,L6_LF2
  628  00001640  54000000	nop; delay slot nop
  629  00001644  08000008	j	L5_LF2
  630  00001648  54000000	nop; delay slot nop
  631  0000164c          	L6_LF2:
  632  0000164c  20010001	addi	r1,r0,#1
  633  00001650          	L5_LF2:
  634  00001650  08000004	j	L4_LF2
  635  00001654  54000000	nop; delay slot nop
  636  00001658          	L4_LF2:
  637  00001658  8fa20000	lw	r2,0(r29)
  638  0000165c  8fa30004	lw	r3,4(r29)
  639  00001660  8fa40008	lw	r4,8(r29)
  640  00001664  8fdffff8	lw	r31,-8(r30)
  641  00001668  001ee820	add	r29,r0,r30
  642  0000166c  8fdefffc	lw	r30,-4(r30)
  643  00001670  4be00000	jr	r31
  644  00001674  54000000	nop
  645  00001678          	.endproc _isxdigit
  646  00001678          	.align 2
  647  00001678          	.proc _dstrcpy
  648  00001678          	.global _dstrcpy
  649  00001678          	_dstrcpy:
  650                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  651  00001678  afbefffc	sw	-4(r29),r30; push fp
  652  0000167c  001df020	add	r30,r0,r29; fp = sp
  653  00001680  afbffff8	sw	-8(r29),r31; push ret addr
  654  00001684  2fbd0018	subui	r29,r29,#24; alloc local storage
  655  00001688  afa20000	sw	0(r29),r2
  656  0000168c  afa30004	sw	4(r29),r3
  657  00001690  8fc10000	lw	r1,(r30)
  658  00001694  afc1fff4	sw	-12(r30),r1
  659  00001698          	L10_LF2:
  660  00001698  8fc10000	lw	r1,(r30)
  661  0000169c  20220001	addi	r2,r1,#1
  662  000016a0  afc20000	sw	(r30),r2
  663  000016a4  8fc20004	lw	r2,4(r30)
  664  000016a8  20430001	addi	r3,r2,#1
  665  000016ac  afc30004	sw	4(r30),r3
  666  000016b0  80420000	lb	r2,(r2)
  667  000016b4  a0220000	sb	(r1),r2
  668  000016b8  a3c2fff3	sb	-13(r30),r2
  669  000016bc          	L12_LF2:
  670  000016bc  93c1fff3	lbu	r1,-13(r30)
  671  000016c0  64220000	snei	r2,r1,#0
  672  000016c4  1440000c	bnez	r2,L13_LF2
  673  000016c8  54000000	nop; delay slot nop
  674  000016cc  0800000c	j	L11_LF2
  675  000016d0  54000000	nop; delay slot nop
  676  000016d4          	L13_LF2:
  677  000016d4  0bffffc0	j	L10_LF2
  678  000016d8  54000000	nop; delay slot nop
  679  000016dc          	L11_LF2:
  680  000016dc  8fc1fff4	lw	r1,-12(r30)
  681  000016e0  08000004	j	L9_LF2
  682  000016e4  54000000	nop; delay slot nop
  683  000016e8          	L9_LF2:
  684  000016e8  8fa20000	lw	r2,0(r29)
  685  000016ec  8fa30004	lw	r3,4(r29)
  686  000016f0  8fdffff8	lw	r31,-8(r30)
  687  000016f4  001ee820	add	r29,r0,r30
  688  000016f8  8fdefffc	lw	r30,-4(r30)
  689  000016fc  4be00000	jr	r31
  690  00001700  54000000	nop
  691  00001704          	.endproc _dstrcpy
  692  00001704          	.align 2
  693  00001704          	.proc _dstrncpy
  694  00001704          	.global _dstrncpy
  695  00001704          	_dstrncpy:
  696                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  697  00001704  afbefffc	sw	-4(r29),r30; push fp
  698  00001708  001df020	add	r30,r0,r29; fp = sp
  699  0000170c  afbffff8	sw	-8(r29),r31; push ret addr
  700  00001710  2fbd0018	subui	r29,r29,#24; alloc local storage
  701  00001714  afa20000	sw	0(r29),r2
  702  00001718  afa30004	sw	4(r29),r3
  703  0000171c  8fc10000	lw	r1,(r30)
  704  00001720  afc1fff4	sw	-12(r30),r1
  705  00001724          	L15_LF2:
  706  00001724  8fc10008	lw	r1,8(r30)
  707  00001728  2022ffff	addi	r2,r1,#-1
  708  0000172c  afc20008	sw	8(r30),r2
  709  00001730  70210000	slei	r1,r1,#0
  710  00001734  1020000c	beqz	r1,L18_LF2
  711  00001738  54000000	nop; delay slot nop
  712  0000173c  08000048	j	L16_LF2
  713  00001740  54000000	nop; delay slot nop
  714  00001744          	L18_LF2:
  715  00001744  8fc10000	lw	r1,(r30)
  716  00001748  20220001	addi	r2,r1,#1
  717  0000174c  afc20000	sw	(r30),r2
  718  00001750  8fc20004	lw	r2,4(r30)
  719  00001754  20430001	addi	r3,r2,#1
  720  00001758  afc30004	sw	4(r30),r3
  721  0000175c  80420000	lb	r2,(r2)
  722  00001760  a0220000	sb	(r1),r2
  723  00001764  a3c2fff3	sb	-13(r30),r2
  724  00001768          	L17_LF2:
  725  00001768  93c1fff3	lbu	r1,-13(r30)
  726  0000176c  64220000	snei	r2,r1,#0
  727  00001770  1440000c	bnez	r2,L19_LF2
  728  00001774  54000000	nop; delay slot nop
  729  00001778  0800000c	j	L16_LF2
  730  0000177c  54000000	nop; delay slot nop
  731  00001780          	L19_LF2:
  732  00001780  0bffffa0	j	L15_LF2
  733  00001784  54000000	nop; delay slot nop
  734  00001788          	L16_LF2:
  735  00001788  8fc1fff4	lw	r1,-12(r30)
  736  0000178c  08000004	j	L14_LF2
  737  00001790  54000000	nop; delay slot nop
  738  00001794          	L14_LF2:
  739  00001794  8fa20000	lw	r2,0(r29)
  740  00001798  8fa30004	lw	r3,4(r29)
  741  0000179c  8fdffff8	lw	r31,-8(r30)
  742  000017a0  001ee820	add	r29,r0,r30
  743  000017a4  8fdefffc	lw	r30,-4(r30)
  744  000017a8  4be00000	jr	r31
  745  000017ac  54000000	nop
  746  000017b0          	.endproc _dstrncpy
  747  000017b0          	.align 2
  748  000017b0          	.proc _dstrcat
  749  000017b0          	.global _dstrcat
  750  000017b0          	_dstrcat:
  751                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  752  000017b0  afbefffc	sw	-4(r29),r30; push fp
  753  000017b4  001df020	add	r30,r0,r29; fp = sp
  754  000017b8  afbffff8	sw	-8(r29),r31; push ret addr
  755  000017bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  756  000017c0  afa20000	sw	0(r29),r2
  757  000017c4  8fc10000	lw	r1,(r30)
  758  000017c8  afc1fff4	sw	-12(r30),r1
  759  000017cc          	L21_LF2:
  760  000017cc  8fc10000	lw	r1,(r30)
  761  000017d0  90220000	lbu	r2,(r1)
  762  000017d4  64410000	snei	r1,r2,#0
  763  000017d8  1420000c	bnez	r1,L23_LF2
  764  000017dc  54000000	nop; delay slot nop
  765  000017e0  0800001c	j	L22_LF2
  766  000017e4  54000000	nop; delay slot nop
  767  000017e8          	L23_LF2:
  768  000017e8  8fc20000	lw	r2,(r30)
  769  000017ec  20410001	addi	r1,r2,#1
  770  000017f0  00011020	add	r2,r0,r1
  771  000017f4  afc20000	sw	(r30),r2
  772  000017f8  0bffffd0	j	L21_LF2
  773  000017fc  54000000	nop; delay slot nop
  774  00001800          	L22_LF2:
  775  00001800  23bdfff8	addi	r29,r29,#-8
  776  00001804  001d0820	add	r1,r0,r29
  777  00001808  8fc20000	lw	r2,(r30)
  778  0000180c  ac220000	sw	(r1),r2
  779  00001810  8fc20004	lw	r2,4(r30)
  780  00001814  ac220004	sw	4(r1),r2
  781  00001818  0ffffe5c	jal	_dstrcpy
  782  0000181c  54000000	nop; delay slot nop
  783  00001820  23bd0008	addi	r29,r29,#8
  784  00001824  8fc1fff4	lw	r1,-12(r30)
  785  00001828  08000004	j	L20_LF2
  786  0000182c  54000000	nop; delay slot nop
  787  00001830          	L20_LF2:
  788  00001830  8fa20000	lw	r2,0(r29)
  789  00001834  8fdffff8	lw	r31,-8(r30)
  790  00001838  001ee820	add	r29,r0,r30
  791  0000183c  8fdefffc	lw	r30,-4(r30)
  792  00001840  4be00000	jr	r31
  793  00001844  54000000	nop
  794  00001848          	.endproc _dstrcat
  795  00001848          	.align 2
  796  00001848          	.proc _dstrncmp
  797  00001848          	.global _dstrncmp
  798  00001848          	_dstrncmp:
  799                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  800  00001848  afbefffc	sw	-4(r29),r30; push fp
  801  0000184c  001df020	add	r30,r0,r29; fp = sp
  802  00001850  afbffff8	sw	-8(r29),r31; push ret addr
  803  00001854  2fbd0018	subui	r29,r29,#24; alloc local storage
  804  00001858  afa20000	sw	0(r29),r2
  805  0000185c  afa30004	sw	4(r29),r3
  806  00001860  54000000	nop
  807  00001864  20010000	addi	r1,r0,#0
  808  00001868  afc1fff4	sw	-12(r30),r1
  809  0000186c          	L25_LF2:
  810  0000186c  8fc1fff4	lw	r1,-12(r30)
  811  00001870  8fc20008	lw	r2,8(r30)
  812  00001874  0022082a	slt	r1,r1,r2
  813  00001878  1420000c	bnez	r1,L28_LF2
  814  0000187c  54000000	nop; delay slot nop
  815  00001880  08000088	j	L26_LF2
  816  00001884  54000000	nop; delay slot nop
  817  00001888          	L28_LF2:
  818  00001888  8fc10004	lw	r1,4(r30)
  819  0000188c  90220000	lbu	r2,(r1)
  820  00001890  64410000	snei	r1,r2,#0
  821  00001894  14200018	bnez	r1,L29_LF2
  822  00001898  54000000	nop; delay slot nop
  823  0000189c  20010000	addi	r1,r0,#0
  824  000018a0  080000d8	j	L24_LF2
  825  000018a4  54000000	nop; delay slot nop
  826  000018a8  08000028	j	L30_LF2
  827  000018ac  54000000	nop; delay slot nop
  828  000018b0          	L29_LF2:
  829  000018b0  8fc10000	lw	r1,(r30)
  830  000018b4  8fc20004	lw	r2,4(r30)
  831  000018b8  90210000	lbu	r1,(r1)
  832  000018bc  90420000	lbu	r2,(r2)
  833  000018c0  00220829	sne	r1,r1,r2
  834  000018c4  1020000c	beqz	r1,L30_LF2
  835  000018c8  54000000	nop; delay slot nop
  836  000018cc  0800003c	j	L26_LF2
  837  000018d0  54000000	nop; delay slot nop
  838  000018d4          	L31_LF2:
  839  000018d4          	L30_LF2:
  840  000018d4  8fc20000	lw	r2,(r30)
  841  000018d8  20410001	addi	r1,r2,#1
  842  000018dc  00011020	add	r2,r0,r1
  843  000018e0  afc20000	sw	(r30),r2
  844  000018e4  8fc20004	lw	r2,4(r30)
  845  000018e8  20410001	addi	r1,r2,#1
  846  000018ec  00011020	add	r2,r0,r1
  847  000018f0  afc20004	sw	4(r30),r2
  848  000018f4          	L27_LF2:
  849  000018f4  8fc2fff4	lw	r2,-12(r30)
  850  000018f8  20410001	addi	r1,r2,#1
  851  000018fc  00011020	add	r2,r0,r1
  852  00001900  afc2fff4	sw	-12(r30),r2
  853  00001904  0bffff64	j	L25_LF2
  854  00001908  54000000	nop; delay slot nop
  855  0000190c          	L26_LF2:
  856  0000190c  8fc1fff4	lw	r1,-12(r30)
  857  00001910  8fc20008	lw	r2,8(r30)
  858  00001914  00220828	seq	r1,r1,r2
  859  00001918  10200018	beqz	r1,L32_LF2
  860  0000191c  54000000	nop; delay slot nop
  861  00001920  20010000	addi	r1,r0,#0
  862  00001924  08000054	j	L24_LF2
  863  00001928  54000000	nop; delay slot nop
  864  0000192c  0800004c	j	L33_LF2
  865  00001930  54000000	nop; delay slot nop
  866  00001934          	L32_LF2:
  867  00001934  8fc20000	lw	r2,(r30)
  868  00001938  90410000	lbu	r1,(r2)
  869  0000193c  8fc20004	lw	r2,4(r30)
  870  00001940  90430000	lbu	r3,(r2)
  871  00001944  00230822	sub	r1,r1,r3
  872  00001948  74220000	sgei	r2,r1,#0
  873  0000194c  10400020	beqz	r2,L34_LF2
  874  00001950  54000000	nop; delay slot nop
  875  00001954  8fc10000	lw	r1,(r30)
  876  00001958  8fc20004	lw	r2,4(r30)
  877  0000195c  90210000	lbu	r1,(r1)
  878  00001960  90420000	lbu	r2,(r2)
  879  00001964  00220829	sne	r1,r1,r2
  880  00001968  08000008	j	L35_LF2
  881  0000196c  54000000	nop; delay slot nop
  882  00001970          	L34_LF2:
  883  00001970  2001ffff	addi	r1,r0,#-1
  884  00001974          	L35_LF2:
  885  00001974  08000004	j	L24_LF2
  886  00001978  54000000	nop; delay slot nop
  887  0000197c          	L33_LF2:
  888  0000197c          	L24_LF2:
  889  0000197c  8fa20000	lw	r2,0(r29)
  890  00001980  8fa30004	lw	r3,4(r29)
  891  00001984  8fdffff8	lw	r31,-8(r30)
  892  00001988  001ee820	add	r29,r0,r30
  893  0000198c  8fdefffc	lw	r30,-4(r30)
  894  00001990  4be00000	jr	r31
  895  00001994  54000000	nop
  896  00001998          	.endproc _dstrncmp
  897  00001998          	.align 2
  898  00001998          	.proc _dstrlen
  899  00001998          	.global _dstrlen
  900  00001998          	_dstrlen:
  901                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  902  00001998  afbefffc	sw	-4(r29),r30; push fp
  903  0000199c  001df020	add	r30,r0,r29; fp = sp
  904  000019a0  afbffff8	sw	-8(r29),r31; push ret addr
  905  000019a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  906  000019a8  afa20000	sw	0(r29),r2
  907  000019ac  20010000	addi	r1,r0,#0
  908  000019b0  afc1fff4	sw	-12(r30),r1
  909  000019b4          	L37_LF2:
  910  000019b4  8fc10000	lw	r1,(r30)
  911  000019b8  20220001	addi	r2,r1,#1
  912  000019bc  afc20000	sw	(r30),r2
  913  000019c0  90210000	lbu	r1,(r1)
  914  000019c4  64220000	snei	r2,r1,#0
  915  000019c8  1440000c	bnez	r2,L39_LF2
  916  000019cc  54000000	nop; delay slot nop
  917  000019d0  0800001c	j	L38_LF2
  918  000019d4  54000000	nop; delay slot nop
  919  000019d8          	L39_LF2:
  920  000019d8  8fc2fff4	lw	r2,-12(r30)
  921  000019dc  20410001	addi	r1,r2,#1
  922  000019e0  00011020	add	r2,r0,r1
  923  000019e4  afc2fff4	sw	-12(r30),r2
  924  000019e8  0bffffc8	j	L37_LF2
  925  000019ec  54000000	nop; delay slot nop
  926  000019f0          	L38_LF2:
  927  000019f0  8fc1fff4	lw	r1,-12(r30)
  928  000019f4  08000004	j	L36_LF2
  929  000019f8  54000000	nop; delay slot nop
  930  000019fc          	L36_LF2:
  931  000019fc  8fa20000	lw	r2,0(r29)
  932  00001a00  8fdffff8	lw	r31,-8(r30)
  933  00001a04  001ee820	add	r29,r0,r30
  934  00001a08  8fdefffc	lw	r30,-4(r30)
  935  00001a0c  4be00000	jr	r31
  936  00001a10  54000000	nop
  937  00001a14          	.endproc _dstrlen
  938  00001a14          	.align 2
  939  00001a14          	.proc _dstrstr
  940  00001a14          	.global _dstrstr
  941  00001a14          	_dstrstr:
  942                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  943  00001a14  afbefffc	sw	-4(r29),r30; push fp
  944  00001a18  001df020	add	r30,r0,r29; fp = sp
  945  00001a1c  afbffff8	sw	-8(r29),r31; push ret addr
  946  00001a20  2fbd0018	subui	r29,r29,#24; alloc local storage
  947  00001a24  afa20000	sw	0(r29),r2
  948  00001a28  23bdfff8	addi	r29,r29,#-8
  949  00001a2c  001d0820	add	r1,r0,r29
  950  00001a30  8fc20004	lw	r2,4(r30)
  951  00001a34  ac220000	sw	(r1),r2
  952  00001a38  0fffff5c	jal	_dstrlen
  953  00001a3c  54000000	nop; delay slot nop
  954  00001a40  23bd0008	addi	r29,r29,#8
  955  00001a44  afc1fff4	sw	-12(r30),r1
  956  00001a48          	L41_LF2:
  957  00001a48  8fc10000	lw	r1,(r30)
  958  00001a4c  90220000	lbu	r2,(r1)
  959  00001a50  64410000	snei	r1,r2,#0
  960  00001a54  1420000c	bnez	r1,L43_LF2
  961  00001a58  54000000	nop; delay slot nop
  962  00001a5c  08000060	j	L42_LF2
  963  00001a60  54000000	nop; delay slot nop
  964  00001a64          	L43_LF2:
  965  00001a64  23bdfff0	addi	r29,r29,#-16
  966  00001a68  001d0820	add	r1,r0,r29
  967  00001a6c  8fc20000	lw	r2,(r30)
  968  00001a70  ac220000	sw	(r1),r2
  969  00001a74  8fc20004	lw	r2,4(r30)
  970  00001a78  ac220004	sw	4(r1),r2
  971  00001a7c  8fc2fff4	lw	r2,-12(r30)
  972  00001a80  ac220008	sw	8(r1),r2
  973  00001a84  0ffffdc0	jal	_dstrncmp
  974  00001a88  54000000	nop; delay slot nop
  975  00001a8c  23bd0010	addi	r29,r29,#16
  976  00001a90  64220000	snei	r2,r1,#0
  977  00001a94  14400010	bnez	r2,L44_LF2
  978  00001a98  54000000	nop; delay slot nop
  979  00001a9c  8fc10000	lw	r1,(r30)
  980  00001aa0  08000028	j	L40_LF2
  981  00001aa4  54000000	nop; delay slot nop
  982  00001aa8          	L44_LF2:
  983  00001aa8  8fc20000	lw	r2,(r30)
  984  00001aac  20410001	addi	r1,r2,#1
  985  00001ab0  00011020	add	r2,r0,r1
  986  00001ab4  afc20000	sw	(r30),r2
  987  00001ab8  0bffff8c	j	L41_LF2
  988  00001abc  54000000	nop; delay slot nop
  989  00001ac0          	L42_LF2:
  990  00001ac0  20010000	addi	r1,r0,#0
  991  00001ac4  08000004	j	L40_LF2
  992  00001ac8  54000000	nop; delay slot nop
  993  00001acc          	L40_LF2:
  994  00001acc  8fa20000	lw	r2,0(r29)
  995  00001ad0  8fdffff8	lw	r31,-8(r30)
  996  00001ad4  001ee820	add	r29,r0,r30
  997  00001ad8  8fdefffc	lw	r30,-4(r30)
  998  00001adc  4be00000	jr	r31
  999  00001ae0  54000000	nop
 1000  00001ae4          	.endproc _dstrstr
 1001  00001ae4          	.align 2
 1002  00001ae4          	.proc _dmindex
 1003  00001ae4          	.global _dmindex
 1004  00001ae4          	_dmindex:
 1005                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1006  00001ae4  afbefffc	sw	-4(r29),r30; push fp
 1007  00001ae8  001df020	add	r30,r0,r29; fp = sp
 1008  00001aec  afbffff8	sw	-8(r29),r31; push ret addr
 1009  00001af0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1010  00001af4  afa20000	sw	0(r29),r2
 1011  00001af8  54000000	nop
 1012  00001afc          	L46_LF2:
 1013  00001afc  8fc10000	lw	r1,(r30)
 1014  00001b00  90220000	lbu	r2,(r1)
 1015  00001b04  64410000	snei	r1,r2,#0
 1016  00001b08  1420000c	bnez	r1,L48_LF2
 1017  00001b0c  54000000	nop; delay slot nop
 1018  00001b10  08000070	j	L47_LF2
 1019  00001b14  54000000	nop; delay slot nop
 1020  00001b18          	L48_LF2:
 1021  00001b18  8fc10004	lw	r1,4(r30)
 1022  00001b1c  afc1fff4	sw	-12(r30),r1
 1023  00001b20          	L49_LF2:
 1024  00001b20  8fc1fff4	lw	r1,-12(r30)
 1025  00001b24  90220000	lbu	r2,(r1)
 1026  00001b28  64410000	snei	r1,r2,#0
 1027  00001b2c  1420000c	bnez	r1,L52_LF2
 1028  00001b30  54000000	nop; delay slot nop
 1029  00001b34  08000044	j	L50_LF2
 1030  00001b38  54000000	nop; delay slot nop
 1031  00001b3c          	L52_LF2:
 1032  00001b3c  8fc10000	lw	r1,(r30)
 1033  00001b40  8fc2fff4	lw	r2,-12(r30)
 1034  00001b44  90210000	lbu	r1,(r1)
 1035  00001b48  90420000	lbu	r2,(r2)
 1036  00001b4c  00220828	seq	r1,r1,r2
 1037  00001b50  10200010	beqz	r1,L51_LF2
 1038  00001b54  54000000	nop; delay slot nop
 1039  00001b58  8fc10000	lw	r1,(r30)
 1040  00001b5c  08000030	j	L45_LF2
 1041  00001b60  54000000	nop; delay slot nop
 1042  00001b64          	L53_LF2:
 1043  00001b64          	L51_LF2:
 1044  00001b64  8fc2fff4	lw	r2,-12(r30)
 1045  00001b68  20410001	addi	r1,r2,#1
 1046  00001b6c  00011020	add	r2,r0,r1
 1047  00001b70  afc2fff4	sw	-12(r30),r2
 1048  00001b74  0bffffa8	j	L49_LF2
 1049  00001b78  54000000	nop; delay slot nop
 1050  00001b7c          	L50_LF2:
 1051  00001b7c  0bffff7c	j	L46_LF2
 1052  00001b80  54000000	nop; delay slot nop
 1053  00001b84          	L47_LF2:
 1054  00001b84  20010000	addi	r1,r0,#0
 1055  00001b88  08000004	j	L45_LF2
 1056  00001b8c  54000000	nop; delay slot nop
 1057  00001b90          	L45_LF2:
 1058  00001b90  8fa20000	lw	r2,0(r29)
 1059  00001b94  8fdffff8	lw	r31,-8(r30)
 1060  00001b98  001ee820	add	r29,r0,r30
 1061  00001b9c  8fdefffc	lw	r30,-4(r30)
 1062  00001ba0  4be00000	jr	r31
 1063  00001ba4  54000000	nop
 1064  00001ba8          	.endproc _dmindex
 1065  00001ba8          	.align 2
 1066  00001ba8          	.proc _dindex
 1067  00001ba8          	.global _dindex
 1068  00001ba8          	_dindex:
 1069                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1070  00001ba8  afbefffc	sw	-4(r29),r30; push fp
 1071  00001bac  001df020	add	r30,r0,r29; fp = sp
 1072  00001bb0  afbffff8	sw	-8(r29),r31; push ret addr
 1073  00001bb4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1074  00001bb8  afa20000	sw	0(r29),r2
 1075  00001bbc  54000000	nop
 1076  00001bc0          	L55_LF2:
 1077  00001bc0  8fc10000	lw	r1,(r30)
 1078  00001bc4  90220000	lbu	r2,(r1)
 1079  00001bc8  64410000	snei	r1,r2,#0
 1080  00001bcc  1420000c	bnez	r1,L57_LF2
 1081  00001bd0  54000000	nop; delay slot nop
 1082  00001bd4  08000040	j	L56_LF2
 1083  00001bd8  54000000	nop; delay slot nop
 1084  00001bdc          	L57_LF2:
 1085  00001bdc  8fc10000	lw	r1,(r30)
 1086  00001be0  90220000	lbu	r2,(r1)
 1087  00001be4  8fc10004	lw	r1,4(r30)
 1088  00001be8  00411028	seq	r2,r2,r1
 1089  00001bec  10400010	beqz	r2,L58_LF2
 1090  00001bf0  54000000	nop; delay slot nop
 1091  00001bf4  8fc10000	lw	r1,(r30)
 1092  00001bf8  08000028	j	L54_LF2
 1093  00001bfc  54000000	nop; delay slot nop
 1094  00001c00          	L58_LF2:
 1095  00001c00  8fc20000	lw	r2,(r30)
 1096  00001c04  20410001	addi	r1,r2,#1
 1097  00001c08  00011020	add	r2,r0,r1
 1098  00001c0c  afc20000	sw	(r30),r2
 1099  00001c10  0bffffac	j	L55_LF2
 1100  00001c14  54000000	nop; delay slot nop
 1101  00001c18          	L56_LF2:
 1102  00001c18  20010000	addi	r1,r0,#0
 1103  00001c1c  08000004	j	L54_LF2
 1104  00001c20  54000000	nop; delay slot nop
 1105  00001c24          	L54_LF2:
 1106  00001c24  8fa20000	lw	r2,0(r29)
 1107  00001c28  8fdffff8	lw	r31,-8(r30)
 1108  00001c2c  001ee820	add	r29,r0,r30
 1109  00001c30  8fdefffc	lw	r30,-4(r30)
 1110  00001c34  4be00000	jr	r31
 1111  00001c38  54000000	nop
 1112  00001c3c          	.endproc _dindex
 1113  00001c3c          	.align 2
 1114  00001c3c          	.proc _ditoa
 1115  00001c3c          	.global _ditoa
 1116  00001c3c          	_ditoa:
 1117                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1118  00001c3c  afbefffc	sw	-4(r29),r30; push fp
 1119  00001c40  001df020	add	r30,r0,r29; fp = sp
 1120  00001c44  afbffff8	sw	-8(r29),r31; push ret addr
 1121  00001c48  2fbd0018	subui	r29,r29,#24; alloc local storage
 1122  00001c4c  afa20000	sw	0(r29),r2
 1123  00001c50  afa30004	sw	4(r29),r3
 1124  00001c54  8fc10000	lw	r1,(r30)
 1125  00001c58  68220000	slti	r2,r1,#0
 1126  00001c5c  1040002c	beqz	r2,L60_LF2
 1127  00001c60  54000000	nop; delay slot nop
 1128  00001c64  8fc10004	lw	r1,4(r30)
 1129  00001c68  20220001	addi	r2,r1,#1
 1130  00001c6c  afc20004	sw	4(r30),r2
 1131  00001c70  2002002d	addi	r2,r0,(#0x2d)&0xff
 1132  00001c74  a0220000	sb	(r1),r2
 1133  00001c78  8fc10000	lw	r1,(r30)
 1134  00001c7c  00011022	sub	r2,r0,r1
 1135  00001c80  afc20000	sw	(r30),r2
 1136  00001c84  08000118	j	L61_LF2
 1137  00001c88  54000000	nop; delay slot nop
 1138  00001c8c          	L60_LF2:
 1139  00001c8c  8fc10000	lw	r1,(r30)
 1140  00001c90  64220000	snei	r2,r1,#0
 1141  00001c94  14400020	bnez	r2,L62_LF2
 1142  00001c98  54000000	nop; delay slot nop
 1143  00001c9c  8fc10004	lw	r1,4(r30)
 1144  00001ca0  20220001	addi	r2,r1,#1
 1145  00001ca4  afc20004	sw	4(r30),r2
 1146  00001ca8  20020030	addi	r2,r0,(#0x30)&0xff
 1147  00001cac  a0220000	sb	(r1),r2
 1148  00001cb0  080000ec	j	L61_LF2
 1149  00001cb4  54000000	nop; delay slot nop
 1150  00001cb8          	L62_LF2:
 1151  00001cb8  20010001	addi	r1,r0,#1
 1152  00001cbc  afc1fff4	sw	-12(r30),r1
 1153  00001cc0          	L64_LF2:
 1154  00001cc0  8fc1fff4	lw	r1,-12(r30)
 1155  00001cc4  8fc20000	lw	r2,(r30)
 1156  00001cc8  0022082c	sle	r1,r1,r2
 1157  00001ccc  1420000c	bnez	r1,L66_LF2
 1158  00001cd0  54000000	nop; delay slot nop
 1159  00001cd4  08000024	j	L65_LF2
 1160  00001cd8  54000000	nop; delay slot nop
 1161  00001cdc          	L67_LF2:
 1162  00001cdc          	L66_LF2:
 1163  00001cdc  8fc1fff4	lw	r1,-12(r30)
 1164  00001ce0  00011820	add	r3,r0,r1
 1165  00001ce4  50620002	slli	r2,r3,#0x2
 1166  00001ce8  00411020	add	r2,r2,r1
 1167  00001cec  50410001	slli	r1,r2,#0x1
 1168  00001cf0  afc1fff4	sw	-12(r30),r1
 1169  00001cf4  0bffffc8	j	L64_LF2
 1170  00001cf8  54000000	nop; delay slot nop
 1171  00001cfc          	L65_LF2:
 1172  00001cfc  54000000	nop
 1173  00001d00          	L68_LF2:
 1174  00001d00  8fc1fff4	lw	r1,-12(r30)
 1175  00001d04  2002000a	addi	r2,r0,#10
 1176  00001d08  00200035	movi2fp	f0,r1
 1177  00001d0c  00400835	movi2fp	f1,r2
 1178  00001d10  0401000f	div	f0,f0,f1
 1179  00001d14  00000834	movfp2i	r1,f0
 1180  00001d18  afc1fff4	sw	-12(r30),r1
 1181  00001d1c  8fc10004	lw	r1,4(r30)
 1182  00001d20  20220001	addi	r2,r1,#1
 1183  00001d24  afc20004	sw	4(r30),r2
 1184  00001d28  8fc20000	lw	r2,(r30)
 1185  00001d2c  8fc3fff4	lw	r3,-12(r30)
 1186  00001d30  00400035	movi2fp	f0,r2
 1187  00001d34  00600835	movi2fp	f1,r3
 1188  00001d38  0401000f	div	f0,f0,f1
 1189  00001d3c  00001034	movfp2i	r2,f0
 1190  00001d40  00021820	add	r3,r0,r2
 1191  00001d44  20620030	addi	r2,r3,#48
 1192  00001d48  a0220000	sb	(r1),r2
 1193  00001d4c  8fc10000	lw	r1,(r30)
 1194  00001d50  8fc3fff4	lw	r3,-12(r30)
 1195  00001d54  00200035	movi2fp	f0,r1
 1196  00001d58  00600835	movi2fp	f1,r3
 1197  00001d5c  0401000f	div	f0,f0,f1
 1198  00001d60  00001034	movfp2i	r2,f0
 1199  00001d64  8fc3fff4	lw	r3,-12(r30)
 1200  00001d68  00400035	movi2fp	f0,r2
 1201  00001d6c  00600835	movi2fp	f1,r3
 1202  00001d70  0401000e	mult	f0,f0,f1
 1203  00001d74  00001034	movfp2i	r2,f0
 1204  00001d78  00220822	sub	r1,r1,r2
 1205  00001d7c  afc10000	sw	(r30),r1
 1206  00001d80          	L70_LF2:
 1207  00001d80  8fc1fff4	lw	r1,-12(r30)
 1208  00001d84  6c220001	sgti	r2,r1,#1
 1209  00001d88  1440000c	bnez	r2,L71_LF2
 1210  00001d8c  54000000	nop; delay slot nop
 1211  00001d90  0800000c	j	L61_LF2
 1212  00001d94  54000000	nop; delay slot nop
 1213  00001d98          	L71_LF2:
 1214  00001d98  0bffff64	j	L68_LF2
 1215  00001d9c  54000000	nop; delay slot nop
 1216  00001da0          	L69_LF2:
 1217  00001da0          	L63_LF2:
 1218  00001da0          	L61_LF2:
 1219  00001da0  8fc10004	lw	r1,4(r30)
 1220  00001da4  20020000	addi	r2,r0,(#0x0)&0xff
 1221  00001da8  a0220000	sb	(r1),r2
 1222  00001dac          	L59_LF2:
 1223  00001dac  8fa20000	lw	r2,0(r29)
 1224  00001db0  8fa30004	lw	r3,4(r29)
 1225  00001db4  8fdffff8	lw	r31,-8(r30)
 1226  00001db8  001ee820	add	r29,r0,r30
 1227  00001dbc  8fdefffc	lw	r30,-4(r30)
 1228  00001dc0  4be00000	jr	r31
 1229  00001dc4  54000000	nop
 1230  00001dc8          	.endproc _ditoa
 1231  00001dc8          	.align 2
 1232  00001dc8          	.proc _dstrtol
 1233  00001dc8          	.global _dstrtol
 1234  00001dc8          	_dstrtol:
 1235                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1236  00001dc8  afbefffc	sw	-4(r29),r30; push fp
 1237  00001dcc  001df020	add	r30,r0,r29; fp = sp
 1238  00001dd0  afbffff8	sw	-8(r29),r31; push ret addr
 1239  00001dd4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1240  00001dd8  afa20000	sw	0(r29),r2
 1241  00001ddc  20010000	addi	r1,r0,#0
 1242  00001de0  afc1fff4	sw	-12(r30),r1
 1243  00001de4          	L73_LF2:
 1244  00001de4  8fc10000	lw	r1,(r30)
 1245  00001de8  90220000	lbu	r2,(r1)
 1246  00001dec  60410020	seqi	r1,r2,#32
 1247  00001df0  14200034	bnez	r1,L75_LF2
 1248  00001df4  54000000	nop; delay slot nop
 1249  00001df8  8fc10000	lw	r1,(r30)
 1250  00001dfc  90220000	lbu	r2,(r1)
 1251  00001e00  60410009	seqi	r1,r2,#9
 1252  00001e04  14200020	bnez	r1,L75_LF2
 1253  00001e08  54000000	nop; delay slot nop
 1254  00001e0c  8fc10000	lw	r1,(r30)
 1255  00001e10  90220000	lbu	r2,(r1)
 1256  00001e14  6041000a	seqi	r1,r2,#10
 1257  00001e18  1420000c	bnez	r1,L75_LF2
 1258  00001e1c  54000000	nop; delay slot nop
 1259  00001e20  0800001c	j	L74_LF2
 1260  00001e24  54000000	nop; delay slot nop
 1261  00001e28          	L75_LF2:
 1262  00001e28  8fc20000	lw	r2,(r30)
 1263  00001e2c  20410001	addi	r1,r2,#1
 1264  00001e30  00011020	add	r2,r0,r1
 1265  00001e34  afc20000	sw	(r30),r2
 1266  00001e38  0bffffa8	j	L73_LF2
 1267  00001e3c  54000000	nop; delay slot nop
 1268  00001e40          	L74_LF2:
 1269  00001e40  8fc10004	lw	r1,4(r30)
 1270  00001e44  64220000	snei	r2,r1,#0
 1271  00001e48  10400010	beqz	r2,L76_LF2
 1272  00001e4c  54000000	nop; delay slot nop
 1273  00001e50  8fc10004	lw	r1,4(r30)
 1274  00001e54  8fc20000	lw	r2,(r30)
 1275  00001e58  ac220000	sw	(r1),r2
 1276  00001e5c          	L76_LF2:
 1277  00001e5c  8fc10000	lw	r1,(r30)
 1278  00001e60  90220000	lbu	r2,(r1)
 1279  00001e64  64410000	snei	r1,r2,#0
 1280  00001e68  14200010	bnez	r1,L77_LF2
 1281  00001e6c  54000000	nop; delay slot nop
 1282  00001e70  8fc1fff4	lw	r1,-12(r30)
 1283  00001e74  08000294	j	L72_LF2
 1284  00001e78  54000000	nop; delay slot nop
 1285  00001e7c          	L77_LF2:
 1286  00001e7c  8fc10000	lw	r1,(r30)
 1287  00001e80  90220000	lbu	r2,(r1)
 1288  00001e84  6041002d	seqi	r1,r2,#45
 1289  00001e88  10200024	beqz	r1,L78_LF2
 1290  00001e8c  54000000	nop; delay slot nop
 1291  00001e90  2001ffff	addi	r1,r0,#-1
 1292  00001e94  afc1ffec	sw	-20(r30),r1
 1293  00001e98  8fc20000	lw	r2,(r30)
 1294  00001e9c  20410001	addi	r1,r2,#1
 1295  00001ea0  00011020	add	r2,r0,r1
 1296  00001ea4  afc20000	sw	(r30),r2
 1297  00001ea8  0800000c	j	L79_LF2
 1298  00001eac  54000000	nop; delay slot nop
 1299  00001eb0          	L78_LF2:
 1300  00001eb0  20010001	addi	r1,r0,#1
 1301  00001eb4  afc1ffec	sw	-20(r30),r1
 1302  00001eb8          	L79_LF2:
 1303  00001eb8  8fc10008	lw	r1,8(r30)
 1304  00001ebc  64220000	snei	r2,r1,#0
 1305  00001ec0  14400090	bnez	r2,L80_LF2
 1306  00001ec4  54000000	nop; delay slot nop
 1307  00001ec8  8fc10000	lw	r1,(r30)
 1308  00001ecc  90220000	lbu	r2,(r1)
 1309  00001ed0  60410030	seqi	r1,r2,#48
 1310  00001ed4  10200074	beqz	r1,L81_LF2
 1311  00001ed8  54000000	nop; delay slot nop
 1312  00001edc  8fc20000	lw	r2,(r30)
 1313  00001ee0  20410001	addi	r1,r2,#1
 1314  00001ee4  00011020	add	r2,r0,r1
 1315  00001ee8  afc20000	sw	(r30),r2
 1316  00001eec  8fc10000	lw	r1,(r30)
 1317  00001ef0  90220000	lbu	r2,(r1)
 1318  00001ef4  60410078	seqi	r1,r2,#120
 1319  00001ef8  14200020	bnez	r1,L83_LF2
 1320  00001efc  54000000	nop; delay slot nop
 1321  00001f00  8fc10000	lw	r1,(r30)
 1322  00001f04  90220000	lbu	r2,(r1)
 1323  00001f08  60410058	seqi	r1,r2,#88
 1324  00001f0c  1420000c	bnez	r1,L83_LF2
 1325  00001f10  54000000	nop; delay slot nop
 1326  00001f14  08000024	j	L82_LF2
 1327  00001f18  54000000	nop; delay slot nop
 1328  00001f1c          	L83_LF2:
 1329  00001f1c  20010010	addi	r1,r0,#16
 1330  00001f20  afc10008	sw	8(r30),r1
 1331  00001f24  8fc20000	lw	r2,(r30)
 1332  00001f28  20410001	addi	r1,r2,#1
 1333  00001f2c  00011020	add	r2,r0,r1
 1334  00001f30  afc20000	sw	(r30),r2
 1335  00001f34  0800000c	j	L84_LF2
 1336  00001f38  54000000	nop; delay slot nop
 1337  00001f3c          	L82_LF2:
 1338  00001f3c  20010008	addi	r1,r0,#8
 1339  00001f40  afc10008	sw	8(r30),r1
 1340  00001f44          	L84_LF2:
 1341  00001f44  0800000c	j	L80_LF2
 1342  00001f48  54000000	nop; delay slot nop
 1343  00001f4c          	L81_LF2:
 1344  00001f4c  2001000a	addi	r1,r0,#10
 1345  00001f50  afc10008	sw	8(r30),r1
 1346  00001f54          	L85_LF2:
 1347  00001f54          	L80_LF2:
 1348  00001f54  8fc10008	lw	r1,8(r30)
 1349  00001f58  70220000	slei	r2,r1,#0
 1350  00001f5c  1440001c	bnez	r2,L87_LF2
 1351  00001f60  54000000	nop; delay slot nop
 1352  00001f64  8fc10008	lw	r1,8(r30)
 1353  00001f68  6c220010	sgti	r2,r1,#16
 1354  00001f6c  1440000c	bnez	r2,L87_LF2
 1355  00001f70  54000000	nop; delay slot nop
 1356  00001f74  08000010	j	L86_LF2
 1357  00001f78  54000000	nop; delay slot nop
 1358  00001f7c          	L87_LF2:
 1359  00001f7c  8fc1fff4	lw	r1,-12(r30)
 1360  00001f80  08000188	j	L72_LF2
 1361  00001f84  54000000	nop; delay slot nop
 1362  00001f88          	L86_LF2:
 1363  00001f88  54000000	nop
 1364  00001f8c          	L88_LF2:
 1365  00001f8c  8fc10000	lw	r1,(r30)
 1366  00001f90  90220000	lbu	r2,(r1)
 1367  00001f94  6c41002f	sgtui	r1,r2,#47
 1368  00001f98  10200030	beqz	r1,L91_LF2
 1369  00001f9c  54000000	nop; delay slot nop
 1370  00001fa0  8fc10000	lw	r1,(r30)
 1371  00001fa4  90220000	lbu	r2,(r1)
 1372  00001fa8  70410039	sleui	r1,r2,#57
 1373  00001fac  1020001c	beqz	r1,L91_LF2
 1374  00001fb0  54000000	nop; delay slot nop
 1375  00001fb4  8fc10000	lw	r1,(r30)
 1376  00001fb8  90220000	lbu	r2,(r1)
 1377  00001fbc  2041ffd0	addi	r1,r2,#-48
 1378  00001fc0  afc1fff0	sw	-16(r30),r1
 1379  00001fc4  0800008c	j	L92_LF2
 1380  00001fc8  54000000	nop; delay slot nop
 1381  00001fcc          	L91_LF2:
 1382  00001fcc  8fc10000	lw	r1,(r30)
 1383  00001fd0  90220000	lbu	r2,(r1)
 1384  00001fd4  6c410060	sgtui	r1,r2,#96
 1385  00001fd8  10200030	beqz	r1,L93_LF2
 1386  00001fdc  54000000	nop; delay slot nop
 1387  00001fe0  8fc10000	lw	r1,(r30)
 1388  00001fe4  90220000	lbu	r2,(r1)
 1389  00001fe8  7041007a	sleui	r1,r2,#122
 1390  00001fec  1020001c	beqz	r1,L93_LF2
 1391  00001ff0  54000000	nop; delay slot nop
 1392  00001ff4  8fc10000	lw	r1,(r30)
 1393  00001ff8  90220000	lbu	r2,(r1)
 1394  00001ffc  2041ffa9	addi	r1,r2,#-87
 1395  00002000  afc1fff0	sw	-16(r30),r1
 1396  00002004  0800004c	j	L92_LF2
 1397  00002008  54000000	nop; delay slot nop
 1398  0000200c          	L93_LF2:
 1399  0000200c  8fc10000	lw	r1,(r30)
 1400  00002010  90220000	lbu	r2,(r1)
 1401  00002014  6c410040	sgtui	r1,r2,#64
 1402  00002018  10200030	beqz	r1,L95_LF2
 1403  0000201c  54000000	nop; delay slot nop
 1404  00002020  8fc10000	lw	r1,(r30)
 1405  00002024  90220000	lbu	r2,(r1)
 1406  00002028  7041005a	sleui	r1,r2,#90
 1407  0000202c  1020001c	beqz	r1,L95_LF2
 1408  00002030  54000000	nop; delay slot nop
 1409  00002034  8fc10000	lw	r1,(r30)
 1410  00002038  90220000	lbu	r2,(r1)
 1411  0000203c  2041ffc9	addi	r1,r2,#-55
 1412  00002040  afc1fff0	sw	-16(r30),r1
 1413  00002044  0800000c	j	L92_LF2
 1414  00002048  54000000	nop; delay slot nop
 1415  0000204c          	L95_LF2:
 1416  0000204c  200103e8	addi	r1,r0,#1000
 1417  00002050  afc1fff0	sw	-16(r30),r1
 1418  00002054          	L96_LF2:
 1419  00002054          	L94_LF2:
 1420  00002054          	L92_LF2:
 1421  00002054  8fc1fff0	lw	r1,-16(r30)
 1422  00002058  8fc20008	lw	r2,8(r30)
 1423  0000205c  0022082a	slt	r1,r1,r2
 1424  00002060  10200040	beqz	r1,L90_LF2
 1425  00002064  54000000	nop; delay slot nop
 1426  00002068  8fc1fff4	lw	r1,-12(r30)
 1427  0000206c  8fc20008	lw	r2,8(r30)
 1428  00002070  00200035	movi2fp	f0,r1
 1429  00002074  00400835	movi2fp	f1,r2
 1430  00002078  0401000e	mult	f0,f0,f1
 1431  0000207c  00000834	movfp2i	r1,f0
 1432  00002080  afc1fff4	sw	-12(r30),r1
 1433  00002084  8fc1fff4	lw	r1,-12(r30)
 1434  00002088  8fc2fff0	lw	r2,-16(r30)
 1435  0000208c  00220820	add	r1,r1,r2
 1436  00002090  afc1fff4	sw	-12(r30),r1
 1437  00002094  8fc20000	lw	r2,(r30)
 1438  00002098  20410001	addi	r1,r2,#1
 1439  0000209c  00011020	add	r2,r0,r1
 1440  000020a0  afc20000	sw	(r30),r2
 1441  000020a4          	L97_LF2:
 1442  000020a4          	L90_LF2:
 1443  000020a4  8fc1fff0	lw	r1,-16(r30)
 1444  000020a8  8fc20008	lw	r2,8(r30)
 1445  000020ac  0022082a	slt	r1,r1,r2
 1446  000020b0  1420000c	bnez	r1,L98_LF2
 1447  000020b4  54000000	nop; delay slot nop
 1448  000020b8  0800000c	j	L89_LF2
 1449  000020bc  54000000	nop; delay slot nop
 1450  000020c0          	L98_LF2:
 1451  000020c0  0bfffec8	j	L88_LF2
 1452  000020c4  54000000	nop; delay slot nop
 1453  000020c8          	L89_LF2:
 1454  000020c8  8fc10004	lw	r1,4(r30)
 1455  000020cc  64220000	snei	r2,r1,#0
 1456  000020d0  10400010	beqz	r2,L99_LF2
 1457  000020d4  54000000	nop; delay slot nop
 1458  000020d8  8fc10004	lw	r1,4(r30)
 1459  000020dc  8fc20000	lw	r2,(r30)
 1460  000020e0  ac220000	sw	(r1),r2
 1461  000020e4          	L99_LF2:
 1462  000020e4  8fc1fff4	lw	r1,-12(r30)
 1463  000020e8  8fc2ffec	lw	r2,-20(r30)
 1464  000020ec  00200035	movi2fp	f0,r1
 1465  000020f0  00400835	movi2fp	f1,r2
 1466  000020f4  0401000e	mult	f0,f0,f1
 1467  000020f8  00000834	movfp2i	r1,f0
 1468  000020fc  afc1fff4	sw	-12(r30),r1
 1469  00002100  8fc1fff4	lw	r1,-12(r30)
 1470  00002104  08000004	j	L72_LF2
 1471  00002108  54000000	nop; delay slot nop
 1472  0000210c          	L72_LF2:
 1473  0000210c  8fa20000	lw	r2,0(r29)
 1474  00002110  8fdffff8	lw	r31,-8(r30)
 1475  00002114  001ee820	add	r29,r0,r30
 1476  00002118  8fdefffc	lw	r30,-4(r30)
 1477  0000211c  4be00000	jr	r31
 1478  00002120  54000000	nop
 1479  00002124          	.endproc _dstrtol
 1480  00002124          	.align 2
 1481  00002124          	.proc _bcopy
 1482  00002124          	.global _bcopy
 1483  00002124          	_bcopy:
 1484                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1485  00002124  afbefffc	sw	-4(r29),r30; push fp
 1486  00002128  001df020	add	r30,r0,r29; fp = sp
 1487  0000212c  afbffff8	sw	-8(r29),r31; push ret addr
 1488  00002130  2fbd0010	subui	r29,r29,#16; alloc local storage
 1489  00002134  afa20000	sw	0(r29),r2
 1490  00002138  afa30004	sw	4(r29),r3
 1491  0000213c  54000000	nop
 1492  00002140          	L101_LF2:
 1493  00002140  8fc10008	lw	r1,8(r30)
 1494  00002144  2022ffff	addi	r2,r1,#-1
 1495  00002148  afc20008	sw	8(r30),r2
 1496  0000214c  6c210000	sgti	r1,r1,#0
 1497  00002150  1420000c	bnez	r1,L103_LF2
 1498  00002154  54000000	nop; delay slot nop
 1499  00002158  0800002c	j	L102_LF2
 1500  0000215c  54000000	nop; delay slot nop
 1501  00002160          	L103_LF2:
 1502  00002160  8fc10004	lw	r1,4(r30)
 1503  00002164  20220001	addi	r2,r1,#1
 1504  00002168  afc20004	sw	4(r30),r2
 1505  0000216c  8fc20000	lw	r2,(r30)
 1506  00002170  20430001	addi	r3,r2,#1
 1507  00002174  afc30000	sw	(r30),r3
 1508  00002178  80420000	lb	r2,(r2)
 1509  0000217c  a0220000	sb	(r1),r2
 1510  00002180  0bffffbc	j	L101_LF2
 1511  00002184  54000000	nop; delay slot nop
 1512  00002188          	L102_LF2:
 1513  00002188          	L100_LF2:
 1514  00002188  8fa20000	lw	r2,0(r29)
 1515  0000218c  8fa30004	lw	r3,4(r29)
 1516  00002190  8fdffff8	lw	r31,-8(r30)
 1517  00002194  001ee820	add	r29,r0,r30
 1518  00002198  8fdefffc	lw	r30,-4(r30)
 1519  0000219c  4be00000	jr	r31
 1520  000021a0  54000000	nop
 1521  000021a4          	.endproc _bcopy
 1522  000021a4          	.align 2
 1523  000021a4          	.proc _bzero
 1524  000021a4          	.global _bzero
 1525  000021a4          	_bzero:
 1526                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1527  000021a4  afbefffc	sw	-4(r29),r30; push fp
 1528  000021a8  001df020	add	r30,r0,r29; fp = sp
 1529  000021ac  afbffff8	sw	-8(r29),r31; push ret addr
 1530  000021b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1531  000021b4  afa20000	sw	0(r29),r2
 1532  000021b8  54000000	nop
 1533  000021bc          	L105_LF2:
 1534  000021bc  8fc10004	lw	r1,4(r30)
 1535  000021c0  2022ffff	addi	r2,r1,#-1
 1536  000021c4  afc20004	sw	4(r30),r2
 1537  000021c8  6c210000	sgti	r1,r1,#0
 1538  000021cc  1420000c	bnez	r1,L107_LF2
 1539  000021d0  54000000	nop; delay slot nop
 1540  000021d4  08000020	j	L106_LF2
 1541  000021d8  54000000	nop; delay slot nop
 1542  000021dc          	L107_LF2:
 1543  000021dc  8fc10000	lw	r1,(r30)
 1544  000021e0  20220001	addi	r2,r1,#1
 1545  000021e4  afc20000	sw	(r30),r2
 1546  000021e8  20020000	addi	r2,r0,(#0x0)&0xff
 1547  000021ec  a0220000	sb	(r1),r2
 1548  000021f0  0bffffc8	j	L105_LF2
 1549  000021f4  54000000	nop; delay slot nop
 1550  000021f8          	L106_LF2:
 1551  000021f8          	L104_LF2:
 1552  000021f8  8fa20000	lw	r2,0(r29)
 1553  000021fc  8fdffff8	lw	r31,-8(r30)
 1554  00002200  001ee820	add	r29,r0,r30
 1555  00002204  8fdefffc	lw	r30,-4(r30)
 1556  00002208  4be00000	jr	r31
 1557  0000220c  54000000	nop
 1558  00002210          	.endproc _bzero
 1559  00002210          	.align 2
 1560  00002210          	.proc _min
 1561  00002210          	.global _min
 1562  00002210          	_min:
 1563                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1564  00002210  afbefffc	sw	-4(r29),r30; push fp
 1565  00002214  001df020	add	r30,r0,r29; fp = sp
 1566  00002218  afbffff8	sw	-8(r29),r31; push ret addr
 1567  0000221c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1568  00002220  afa20000	sw	0(r29),r2
 1569  00002224  afa30004	sw	4(r29),r3
 1570  00002228  8fc10000	lw	r1,(r30)
 1571  0000222c  8fc20004	lw	r2,4(r30)
 1572  00002230  0022182c	sle	r3,r1,r2
 1573  00002234  14600008	bnez	r3,L109_LF2
 1574  00002238  54000000	nop; delay slot nop
 1575  0000223c  8fc10004	lw	r1,4(r30)
 1576  00002240          	L109_LF2:
 1577  00002240  08000004	j	L108_LF2
 1578  00002244  54000000	nop; delay slot nop
 1579  00002248          	L108_LF2:
 1580  00002248  8fa20000	lw	r2,0(r29)
 1581  0000224c  8fa30004	lw	r3,4(r29)
 1582  00002250  8fdffff8	lw	r31,-8(r30)
 1583  00002254  001ee820	add	r29,r0,r30
 1584  00002258  8fdefffc	lw	r30,-4(r30)
 1585  0000225c  4be00000	jr	r31
 1586  00002260  54000000	nop
 1587  00002264          	.endproc _min
 1588                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1589                      ;;;
 1590                      ;;; Most of the traps are called in files from libtraps.
 1593  00002264          	.align 2
 1594  00002264          	.proc _exit
 1595  00002264          	.global _exit
 1596  00002264          	_exit:
 1597  00002264  44000300	trap	#0x300
 1598  00002268  4be00000	jr	r31
 1599  0000226c  54000000	nop
 1600  00002270          	.endproc _exit
 1602                      ; for the benefit of gcc.
 1603  00002270          	.proc ___main
 1604  00002270          	.global ___main
 1605  00002270          	___main:
 1606  00002270  4be00000	jr	r31
 1607  00002274  54000000	nop
 1608  00002278          	.endproc ___main
 1609  00002278          	.text
 1610  00002278          	.global _etext
 1611  00002278          	_etext:
 1612  00002278          	.align 3
 1613  00002278          	.data
 1614  0000318e          	.global _edata
 1615  0000318e          	_edata:

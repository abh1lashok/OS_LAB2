; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lb	r2,3(r30)
	addi	r31,r0,#0
	andi	r1,r2,#0x00ff
	seqi	r1,r1,#32
	bnez	r1,L6
	nop	; not filled.
	addi	r1,r2,#-9
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#1
	beqz	r1,L5
	nop	; not filled.
L6:
	addi	r31,r0,#1
L5:
	add	r1,r0,r31
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lb	r31,3(r30)
	addi	r2,r0,#0
	addi	r1,r31,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L12
	nop	; not filled.
	addi	r1,r31,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L12
	nop	; not filled.
	andi	r1,r31,#0x00ff
	snei	r1,r1,#65
	bnez	r1,L11
	nop	; not filled.
L12:
	addi	r2,r0,#1
L11:
	add	r1,r0,r2
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _put_item_cb
.global _put_item_cb
_put_item_cb:
;  Function 'put_item_cb'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r3,4(r30)
	lw	r1,(r3)
	add	r1,r3,r1
	lb	r31,3(r30)
	sb	8(r1),r31
	lw	r1,(r3)
	addi	r4,r1,#1
	addi	r1,r0,#10
	movi2fp	f0,r4
	movi2fp	f1,r1
	div	f0,f0,f1
	movfp2i	r2,f0
	slli	r1,r2,#0x2
	add	r1,r1,r2
	slli	r1,r1,#0x1
	sub	r1,r4,r1
	sw	(r3),r1
	addi	r1,r0,#1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _put_item_cb
	.align 2
.proc _check_item_cb
.global _check_item_cb
_check_item_cb:
;  Function 'check_item_cb'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	lw	r2,4(r30)
	lw	r1,4(r2)
	add	r1,r2,r1
	lb	r1,8(r1)
	sb	(r3),r1
	addi	r1,r0,#1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _check_item_cb
	.align 2
.proc _get_item_cb
.global _get_item_cb
_get_item_cb:
;  Function 'get_item_cb'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	lw	r3,4(r30)
	lw	r1,4(r3)
	add	r1,r3,r1
	lb	r1,8(r1)
	sb	(r2),r1
	lw	r1,4(r3)
	addi	r4,r1,#1
	addi	r1,r0,#10
	movi2fp	f0,r4
	movi2fp	f1,r1
	div	f0,f0,f1
	movfp2i	r2,f0
	slli	r1,r2,#0x2
	add	r1,r1,r2
	slli	r1,r1,#0x1
	sub	r1,r4,r1
	sw	4(r3),r1
	addi	r1,r0,#1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _get_item_cb
	.align 2
.proc _is_full
.global _is_full
_is_full:
;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r4,(r30)
	lw	r1,(r4)
	addi	r3,r1,#1
	addi	r1,r0,#10
	movi2fp	f0,r3
	movi2fp	f1,r1
	div	f0,f0,f1
	movfp2i	r2,f0
	slli	r1,r2,#0x2
	add	r1,r1,r2
	slli	r1,r1,#0x1
	sub	r2,r3,r1
	lw	r1,4(r4)
	seq	r2,r2,r1
	addi	r1,r0,#1
	bnez	r2,L23
	nop	; not filled.
	addi	r1,r0,#0
L23:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _is_full
	.align 2
.proc _is_empty
.global _is_empty
_is_empty:
;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	lw	r2,(r1)
	lw	r1,4(r1)
	seq	r2,r2,r1
	addi	r1,r0,#1
	bnez	r2,L30
	nop	; not filled.
	addi	r1,r0,#0
L30:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _is_empty
.data
	.align 2
LC0:
	.ascii "Circular Buffer Initiated\n\000"
.text
	.align 2
.proc _init_cb
.global _init_cb
_init_cb:
;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lw	r1,(r30)
	addi	r2,r0,#0
	sw	(r1),r2
	sw	4(r1),r2
	addi	r29,r29,#-8
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r29),r2
	jal	_Printf
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _init_cb
.data
	.align 2
LC1:
	.ascii " Circular Buffer =>  \000"
	.align 2
LC2:
	.ascii "%c\000"
	.align 2
LC3:
	.ascii "\n\000"
.text
	.align 2
.proc _Print_cb
.global _Print_cb
_Print_cb:
;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	sw	20(r29),r7
	lw	r5,(r30)
	addi	r29,r29,#-8
	lhi	r7,((LC1)>>16)&0xffff
	addui	r7,r7,(LC1)&0xffff
	sw	(r29),r7
	jal	_Printf
	nop	; not filled.
	addi	r4,r0,#0
	addi	r29,r29,#8
	addi	r6,r0,#10
L45:
	addi	r29,r29,#-8
	lhi	r7,((LC2)>>16)&0xffff
	addui	r7,r7,(LC2)&0xffff
	sw	(r29),r7
	lw	r1,4(r5)
	add	r3,r4,r1
	movi2fp	f0,r3
	movi2fp	f1,r6
	div	f0,f0,f1
	movfp2i	r2,f0
	slli	r1,r2,#0x2
	add	r1,r1,r2
	slli	r1,r1,#0x1
	sub	r1,r3,r1
	add	r1,r5,r1
	lbu	r1,8(r1)
	sw	4(r29),r1
	jal	_Printf
	nop	; not filled.
	addi	r29,r29,#8
	addi	r4,r4,#1
	slei	r1,r4,#9
	bnez	r1,L45
	nop	; not filled.
	addi	r29,r29,#-8
	lhi	r7,((LC3)>>16)&0xffff
	addui	r7,r7,(LC3)&0xffff
	sw	(r29),r7
	jal	_Printf
	nop	; not filled.
	addi	r29,r29,#8
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r7,20(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _Print_cb
.data
	.align 2
LC4:
	.ascii "Usage: \000"
	.align 2
LC5:
	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
	.ascii "dle to lock>\n\000"
	.align 2
LC6:
	.ascii "Could not map the virtual address to the memory in \000"
	.align 2
LC7:
	.ascii ", exiting...\n\000"
	.align 2
LC8:
	.ascii "Consumer %d removed: %c\n\000"
	.align 2
LC9:
	.ascii "Bad semaphore s_procs_completed (%d) in \000"
.text
	.align 2
.proc _main
.global _main
_main:
;  Function 'main'; 1000 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#1008	; alloc local storage
	lw	r2,(r30)
	lw	r8,4(r30)
	jal	___main
	nop	; not filled.
	addi	r5,r0,#0
	snei	r1,r2,#6
	beqz	r1,L48
	nop	; not filled.
	addi	r29,r29,#-8
	lhi	r12,((LC4)>>16)&0xffff
	addui	r12,r12,(LC4)&0xffff
	sw	(r29),r12
	jal	_Printf
	nop	; not filled.
	lw	r12,(r8)
	sw	(r29),r12
	jal	_Printf
	nop	; not filled.
	lhi	r12,((LC5)>>16)&0xffff
	addui	r12,r12,(LC5)&0xffff
	sw	(r29),r12
	jal	_Printf
	nop	; not filled.
	jal	_Exit
	nop	; not filled.
	addi	r29,r29,#8
L48:
	addi	r29,r29,#-16
	lw	r12,4(r8)
	sw	(r29),r12
	addi	r12,r0,#0
	sw	4(r29),r12
	addi	r12,r0,#10
	sw	8(r29),r12
	jal	_dstrtol
	nop	; not filled.
	add	r2,r0,r1
	lw	r12,8(r8)
	sw	(r29),r12
	addi	r12,r0,#0
	sw	4(r29),r12
	addi	r12,r0,#10
	sw	8(r29),r12
	jal	_dstrtol
	nop	; not filled.
	add	r11,r0,r1
	lw	r12,12(r8)
	sw	(r29),r12
	addi	r12,r0,#0
	sw	4(r29),r12
	addi	r12,r0,#10
	sw	8(r29),r12
	jal	_dstrtol
	nop	; not filled.
	add	r7,r0,r1
	lw	r12,16(r8)
	sw	(r29),r12
	addi	r12,r0,#0
	sw	4(r29),r12
	addi	r12,r0,#10
	sw	8(r29),r12
	jal	_dstrtol
	nop	; not filled.
	add	r10,r0,r1
	lw	r12,20(r8)
	sw	(r29),r12
	addi	r12,r0,#0
	sw	4(r29),r12
	addi	r12,r0,#10
	sw	8(r29),r12
	jal	_dstrtol
	nop	; not filled.
	add	r9,r0,r1
	sw	(r29),r2
	jal	_shmat
	nop	; not filled.
	add	r2,r0,r1
	addi	r29,r29,#16
	snei	r1,r2,#0
	bnez	r1,L49
	nop	; not filled.
	addi	r29,r29,#-8
	lhi	r12,((LC6)>>16)&0xffff
	addui	r12,r12,(LC6)&0xffff
	sw	(r29),r12
	jal	_Printf
	nop	; not filled.
	lw	r12,(r8)
	sw	(r29),r12
	jal	_Printf
	nop	; not filled.
	lhi	r12,((LC7)>>16)&0xffff
	addui	r12,r12,(LC7)&0xffff
	sw	(r29),r12
	jal	_Printf
	nop	; not filled.
	jal	_Exit
	nop	; not filled.
	addi	r29,r29,#8
L49:
	addi	r4,r2,#8
	addi	r6,r30,#-1008
L52:
	addi	r29,r29,#-8
	sw	(r29),r7
	jal	_lock_acquire
	nop	; not filled.
	addi	r29,r29,#8
	lw	r1,(r4)
	lw	r2,4(r4)
	seq	r1,r1,r2
	addi	r2,r0,#0
	beqz	r1,L55
	nop	; not filled.
	addi	r2,r0,#1
L55:
	snei	r1,r2,#0
	beqz	r1,L53
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r9
	jal	_cond_wait
	nop	; not filled.
	addi	r29,r29,#8
L53:
	addi	r2,r30,#-1008
	add	r2,r2,r5
	lw	r1,4(r4)
	add	r1,r4,r1
	lb	r1,8(r1)
	sb	(r2),r1
	snei	r1,r5,#0
	bnez	r1,L72
	nop	; not filled.
	lbu	r1,(r6)
	seqi	r1,r1,#48
	beqz	r1,L58
	nop	; not filled.
	j	L59
	nop	; not filled.
L72:
	lb	r2,(r6)
	andi	r31,r2,#0x00ff
	add	r1,r30,r5
	lbu	r1,-1009(r1)
	addi	r1,r1,#1
	seq	r1,r31,r1
	bnez	r1,L59
	nop	; not filled.
	addi	r3,r0,#0
	addi	r1,r2,#-48
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#9
	bnez	r1,L63
	nop	; not filled.
	addi	r1,r2,#-97
	andi	r1,r1,#0x00ff
	sleui	r1,r1,#5
	bnez	r1,L63
	nop	; not filled.
	snei	r1,r31,#65
	bnez	r1,L62
	nop	; not filled.
L63:
	addi	r3,r0,#1
L62:
	snei	r1,r3,#0
	bnez	r1,L58
	nop	; not filled.
	seqi	r1,r5,#10
	beqz	r1,L58
	nop	; not filled.
L59:
	addi	r2,r30,#-1008
	add	r2,r2,r5
	lw	r1,4(r4)
	add	r1,r4,r1
	lb	r1,8(r1)
	sb	(r2),r1
	lw	r1,4(r4)
	addi	r3,r1,#1
	addi	r1,r0,#10
	movi2fp	f0,r3
	movi2fp	f1,r1
	div	f0,f0,f1
	movfp2i	r2,f0
	slli	r1,r2,#0x2
	add	r1,r1,r2
	slli	r1,r1,#0x1
	sub	r1,r3,r1
	sw	4(r4),r1
	jal	_Getpid
	nop	; not filled.
	addi	r29,r29,#-16
	lhi	r12,((LC8)>>16)&0xffff
	addui	r12,r12,(LC8)&0xffff
	sw	(r29),r12
	sw	4(r29),r1
	lbu	r1,(r6)
	sw	8(r29),r1
	jal	_Printf
	nop	; not filled.
	addi	r6,r6,#1
	addi	r5,r5,#1
	sw	(r29),r10
	jal	_cond_signal
	nop	; not filled.
	addi	r29,r29,#16
L58:
	addi	r29,r29,#-8
	sw	(r29),r7
	jal	_lock_release
	nop	; not filled.
	addi	r29,r29,#8
	slei	r1,r5,#9
	bnez	r1,L52
	nop	; not filled.
	addi	r29,r29,#-8
	sw	(r29),r7
	jal	_lock_acquire
	nop	; not filled.
	addi	r29,r29,#8
	addi	r2,r30,#-1008
	addi	r3,r30,#-999
L69:
	addi	r29,r29,#-8
	lhi	r12,((LC2)>>16)&0xffff
	addui	r12,r12,(LC2)&0xffff
	sw	(r29),r12
	lbu	r1,(r2)
	sw	4(r29),r1
	jal	_Printf
	nop	; not filled.
	addi	r29,r29,#8
	addi	r2,r2,#1
	sle	r1,r2,r3
	bnez	r1,L69
	nop	; not filled.
	addi	r29,r29,#-8
	lhi	r12,((LC3)>>16)&0xffff
	addui	r12,r12,(LC3)&0xffff
	sw	(r29),r12
	jal	_Printf
	nop	; not filled.
	sw	(r29),r7
	jal	_lock_release
	nop	; not filled.
	sw	(r29),r11
	jal	_sem_signal
	nop	; not filled.
	addi	r29,r29,#8
	snei	r1,r1,#1
	beqz	r1,L71
	nop	; not filled.
	addi	r29,r29,#-8
	lhi	r12,((LC9)>>16)&0xffff
	addui	r12,r12,(LC9)&0xffff
	sw	(r29),r12
	sw	4(r29),r11
	jal	_Printf
	nop	; not filled.
	lw	r8,(r8)
	sw	(r29),r8
	jal	_Printf
	nop	; not filled.
	lhi	r12,((LC7)>>16)&0xffff
	addui	r12,r12,(LC7)&0xffff
	sw	(r29),r12
	jal	_Printf
	nop	; not filled.
	jal	_Exit
	nop	; not filled.
	addi	r29,r29,#8
L71:
	jal	_exit
	nop
.endproc _main

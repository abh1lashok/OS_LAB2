 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 633
    4                      ; Text size: 6152
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  4342202d	.ascii "CB ---- Put %c in %d\n\000"
   82  00003004  2d2d2d20	
   82  00003008  50757420	
   82  0000300c  25632069	
   82  00003010  6e202564	
   82  00003014  0a00    	
   83  00003016          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _put_item_cb
   86  000010d4          	.global _put_item_cb
   87  000010d4          	_put_item_cb:
   88                      ;  Function 'put_item_cb'; 0 bytes of locals, 4 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  afa40008	sw	8(r29),r4
   96  000010f0  afa5000c	sw	12(r29),r5
   97  000010f4  83c20003	lb	r2,3(r30)
   98  000010f8  8fc30004	lw	r3,4(r30)
   99  000010fc  8c610000	lw	r1,(r3)
  100  00001100  00610820	add	r1,r3,r1
  101  00001104  a0220008	sb	8(r1),r2
  102  00001108  23bdfff0	addi	r29,r29,#-16
  103  0000110c  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  104  00001110  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  105  00001114  afa50000	sw	(r29),r5
  106  00001118  304100ff	andi	r1,r2,#0x00ff
  107  0000111c  afa10004	sw	4(r29),r1
  108  00001120  8c650000	lw	r5,(r3)
  109  00001124  afa50008	sw	8(r29),r5
  110  00001128  0c0008d8	jal	_Printf
  111  0000112c  54000000	nop; not filled.
  112  00001130  8c610000	lw	r1,(r3)
  113  00001134  20240001	addi	r4,r1,#1
  114  00001138  2001000a	addi	r1,r0,#10
  115  0000113c  00800035	movi2fp	f0,r4
  116  00001140  00200835	movi2fp	f1,r1
  117  00001144  0401000f	div	f0,f0,f1
  118  00001148  00001034	movfp2i	r2,f0
  119  0000114c  50410002	slli	r1,r2,#0x2
  120  00001150  00220820	add	r1,r1,r2
  121  00001154  50210001	slli	r1,r1,#0x1
  122  00001158  00810822	sub	r1,r4,r1
  123  0000115c  ac610000	sw	(r3),r1
  124  00001160  20010001	addi	r1,r0,#1
  125  00001164  23bd0010	addi	r29,r29,#16
  126  00001168  8fa20000	lw	r2,0(r29)
  127  0000116c  8fa30004	lw	r3,4(r29)
  128  00001170  8fa40008	lw	r4,8(r29)
  129  00001174  8fa5000c	lw	r5,12(r29)
  130  00001178  8fdffff8	lw	r31,-8(r30)
  131  0000117c  001ee820	add	r29,r0,r30
  132  00001180  8fdefffc	lw	r30,-4(r30)
  133  00001184  4be00000	jr	r31
  134  00001188  54000000	nop
  135  0000118c          	.endproc _put_item_cb
  136  0000118c          	.data
  137  00003016          	.align 2
  138  00003018          	LC1_LF0:
  139  00003018  4342202d	.ascii "CB ----  checking %c from %d\n\000"
  139  0000301c  2d2d2d20	
  139  00003020  20636865	
  139  00003024  636b696e	
  139  00003028  67202563	
  139  0000302c  2066726f	
  139  00003030  6d202564	
  139  00003034  0a00    	
  140  00003036          	.text
  141  0000118c          	.align 2
  142  0000118c          	.proc _check_item_cb
  143  0000118c          	.global _check_item_cb
  144  0000118c          	_check_item_cb:
  145                      ;  Function 'check_item_cb'; 0 bytes of locals, 3 regs to save.
  146  0000118c  afbefffc	sw	-4(r29),r30; push fp
  147  00001190  001df020	add	r30,r0,r29; fp = sp
  148  00001194  afbffff8	sw	-8(r29),r31; push ret addr
  149  00001198  2fbd0018	subui	r29,r29,#24; alloc local storage
  150  0000119c  afa20000	sw	0(r29),r2
  151  000011a0  afa30004	sw	4(r29),r3
  152  000011a4  afa40008	sw	8(r29),r4
  153  000011a8  8fc30000	lw	r3,(r30)
  154  000011ac  8fc20004	lw	r2,4(r30)
  155  000011b0  8c410004	lw	r1,4(r2)
  156  000011b4  00410820	add	r1,r2,r1
  157  000011b8  80210008	lb	r1,8(r1)
  158  000011bc  a0610000	sb	(r3),r1
  159  000011c0  23bdfff0	addi	r29,r29,#-16
  160  000011c4  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  161  000011c8  24843018	addui	r4,r4,(LC1_LF0)&0xffff
  162  000011cc  afa40000	sw	(r29),r4
  163  000011d0  90610000	lbu	r1,(r3)
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  8c420004	lw	r2,4(r2)
  166  000011dc  afa20008	sw	8(r29),r2
  167  000011e0  0c000820	jal	_Printf
  168  000011e4  54000000	nop; not filled.
  169  000011e8  20010001	addi	r1,r0,#1
  170  000011ec  23bd0010	addi	r29,r29,#16
  171  000011f0  8fa20000	lw	r2,0(r29)
  172  000011f4  8fa30004	lw	r3,4(r29)
  173  000011f8  8fa40008	lw	r4,8(r29)
  174  000011fc  8fdffff8	lw	r31,-8(r30)
  175  00001200  001ee820	add	r29,r0,r30
  176  00001204  8fdefffc	lw	r30,-4(r30)
  177  00001208  4be00000	jr	r31
  178  0000120c  54000000	nop
  179  00001210          	.endproc _check_item_cb
  180  00001210          	.data
  181  00003036          	.align 2
  182  00003038          	LC2_LF0:
  183  00003038  4342202d	.ascii "CB ----  Got %c from %d\n\000"
  183  0000303c  2d2d2d20	
  183  00003040  20476f74	
  183  00003044  20256320	
  183  00003048  66726f6d	
  183  0000304c  2025640a	
  183  00003050  00      	
  184  00003051          	.text
  185  00001210          	.align 2
  186  00001210          	.proc _get_item_cb
  187  00001210          	.global _get_item_cb
  188  00001210          	_get_item_cb:
  189                      ;  Function 'get_item_cb'; 0 bytes of locals, 4 regs to save.
  190  00001210  afbefffc	sw	-4(r29),r30; push fp
  191  00001214  001df020	add	r30,r0,r29; fp = sp
  192  00001218  afbffff8	sw	-8(r29),r31; push ret addr
  193  0000121c  2fbd0018	subui	r29,r29,#24; alloc local storage
  194  00001220  afa20000	sw	0(r29),r2
  195  00001224  afa30004	sw	4(r29),r3
  196  00001228  afa40008	sw	8(r29),r4
  197  0000122c  afa5000c	sw	12(r29),r5
  198  00001230  8fc20000	lw	r2,(r30)
  199  00001234  8fc30004	lw	r3,4(r30)
  200  00001238  8c610004	lw	r1,4(r3)
  201  0000123c  00610820	add	r1,r3,r1
  202  00001240  80210008	lb	r1,8(r1)
  203  00001244  a0410000	sb	(r2),r1
  204  00001248  23bdfff0	addi	r29,r29,#-16
  205  0000124c  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  206  00001250  24a53038	addui	r5,r5,(LC2_LF0)&0xffff
  207  00001254  afa50000	sw	(r29),r5
  208  00001258  90410000	lbu	r1,(r2)
  209  0000125c  afa10004	sw	4(r29),r1
  210  00001260  8c650004	lw	r5,4(r3)
  211  00001264  afa50008	sw	8(r29),r5
  212  00001268  0c000798	jal	_Printf
  213  0000126c  54000000	nop; not filled.
  214  00001270  8c610004	lw	r1,4(r3)
  215  00001274  20240001	addi	r4,r1,#1
  216  00001278  2001000a	addi	r1,r0,#10
  217  0000127c  00800035	movi2fp	f0,r4
  218  00001280  00200835	movi2fp	f1,r1
  219  00001284  0401000f	div	f0,f0,f1
  220  00001288  00001034	movfp2i	r2,f0
  221  0000128c  50410002	slli	r1,r2,#0x2
  222  00001290  00220820	add	r1,r1,r2
  223  00001294  50210001	slli	r1,r1,#0x1
  224  00001298  00810822	sub	r1,r4,r1
  225  0000129c  ac610004	sw	4(r3),r1
  226  000012a0  20010001	addi	r1,r0,#1
  227  000012a4  23bd0010	addi	r29,r29,#16
  228  000012a8  8fa20000	lw	r2,0(r29)
  229  000012ac  8fa30004	lw	r3,4(r29)
  230  000012b0  8fa40008	lw	r4,8(r29)
  231  000012b4  8fa5000c	lw	r5,12(r29)
  232  000012b8  8fdffff8	lw	r31,-8(r30)
  233  000012bc  001ee820	add	r29,r0,r30
  234  000012c0  8fdefffc	lw	r30,-4(r30)
  235  000012c4  4be00000	jr	r31
  236  000012c8  54000000	nop
  237  000012cc          	.endproc _get_item_cb
  238  000012cc          	.align 2
  239  000012cc          	.proc _is_full
  240  000012cc          	.global _is_full
  241  000012cc          	_is_full:
  242                      ;  Function 'is_full'; 0 bytes of locals, 3 regs to save.
  243  000012cc  afbefffc	sw	-4(r29),r30; push fp
  244  000012d0  001df020	add	r30,r0,r29; fp = sp
  245  000012d4  afbffff8	sw	-8(r29),r31; push ret addr
  246  000012d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  247  000012dc  afa20000	sw	0(r29),r2
  248  000012e0  afa30004	sw	4(r29),r3
  249  000012e4  afa40008	sw	8(r29),r4
  250  000012e8  8fc40000	lw	r4,(r30)
  251  000012ec  8c810000	lw	r1,(r4)
  252  000012f0  20230001	addi	r3,r1,#1
  253  000012f4  2001000a	addi	r1,r0,#10
  254  000012f8  00600035	movi2fp	f0,r3
  255  000012fc  00200835	movi2fp	f1,r1
  256  00001300  0401000f	div	f0,f0,f1
  257  00001304  00001034	movfp2i	r2,f0
  258  00001308  50410002	slli	r1,r2,#0x2
  259  0000130c  00220820	add	r1,r1,r2
  260  00001310  50210001	slli	r1,r1,#0x1
  261  00001314  00611022	sub	r2,r3,r1
  262  00001318  8c810004	lw	r1,4(r4)
  263  0000131c  00411028	seq	r2,r2,r1
  264  00001320  20010001	addi	r1,r0,#1
  265  00001324  14400008	bnez	r2,L23_LF0
  266  00001328  54000000	nop; not filled.
  267  0000132c  20010000	addi	r1,r0,#0
  268  00001330          	L23_LF0:
  269  00001330  8fa20000	lw	r2,0(r29)
  270  00001334  8fa30004	lw	r3,4(r29)
  271  00001338  8fa40008	lw	r4,8(r29)
  272  0000133c  8fdffff8	lw	r31,-8(r30)
  273  00001340  001ee820	add	r29,r0,r30
  274  00001344  8fdefffc	lw	r30,-4(r30)
  275  00001348  4be00000	jr	r31
  276  0000134c  54000000	nop
  277  00001350          	.endproc _is_full
  278  00001350          	.align 2
  279  00001350          	.proc _is_empty
  280  00001350          	.global _is_empty
  281  00001350          	_is_empty:
  282                      ;  Function 'is_empty'; 0 bytes of locals, 1 regs to save.
  283  00001350  afbefffc	sw	-4(r29),r30; push fp
  284  00001354  001df020	add	r30,r0,r29; fp = sp
  285  00001358  afbffff8	sw	-8(r29),r31; push ret addr
  286  0000135c  2fbd0010	subui	r29,r29,#16; alloc local storage
  287  00001360  afa20000	sw	0(r29),r2
  288  00001364  8fc10000	lw	r1,(r30)
  289  00001368  8c220000	lw	r2,(r1)
  290  0000136c  8c210004	lw	r1,4(r1)
  291  00001370  00411028	seq	r2,r2,r1
  292  00001374  20010001	addi	r1,r0,#1
  293  00001378  14400008	bnez	r2,L30_LF0
  294  0000137c  54000000	nop; not filled.
  295  00001380  20010000	addi	r1,r0,#0
  296  00001384          	L30_LF0:
  297  00001384  8fa20000	lw	r2,0(r29)
  298  00001388  8fdffff8	lw	r31,-8(r30)
  299  0000138c  001ee820	add	r29,r0,r30
  300  00001390  8fdefffc	lw	r30,-4(r30)
  301  00001394  4be00000	jr	r31
  302  00001398  54000000	nop
  303  0000139c          	.endproc _is_empty
  304  0000139c          	.data
  305  00003051          	.align 2
  306  00003054          	LC3_LF0:
  307  00003054  43697263	.ascii "Circular Buffer Initiated\n\000"
  307  00003058  756c6172	
  307  0000305c  20427566	
  307  00003060  66657220	
  307  00003064  496e6974	
  307  00003068  69617465	
  307  0000306c  640a00  	
  308  0000306f          	.text
  309  0000139c          	.align 2
  310  0000139c          	.proc _init_cb
  311  0000139c          	.global _init_cb
  312  0000139c          	_init_cb:
  313                      ;  Function 'init_cb'; 0 bytes of locals, 1 regs to save.
  314  0000139c  afbefffc	sw	-4(r29),r30; push fp
  315  000013a0  001df020	add	r30,r0,r29; fp = sp
  316  000013a4  afbffff8	sw	-8(r29),r31; push ret addr
  317  000013a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  318  000013ac  afa20000	sw	0(r29),r2
  319  000013b0  8fc10000	lw	r1,(r30)
  320  000013b4  20020000	addi	r2,r0,#0
  321  000013b8  ac220000	sw	(r1),r2
  322  000013bc  ac220004	sw	4(r1),r2
  323  000013c0  23bdfff8	addi	r29,r29,#-8
  324  000013c4  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
  325  000013c8  24423054	addui	r2,r2,(LC3_LF0)&0xffff
  326  000013cc  afa20000	sw	(r29),r2
  327  000013d0  0c000630	jal	_Printf
  328  000013d4  54000000	nop; not filled.
  329  000013d8  23bd0008	addi	r29,r29,#8
  330  000013dc  8fa20000	lw	r2,0(r29)
  331  000013e0  8fdffff8	lw	r31,-8(r30)
  332  000013e4  001ee820	add	r29,r0,r30
  333  000013e8  8fdefffc	lw	r30,-4(r30)
  334  000013ec  4be00000	jr	r31
  335  000013f0  54000000	nop
  336  000013f4          	.endproc _init_cb
  337  000013f4          	.data
  338  0000306f          	.align 2
  339  00003070          	LC4_LF0:
  340  00003070  20436972	.ascii " Circular Buffer =>  \000"
  340  00003074  63756c61	
  340  00003078  72204275	
  340  0000307c  66666572	
  340  00003080  203d3e20	
  340  00003084  2000    	
  341  00003086          	.align 2
  342  00003088          	LC5_LF0:
  343  00003088  256300  	.ascii "%c\000"
  344  0000308b          	.align 2
  345  0000308c          	LC6_LF0:
  346  0000308c  0a00    	.ascii "\n\000"
  347  0000308e          	.text
  348  000013f4          	.align 2
  349  000013f4          	.proc _Print_cb
  350  000013f4          	.global _Print_cb
  351  000013f4          	_Print_cb:
  352                      ;  Function 'Print_cb'; 0 bytes of locals, 6 regs to save.
  353  000013f4  afbefffc	sw	-4(r29),r30; push fp
  354  000013f8  001df020	add	r30,r0,r29; fp = sp
  355  000013fc  afbffff8	sw	-8(r29),r31; push ret addr
  356  00001400  2fbd0020	subui	r29,r29,#32; alloc local storage
  357  00001404  afa20000	sw	0(r29),r2
  358  00001408  afa30004	sw	4(r29),r3
  359  0000140c  afa40008	sw	8(r29),r4
  360  00001410  afa5000c	sw	12(r29),r5
  361  00001414  afa60010	sw	16(r29),r6
  362  00001418  afa70014	sw	20(r29),r7
  363  0000141c  8fc50000	lw	r5,(r30)
  364  00001420  23bdfff8	addi	r29,r29,#-8
  365  00001424  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  366  00001428  24e73070	addui	r7,r7,(LC4_LF0)&0xffff
  367  0000142c  afa70000	sw	(r29),r7
  368  00001430  0c0005d0	jal	_Printf
  369  00001434  54000000	nop; not filled.
  370  00001438  20040000	addi	r4,r0,#0
  371  0000143c  23bd0008	addi	r29,r29,#8
  372  00001440  2006000a	addi	r6,r0,#10
  373  00001444          	L45_LF0:
  374  00001444  23bdfff8	addi	r29,r29,#-8
  375  00001448  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  376  0000144c  24e73088	addui	r7,r7,(LC5_LF0)&0xffff
  377  00001450  afa70000	sw	(r29),r7
  378  00001454  8ca10004	lw	r1,4(r5)
  379  00001458  00811820	add	r3,r4,r1
  380  0000145c  00600035	movi2fp	f0,r3
  381  00001460  00c00835	movi2fp	f1,r6
  382  00001464  0401000f	div	f0,f0,f1
  383  00001468  00001034	movfp2i	r2,f0
  384  0000146c  50410002	slli	r1,r2,#0x2
  385  00001470  00220820	add	r1,r1,r2
  386  00001474  50210001	slli	r1,r1,#0x1
  387  00001478  00610822	sub	r1,r3,r1
  388  0000147c  00a10820	add	r1,r5,r1
  389  00001480  90210008	lbu	r1,8(r1)
  390  00001484  afa10004	sw	4(r29),r1
  391  00001488  0c000578	jal	_Printf
  392  0000148c  54000000	nop; not filled.
  393  00001490  23bd0008	addi	r29,r29,#8
  394  00001494  20840001	addi	r4,r4,#1
  395  00001498  70810009	slei	r1,r4,#9
  396  0000149c  1420ffa4	bnez	r1,L45_LF0
  397  000014a0  54000000	nop; not filled.
  398  000014a4  23bdfff8	addi	r29,r29,#-8
  399  000014a8  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  400  000014ac  24e7308c	addui	r7,r7,(LC6_LF0)&0xffff
  401  000014b0  afa70000	sw	(r29),r7
  402  000014b4  0c00054c	jal	_Printf
  403  000014b8  54000000	nop; not filled.
  404  000014bc  23bd0008	addi	r29,r29,#8
  405  000014c0  8fa20000	lw	r2,0(r29)
  406  000014c4  8fa30004	lw	r3,4(r29)
  407  000014c8  8fa40008	lw	r4,8(r29)
  408  000014cc  8fa5000c	lw	r5,12(r29)
  409  000014d0  8fa60010	lw	r6,16(r29)
  410  000014d4  8fa70014	lw	r7,20(r29)
  411  000014d8  8fdffff8	lw	r31,-8(r30)
  412  000014dc  001ee820	add	r29,r0,r30
  413  000014e0  8fdefffc	lw	r30,-4(r30)
  414  000014e4  4be00000	jr	r31
  415  000014e8  54000000	nop
  416  000014ec          	.endproc _Print_cb
  417  000014ec          	.data
  418  0000308e          	.align 2
  419  00003090          	LC7_LF0:
  420  00003090  30313233	.ascii "0123456789\000"
  420  00003094  34353637	
  420  00003098  383900  	
  421  0000309b          	.align 2
  422  0000309c          	LC8_LF0:
  423  0000309c  55736167	.ascii "Usage: \000"
  423  000030a0  653a2000	
  424  000030a4          	.align 2
  425  000030a4          	LC9_LF0:
  426  000030a4  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
  426  000030a8  6e646c65	
  426  000030ac  5f746f5f	
  426  000030b0  73686172	
  426  000030b4  65645f6d	
  426  000030b8  656d6f72	
  426  000030bc  795f7061	
  426  000030c0  67653e20	
  426  000030c4  3c68616e	
  426  000030c8  646c655f	
  426  000030cc  746f5f70	
  426  000030d0  6167655f	
  426  000030d4  6d617070	
  426  000030d8  65645f73	
  426  000030dc  656d6170	
  426  000030e0  686f7265	
  426  000030e4  3e203c68	
  426  000030e8  616e    	
  427  000030ea  646c6520	.ascii "dle to lock>\n\000"
  427  000030ee  746f206c	
  427  000030f2  6f636b3e	
  427  000030f6  0a00    	
  428  000030f8          	.align 2
  429  000030f8          	LC10_LF0:
  430  000030f8  436f756c	.ascii "Could not map the virtual address to the memory in \000"
  430  000030fc  64206e6f	
  430  00003100  74206d61	
  430  00003104  70207468	
  430  00003108  65207669	
  430  0000310c  72747561	
  430  00003110  6c206164	
  430  00003114  64726573	
  430  00003118  7320746f	
  430  0000311c  20746865	
  430  00003120  206d656d	
  430  00003124  6f727920	
  430  00003128  696e2000	
  431  0000312c          	.align 2
  432  0000312c          	LC11_LF0:
  433  0000312c  2c206578	.ascii ", exiting...\n\000"
  433  00003130  6974696e	
  433  00003134  672e2e2e	
  433  00003138  0a00    	
  434  0000313a          	.align 2
  435  0000313c          	LC12_LF0:
  436  0000313c  50524f44	.ascii "PROD - PID %d ---- Succesful Wait for j =  %d \n\000"
  436  00003140  202d2050	
  436  00003144  49442025	
  436  00003148  64202d2d	
  436  0000314c  2d2d2053	
  436  00003150  75636365	
  436  00003154  7366756c	
  436  00003158  20576169	
  436  0000315c  7420666f	
  436  00003160  72206a20	
  436  00003164  3d202025	
  436  00003168  64200a00	
  437  0000316c          	.align 2
  438  0000316c          	LC13_LF0:
  439  0000316c  0a50524f	.ascii "\nPROD - PID %d ---- ACQUIRED LOCK \n\000"
  439  00003170  44202d20	
  439  00003174  50494420	
  439  00003178  2564202d	
  439  0000317c  2d2d2d20	
  439  00003180  41435155	
  439  00003184  49524544	
  439  00003188  204c4f43	
  439  0000318c  4b200a00	
  440  00003190          	.align 2
  441  00003190          	LC14_LF0:
  442  00003190  50524f44	.ascii "PROD - PID %d ---- Put %c in cb \n\000"
  442  00003194  202d2050	
  442  00003198  49442025	
  442  0000319c  64202d2d	
  442  000031a0  2d2d2050	
  442  000031a4  75742025	
  442  000031a8  6320696e	
  442  000031ac  20636220	
  442  000031b0  0a00    	
  443  000031b2          	.align 2
  444  000031b4          	LC15_LF0:
  445  000031b4  50524f44	.ascii "PROD - PID %d ---- Successful Signal For j =  %d \n\000"
  445  000031b8  202d2050	
  445  000031bc  49442025	
  445  000031c0  64202d2d	
  445  000031c4  2d2d2053	
  445  000031c8  75636365	
  445  000031cc  73736675	
  445  000031d0  6c205369	
  445  000031d4  676e616c	
  445  000031d8  20466f72	
  445  000031dc  206a203d	
  445  000031e0  20202564	
  445  000031e4  200a00  	
  446  000031e7          	.align 2
  447  000031e8          	LC16_LF0:
  448  000031e8  0a50524f	.ascii "\nPROD - PID %d ---- RELEASED LOCK \n\000"
  448  000031ec  44202d20	
  448  000031f0  50494420	
  448  000031f4  2564202d	
  448  000031f8  2d2d2d20	
  448  000031fc  52454c45	
  448  00003200  41534544	
  448  00003204  204c4f43	
  448  00003208  4b200a00	
  449  0000320c          	.align 2
  450  0000320c          	LC17_LF0:
  451  0000320c  50524f44	.ascii "PROD - PID ---- %d Sent Everything \n\000"
  451  00003210  202d2050	
  451  00003214  4944202d	
  451  00003218  2d2d2d20	
  451  0000321c  25642053	
  451  00003220  656e7420	
  451  00003224  45766572	
  451  00003228  79746869	
  451  0000322c  6e67200a	
  451  00003230  00      	
  452  00003231          	.align 2
  453  00003234          	LC18_LF0:
  454  00003234  50524f44	.ascii "PROD - PID %d is complete.\n\000"
  454  00003238  202d2050	
  454  0000323c  49442025	
  454  00003240  64206973	
  454  00003244  20636f6d	
  454  00003248  706c6574	
  454  0000324c  652e0a00	
  455  00003250          	.align 2
  456  00003250          	LC19_LF0:
  457  00003250  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  457  00003254  73656d61	
  457  00003258  70686f72	
  457  0000325c  6520735f	
  457  00003260  70726f63	
  457  00003264  735f636f	
  457  00003268  6d706c65	
  457  0000326c  74656420	
  457  00003270  28256429	
  457  00003274  20696e20	
  457  00003278  00      	
  458  00003279          	.text
  459  000014ec          	.align 2
  460  000014ec          	.proc _main
  461  000014ec          	.global _main
  462  000014ec          	_main:
  463                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  464  000014ec  afbefffc	sw	-4(r29),r30; push fp
  465  000014f0  001df020	add	r30,r0,r29; fp = sp
  466  000014f4  afbffff8	sw	-8(r29),r31; push ret addr
  467  000014f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  468  000014fc  8fc20000	lw	r2,(r30)
  469  00001500  8fc70004	lw	r7,4(r30)
  470  00001504  0c0012f8	jal	___main
  471  00001508  54000000	nop; not filled.
  472  0000150c  3c010000	lhi	r1,((LC7_LF0)>>16)&0xffff
  473  00001510  24213090	addui	r1,r1,(LC7_LF0)&0xffff
  474  00001514  802b0000	lb	r11,(r1)
  475  00001518  a3cbffe8	sb	-24(r30),r11
  476  0000151c  802b0001	lb	r11,1(r1)
  477  00001520  a3cbffe9	sb	-23(r30),r11
  478  00001524  802b0002	lb	r11,2(r1)
  479  00001528  a3cbffea	sb	-22(r30),r11
  480  0000152c  802b0003	lb	r11,3(r1)
  481  00001530  a3cbffeb	sb	-21(r30),r11
  482  00001534  802b0004	lb	r11,4(r1)
  483  00001538  a3cbffec	sb	-20(r30),r11
  484  0000153c  802b0005	lb	r11,5(r1)
  485  00001540  a3cbffed	sb	-19(r30),r11
  486  00001544  802b0006	lb	r11,6(r1)
  487  00001548  a3cbffee	sb	-18(r30),r11
  488  0000154c  802b0007	lb	r11,7(r1)
  489  00001550  a3cbffef	sb	-17(r30),r11
  490  00001554  802b0008	lb	r11,8(r1)
  491  00001558  a3cbfff0	sb	-16(r30),r11
  492  0000155c  802b0009	lb	r11,9(r1)
  493  00001560  a3cbfff1	sb	-15(r30),r11
  494  00001564  8021000a	lb	r1,10(r1)
  495  00001568  a3c1fff2	sb	-14(r30),r1
  496  0000156c  64410006	snei	r1,r2,#6
  497  00001570  1020004c	beqz	r1,L48_LF0
  498  00001574  54000000	nop; not filled.
  499  00001578  23bdfff8	addi	r29,r29,#-8
  500  0000157c  3c0b0000	lhi	r11,((LC8_LF0)>>16)&0xffff
  501  00001580  256b309c	addui	r11,r11,(LC8_LF0)&0xffff
  502  00001584  afab0000	sw	(r29),r11
  503  00001588  0c000478	jal	_Printf
  504  0000158c  54000000	nop; not filled.
  505  00001590  8ceb0000	lw	r11,(r7)
  506  00001594  afab0000	sw	(r29),r11
  507  00001598  0c000468	jal	_Printf
  508  0000159c  54000000	nop; not filled.
  509  000015a0  3c0b0000	lhi	r11,((LC9_LF0)>>16)&0xffff
  510  000015a4  256b30a4	addui	r11,r11,(LC9_LF0)&0xffff
  511  000015a8  afab0000	sw	(r29),r11
  512  000015ac  0c000454	jal	_Printf
  513  000015b0  54000000	nop; not filled.
  514  000015b4  0c0004f4	jal	_Exit
  515  000015b8  54000000	nop; not filled.
  516  000015bc  23bd0008	addi	r29,r29,#8
  517  000015c0          	L48_LF0:
  518  000015c0  23bdfff0	addi	r29,r29,#-16
  519  000015c4  8ceb0004	lw	r11,4(r7)
  520  000015c8  afab0000	sw	(r29),r11
  521  000015cc  200b0000	addi	r11,r0,#0
  522  000015d0  afab0004	sw	4(r29),r11
  523  000015d4  200b000a	addi	r11,r0,#10
  524  000015d8  afab0008	sw	8(r29),r11
  525  000015dc  0c000d78	jal	_dstrtol
  526  000015e0  54000000	nop; not filled.
  527  000015e4  00011020	add	r2,r0,r1
  528  000015e8  8ceb0008	lw	r11,8(r7)
  529  000015ec  afab0000	sw	(r29),r11
  530  000015f0  200b0000	addi	r11,r0,#0
  531  000015f4  afab0004	sw	4(r29),r11
  532  000015f8  200b000a	addi	r11,r0,#10
  533  000015fc  afab0008	sw	8(r29),r11
  534  00001600  0c000d54	jal	_dstrtol
  535  00001604  54000000	nop; not filled.
  536  00001608  00015020	add	r10,r0,r1
  537  0000160c  8ceb000c	lw	r11,12(r7)
  538  00001610  afab0000	sw	(r29),r11
  539  00001614  200b0000	addi	r11,r0,#0
  540  00001618  afab0004	sw	4(r29),r11
  541  0000161c  200b000a	addi	r11,r0,#10
  542  00001620  afab0008	sw	8(r29),r11
  543  00001624  0c000d30	jal	_dstrtol
  544  00001628  54000000	nop; not filled.
  545  0000162c  00013020	add	r6,r0,r1
  546  00001630  8ceb0010	lw	r11,16(r7)
  547  00001634  afab0000	sw	(r29),r11
  548  00001638  200b0000	addi	r11,r0,#0
  549  0000163c  afab0004	sw	4(r29),r11
  550  00001640  200b000a	addi	r11,r0,#10
  551  00001644  afab0008	sw	8(r29),r11
  552  00001648  0c000d0c	jal	_dstrtol
  553  0000164c  54000000	nop; not filled.
  554  00001650  00014820	add	r9,r0,r1
  555  00001654  8ceb0014	lw	r11,20(r7)
  556  00001658  afab0000	sw	(r29),r11
  557  0000165c  200b0000	addi	r11,r0,#0
  558  00001660  afab0004	sw	4(r29),r11
  559  00001664  200b000a	addi	r11,r0,#10
  560  00001668  afab0008	sw	8(r29),r11
  561  0000166c  0c000ce8	jal	_dstrtol
  562  00001670  54000000	nop; not filled.
  563  00001674  00014020	add	r8,r0,r1
  564  00001678  afa20000	sw	(r29),r2
  565  0000167c  0c0003b4	jal	_shmat
  566  00001680  54000000	nop; not filled.
  567  00001684  00011020	add	r2,r0,r1
  568  00001688  23bd0010	addi	r29,r29,#16
  569  0000168c  64410000	snei	r1,r2,#0
  570  00001690  1420004c	bnez	r1,L49_LF0
  571  00001694  54000000	nop; not filled.
  572  00001698  23bdfff8	addi	r29,r29,#-8
  573  0000169c  3c0b0000	lhi	r11,((LC10_LF0)>>16)&0xffff
  574  000016a0  256b30f8	addui	r11,r11,(LC10_LF0)&0xffff
  575  000016a4  afab0000	sw	(r29),r11
  576  000016a8  0c000358	jal	_Printf
  577  000016ac  54000000	nop; not filled.
  578  000016b0  8ceb0000	lw	r11,(r7)
  579  000016b4  afab0000	sw	(r29),r11
  580  000016b8  0c000348	jal	_Printf
  581  000016bc  54000000	nop; not filled.
  582  000016c0  3c0b0000	lhi	r11,((LC11_LF0)>>16)&0xffff
  583  000016c4  256b312c	addui	r11,r11,(LC11_LF0)&0xffff
  584  000016c8  afab0000	sw	(r29),r11
  585  000016cc  0c000334	jal	_Printf
  586  000016d0  54000000	nop; not filled.
  587  000016d4  0c0003d4	jal	_Exit
  588  000016d8  54000000	nop; not filled.
  589  000016dc  23bd0008	addi	r29,r29,#8
  590  000016e0          	L49_LF0:
  591  000016e0  20450008	addi	r5,r2,#8
  592  000016e4  20040000	addi	r4,r0,#0
  593  000016e8          	L52_LF0:
  594  000016e8  23bdfff8	addi	r29,r29,#-8
  595  000016ec  afa80000	sw	(r29),r8
  596  000016f0  0c000358	jal	_sem_wait
  597  000016f4  54000000	nop; not filled.
  598  000016f8  23bd0008	addi	r29,r29,#8
  599  000016fc  64210000	snei	r1,r1,#0
  600  00001700  10200030	beqz	r1,L53_LF0
  601  00001704  54000000	nop; not filled.
  602  00001708  0c000304	jal	_Getpid
  603  0000170c  54000000	nop; not filled.
  604  00001710  23bdfff0	addi	r29,r29,#-16
  605  00001714  3c0b0000	lhi	r11,((LC12_LF0)>>16)&0xffff
  606  00001718  256b313c	addui	r11,r11,(LC12_LF0)&0xffff
  607  0000171c  afab0000	sw	(r29),r11
  608  00001720  afa10004	sw	4(r29),r1
  609  00001724  afa40008	sw	8(r29),r4
  610  00001728  0c0002d8	jal	_Printf
  611  0000172c  54000000	nop; not filled.
  612  00001730  23bd0010	addi	r29,r29,#16
  613  00001734          	L53_LF0:
  614  00001734  23bdfff8	addi	r29,r29,#-8
  615  00001738  afa60000	sw	(r29),r6
  616  0000173c  0c000330	jal	_lock_acquire
  617  00001740  54000000	nop; not filled.
  618  00001744  23bd0008	addi	r29,r29,#8
  619  00001748  64210000	snei	r1,r1,#0
  620  0000174c  1020002c	beqz	r1,L54_LF0
  621  00001750  54000000	nop; not filled.
  622  00001754  0c0002b8	jal	_Getpid
  623  00001758  54000000	nop; not filled.
  624  0000175c  23bdfff8	addi	r29,r29,#-8
  625  00001760  3c0b0000	lhi	r11,((LC13_LF0)>>16)&0xffff
  626  00001764  256b316c	addui	r11,r11,(LC13_LF0)&0xffff
  627  00001768  afab0000	sw	(r29),r11
  628  0000176c  afa10004	sw	4(r29),r1
  629  00001770  0c000290	jal	_Printf
  630  00001774  54000000	nop; not filled.
  631  00001778  23bd0008	addi	r29,r29,#8
  632  0000177c          	L54_LF0:
  633  0000177c  0c000290	jal	_Getpid
  634  00001780  54000000	nop; not filled.
  635  00001784  23bdfff0	addi	r29,r29,#-16
  636  00001788  3c0b0000	lhi	r11,((LC14_LF0)>>16)&0xffff
  637  0000178c  256b3190	addui	r11,r11,(LC14_LF0)&0xffff
  638  00001790  afab0000	sw	(r29),r11
  639  00001794  afa10004	sw	4(r29),r1
  640  00001798  23c1ffe8	addi	r1,r30,#-24
  641  0000179c  00241020	add	r2,r1,r4
  642  000017a0  90410000	lbu	r1,(r2)
  643  000017a4  afa10008	sw	8(r29),r1
  644  000017a8  0c000258	jal	_Printf
  645  000017ac  54000000	nop; not filled.
  646  000017b0  80420000	lb	r2,(r2)
  647  000017b4  23bd0010	addi	r29,r29,#16
  648  000017b8  8ca10000	lw	r1,(r5)
  649  000017bc  00a10820	add	r1,r5,r1
  650  000017c0  a0220008	sb	8(r1),r2
  651  000017c4  23bdfff0	addi	r29,r29,#-16
  652  000017c8  3c0b0000	lhi	r11,((LC0_LF0)>>16)&0xffff
  653  000017cc  256b3000	addui	r11,r11,(LC0_LF0)&0xffff
  654  000017d0  afab0000	sw	(r29),r11
  655  000017d4  304100ff	andi	r1,r2,#0x00ff
  656  000017d8  afa10004	sw	4(r29),r1
  657  000017dc  8cab0000	lw	r11,(r5)
  658  000017e0  afab0008	sw	8(r29),r11
  659  000017e4  0c00021c	jal	_Printf
  660  000017e8  54000000	nop; not filled.
  661  000017ec  8ca10000	lw	r1,(r5)
  662  000017f0  20230001	addi	r3,r1,#1
  663  000017f4  2001000a	addi	r1,r0,#10
  664  000017f8  00600035	movi2fp	f0,r3
  665  000017fc  00200835	movi2fp	f1,r1
  666  00001800  0401000f	div	f0,f0,f1
  667  00001804  00001034	movfp2i	r2,f0
  668  00001808  50410002	slli	r1,r2,#0x2
  669  0000180c  00220820	add	r1,r1,r2
  670  00001810  50210001	slli	r1,r1,#0x1
  671  00001814  00610822	sub	r1,r3,r1
  672  00001818  aca10000	sw	(r5),r1
  673  0000181c  23bd0010	addi	r29,r29,#16
  674  00001820  20840001	addi	r4,r4,#1
  675  00001824  23bdfff8	addi	r29,r29,#-8
  676  00001828  3c0b0000	lhi	r11,((LC6_LF0)>>16)&0xffff
  677  0000182c  256b308c	addui	r11,r11,(LC6_LF0)&0xffff
  678  00001830  afab0000	sw	(r29),r11
  679  00001834  0c0001cc	jal	_Printf
  680  00001838  54000000	nop; not filled.
  681  0000183c  afa90000	sw	(r29),r9
  682  00001840  0c000214	jal	_sem_signal
  683  00001844  54000000	nop; not filled.
  684  00001848  23bd0008	addi	r29,r29,#8
  685  0000184c  64210000	snei	r1,r1,#0
  686  00001850  10200034	beqz	r1,L56_LF0
  687  00001854  54000000	nop; not filled.
  688  00001858  0c0001b4	jal	_Getpid
  689  0000185c  54000000	nop; not filled.
  690  00001860  23bdfff0	addi	r29,r29,#-16
  691  00001864  3c0b0000	lhi	r11,((LC15_LF0)>>16)&0xffff
  692  00001868  256b31b4	addui	r11,r11,(LC15_LF0)&0xffff
  693  0000186c  afab0000	sw	(r29),r11
  694  00001870  afa10004	sw	4(r29),r1
  695  00001874  2081ffff	addi	r1,r4,#-1
  696  00001878  afa10008	sw	8(r29),r1
  697  0000187c  0c000184	jal	_Printf
  698  00001880  54000000	nop; not filled.
  699  00001884  23bd0010	addi	r29,r29,#16
  700  00001888          	L56_LF0:
  701  00001888  23bdfff8	addi	r29,r29,#-8
  702  0000188c  afa60000	sw	(r29),r6
  703  00001890  0c0001e8	jal	_lock_release
  704  00001894  54000000	nop; not filled.
  705  00001898  23bd0008	addi	r29,r29,#8
  706  0000189c  64210000	snei	r1,r1,#0
  707  000018a0  1020002c	beqz	r1,L50_LF0
  708  000018a4  54000000	nop; not filled.
  709  000018a8  0c000164	jal	_Getpid
  710  000018ac  54000000	nop; not filled.
  711  000018b0  23bdfff8	addi	r29,r29,#-8
  712  000018b4  3c0b0000	lhi	r11,((LC16_LF0)>>16)&0xffff
  713  000018b8  256b31e8	addui	r11,r11,(LC16_LF0)&0xffff
  714  000018bc  afab0000	sw	(r29),r11
  715  000018c0  afa10004	sw	4(r29),r1
  716  000018c4  0c00013c	jal	_Printf
  717  000018c8  54000000	nop; not filled.
  718  000018cc  23bd0008	addi	r29,r29,#8
  719  000018d0          	L50_LF0:
  720  000018d0  03c40820	add	r1,r30,r4
  721  000018d4  9021ffe7	lbu	r1,-25(r1)
  722  000018d8  64210000	snei	r1,r1,#0
  723  000018dc  1420fe08	bnez	r1,L52_LF0
  724  000018e0  54000000	nop; not filled.
  725  000018e4  64810000	snei	r1,r4,#0
  726  000018e8  1020fdfc	beqz	r1,L52_LF0
  727  000018ec  54000000	nop; not filled.
  728  000018f0  23bdfff8	addi	r29,r29,#-8
  729  000018f4  afa60000	sw	(r29),r6
  730  000018f8  0c000174	jal	_lock_acquire
  731  000018fc  54000000	nop; not filled.
  732  00001900  0c00010c	jal	_Getpid
  733  00001904  54000000	nop; not filled.
  734  00001908  3c0b0000	lhi	r11,((LC17_LF0)>>16)&0xffff
  735  0000190c  256b320c	addui	r11,r11,(LC17_LF0)&0xffff
  736  00001910  afab0000	sw	(r29),r11
  737  00001914  afa10004	sw	4(r29),r1
  738  00001918  0c0000e8	jal	_Printf
  739  0000191c  54000000	nop; not filled.
  740  00001920  afa60000	sw	(r29),r6
  741  00001924  0c000154	jal	_lock_release
  742  00001928  54000000	nop; not filled.
  743  0000192c  0c0000e0	jal	_Getpid
  744  00001930  54000000	nop; not filled.
  745  00001934  3c0b0000	lhi	r11,((LC18_LF0)>>16)&0xffff
  746  00001938  256b3234	addui	r11,r11,(LC18_LF0)&0xffff
  747  0000193c  afab0000	sw	(r29),r11
  748  00001940  afa10004	sw	4(r29),r1
  749  00001944  0c0000bc	jal	_Printf
  750  00001948  54000000	nop; not filled.
  751  0000194c  afaa0000	sw	(r29),r10
  752  00001950  0c000104	jal	_sem_signal
  753  00001954  54000000	nop; not filled.
  754  00001958  23bd0008	addi	r29,r29,#8
  755  0000195c  64210001	snei	r1,r1,#1
  756  00001960  10200050	beqz	r1,L59_LF0
  757  00001964  54000000	nop; not filled.
  758  00001968  23bdfff8	addi	r29,r29,#-8
  759  0000196c  3c0b0000	lhi	r11,((LC19_LF0)>>16)&0xffff
  760  00001970  256b3250	addui	r11,r11,(LC19_LF0)&0xffff
  761  00001974  afab0000	sw	(r29),r11
  762  00001978  afaa0004	sw	4(r29),r10
  763  0000197c  0c000084	jal	_Printf
  764  00001980  54000000	nop; not filled.
  765  00001984  8ce70000	lw	r7,(r7)
  766  00001988  afa70000	sw	(r29),r7
  767  0000198c  0c000074	jal	_Printf
  768  00001990  54000000	nop; not filled.
  769  00001994  3c0b0000	lhi	r11,((LC11_LF0)>>16)&0xffff
  770  00001998  256b312c	addui	r11,r11,(LC11_LF0)&0xffff
  771  0000199c  afab0000	sw	(r29),r11
  772  000019a0  0c000060	jal	_Printf
  773  000019a4  54000000	nop; not filled.
  774  000019a8  0c000100	jal	_Exit
  775  000019ac  54000000	nop; not filled.
  776  000019b0  23bd0008	addi	r29,r29,#8
  777  000019b4          	L59_LF0:
  778  000019b4  0c000e3c	jal	_exit
  779  000019b8  54000000	nop
  780  000019bc          	.endproc _main
  781                      ;;;
  782                      ;;; Stub functions for DLX traps.
  783                      ;;;
  784                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  785                      ;;;
  786                      ;;; The traps such as Open and Close
  787                      ;;; (note the capital letters) are for use by user programs.  The traps
  788                      ;;; with names such as open and close (lower case) are for use by the OS.
  789                      ;;;
  792  000019bc          	.align 2
  794                      ;;; The following are the traps to be used by user-level programs
  795                      ;;;
  797  000019bc          	.align 2
  798  000019bc          	.proc _Open
  799  000019bc          	.global _Open
  800  000019bc          	_Open:
  801                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  802                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  803                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  804  000019bc  44000213	trap	#0x213
  805  000019c0  4be00000	jr	r31
  806  000019c4  54000000	nop
  807  000019c8          	.endproc _Open
  809  000019c8          	.proc _Close
  810  000019c8          	.global _Close
  811  000019c8          	_Close:
  812  000019c8  44000214	trap	#0x214
  813  000019cc  4be00000	jr	r31
  814  000019d0  54000000	nop
  815  000019d4          	.endproc _Close
  817  000019d4          	.proc _Read
  818  000019d4          	.global _Read
  819  000019d4          	_Read:
  820  000019d4  44000210	trap	#0x210
  821  000019d8  4be00000	jr	r31
  822  000019dc  54000000	nop
  823  000019e0          	.endproc _Read
  825  000019e0          	.proc _Write
  826  000019e0          	.global _Write
  827  000019e0          	_Write:
  828  000019e0  44000211	trap	#0x211
  829  000019e4  4be00000	jr	r31
  830  000019e8  54000000	nop
  831  000019ec          	.endproc _Write
  833  000019ec          	.proc _Lseek
  834  000019ec          	.global _Lseek
  835  000019ec          	_Lseek:
  836  000019ec  44000212	trap	#0x212
  837  000019f0  4be00000	jr	r31
  838  000019f4  54000000	nop
  839  000019f8          	.endproc _Lseek
  841  000019f8          	.proc _Putchar
  842  000019f8          	.global _Putchar
  843  000019f8          	_Putchar:
  844  000019f8  44000280	trap	#0x280
  845  000019fc  4be00000	jr	r31
  846  00001a00  54000000	nop
  847  00001a04          	.endproc _Putchar
  849  00001a04          	.proc _Printf
  850  00001a04          	.global _Printf
  851  00001a04          	_Printf:
  852  00001a04  44000201	trap	#0x201
  853  00001a08  4be00000	jr	r31
  854  00001a0c  54000000	nop
  855  00001a10          	.endproc _Printf
  857  00001a10          	.proc _Getpid
  858  00001a10          	.global _Getpid
  859  00001a10          	_Getpid:
  860  00001a10  44000431	trap	#0x431
  861  00001a14  4be00000	jr	r31
  862  00001a18  54000000	nop
  863  00001a1c          	.endproc _Getpid
  865  00001a1c          	.proc _process_create
  866  00001a1c          	.global _process_create
  867  00001a1c          	_process_create:
  868  00001a1c  44000432	trap	#0x432
  869  00001a20  4be00000	jr	r31
  870  00001a24  54000000	nop
  871  00001a28          	.endproc _process_create
  873  00001a28          	.proc _shmget
  874  00001a28          	.global _shmget
  875  00001a28          	_shmget:
  876  00001a28  44000440	trap	#0x440
  877  00001a2c  4be00000	jr	r31
  878  00001a30  54000000	nop
  879  00001a34          	.endproc _shmget
  881  00001a34          	.proc _shmat
  882  00001a34          	.global _shmat
  883  00001a34          	_shmat:
  884  00001a34  44000441	trap	#0x441
  885  00001a38  4be00000	jr	r31
  886  00001a3c  54000000	nop
  887  00001a40          	.endproc _shmat
  889  00001a40          	.proc _sem_create
  890  00001a40          	.global _sem_create
  891  00001a40          	_sem_create:
  892  00001a40  44000450	trap	#0x450
  893  00001a44  4be00000	jr	r31
  894  00001a48  54000000	nop
  895  00001a4c          	.endproc _sem_create
  897  00001a4c          	.proc _sem_wait
  898  00001a4c          	.global _sem_wait
  899  00001a4c          	_sem_wait:
  900  00001a4c  44000451	trap	#0x451
  901  00001a50  4be00000	jr	r31
  902  00001a54  54000000	nop
  903  00001a58          	.endproc _sem_wait
  905  00001a58          	.proc _sem_signal
  906  00001a58          	.global _sem_signal
  907  00001a58          	_sem_signal:
  908  00001a58  44000452	trap	#0x452
  909  00001a5c  4be00000	jr	r31
  910  00001a60  54000000	nop
  911  00001a64          	.endproc _sem_signal
  913  00001a64          	.proc _lock_create
  914  00001a64          	.global _lock_create
  915  00001a64          	_lock_create:
  916  00001a64  44000453	trap	#0x453
  917  00001a68  4be00000	jr	r31
  918  00001a6c  54000000	nop
  919  00001a70          	.endproc _lock_create
  921  00001a70          	.proc _lock_acquire
  922  00001a70          	.global _lock_acquire
  923  00001a70          	_lock_acquire:
  924  00001a70  44000454	trap	#0x454
  925  00001a74  4be00000	jr	r31
  926  00001a78  54000000	nop
  927  00001a7c          	.endproc _lock_acquire
  929  00001a7c          	.proc _lock_release
  930  00001a7c          	.global _lock_release
  931  00001a7c          	_lock_release:
  932  00001a7c  44000455	trap	#0x455
  933  00001a80  4be00000	jr	r31
  934  00001a84  54000000	nop
  935  00001a88          	.endproc _lock_release
  937  00001a88          	.proc _cond_create
  938  00001a88          	.global _cond_create
  939  00001a88          	_cond_create:
  940  00001a88  44000456	trap	#0x456
  941  00001a8c  4be00000	jr	r31
  942  00001a90  54000000	nop
  943  00001a94          	.endproc _cond_create
  945  00001a94          	.proc _cond_wait
  946  00001a94          	.global _cond_wait
  947  00001a94          	_cond_wait:
  948  00001a94  44000457	trap	#0x457
  949  00001a98  4be00000	jr	r31
  950  00001a9c  54000000	nop
  951  00001aa0          	.endproc _cond_wait
  953  00001aa0          	.proc _cond_signal
  954  00001aa0          	.global _cond_signal
  955  00001aa0          	_cond_signal:
  956  00001aa0  44000458	trap	#0x458
  957  00001aa4  4be00000	jr	r31
  958  00001aa8  54000000	nop
  959  00001aac          	.endproc _cond_signal
  961  00001aac          	.proc _Exit
  962  00001aac          	.global _Exit
  963  00001aac          	_Exit:
  964  00001aac  44000500	trap	#0x500
  965  00001ab0  4be00000	jr	r31
  966  00001ab4  54000000	nop
  967  00001ab8          	.endproc _Exit
  968                      ; Compiled by GCC
  970  00001ab8          	.align 2
  971  00001ab8          	.proc _isspace
  972  00001ab8          	.global _isspace
  973  00001ab8          	_isspace:
  974                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  975  00001ab8  afbefffc	sw	-4(r29),r30; push fp
  976  00001abc  001df020	add	r30,r0,r29; fp = sp
  977  00001ac0  afbffff8	sw	-8(r29),r31; push ret addr
  978  00001ac4  2fbd0018	subui	r29,r29,#24; alloc local storage
  979  00001ac8  afa20000	sw	0(r29),r2
  980  00001acc  afa30004	sw	4(r29),r3
  981  00001ad0  afa40008	sw	8(r29),r4
  982  00001ad4  83c20003	lb	r2,3(r30)
  983  00001ad8  20010000	addi	r1,r0,#0
  984  00001adc  304300ff	andi	r3,r2,#0x00ff
  985  00001ae0  60640020	seqi	r4,r3,#32
  986  00001ae4  1480002c	bnez	r4,L3_LF2
  987  00001ae8  54000000	nop; delay slot nop
  988  00001aec  304300ff	andi	r3,r2,#0x00ff
  989  00001af0  60640009	seqi	r4,r3,#9
  990  00001af4  1480001c	bnez	r4,L3_LF2
  991  00001af8  54000000	nop; delay slot nop
  992  00001afc  304300ff	andi	r3,r2,#0x00ff
  993  00001b00  6064000a	seqi	r4,r3,#10
  994  00001b04  1480000c	bnez	r4,L3_LF2
  995  00001b08  54000000	nop; delay slot nop
  996  00001b0c  08000008	j	L2_LF2
  997  00001b10  54000000	nop; delay slot nop
  998  00001b14          	L3_LF2:
  999  00001b14  20010001	addi	r1,r0,#1
 1000  00001b18          	L2_LF2:
 1001  00001b18  08000004	j	L1_LF2
 1002  00001b1c  54000000	nop; delay slot nop
 1003  00001b20          	L1_LF2:
 1004  00001b20  8fa20000	lw	r2,0(r29)
 1005  00001b24  8fa30004	lw	r3,4(r29)
 1006  00001b28  8fa40008	lw	r4,8(r29)
 1007  00001b2c  8fdffff8	lw	r31,-8(r30)
 1008  00001b30  001ee820	add	r29,r0,r30
 1009  00001b34  8fdefffc	lw	r30,-4(r30)
 1010  00001b38  4be00000	jr	r31
 1011  00001b3c  54000000	nop
 1012  00001b40          	.endproc _isspace
 1013  00001b40          	.align 2
 1014  00001b40          	.proc _isxdigit
 1015  00001b40          	.global _isxdigit
 1016  00001b40          	_isxdigit:
 1017                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
 1018  00001b40  afbefffc	sw	-4(r29),r30; push fp
 1019  00001b44  001df020	add	r30,r0,r29; fp = sp
 1020  00001b48  afbffff8	sw	-8(r29),r31; push ret addr
 1021  00001b4c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1022  00001b50  afa20000	sw	0(r29),r2
 1023  00001b54  afa30004	sw	4(r29),r3
 1024  00001b58  afa40008	sw	8(r29),r4
 1025  00001b5c  83c20003	lb	r2,3(r30)
 1026  00001b60  20010000	addi	r1,r0,#0
 1027  00001b64  304300ff	andi	r3,r2,#0x00ff
 1028  00001b68  6c64002f	sgtui	r4,r3,#47
 1029  00001b6c  1080001c	beqz	r4,L7_LF2
 1030  00001b70  54000000	nop; delay slot nop
 1031  00001b74  304300ff	andi	r3,r2,#0x00ff
 1032  00001b78  70640039	sleui	r4,r3,#57
 1033  00001b7c  1480005c	bnez	r4,L6_LF2
 1034  00001b80  54000000	nop; delay slot nop
 1035  00001b84  08000004	j	L7_LF2
 1036  00001b88  54000000	nop; delay slot nop
 1037  00001b8c          	L7_LF2:
 1038  00001b8c  304300ff	andi	r3,r2,#0x00ff
 1039  00001b90  6c640060	sgtui	r4,r3,#96
 1040  00001b94  1080001c	beqz	r4,L8_LF2
 1041  00001b98  54000000	nop; delay slot nop
 1042  00001b9c  304300ff	andi	r3,r2,#0x00ff
 1043  00001ba0  70640066	sleui	r4,r3,#102
 1044  00001ba4  14800034	bnez	r4,L6_LF2
 1045  00001ba8  54000000	nop; delay slot nop
 1046  00001bac  08000004	j	L8_LF2
 1047  00001bb0  54000000	nop; delay slot nop
 1048  00001bb4          	L8_LF2:
 1049  00001bb4  304300ff	andi	r3,r2,#0x00ff
 1050  00001bb8  6c640040	sgtui	r4,r3,#64
 1051  00001bbc  10800020	beqz	r4,L5_LF2
 1052  00001bc0  54000000	nop; delay slot nop
 1053  00001bc4  304300ff	andi	r3,r2,#0x00ff
 1054  00001bc8  70640041	sleui	r4,r3,#65
 1055  00001bcc  1480000c	bnez	r4,L6_LF2
 1056  00001bd0  54000000	nop; delay slot nop
 1057  00001bd4  08000008	j	L5_LF2
 1058  00001bd8  54000000	nop; delay slot nop
 1059  00001bdc          	L6_LF2:
 1060  00001bdc  20010001	addi	r1,r0,#1
 1061  00001be0          	L5_LF2:
 1062  00001be0  08000004	j	L4_LF2
 1063  00001be4  54000000	nop; delay slot nop
 1064  00001be8          	L4_LF2:
 1065  00001be8  8fa20000	lw	r2,0(r29)
 1066  00001bec  8fa30004	lw	r3,4(r29)
 1067  00001bf0  8fa40008	lw	r4,8(r29)
 1068  00001bf4  8fdffff8	lw	r31,-8(r30)
 1069  00001bf8  001ee820	add	r29,r0,r30
 1070  00001bfc  8fdefffc	lw	r30,-4(r30)
 1071  00001c00  4be00000	jr	r31
 1072  00001c04  54000000	nop
 1073  00001c08          	.endproc _isxdigit
 1074  00001c08          	.align 2
 1075  00001c08          	.proc _dstrcpy
 1076  00001c08          	.global _dstrcpy
 1077  00001c08          	_dstrcpy:
 1078                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
 1079  00001c08  afbefffc	sw	-4(r29),r30; push fp
 1080  00001c0c  001df020	add	r30,r0,r29; fp = sp
 1081  00001c10  afbffff8	sw	-8(r29),r31; push ret addr
 1082  00001c14  2fbd0018	subui	r29,r29,#24; alloc local storage
 1083  00001c18  afa20000	sw	0(r29),r2
 1084  00001c1c  afa30004	sw	4(r29),r3
 1085  00001c20  8fc10000	lw	r1,(r30)
 1086  00001c24  afc1fff4	sw	-12(r30),r1
 1087  00001c28          	L10_LF2:
 1088  00001c28  8fc10000	lw	r1,(r30)
 1089  00001c2c  20220001	addi	r2,r1,#1
 1090  00001c30  afc20000	sw	(r30),r2
 1091  00001c34  8fc20004	lw	r2,4(r30)
 1092  00001c38  20430001	addi	r3,r2,#1
 1093  00001c3c  afc30004	sw	4(r30),r3
 1094  00001c40  80420000	lb	r2,(r2)
 1095  00001c44  a0220000	sb	(r1),r2
 1096  00001c48  a3c2fff3	sb	-13(r30),r2
 1097  00001c4c          	L12_LF2:
 1098  00001c4c  93c1fff3	lbu	r1,-13(r30)
 1099  00001c50  64220000	snei	r2,r1,#0
 1100  00001c54  1440000c	bnez	r2,L13_LF2
 1101  00001c58  54000000	nop; delay slot nop
 1102  00001c5c  0800000c	j	L11_LF2
 1103  00001c60  54000000	nop; delay slot nop
 1104  00001c64          	L13_LF2:
 1105  00001c64  0bffffc0	j	L10_LF2
 1106  00001c68  54000000	nop; delay slot nop
 1107  00001c6c          	L11_LF2:
 1108  00001c6c  8fc1fff4	lw	r1,-12(r30)
 1109  00001c70  08000004	j	L9_LF2
 1110  00001c74  54000000	nop; delay slot nop
 1111  00001c78          	L9_LF2:
 1112  00001c78  8fa20000	lw	r2,0(r29)
 1113  00001c7c  8fa30004	lw	r3,4(r29)
 1114  00001c80  8fdffff8	lw	r31,-8(r30)
 1115  00001c84  001ee820	add	r29,r0,r30
 1116  00001c88  8fdefffc	lw	r30,-4(r30)
 1117  00001c8c  4be00000	jr	r31
 1118  00001c90  54000000	nop
 1119  00001c94          	.endproc _dstrcpy
 1120  00001c94          	.align 2
 1121  00001c94          	.proc _dstrncpy
 1122  00001c94          	.global _dstrncpy
 1123  00001c94          	_dstrncpy:
 1124                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
 1125  00001c94  afbefffc	sw	-4(r29),r30; push fp
 1126  00001c98  001df020	add	r30,r0,r29; fp = sp
 1127  00001c9c  afbffff8	sw	-8(r29),r31; push ret addr
 1128  00001ca0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1129  00001ca4  afa20000	sw	0(r29),r2
 1130  00001ca8  afa30004	sw	4(r29),r3
 1131  00001cac  8fc10000	lw	r1,(r30)
 1132  00001cb0  afc1fff4	sw	-12(r30),r1
 1133  00001cb4          	L15_LF2:
 1134  00001cb4  8fc10008	lw	r1,8(r30)
 1135  00001cb8  2022ffff	addi	r2,r1,#-1
 1136  00001cbc  afc20008	sw	8(r30),r2
 1137  00001cc0  70210000	slei	r1,r1,#0
 1138  00001cc4  1020000c	beqz	r1,L18_LF2
 1139  00001cc8  54000000	nop; delay slot nop
 1140  00001ccc  08000048	j	L16_LF2
 1141  00001cd0  54000000	nop; delay slot nop
 1142  00001cd4          	L18_LF2:
 1143  00001cd4  8fc10000	lw	r1,(r30)
 1144  00001cd8  20220001	addi	r2,r1,#1
 1145  00001cdc  afc20000	sw	(r30),r2
 1146  00001ce0  8fc20004	lw	r2,4(r30)
 1147  00001ce4  20430001	addi	r3,r2,#1
 1148  00001ce8  afc30004	sw	4(r30),r3
 1149  00001cec  80420000	lb	r2,(r2)
 1150  00001cf0  a0220000	sb	(r1),r2
 1151  00001cf4  a3c2fff3	sb	-13(r30),r2
 1152  00001cf8          	L17_LF2:
 1153  00001cf8  93c1fff3	lbu	r1,-13(r30)
 1154  00001cfc  64220000	snei	r2,r1,#0
 1155  00001d00  1440000c	bnez	r2,L19_LF2
 1156  00001d04  54000000	nop; delay slot nop
 1157  00001d08  0800000c	j	L16_LF2
 1158  00001d0c  54000000	nop; delay slot nop
 1159  00001d10          	L19_LF2:
 1160  00001d10  0bffffa0	j	L15_LF2
 1161  00001d14  54000000	nop; delay slot nop
 1162  00001d18          	L16_LF2:
 1163  00001d18  8fc1fff4	lw	r1,-12(r30)
 1164  00001d1c  08000004	j	L14_LF2
 1165  00001d20  54000000	nop; delay slot nop
 1166  00001d24          	L14_LF2:
 1167  00001d24  8fa20000	lw	r2,0(r29)
 1168  00001d28  8fa30004	lw	r3,4(r29)
 1169  00001d2c  8fdffff8	lw	r31,-8(r30)
 1170  00001d30  001ee820	add	r29,r0,r30
 1171  00001d34  8fdefffc	lw	r30,-4(r30)
 1172  00001d38  4be00000	jr	r31
 1173  00001d3c  54000000	nop
 1174  00001d40          	.endproc _dstrncpy
 1175  00001d40          	.align 2
 1176  00001d40          	.proc _dstrcat
 1177  00001d40          	.global _dstrcat
 1178  00001d40          	_dstrcat:
 1179                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1180  00001d40  afbefffc	sw	-4(r29),r30; push fp
 1181  00001d44  001df020	add	r30,r0,r29; fp = sp
 1182  00001d48  afbffff8	sw	-8(r29),r31; push ret addr
 1183  00001d4c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1184  00001d50  afa20000	sw	0(r29),r2
 1185  00001d54  8fc10000	lw	r1,(r30)
 1186  00001d58  afc1fff4	sw	-12(r30),r1
 1187  00001d5c          	L21_LF2:
 1188  00001d5c  8fc10000	lw	r1,(r30)
 1189  00001d60  90220000	lbu	r2,(r1)
 1190  00001d64  64410000	snei	r1,r2,#0
 1191  00001d68  1420000c	bnez	r1,L23_LF2
 1192  00001d6c  54000000	nop; delay slot nop
 1193  00001d70  0800001c	j	L22_LF2
 1194  00001d74  54000000	nop; delay slot nop
 1195  00001d78          	L23_LF2:
 1196  00001d78  8fc20000	lw	r2,(r30)
 1197  00001d7c  20410001	addi	r1,r2,#1
 1198  00001d80  00011020	add	r2,r0,r1
 1199  00001d84  afc20000	sw	(r30),r2
 1200  00001d88  0bffffd0	j	L21_LF2
 1201  00001d8c  54000000	nop; delay slot nop
 1202  00001d90          	L22_LF2:
 1203  00001d90  23bdfff8	addi	r29,r29,#-8
 1204  00001d94  001d0820	add	r1,r0,r29
 1205  00001d98  8fc20000	lw	r2,(r30)
 1206  00001d9c  ac220000	sw	(r1),r2
 1207  00001da0  8fc20004	lw	r2,4(r30)
 1208  00001da4  ac220004	sw	4(r1),r2
 1209  00001da8  0ffffe5c	jal	_dstrcpy
 1210  00001dac  54000000	nop; delay slot nop
 1211  00001db0  23bd0008	addi	r29,r29,#8
 1212  00001db4  8fc1fff4	lw	r1,-12(r30)
 1213  00001db8  08000004	j	L20_LF2
 1214  00001dbc  54000000	nop; delay slot nop
 1215  00001dc0          	L20_LF2:
 1216  00001dc0  8fa20000	lw	r2,0(r29)
 1217  00001dc4  8fdffff8	lw	r31,-8(r30)
 1218  00001dc8  001ee820	add	r29,r0,r30
 1219  00001dcc  8fdefffc	lw	r30,-4(r30)
 1220  00001dd0  4be00000	jr	r31
 1221  00001dd4  54000000	nop
 1222  00001dd8          	.endproc _dstrcat
 1223  00001dd8          	.align 2
 1224  00001dd8          	.proc _dstrncmp
 1225  00001dd8          	.global _dstrncmp
 1226  00001dd8          	_dstrncmp:
 1227                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1228  00001dd8  afbefffc	sw	-4(r29),r30; push fp
 1229  00001ddc  001df020	add	r30,r0,r29; fp = sp
 1230  00001de0  afbffff8	sw	-8(r29),r31; push ret addr
 1231  00001de4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1232  00001de8  afa20000	sw	0(r29),r2
 1233  00001dec  afa30004	sw	4(r29),r3
 1234  00001df0  54000000	nop
 1235  00001df4  20010000	addi	r1,r0,#0
 1236  00001df8  afc1fff4	sw	-12(r30),r1
 1237  00001dfc          	L25_LF2:
 1238  00001dfc  8fc1fff4	lw	r1,-12(r30)
 1239  00001e00  8fc20008	lw	r2,8(r30)
 1240  00001e04  0022082a	slt	r1,r1,r2
 1241  00001e08  1420000c	bnez	r1,L28_LF2
 1242  00001e0c  54000000	nop; delay slot nop
 1243  00001e10  08000088	j	L26_LF2
 1244  00001e14  54000000	nop; delay slot nop
 1245  00001e18          	L28_LF2:
 1246  00001e18  8fc10004	lw	r1,4(r30)
 1247  00001e1c  90220000	lbu	r2,(r1)
 1248  00001e20  64410000	snei	r1,r2,#0
 1249  00001e24  14200018	bnez	r1,L29_LF2
 1250  00001e28  54000000	nop; delay slot nop
 1251  00001e2c  20010000	addi	r1,r0,#0
 1252  00001e30  080000d8	j	L24_LF2
 1253  00001e34  54000000	nop; delay slot nop
 1254  00001e38  08000028	j	L30_LF2
 1255  00001e3c  54000000	nop; delay slot nop
 1256  00001e40          	L29_LF2:
 1257  00001e40  8fc10000	lw	r1,(r30)
 1258  00001e44  8fc20004	lw	r2,4(r30)
 1259  00001e48  90210000	lbu	r1,(r1)
 1260  00001e4c  90420000	lbu	r2,(r2)
 1261  00001e50  00220829	sne	r1,r1,r2
 1262  00001e54  1020000c	beqz	r1,L30_LF2
 1263  00001e58  54000000	nop; delay slot nop
 1264  00001e5c  0800003c	j	L26_LF2
 1265  00001e60  54000000	nop; delay slot nop
 1266  00001e64          	L31_LF2:
 1267  00001e64          	L30_LF2:
 1268  00001e64  8fc20000	lw	r2,(r30)
 1269  00001e68  20410001	addi	r1,r2,#1
 1270  00001e6c  00011020	add	r2,r0,r1
 1271  00001e70  afc20000	sw	(r30),r2
 1272  00001e74  8fc20004	lw	r2,4(r30)
 1273  00001e78  20410001	addi	r1,r2,#1
 1274  00001e7c  00011020	add	r2,r0,r1
 1275  00001e80  afc20004	sw	4(r30),r2
 1276  00001e84          	L27_LF2:
 1277  00001e84  8fc2fff4	lw	r2,-12(r30)
 1278  00001e88  20410001	addi	r1,r2,#1
 1279  00001e8c  00011020	add	r2,r0,r1
 1280  00001e90  afc2fff4	sw	-12(r30),r2
 1281  00001e94  0bffff64	j	L25_LF2
 1282  00001e98  54000000	nop; delay slot nop
 1283  00001e9c          	L26_LF2:
 1284  00001e9c  8fc1fff4	lw	r1,-12(r30)
 1285  00001ea0  8fc20008	lw	r2,8(r30)
 1286  00001ea4  00220828	seq	r1,r1,r2
 1287  00001ea8  10200018	beqz	r1,L32_LF2
 1288  00001eac  54000000	nop; delay slot nop
 1289  00001eb0  20010000	addi	r1,r0,#0
 1290  00001eb4  08000054	j	L24_LF2
 1291  00001eb8  54000000	nop; delay slot nop
 1292  00001ebc  0800004c	j	L33_LF2
 1293  00001ec0  54000000	nop; delay slot nop
 1294  00001ec4          	L32_LF2:
 1295  00001ec4  8fc20000	lw	r2,(r30)
 1296  00001ec8  90410000	lbu	r1,(r2)
 1297  00001ecc  8fc20004	lw	r2,4(r30)
 1298  00001ed0  90430000	lbu	r3,(r2)
 1299  00001ed4  00230822	sub	r1,r1,r3
 1300  00001ed8  74220000	sgei	r2,r1,#0
 1301  00001edc  10400020	beqz	r2,L34_LF2
 1302  00001ee0  54000000	nop; delay slot nop
 1303  00001ee4  8fc10000	lw	r1,(r30)
 1304  00001ee8  8fc20004	lw	r2,4(r30)
 1305  00001eec  90210000	lbu	r1,(r1)
 1306  00001ef0  90420000	lbu	r2,(r2)
 1307  00001ef4  00220829	sne	r1,r1,r2
 1308  00001ef8  08000008	j	L35_LF2
 1309  00001efc  54000000	nop; delay slot nop
 1310  00001f00          	L34_LF2:
 1311  00001f00  2001ffff	addi	r1,r0,#-1
 1312  00001f04          	L35_LF2:
 1313  00001f04  08000004	j	L24_LF2
 1314  00001f08  54000000	nop; delay slot nop
 1315  00001f0c          	L33_LF2:
 1316  00001f0c          	L24_LF2:
 1317  00001f0c  8fa20000	lw	r2,0(r29)
 1318  00001f10  8fa30004	lw	r3,4(r29)
 1319  00001f14  8fdffff8	lw	r31,-8(r30)
 1320  00001f18  001ee820	add	r29,r0,r30
 1321  00001f1c  8fdefffc	lw	r30,-4(r30)
 1322  00001f20  4be00000	jr	r31
 1323  00001f24  54000000	nop
 1324  00001f28          	.endproc _dstrncmp
 1325  00001f28          	.align 2
 1326  00001f28          	.proc _dstrlen
 1327  00001f28          	.global _dstrlen
 1328  00001f28          	_dstrlen:
 1329                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1330  00001f28  afbefffc	sw	-4(r29),r30; push fp
 1331  00001f2c  001df020	add	r30,r0,r29; fp = sp
 1332  00001f30  afbffff8	sw	-8(r29),r31; push ret addr
 1333  00001f34  2fbd0018	subui	r29,r29,#24; alloc local storage
 1334  00001f38  afa20000	sw	0(r29),r2
 1335  00001f3c  20010000	addi	r1,r0,#0
 1336  00001f40  afc1fff4	sw	-12(r30),r1
 1337  00001f44          	L37_LF2:
 1338  00001f44  8fc10000	lw	r1,(r30)
 1339  00001f48  20220001	addi	r2,r1,#1
 1340  00001f4c  afc20000	sw	(r30),r2
 1341  00001f50  90210000	lbu	r1,(r1)
 1342  00001f54  64220000	snei	r2,r1,#0
 1343  00001f58  1440000c	bnez	r2,L39_LF2
 1344  00001f5c  54000000	nop; delay slot nop
 1345  00001f60  0800001c	j	L38_LF2
 1346  00001f64  54000000	nop; delay slot nop
 1347  00001f68          	L39_LF2:
 1348  00001f68  8fc2fff4	lw	r2,-12(r30)
 1349  00001f6c  20410001	addi	r1,r2,#1
 1350  00001f70  00011020	add	r2,r0,r1
 1351  00001f74  afc2fff4	sw	-12(r30),r2
 1352  00001f78  0bffffc8	j	L37_LF2
 1353  00001f7c  54000000	nop; delay slot nop
 1354  00001f80          	L38_LF2:
 1355  00001f80  8fc1fff4	lw	r1,-12(r30)
 1356  00001f84  08000004	j	L36_LF2
 1357  00001f88  54000000	nop; delay slot nop
 1358  00001f8c          	L36_LF2:
 1359  00001f8c  8fa20000	lw	r2,0(r29)
 1360  00001f90  8fdffff8	lw	r31,-8(r30)
 1361  00001f94  001ee820	add	r29,r0,r30
 1362  00001f98  8fdefffc	lw	r30,-4(r30)
 1363  00001f9c  4be00000	jr	r31
 1364  00001fa0  54000000	nop
 1365  00001fa4          	.endproc _dstrlen
 1366  00001fa4          	.align 2
 1367  00001fa4          	.proc _dstrstr
 1368  00001fa4          	.global _dstrstr
 1369  00001fa4          	_dstrstr:
 1370                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1371  00001fa4  afbefffc	sw	-4(r29),r30; push fp
 1372  00001fa8  001df020	add	r30,r0,r29; fp = sp
 1373  00001fac  afbffff8	sw	-8(r29),r31; push ret addr
 1374  00001fb0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1375  00001fb4  afa20000	sw	0(r29),r2
 1376  00001fb8  23bdfff8	addi	r29,r29,#-8
 1377  00001fbc  001d0820	add	r1,r0,r29
 1378  00001fc0  8fc20004	lw	r2,4(r30)
 1379  00001fc4  ac220000	sw	(r1),r2
 1380  00001fc8  0fffff5c	jal	_dstrlen
 1381  00001fcc  54000000	nop; delay slot nop
 1382  00001fd0  23bd0008	addi	r29,r29,#8
 1383  00001fd4  afc1fff4	sw	-12(r30),r1
 1384  00001fd8          	L41_LF2:
 1385  00001fd8  8fc10000	lw	r1,(r30)
 1386  00001fdc  90220000	lbu	r2,(r1)
 1387  00001fe0  64410000	snei	r1,r2,#0
 1388  00001fe4  1420000c	bnez	r1,L43_LF2
 1389  00001fe8  54000000	nop; delay slot nop
 1390  00001fec  08000060	j	L42_LF2
 1391  00001ff0  54000000	nop; delay slot nop
 1392  00001ff4          	L43_LF2:
 1393  00001ff4  23bdfff0	addi	r29,r29,#-16
 1394  00001ff8  001d0820	add	r1,r0,r29
 1395  00001ffc  8fc20000	lw	r2,(r30)
 1396  00002000  ac220000	sw	(r1),r2
 1397  00002004  8fc20004	lw	r2,4(r30)
 1398  00002008  ac220004	sw	4(r1),r2
 1399  0000200c  8fc2fff4	lw	r2,-12(r30)
 1400  00002010  ac220008	sw	8(r1),r2
 1401  00002014  0ffffdc0	jal	_dstrncmp
 1402  00002018  54000000	nop; delay slot nop
 1403  0000201c  23bd0010	addi	r29,r29,#16
 1404  00002020  64220000	snei	r2,r1,#0
 1405  00002024  14400010	bnez	r2,L44_LF2
 1406  00002028  54000000	nop; delay slot nop
 1407  0000202c  8fc10000	lw	r1,(r30)
 1408  00002030  08000028	j	L40_LF2
 1409  00002034  54000000	nop; delay slot nop
 1410  00002038          	L44_LF2:
 1411  00002038  8fc20000	lw	r2,(r30)
 1412  0000203c  20410001	addi	r1,r2,#1
 1413  00002040  00011020	add	r2,r0,r1
 1414  00002044  afc20000	sw	(r30),r2
 1415  00002048  0bffff8c	j	L41_LF2
 1416  0000204c  54000000	nop; delay slot nop
 1417  00002050          	L42_LF2:
 1418  00002050  20010000	addi	r1,r0,#0
 1419  00002054  08000004	j	L40_LF2
 1420  00002058  54000000	nop; delay slot nop
 1421  0000205c          	L40_LF2:
 1422  0000205c  8fa20000	lw	r2,0(r29)
 1423  00002060  8fdffff8	lw	r31,-8(r30)
 1424  00002064  001ee820	add	r29,r0,r30
 1425  00002068  8fdefffc	lw	r30,-4(r30)
 1426  0000206c  4be00000	jr	r31
 1427  00002070  54000000	nop
 1428  00002074          	.endproc _dstrstr
 1429  00002074          	.align 2
 1430  00002074          	.proc _dmindex
 1431  00002074          	.global _dmindex
 1432  00002074          	_dmindex:
 1433                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1434  00002074  afbefffc	sw	-4(r29),r30; push fp
 1435  00002078  001df020	add	r30,r0,r29; fp = sp
 1436  0000207c  afbffff8	sw	-8(r29),r31; push ret addr
 1437  00002080  2fbd0018	subui	r29,r29,#24; alloc local storage
 1438  00002084  afa20000	sw	0(r29),r2
 1439  00002088  54000000	nop
 1440  0000208c          	L46_LF2:
 1441  0000208c  8fc10000	lw	r1,(r30)
 1442  00002090  90220000	lbu	r2,(r1)
 1443  00002094  64410000	snei	r1,r2,#0
 1444  00002098  1420000c	bnez	r1,L48_LF2
 1445  0000209c  54000000	nop; delay slot nop
 1446  000020a0  08000070	j	L47_LF2
 1447  000020a4  54000000	nop; delay slot nop
 1448  000020a8          	L48_LF2:
 1449  000020a8  8fc10004	lw	r1,4(r30)
 1450  000020ac  afc1fff4	sw	-12(r30),r1
 1451  000020b0          	L49_LF2:
 1452  000020b0  8fc1fff4	lw	r1,-12(r30)
 1453  000020b4  90220000	lbu	r2,(r1)
 1454  000020b8  64410000	snei	r1,r2,#0
 1455  000020bc  1420000c	bnez	r1,L52_LF2
 1456  000020c0  54000000	nop; delay slot nop
 1457  000020c4  08000044	j	L50_LF2
 1458  000020c8  54000000	nop; delay slot nop
 1459  000020cc          	L52_LF2:
 1460  000020cc  8fc10000	lw	r1,(r30)
 1461  000020d0  8fc2fff4	lw	r2,-12(r30)
 1462  000020d4  90210000	lbu	r1,(r1)
 1463  000020d8  90420000	lbu	r2,(r2)
 1464  000020dc  00220828	seq	r1,r1,r2
 1465  000020e0  10200010	beqz	r1,L51_LF2
 1466  000020e4  54000000	nop; delay slot nop
 1467  000020e8  8fc10000	lw	r1,(r30)
 1468  000020ec  08000030	j	L45_LF2
 1469  000020f0  54000000	nop; delay slot nop
 1470  000020f4          	L53_LF2:
 1471  000020f4          	L51_LF2:
 1472  000020f4  8fc2fff4	lw	r2,-12(r30)
 1473  000020f8  20410001	addi	r1,r2,#1
 1474  000020fc  00011020	add	r2,r0,r1
 1475  00002100  afc2fff4	sw	-12(r30),r2
 1476  00002104  0bffffa8	j	L49_LF2
 1477  00002108  54000000	nop; delay slot nop
 1478  0000210c          	L50_LF2:
 1479  0000210c  0bffff7c	j	L46_LF2
 1480  00002110  54000000	nop; delay slot nop
 1481  00002114          	L47_LF2:
 1482  00002114  20010000	addi	r1,r0,#0
 1483  00002118  08000004	j	L45_LF2
 1484  0000211c  54000000	nop; delay slot nop
 1485  00002120          	L45_LF2:
 1486  00002120  8fa20000	lw	r2,0(r29)
 1487  00002124  8fdffff8	lw	r31,-8(r30)
 1488  00002128  001ee820	add	r29,r0,r30
 1489  0000212c  8fdefffc	lw	r30,-4(r30)
 1490  00002130  4be00000	jr	r31
 1491  00002134  54000000	nop
 1492  00002138          	.endproc _dmindex
 1493  00002138          	.align 2
 1494  00002138          	.proc _dindex
 1495  00002138          	.global _dindex
 1496  00002138          	_dindex:
 1497                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1498  00002138  afbefffc	sw	-4(r29),r30; push fp
 1499  0000213c  001df020	add	r30,r0,r29; fp = sp
 1500  00002140  afbffff8	sw	-8(r29),r31; push ret addr
 1501  00002144  2fbd0010	subui	r29,r29,#16; alloc local storage
 1502  00002148  afa20000	sw	0(r29),r2
 1503  0000214c  54000000	nop
 1504  00002150          	L55_LF2:
 1505  00002150  8fc10000	lw	r1,(r30)
 1506  00002154  90220000	lbu	r2,(r1)
 1507  00002158  64410000	snei	r1,r2,#0
 1508  0000215c  1420000c	bnez	r1,L57_LF2
 1509  00002160  54000000	nop; delay slot nop
 1510  00002164  08000040	j	L56_LF2
 1511  00002168  54000000	nop; delay slot nop
 1512  0000216c          	L57_LF2:
 1513  0000216c  8fc10000	lw	r1,(r30)
 1514  00002170  90220000	lbu	r2,(r1)
 1515  00002174  8fc10004	lw	r1,4(r30)
 1516  00002178  00411028	seq	r2,r2,r1
 1517  0000217c  10400010	beqz	r2,L58_LF2
 1518  00002180  54000000	nop; delay slot nop
 1519  00002184  8fc10000	lw	r1,(r30)
 1520  00002188  08000028	j	L54_LF2
 1521  0000218c  54000000	nop; delay slot nop
 1522  00002190          	L58_LF2:
 1523  00002190  8fc20000	lw	r2,(r30)
 1524  00002194  20410001	addi	r1,r2,#1
 1525  00002198  00011020	add	r2,r0,r1
 1526  0000219c  afc20000	sw	(r30),r2
 1527  000021a0  0bffffac	j	L55_LF2
 1528  000021a4  54000000	nop; delay slot nop
 1529  000021a8          	L56_LF2:
 1530  000021a8  20010000	addi	r1,r0,#0
 1531  000021ac  08000004	j	L54_LF2
 1532  000021b0  54000000	nop; delay slot nop
 1533  000021b4          	L54_LF2:
 1534  000021b4  8fa20000	lw	r2,0(r29)
 1535  000021b8  8fdffff8	lw	r31,-8(r30)
 1536  000021bc  001ee820	add	r29,r0,r30
 1537  000021c0  8fdefffc	lw	r30,-4(r30)
 1538  000021c4  4be00000	jr	r31
 1539  000021c8  54000000	nop
 1540  000021cc          	.endproc _dindex
 1541  000021cc          	.align 2
 1542  000021cc          	.proc _ditoa
 1543  000021cc          	.global _ditoa
 1544  000021cc          	_ditoa:
 1545                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1546  000021cc  afbefffc	sw	-4(r29),r30; push fp
 1547  000021d0  001df020	add	r30,r0,r29; fp = sp
 1548  000021d4  afbffff8	sw	-8(r29),r31; push ret addr
 1549  000021d8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1550  000021dc  afa20000	sw	0(r29),r2
 1551  000021e0  afa30004	sw	4(r29),r3
 1552  000021e4  8fc10000	lw	r1,(r30)
 1553  000021e8  68220000	slti	r2,r1,#0
 1554  000021ec  1040002c	beqz	r2,L60_LF2
 1555  000021f0  54000000	nop; delay slot nop
 1556  000021f4  8fc10004	lw	r1,4(r30)
 1557  000021f8  20220001	addi	r2,r1,#1
 1558  000021fc  afc20004	sw	4(r30),r2
 1559  00002200  2002002d	addi	r2,r0,(#0x2d)&0xff
 1560  00002204  a0220000	sb	(r1),r2
 1561  00002208  8fc10000	lw	r1,(r30)
 1562  0000220c  00011022	sub	r2,r0,r1
 1563  00002210  afc20000	sw	(r30),r2
 1564  00002214  08000118	j	L61_LF2
 1565  00002218  54000000	nop; delay slot nop
 1566  0000221c          	L60_LF2:
 1567  0000221c  8fc10000	lw	r1,(r30)
 1568  00002220  64220000	snei	r2,r1,#0
 1569  00002224  14400020	bnez	r2,L62_LF2
 1570  00002228  54000000	nop; delay slot nop
 1571  0000222c  8fc10004	lw	r1,4(r30)
 1572  00002230  20220001	addi	r2,r1,#1
 1573  00002234  afc20004	sw	4(r30),r2
 1574  00002238  20020030	addi	r2,r0,(#0x30)&0xff
 1575  0000223c  a0220000	sb	(r1),r2
 1576  00002240  080000ec	j	L61_LF2
 1577  00002244  54000000	nop; delay slot nop
 1578  00002248          	L62_LF2:
 1579  00002248  20010001	addi	r1,r0,#1
 1580  0000224c  afc1fff4	sw	-12(r30),r1
 1581  00002250          	L64_LF2:
 1582  00002250  8fc1fff4	lw	r1,-12(r30)
 1583  00002254  8fc20000	lw	r2,(r30)
 1584  00002258  0022082c	sle	r1,r1,r2
 1585  0000225c  1420000c	bnez	r1,L66_LF2
 1586  00002260  54000000	nop; delay slot nop
 1587  00002264  08000024	j	L65_LF2
 1588  00002268  54000000	nop; delay slot nop
 1589  0000226c          	L67_LF2:
 1590  0000226c          	L66_LF2:
 1591  0000226c  8fc1fff4	lw	r1,-12(r30)
 1592  00002270  00011820	add	r3,r0,r1
 1593  00002274  50620002	slli	r2,r3,#0x2
 1594  00002278  00411020	add	r2,r2,r1
 1595  0000227c  50410001	slli	r1,r2,#0x1
 1596  00002280  afc1fff4	sw	-12(r30),r1
 1597  00002284  0bffffc8	j	L64_LF2
 1598  00002288  54000000	nop; delay slot nop
 1599  0000228c          	L65_LF2:
 1600  0000228c  54000000	nop
 1601  00002290          	L68_LF2:
 1602  00002290  8fc1fff4	lw	r1,-12(r30)
 1603  00002294  2002000a	addi	r2,r0,#10
 1604  00002298  00200035	movi2fp	f0,r1
 1605  0000229c  00400835	movi2fp	f1,r2
 1606  000022a0  0401000f	div	f0,f0,f1
 1607  000022a4  00000834	movfp2i	r1,f0
 1608  000022a8  afc1fff4	sw	-12(r30),r1
 1609  000022ac  8fc10004	lw	r1,4(r30)
 1610  000022b0  20220001	addi	r2,r1,#1
 1611  000022b4  afc20004	sw	4(r30),r2
 1612  000022b8  8fc20000	lw	r2,(r30)
 1613  000022bc  8fc3fff4	lw	r3,-12(r30)
 1614  000022c0  00400035	movi2fp	f0,r2
 1615  000022c4  00600835	movi2fp	f1,r3
 1616  000022c8  0401000f	div	f0,f0,f1
 1617  000022cc  00001034	movfp2i	r2,f0
 1618  000022d0  00021820	add	r3,r0,r2
 1619  000022d4  20620030	addi	r2,r3,#48
 1620  000022d8  a0220000	sb	(r1),r2
 1621  000022dc  8fc10000	lw	r1,(r30)
 1622  000022e0  8fc3fff4	lw	r3,-12(r30)
 1623  000022e4  00200035	movi2fp	f0,r1
 1624  000022e8  00600835	movi2fp	f1,r3
 1625  000022ec  0401000f	div	f0,f0,f1
 1626  000022f0  00001034	movfp2i	r2,f0
 1627  000022f4  8fc3fff4	lw	r3,-12(r30)
 1628  000022f8  00400035	movi2fp	f0,r2
 1629  000022fc  00600835	movi2fp	f1,r3
 1630  00002300  0401000e	mult	f0,f0,f1
 1631  00002304  00001034	movfp2i	r2,f0
 1632  00002308  00220822	sub	r1,r1,r2
 1633  0000230c  afc10000	sw	(r30),r1
 1634  00002310          	L70_LF2:
 1635  00002310  8fc1fff4	lw	r1,-12(r30)
 1636  00002314  6c220001	sgti	r2,r1,#1
 1637  00002318  1440000c	bnez	r2,L71_LF2
 1638  0000231c  54000000	nop; delay slot nop
 1639  00002320  0800000c	j	L61_LF2
 1640  00002324  54000000	nop; delay slot nop
 1641  00002328          	L71_LF2:
 1642  00002328  0bffff64	j	L68_LF2
 1643  0000232c  54000000	nop; delay slot nop
 1644  00002330          	L69_LF2:
 1645  00002330          	L63_LF2:
 1646  00002330          	L61_LF2:
 1647  00002330  8fc10004	lw	r1,4(r30)
 1648  00002334  20020000	addi	r2,r0,(#0x0)&0xff
 1649  00002338  a0220000	sb	(r1),r2
 1650  0000233c          	L59_LF2:
 1651  0000233c  8fa20000	lw	r2,0(r29)
 1652  00002340  8fa30004	lw	r3,4(r29)
 1653  00002344  8fdffff8	lw	r31,-8(r30)
 1654  00002348  001ee820	add	r29,r0,r30
 1655  0000234c  8fdefffc	lw	r30,-4(r30)
 1656  00002350  4be00000	jr	r31
 1657  00002354  54000000	nop
 1658  00002358          	.endproc _ditoa
 1659  00002358          	.align 2
 1660  00002358          	.proc _dstrtol
 1661  00002358          	.global _dstrtol
 1662  00002358          	_dstrtol:
 1663                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1664  00002358  afbefffc	sw	-4(r29),r30; push fp
 1665  0000235c  001df020	add	r30,r0,r29; fp = sp
 1666  00002360  afbffff8	sw	-8(r29),r31; push ret addr
 1667  00002364  2fbd0020	subui	r29,r29,#32; alloc local storage
 1668  00002368  afa20000	sw	0(r29),r2
 1669  0000236c  20010000	addi	r1,r0,#0
 1670  00002370  afc1fff4	sw	-12(r30),r1
 1671  00002374          	L73_LF2:
 1672  00002374  8fc10000	lw	r1,(r30)
 1673  00002378  90220000	lbu	r2,(r1)
 1674  0000237c  60410020	seqi	r1,r2,#32
 1675  00002380  14200034	bnez	r1,L75_LF2
 1676  00002384  54000000	nop; delay slot nop
 1677  00002388  8fc10000	lw	r1,(r30)
 1678  0000238c  90220000	lbu	r2,(r1)
 1679  00002390  60410009	seqi	r1,r2,#9
 1680  00002394  14200020	bnez	r1,L75_LF2
 1681  00002398  54000000	nop; delay slot nop
 1682  0000239c  8fc10000	lw	r1,(r30)
 1683  000023a0  90220000	lbu	r2,(r1)
 1684  000023a4  6041000a	seqi	r1,r2,#10
 1685  000023a8  1420000c	bnez	r1,L75_LF2
 1686  000023ac  54000000	nop; delay slot nop
 1687  000023b0  0800001c	j	L74_LF2
 1688  000023b4  54000000	nop; delay slot nop
 1689  000023b8          	L75_LF2:
 1690  000023b8  8fc20000	lw	r2,(r30)
 1691  000023bc  20410001	addi	r1,r2,#1
 1692  000023c0  00011020	add	r2,r0,r1
 1693  000023c4  afc20000	sw	(r30),r2
 1694  000023c8  0bffffa8	j	L73_LF2
 1695  000023cc  54000000	nop; delay slot nop
 1696  000023d0          	L74_LF2:
 1697  000023d0  8fc10004	lw	r1,4(r30)
 1698  000023d4  64220000	snei	r2,r1,#0
 1699  000023d8  10400010	beqz	r2,L76_LF2
 1700  000023dc  54000000	nop; delay slot nop
 1701  000023e0  8fc10004	lw	r1,4(r30)
 1702  000023e4  8fc20000	lw	r2,(r30)
 1703  000023e8  ac220000	sw	(r1),r2
 1704  000023ec          	L76_LF2:
 1705  000023ec  8fc10000	lw	r1,(r30)
 1706  000023f0  90220000	lbu	r2,(r1)
 1707  000023f4  64410000	snei	r1,r2,#0
 1708  000023f8  14200010	bnez	r1,L77_LF2
 1709  000023fc  54000000	nop; delay slot nop
 1710  00002400  8fc1fff4	lw	r1,-12(r30)
 1711  00002404  08000294	j	L72_LF2
 1712  00002408  54000000	nop; delay slot nop
 1713  0000240c          	L77_LF2:
 1714  0000240c  8fc10000	lw	r1,(r30)
 1715  00002410  90220000	lbu	r2,(r1)
 1716  00002414  6041002d	seqi	r1,r2,#45
 1717  00002418  10200024	beqz	r1,L78_LF2
 1718  0000241c  54000000	nop; delay slot nop
 1719  00002420  2001ffff	addi	r1,r0,#-1
 1720  00002424  afc1ffec	sw	-20(r30),r1
 1721  00002428  8fc20000	lw	r2,(r30)
 1722  0000242c  20410001	addi	r1,r2,#1
 1723  00002430  00011020	add	r2,r0,r1
 1724  00002434  afc20000	sw	(r30),r2
 1725  00002438  0800000c	j	L79_LF2
 1726  0000243c  54000000	nop; delay slot nop
 1727  00002440          	L78_LF2:
 1728  00002440  20010001	addi	r1,r0,#1
 1729  00002444  afc1ffec	sw	-20(r30),r1
 1730  00002448          	L79_LF2:
 1731  00002448  8fc10008	lw	r1,8(r30)
 1732  0000244c  64220000	snei	r2,r1,#0
 1733  00002450  14400090	bnez	r2,L80_LF2
 1734  00002454  54000000	nop; delay slot nop
 1735  00002458  8fc10000	lw	r1,(r30)
 1736  0000245c  90220000	lbu	r2,(r1)
 1737  00002460  60410030	seqi	r1,r2,#48
 1738  00002464  10200074	beqz	r1,L81_LF2
 1739  00002468  54000000	nop; delay slot nop
 1740  0000246c  8fc20000	lw	r2,(r30)
 1741  00002470  20410001	addi	r1,r2,#1
 1742  00002474  00011020	add	r2,r0,r1
 1743  00002478  afc20000	sw	(r30),r2
 1744  0000247c  8fc10000	lw	r1,(r30)
 1745  00002480  90220000	lbu	r2,(r1)
 1746  00002484  60410078	seqi	r1,r2,#120
 1747  00002488  14200020	bnez	r1,L83_LF2
 1748  0000248c  54000000	nop; delay slot nop
 1749  00002490  8fc10000	lw	r1,(r30)
 1750  00002494  90220000	lbu	r2,(r1)
 1751  00002498  60410058	seqi	r1,r2,#88
 1752  0000249c  1420000c	bnez	r1,L83_LF2
 1753  000024a0  54000000	nop; delay slot nop
 1754  000024a4  08000024	j	L82_LF2
 1755  000024a8  54000000	nop; delay slot nop
 1756  000024ac          	L83_LF2:
 1757  000024ac  20010010	addi	r1,r0,#16
 1758  000024b0  afc10008	sw	8(r30),r1
 1759  000024b4  8fc20000	lw	r2,(r30)
 1760  000024b8  20410001	addi	r1,r2,#1
 1761  000024bc  00011020	add	r2,r0,r1
 1762  000024c0  afc20000	sw	(r30),r2
 1763  000024c4  0800000c	j	L84_LF2
 1764  000024c8  54000000	nop; delay slot nop
 1765  000024cc          	L82_LF2:
 1766  000024cc  20010008	addi	r1,r0,#8
 1767  000024d0  afc10008	sw	8(r30),r1
 1768  000024d4          	L84_LF2:
 1769  000024d4  0800000c	j	L80_LF2
 1770  000024d8  54000000	nop; delay slot nop
 1771  000024dc          	L81_LF2:
 1772  000024dc  2001000a	addi	r1,r0,#10
 1773  000024e0  afc10008	sw	8(r30),r1
 1774  000024e4          	L85_LF2:
 1775  000024e4          	L80_LF2:
 1776  000024e4  8fc10008	lw	r1,8(r30)
 1777  000024e8  70220000	slei	r2,r1,#0
 1778  000024ec  1440001c	bnez	r2,L87_LF2
 1779  000024f0  54000000	nop; delay slot nop
 1780  000024f4  8fc10008	lw	r1,8(r30)
 1781  000024f8  6c220010	sgti	r2,r1,#16
 1782  000024fc  1440000c	bnez	r2,L87_LF2
 1783  00002500  54000000	nop; delay slot nop
 1784  00002504  08000010	j	L86_LF2
 1785  00002508  54000000	nop; delay slot nop
 1786  0000250c          	L87_LF2:
 1787  0000250c  8fc1fff4	lw	r1,-12(r30)
 1788  00002510  08000188	j	L72_LF2
 1789  00002514  54000000	nop; delay slot nop
 1790  00002518          	L86_LF2:
 1791  00002518  54000000	nop
 1792  0000251c          	L88_LF2:
 1793  0000251c  8fc10000	lw	r1,(r30)
 1794  00002520  90220000	lbu	r2,(r1)
 1795  00002524  6c41002f	sgtui	r1,r2,#47
 1796  00002528  10200030	beqz	r1,L91_LF2
 1797  0000252c  54000000	nop; delay slot nop
 1798  00002530  8fc10000	lw	r1,(r30)
 1799  00002534  90220000	lbu	r2,(r1)
 1800  00002538  70410039	sleui	r1,r2,#57
 1801  0000253c  1020001c	beqz	r1,L91_LF2
 1802  00002540  54000000	nop; delay slot nop
 1803  00002544  8fc10000	lw	r1,(r30)
 1804  00002548  90220000	lbu	r2,(r1)
 1805  0000254c  2041ffd0	addi	r1,r2,#-48
 1806  00002550  afc1fff0	sw	-16(r30),r1
 1807  00002554  0800008c	j	L92_LF2
 1808  00002558  54000000	nop; delay slot nop
 1809  0000255c          	L91_LF2:
 1810  0000255c  8fc10000	lw	r1,(r30)
 1811  00002560  90220000	lbu	r2,(r1)
 1812  00002564  6c410060	sgtui	r1,r2,#96
 1813  00002568  10200030	beqz	r1,L93_LF2
 1814  0000256c  54000000	nop; delay slot nop
 1815  00002570  8fc10000	lw	r1,(r30)
 1816  00002574  90220000	lbu	r2,(r1)
 1817  00002578  7041007a	sleui	r1,r2,#122
 1818  0000257c  1020001c	beqz	r1,L93_LF2
 1819  00002580  54000000	nop; delay slot nop
 1820  00002584  8fc10000	lw	r1,(r30)
 1821  00002588  90220000	lbu	r2,(r1)
 1822  0000258c  2041ffa9	addi	r1,r2,#-87
 1823  00002590  afc1fff0	sw	-16(r30),r1
 1824  00002594  0800004c	j	L92_LF2
 1825  00002598  54000000	nop; delay slot nop
 1826  0000259c          	L93_LF2:
 1827  0000259c  8fc10000	lw	r1,(r30)
 1828  000025a0  90220000	lbu	r2,(r1)
 1829  000025a4  6c410040	sgtui	r1,r2,#64
 1830  000025a8  10200030	beqz	r1,L95_LF2
 1831  000025ac  54000000	nop; delay slot nop
 1832  000025b0  8fc10000	lw	r1,(r30)
 1833  000025b4  90220000	lbu	r2,(r1)
 1834  000025b8  7041005a	sleui	r1,r2,#90
 1835  000025bc  1020001c	beqz	r1,L95_LF2
 1836  000025c0  54000000	nop; delay slot nop
 1837  000025c4  8fc10000	lw	r1,(r30)
 1838  000025c8  90220000	lbu	r2,(r1)
 1839  000025cc  2041ffc9	addi	r1,r2,#-55
 1840  000025d0  afc1fff0	sw	-16(r30),r1
 1841  000025d4  0800000c	j	L92_LF2
 1842  000025d8  54000000	nop; delay slot nop
 1843  000025dc          	L95_LF2:
 1844  000025dc  200103e8	addi	r1,r0,#1000
 1845  000025e0  afc1fff0	sw	-16(r30),r1
 1846  000025e4          	L96_LF2:
 1847  000025e4          	L94_LF2:
 1848  000025e4          	L92_LF2:
 1849  000025e4  8fc1fff0	lw	r1,-16(r30)
 1850  000025e8  8fc20008	lw	r2,8(r30)
 1851  000025ec  0022082a	slt	r1,r1,r2
 1852  000025f0  10200040	beqz	r1,L90_LF2
 1853  000025f4  54000000	nop; delay slot nop
 1854  000025f8  8fc1fff4	lw	r1,-12(r30)
 1855  000025fc  8fc20008	lw	r2,8(r30)
 1856  00002600  00200035	movi2fp	f0,r1
 1857  00002604  00400835	movi2fp	f1,r2
 1858  00002608  0401000e	mult	f0,f0,f1
 1859  0000260c  00000834	movfp2i	r1,f0
 1860  00002610  afc1fff4	sw	-12(r30),r1
 1861  00002614  8fc1fff4	lw	r1,-12(r30)
 1862  00002618  8fc2fff0	lw	r2,-16(r30)
 1863  0000261c  00220820	add	r1,r1,r2
 1864  00002620  afc1fff4	sw	-12(r30),r1
 1865  00002624  8fc20000	lw	r2,(r30)
 1866  00002628  20410001	addi	r1,r2,#1
 1867  0000262c  00011020	add	r2,r0,r1
 1868  00002630  afc20000	sw	(r30),r2
 1869  00002634          	L97_LF2:
 1870  00002634          	L90_LF2:
 1871  00002634  8fc1fff0	lw	r1,-16(r30)
 1872  00002638  8fc20008	lw	r2,8(r30)
 1873  0000263c  0022082a	slt	r1,r1,r2
 1874  00002640  1420000c	bnez	r1,L98_LF2
 1875  00002644  54000000	nop; delay slot nop
 1876  00002648  0800000c	j	L89_LF2
 1877  0000264c  54000000	nop; delay slot nop
 1878  00002650          	L98_LF2:
 1879  00002650  0bfffec8	j	L88_LF2
 1880  00002654  54000000	nop; delay slot nop
 1881  00002658          	L89_LF2:
 1882  00002658  8fc10004	lw	r1,4(r30)
 1883  0000265c  64220000	snei	r2,r1,#0
 1884  00002660  10400010	beqz	r2,L99_LF2
 1885  00002664  54000000	nop; delay slot nop
 1886  00002668  8fc10004	lw	r1,4(r30)
 1887  0000266c  8fc20000	lw	r2,(r30)
 1888  00002670  ac220000	sw	(r1),r2
 1889  00002674          	L99_LF2:
 1890  00002674  8fc1fff4	lw	r1,-12(r30)
 1891  00002678  8fc2ffec	lw	r2,-20(r30)
 1892  0000267c  00200035	movi2fp	f0,r1
 1893  00002680  00400835	movi2fp	f1,r2
 1894  00002684  0401000e	mult	f0,f0,f1
 1895  00002688  00000834	movfp2i	r1,f0
 1896  0000268c  afc1fff4	sw	-12(r30),r1
 1897  00002690  8fc1fff4	lw	r1,-12(r30)
 1898  00002694  08000004	j	L72_LF2
 1899  00002698  54000000	nop; delay slot nop
 1900  0000269c          	L72_LF2:
 1901  0000269c  8fa20000	lw	r2,0(r29)
 1902  000026a0  8fdffff8	lw	r31,-8(r30)
 1903  000026a4  001ee820	add	r29,r0,r30
 1904  000026a8  8fdefffc	lw	r30,-4(r30)
 1905  000026ac  4be00000	jr	r31
 1906  000026b0  54000000	nop
 1907  000026b4          	.endproc _dstrtol
 1908  000026b4          	.align 2
 1909  000026b4          	.proc _bcopy
 1910  000026b4          	.global _bcopy
 1911  000026b4          	_bcopy:
 1912                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1913  000026b4  afbefffc	sw	-4(r29),r30; push fp
 1914  000026b8  001df020	add	r30,r0,r29; fp = sp
 1915  000026bc  afbffff8	sw	-8(r29),r31; push ret addr
 1916  000026c0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1917  000026c4  afa20000	sw	0(r29),r2
 1918  000026c8  afa30004	sw	4(r29),r3
 1919  000026cc  54000000	nop
 1920  000026d0          	L101_LF2:
 1921  000026d0  8fc10008	lw	r1,8(r30)
 1922  000026d4  2022ffff	addi	r2,r1,#-1
 1923  000026d8  afc20008	sw	8(r30),r2
 1924  000026dc  6c210000	sgti	r1,r1,#0
 1925  000026e0  1420000c	bnez	r1,L103_LF2
 1926  000026e4  54000000	nop; delay slot nop
 1927  000026e8  0800002c	j	L102_LF2
 1928  000026ec  54000000	nop; delay slot nop
 1929  000026f0          	L103_LF2:
 1930  000026f0  8fc10004	lw	r1,4(r30)
 1931  000026f4  20220001	addi	r2,r1,#1
 1932  000026f8  afc20004	sw	4(r30),r2
 1933  000026fc  8fc20000	lw	r2,(r30)
 1934  00002700  20430001	addi	r3,r2,#1
 1935  00002704  afc30000	sw	(r30),r3
 1936  00002708  80420000	lb	r2,(r2)
 1937  0000270c  a0220000	sb	(r1),r2
 1938  00002710  0bffffbc	j	L101_LF2
 1939  00002714  54000000	nop; delay slot nop
 1940  00002718          	L102_LF2:
 1941  00002718          	L100_LF2:
 1942  00002718  8fa20000	lw	r2,0(r29)
 1943  0000271c  8fa30004	lw	r3,4(r29)
 1944  00002720  8fdffff8	lw	r31,-8(r30)
 1945  00002724  001ee820	add	r29,r0,r30
 1946  00002728  8fdefffc	lw	r30,-4(r30)
 1947  0000272c  4be00000	jr	r31
 1948  00002730  54000000	nop
 1949  00002734          	.endproc _bcopy
 1950  00002734          	.align 2
 1951  00002734          	.proc _bzero
 1952  00002734          	.global _bzero
 1953  00002734          	_bzero:
 1954                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1955  00002734  afbefffc	sw	-4(r29),r30; push fp
 1956  00002738  001df020	add	r30,r0,r29; fp = sp
 1957  0000273c  afbffff8	sw	-8(r29),r31; push ret addr
 1958  00002740  2fbd0010	subui	r29,r29,#16; alloc local storage
 1959  00002744  afa20000	sw	0(r29),r2
 1960  00002748  54000000	nop
 1961  0000274c          	L105_LF2:
 1962  0000274c  8fc10004	lw	r1,4(r30)
 1963  00002750  2022ffff	addi	r2,r1,#-1
 1964  00002754  afc20004	sw	4(r30),r2
 1965  00002758  6c210000	sgti	r1,r1,#0
 1966  0000275c  1420000c	bnez	r1,L107_LF2
 1967  00002760  54000000	nop; delay slot nop
 1968  00002764  08000020	j	L106_LF2
 1969  00002768  54000000	nop; delay slot nop
 1970  0000276c          	L107_LF2:
 1971  0000276c  8fc10000	lw	r1,(r30)
 1972  00002770  20220001	addi	r2,r1,#1
 1973  00002774  afc20000	sw	(r30),r2
 1974  00002778  20020000	addi	r2,r0,(#0x0)&0xff
 1975  0000277c  a0220000	sb	(r1),r2
 1976  00002780  0bffffc8	j	L105_LF2
 1977  00002784  54000000	nop; delay slot nop
 1978  00002788          	L106_LF2:
 1979  00002788          	L104_LF2:
 1980  00002788  8fa20000	lw	r2,0(r29)
 1981  0000278c  8fdffff8	lw	r31,-8(r30)
 1982  00002790  001ee820	add	r29,r0,r30
 1983  00002794  8fdefffc	lw	r30,-4(r30)
 1984  00002798  4be00000	jr	r31
 1985  0000279c  54000000	nop
 1986  000027a0          	.endproc _bzero
 1987  000027a0          	.align 2
 1988  000027a0          	.proc _min
 1989  000027a0          	.global _min
 1990  000027a0          	_min:
 1991                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1992  000027a0  afbefffc	sw	-4(r29),r30; push fp
 1993  000027a4  001df020	add	r30,r0,r29; fp = sp
 1994  000027a8  afbffff8	sw	-8(r29),r31; push ret addr
 1995  000027ac  2fbd0010	subui	r29,r29,#16; alloc local storage
 1996  000027b0  afa20000	sw	0(r29),r2
 1997  000027b4  afa30004	sw	4(r29),r3
 1998  000027b8  8fc10000	lw	r1,(r30)
 1999  000027bc  8fc20004	lw	r2,4(r30)
 2000  000027c0  0022182c	sle	r3,r1,r2
 2001  000027c4  14600008	bnez	r3,L109_LF2
 2002  000027c8  54000000	nop; delay slot nop
 2003  000027cc  8fc10004	lw	r1,4(r30)
 2004  000027d0          	L109_LF2:
 2005  000027d0  08000004	j	L108_LF2
 2006  000027d4  54000000	nop; delay slot nop
 2007  000027d8          	L108_LF2:
 2008  000027d8  8fa20000	lw	r2,0(r29)
 2009  000027dc  8fa30004	lw	r3,4(r29)
 2010  000027e0  8fdffff8	lw	r31,-8(r30)
 2011  000027e4  001ee820	add	r29,r0,r30
 2012  000027e8  8fdefffc	lw	r30,-4(r30)
 2013  000027ec  4be00000	jr	r31
 2014  000027f0  54000000	nop
 2015  000027f4          	.endproc _min
 2016                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 2017                      ;;;
 2018                      ;;; Most of the traps are called in files from libtraps.
 2021  000027f4          	.align 2
 2022  000027f4          	.proc _exit
 2023  000027f4          	.global _exit
 2024  000027f4          	_exit:
 2025  000027f4  44000300	trap	#0x300
 2026  000027f8  4be00000	jr	r31
 2027  000027fc  54000000	nop
 2028  00002800          	.endproc _exit
 2030                      ; for the benefit of gcc.
 2031  00002800          	.proc ___main
 2032  00002800          	.global ___main
 2033  00002800          	___main:
 2034  00002800  4be00000	jr	r31
 2035  00002804  54000000	nop
 2036  00002808          	.endproc ___main
 2037  00002808          	.text
 2038  00002808          	.global _etext
 2039  00002808          	_etext:
 2040  00002808          	.align 3
 2041  00002808          	.data
 2042  00003279          	.global _edata
 2043  00003279          	_edata:
